[
('Trust and Software', "Increase productivity efficiency iOS OS X devices Articles Newsletter RSS Contact Navigation Articles Newsletter RSS Contact Trust Software May 25 2015 Nick Lufley Ben Adida wrote interesting piece trust responsibility concerning software engineers also spiked discussion hackernews philosopher would like put two cents One thing mentions society put lot trust small group people namely people develop maintain construct software rely Adida compares trust one put physicians trust society places us growing rapidly thing looks even remotely similar trust placed doctors Except people pretty good idea trust re placing doctor almost idea every time install app enter personal data share private thought private electronic conversation re trusting set software engineers little form ethical guidelines way around trust people need trust software whole applies example every peaceful society Although explicitly need trust person crossing us pavement attack us could otherwise would able create society Political philosophers call state people kind trust original condition state Fellow philosophers please excuse inaccuracy Note special kind trust entrusting personal secrets best friend abstract form trust trust every single developer admin supporter need think software entirety help information used Think times entered credit card information think information safe enter would also mean trust safety information use credit cards online goes Sellers wouldn able sell things unless came different kind payment option would also require trust goes short Payment internet would possible without certain kind trust society towards system stores information kind original condition society wouldn able use software long trust people whole create software abstract sense m talking trusting Developer X software use software wanna talk following paragraphs two factors trust software engineering first factor end user license agreements relate user make point already made Without trust use software second factor relates trust responsibility Software Engineers huge responsibility users even begin understand paramount importance software engineers use knowledge expertise ethical ways otherwise whole system going collapse End User License Agreements TrustA lot talk End User License Agreements EULA already happened intend dive waters want link abstract form trust already talked bet 99 end users even read two lines EULA re presented think three different factors One sheer laziness inability understand agreement third usually options accept EULA want use iPhone accept whatever conditions Apple presents certainly much usual definition agreement accept free really use device actually read kind EULA Terms Service Policy pretty sure wouldn use device sign service purchase app left right Apple's EULA Twitter's Terms Service Facebook's Data Policy seen iPhone 6 happens exchange rights agree grant application service company certain rights order grant right use software exchange always unequal basic principle supply demand applies want something someone decide terms give want bash software companies providers like First foremost EULAs serve purpose ensuring licenser liable things licensee might product also meant protect intellectual property man term certain individuals companies rights taken user licenser usually intended used companies Maybe remember public outcry happened last year news surfaced Facebook experimented users research purposes Soon discussions emerged whether ethical thing Right-wise wasn much problem users agreed subject research agreement clicked signed company services Well actually didn Facebook changed terms service later-on different story upset people Facebook actually used rights users granted breach trust illegal one users accepted terms users either didn know accepted never thought company like Facebook would thing make subject research Legally speaking Facebook within rights Suppose completely true sake argument undermined trust users acting way whole endeavour showed us users data neither really save sacred opened pandoras box trust issues Let conclude make first point EULAs exchange rights user gives lot rights trusts licenser use every right entrusts Companies need entrusting users otherwise wouldn Users choice accept every agreement comes way want use service software website bad thing soon trust lost users begin see behind curtain software used unless agreement changed agreement changed way would make user trust chances licenser could form held liable subject copyright infringement also want Responsibility Trust already argued software usage presupposes trust small group people develops maintains creates software valid would interesting see kind trust maintained assuming want keep using software society would like relate issue trust responsibility argument holds need trust keep using software also means software engineers responsibility towards societal trust moment liability completely user side re lucky may get kind guarantee something like likely agreements signed hold company liable illegal use product liable doesn work subject restrictions change terms list goes Companies wanna safe okay start thinking people know shit software know works built maintains honestly think give fuck trust trust software won use data collects passwords payment information safe nobody know dubious browser history Yeah stupid also software engineers huge responsibility People trust get things right One responsibility feeds one trust responsibility seriously damage trust people put products respectively responsibility software engineers two-fold first one abuse licenser products means mistreat rights granted users build good trustworthy software talked lot first point neglected second one Software engineers unique skill sets expertise actually makes real 1 guess write follow-up argument simple long trust seriously breached nothing happen trust issues come tough software system collapse Software integral part global society imagine working existing anymore Closing remarks wrote detailed fine grained hope made point clear need trust software system otherwise collapse also means 1 profound knowledge issues huge responsibility towards society always happy hear either send email use contact form hit twitter m looking forward hear see think issues problems Thank reading enjoyed feel free like share May 25 2015 Nick Lufley Newer Older Thank Eve 2015"),
('CAP Theorem: if all you have is a timeout, everything looks like a partition', "long run Distributed systems theory practice Monday May 25 2015 CAP timeout everything looks like partition suppose tempting tool timeout treat everything partition - Abraham Maslow quoted memory post part CAP theorem series may want start post ACID vs CAP database background never really exposed CAP theorem post showing traps Availability Consistency definition CAP also used introduction know CAP haven look formal definition Partitions CAP theorem network partitions nothing else re node failure process crash matter real-life Let answer question looking optimisation implemented Apache HBase Apache ZooKeeper handling process crash applicable anyone using ZooKeeper Apache HBase ZooKeeper failure detection Using ZooKeeper website ZooKeeper centralized service maintaining configuration information naming providing distributed synchronization providing group services kinds services used form another distributed applications HBase website Apache HBase Hadoop database distributed scalable big data store HBase open source implementation Google Bigtable Cluster size varies 5 x000 nodes ZooKeeper used HBase things one like Bigtable detecting failures ZooKeeper manages failures giving user possibility create ephemeral nodes znodes exist long session created znode active session ends znode deleted Expirations happen cluster hear client within specified session timeout period e heartbeat session expiration cluster delete ephemeral nodes owned session immediately notify connected clients change anyone watching znodes Ephemeral znodes key element many use cases ZooKeeper distributed locks timeout means process holding lock crashes partitioned lock freed dozen seconds--typically 20 seconds HBase uses ZooKeeper ephemeral znodes failure detection exclusion mechanism ZooKeeper described V10 ZooKeeper timeout represents major cost MTTR failure scenario type failure process crash node failure network partitions tortoise fast--sometimes Network partition compared process crash two issues network partition First complex detect Second definition know going side partition dead CAP theorem apply choose consistency availability timeout information happened process might dead might definitively partitioned might already back life kicking partition-tolerant application expect worse process crash much simpler partition node still hence communicate process death immediately Since process dead risk split brain situation distinguish cases easy improvement Implementation details simple implementation HBase many Unix applications launched shell script last line script launches process add ultimate line script request ZooKeeper delete ephemeral znode implemented HBase scripts simple Nearly script things little bit complex said processes launched background tasks work script order 20 lines rather one importantly also means software looking node timeout must API allow external update nodes status case ZooKeeper ephemeral znode deletion even little bit hacky would better expire session instead deleting fixed znode Alternatives ZOOKEEPER-922 interesting change request copy paste plain clear description case client connection closed due socket error instead client calling close explicitly would nice enable session associated client timeout faster negotiated session timeout would enable zookeeper ensemble acting dynamic discovery provider remove ephemeral nodes crashed clients quickly allowing longer heartbeat-based timeout java clients need long stop-the-world GC socket errors clear socket closed remote node still immediate somehow clear exceptions also leveraging fact node still exactly want change request contains also analysis possible solutions deal following race condition may way reliably need vet design first happens client disconnects one server moves another CAP action closed socket imply remote process dead Maybe process dead--that case want optimize re sure sometimes dead case ZooKeeper client try connect another node analysis complex error prone time consuming ZooKeeper team tends hold commit doubt change request still open adding extra case process crash useful processes never crash never killed operating system administration team last resort useful Also walking-dead nodes cluster issue early death detection help much--this CP thing AP one remember eventual consistency databases around tunable consistency used CP mode Interestingly Google Bigtable Apache HBase teams added independently implementation--it present original Bigtable paper Facebook--a large HBase user also reported useful rolling upgrade anything goes wrong possible kill9 suspicious processes without impacting availability Immediate notification hence recovery simplifies system administration V12 also mentions technique involve killing used increase availability Web servers services deploy local script periodically checks application process running process erratic behavior high CPU usage script restarts application killing first necessary technique generalized crash detected immediately Conclusion Consensus servers like ZooKeeper rely unreliable failure detector defined Chandra Toueg 1996 V3 simplest common design failure detectors timeout-based one ZooKeeper comes lot performance benefits found improving failure detectors saw cheap crash detector network equipment help well V11 callbacks allow integration failure detector Falcon V12 coordinating network spies monitoring layer system also interesting approach means openness key requirement failure detector Keep mind failure partition motto hides many possible improvements Distinguishing different cases using available information possible sources key improve system availability post part CAP theorem series Availability CAP coming soon References V3 D Chandra Toueg Unreliable failure detectors reliable distributed systems Journal ACM 43 2 225 267 1996 C7 Henry Robinson faq CAP 2013 V10 D Borthakur al Apache Hadoop Goes Realtime Facebook SIGMOD 2011 V11 Benoit Sigoure Fast Server Failover Hadoop HBase HBase meetup 2013 V12 Leners Al Detecting failures distributed systems FALCON spy network SOSP 11 Email ThisBlogThis Share TwitterShare FacebookShare Pinterest comments Post Comment Older Post Home Subscribe Post Comments Atom Nicolas Liochon mail nkeywal apache org twitter nkeywal linkedIn Series CAP theorem series consistency series Blog Archive 2015 10 May 3 CAP timeout everything look Eventual Consistency Durability Consistency Series April 2 March 5 Popular Posts confusing CAP ACID wording CAP ACID share common vocabulary Atomic Consistent catch words mean CAP timeout everything looks like partition suppose tempting tool timeout treat everything partition - Abraham Maslow quot unclear CP vs CA case CAP post part CAP theorem series may want start post ACID vs CAP database background CAP Availability High-Availability Big Data databases world partitions would give Consistency purchase little temporary Availability deserve neither Consistency Availability B Frank CAP theorem series Let introduce new series posts CAP theorem CAP well known theorem conjectured proven recognized researchers Don't use CAP theorem packet losses previous post looked common saying nodes fail network packets get lost partitions happen need use CAP Comparing Eventually Consistent CP-as-in-CAP stores Eventual Consistency EC well known concept CAP theorem defines Consistency Availability Partition tolerance als Don't use CAP theorem node failures Dead nodes don't bite - Robert Louis Stevenson quoted memory CAP often described theorem c Eventual Consistency Durability son bear equanimity loss father loss data may drive despair Machiavelli quoted memor Consistency Series consistency models don't like well others - Groucho Marx quoted memory CAP th Subscribe Posts Atom Posts Comments Atom Comments Copyright 2015 Nicolas Liochon Powered Blogger"),
('John Nash letter to the NSA', 'Valbonne Consulting blog connected future Menu Skip content Future-Tech Job Board Register CV Computing Pioneers VC Home John Nash letter NSA Leave reply John Nash died tragically yesterday 23rd May taxi crash New Jersey Nash struggled schizophrenia also passed son recovery became basis Sylvia Nasar biography Beautiful Mind well feature film starring Russell Crowe Far ahead time 1955 one year famous G del letter von Neumann John Nash sent letters NSA Nash G del thought along similar lines G del perspective logician Nash interested cryptography wrote security cryptographic keys Nash either misunderstood NSA taken serious work proposal letter remains monumental making transition modern cryptography anyone else proposing security relational computational complexity keys Valbonne Consulting VC provides Research Consulting Recruitment services across EMEA key-players Telecommunications Automotive XaaS work innovation leaders driving upcoming technologies standards Mobile-Networks Telco Cloud SDN NFV Future-Tech work domains d love hear Related PostsTony Hoare Invention null-reference billion dollar mistakeAn incomplete list classic papers every Software Architect readDISCLAIMER post may contain buzzwords Lessons Gordon Ramsay conducting job interviewsTinker Tailor Soldier Spy US industrial espionage GermanyLest forget first Agile software guys entry posted CompSci tagged beautiful mind John Nash May 24 2015 valbonneconsulting Post navigation Misconfigured US DoS website leaked classified files archive org Search Recent Posts John Nash letter NSA Misconfigured US DoS website leaked classified files archive org LXD crushes KVM Canonical says Software Engineers Guide Mercury Retrograde goat m skeptical Docker hype DevOps Bullshit Tinker Tailor Soldier Spy US industrial espionage Germany Re Seasons greetings Tony Hoare Invention null-reference billion dollar mistake Service Level Agreements Carrier-Grade Clouds beyond best-effort QoS considerations Carrier Grade Clouds location location location DevOps Security Flow addiction behind programming Software-Defined Networking Comprehensive Survey Imposter Syndrome Software Development Gartner Hype Cycle 2014 Considerations Carrier Grade Clouds Security Economic Cost Surveillance Car Hackers Handbook Introduction Vehicle Hacking incomplete list classic papers every Software Architect read DevOps Telecoms SDN affect job network engineer Root Cause Analysis Problem identified keyboard chair John Cleese Nobody knows talking Lest forget first Agile software guys DISCLAIMER post may contain buzzwords Need advise freelance market rate listen Gulp BreakingNews Hapless recruiter searching LAMP developer hires electrician first language best learning programming techniques every programmer know security Landing job Europe Indian foreigners data bigger Analyzing fragility BigData Nassim N Taleb Never mind NSA America country business spy little eye see nothing High-Trust Cloud BigBrother Lessons Gordon Ramsay conducting job interviews Steve Jobs dead app store next High-Trust clouds stopped worrying learned love NSA Old MacDonald HACKATHON June21st 23rd Stanford C Python Perl hackers real wo men Future Networks ETSI workshop day 1 recap light end tunnel train used nostalgic good old days Lifehack Unlock fountain creativity making meatballs Valbonne Consulting aims safe pontifex unemployment Need convert currency cost effectively Subscribe Blog via Email Enter email address subscribe blog receive notifications new posts email Email Address Follow us TwitterMy TweetsCategories CompSci 3 Connected Car 1 Development Process Optimization 6 Information Security Privacy 9 Tech Philosophy 10 Tech Satire 4 Technical Recruitment 6 Telco Future Networks 9 XaaS Cloud BigData 9 RSS - Posts RSS - Comments Copyright 2009-2014 Valbonne Consulting Sarl rights reserved'),
("The halting problem: can anyone explain this to me in a way that doesn't sound pedantic?", "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ Proof Computers Can't Everything Halting Problem udiprod SubscribeSubscribedUnsubscribe5 391 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Transcript 129 379 1 442 Like video Sign make opinion count Sign 1 443 532 Don't like video Sign make opinion count Sign 533 Loading Loading Transcript interactive transcript could loaded Loading Loading Rating available video rented feature available right Please try later Published Sep 27 2013If disagree get confused video read FAQ http www zutopedia com halting_prob Click list works http www zutopedia com udia htmlThis video gives informal presentation Alan Turing's Halting Theorem serious highly influential result computer science comments video 1 video skips lot technicalities sake simplicity many rigorous descriptions proof easily found web 2 really unbeatable checkers machine See http en wikipedia org wiki Draughts Category Science Technology License Standard YouTube License Show Show less Loading Advertisement Autoplay autoplay enabled suggested video automatically play next Next Turing Halting Problem - Computerphile - Duration 6 14 Computerphile 116 135 views 6 14 Play nextPlay Visualization Quick sort HD - Duration 3 12 udiprod 87 319 views 3 12 Play nextPlay Visual Riddle Epitaph Stevinus - Duration 2 26 udiprod 37 071 views 2 26 Play nextPlay NES AI Learnfun Playfun ep 3 Gradius pinball ice hockey mario updates etc - Duration 25 35 suckerpinch 203 345 views 25 35 Play nextPlay Men Cracked Enigma - Duration 23 35 Rick H 170 901 views 23 35 Play nextPlay Computer program learns play classic NES games - Duration 16 18 suckerpinch 980 305 views 16 18 Play nextPlay Mod-05 Lec-26 TURING MACHINES - Duration 58 41 nptelhrd 79 050 views 58 41 Play nextPlay Beyond Computation P vs NP Problem - Michael Sipser - Duration 1 01 38 PoincareDuality 88 403 views 1 01 38 Play nextPlay L11 Church-Turing Thesis Examples Decidable Languages - Duration 1 18 05 UCDavis 8 073 views 1 18 05 Play nextPlay Albert Einstein's Theory Relativity - Duration 16 18 Eugene Khutoryansky 1 023 073 views 16 18 Play nextPlay 55 CONSTRUCTING TURING MACHINE - Duration 10 40 OnlineTeacher 19 644 views 10 40 Play nextPlay P vs NP Computational Complexity Zoo - Duration 10 44 hackerdashery 120 640 views 10 44 Play nextPlay epic conway's game life - Duration 6 33 Emanuele Ascani 633 519 views 6 33 Play nextPlay Alan Turing - Celebrating life genius - Duration 8 14 Cambridge University 84 907 views 8 14 Play nextPlay Inventing Game Life - Numberphile - Duration 11 05 Numberphile 255 946 views 11 05 Play nextPlay John Conway hate Game Life - Duration 6 54 Numberphile 296 417 views 6 54 Play nextPlay L8 Introduction Turing Machines Computations - Duration 1 14 56 UCDavis 24 231 views 1 14 56 Play nextPlay Strange Life Death Dr Turing - Part 1 2 Meet real Joan Clarke - Duration 28 26 Christopher Sykes 195 983 views 28 26 Play nextPlay Quicksort - Duration 6 09 CS50 190 474 views 6 09 Play nextPlay Breaking Code Biography Alan Turing Derek Jacobi BBC 1996 - Duration 1 30 47 Ciencias Cognoscitivas 490 954 views 1 30 47 Play nextPlay Loading suggestions Show Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists"),
('NSA in P/poly: The Power of Precomputation', "Shtetl-Optimized Blog Scott AaronsonIf take one piece information blog Quantum computers would solve hard search problemsinstantaneously simply trying possible solutions Five announcements NSA P poly Power Precomputation Even Snowden revelations remained least one big mystery NSA NSA classified 2013 budget request mentioned priority item groundbreaking cryptanalytic capabilities defeat adversarial cryptography exploit internet traffic requested increase several hundred million dollars cryptanalytic services cryptanalysis exploitation services program C whatever classified presentation slide showed encrypted data passed high-performance computing system called TURMOIL decrypts coming whatever going inside TURMOIL seemed secret even within NSA someone Snowden level wouldn access details inside NSA cryptanalytic black box quantum computer Maybe even one bought D-Wave Rimshot fast classical factoring algorithm proof P NP Commentators Internet rushed suggest far-reaching possibilities us tried pour cold water speculations pointing one could envision many scenarios little prosaic little tied details public-key crypto actually used real world na ve week new bombshell 14-author paper see also website advances exceedingly plausible hypothesis may NSA greatest cryptanalytic secret recent years One authors J Alex Halderman University Michigan best friend since junior high school ve blogged advance knowledge scoop found regular Shtetl-Optimized readers know single hardest thing world bite tongue say anything Besides Alex authors David Adrian Karthikeyan Bhargavan Zakir Durumeric Pierrick Gaudry Matthew Green Nadia Heninger Drew Springall Emmanuel Thom Luke Valenta Benjamin VanderSloot Eric Wustrow Santiago Zanella-B guelink Paul Zimmermann two Green Heninger previously turned Shtetl-Optimized authors study vulnerabilities Diffie-Hellman key exchange original still widely-used public-key cryptosystem one predates even RSA Diffie-Hellman thing Alice Bob first agree huge prime number p number g Alice picks secret sends Bob ga mod p Bob picks secret b sends Alice gb mod p Alice Bob compute ga b gb gab mod p eavesdropper listening knows p g ga mod p gb mod p one plausibly conjecture hard things alone get gab mod p Alice Bob share secret unknown eavesdropper didn use secret start cryptography far anyone knows today best way break Diffie-Hellman simply calculating discrete logarithms solving problem recovering given g h ga mod p least classical computer fastest known algorithm discrete logarithms fields prime order number field sieve NFS plausible conjectures distribution smooth numbers NFS uses time grows like exp 1 923 o 1 log p 1 3 log log p 2 3 exp logs base e yes even lower-order stuff like log log p 2 3 makes big difference practice course know running time best-known algorithm try choose key size value log p reach algorithm computing hardware today Note recent breakthrough Antoine Joux solving discrete log quasipolynomial time fields small characteristic also relied heavily sieving ideas improvements yet original discrete log problem prime fields one crucial fact understood least decade theoretical cryptographers somehow slow filter people deploy practical cryptosystems fact NFS arrange things almost discrete-logging effort depends prime number p specific numbers g h re trying take discrete log initial precomputation step massive database use speed descent step step solving ga h mod p g h pair want little like complexity class P poly single hard-to-compute advice string unlocks exponentially many inputs bit precisely one could say NFS reveals exponentiation modulo prime number sort trapdoor one-way function except trapdoor information subexponential-size given trapdoor inverting function still subexponential-time milder subexponential kicker practice large percentage clients servers use Diffie-Hellman key exchange use prime numbers p means wanted decrypt large fraction traffic encrypted Diffie-Hellman wouldn need NFS could p cache results fact singlehandedly change outlook breaking Diffie-Hellman story different depending key size log p 1990s US government insisted export-grade cryptography products sold overseas quaint concept meant key size restricted 512 bits 512-bit keys Adrian et al able implement NFS use precomputation step 7 days cluster thousand cores initial precomputation step produced 2 5GB data descent find discrete log specific g h pair took 90 seconds 24-core machine OK one still uses 512-bit keys first part Adrian et al paper demonstrates implementation issues even today force many servers downgrade 512-bit export-grade keys done stall time 90 seconds figure session key man-in-the-middle attack take impersonate server impressive example sort game computer security researchers playing long time really warmup main act d expect many servers today configured intelligently agree 1024-bit keys even Adrian et al found large fraction servers rely single 1024-bit prime many ones rely primes Adrian et al estimate single 1024-bit prime NFS precomputation would take 45 million years using single core put ominously 1 year using 45 million cores built special-purpose hardware could go almost two orders magnitude putting monetary cost hundred million dollars completely within reach sufficiently determined nation-state precomputation done terabytes output stored data center somewhere computing particular discrete log would take 30 days using 1 core mere minutes using supercomputer none assuming algorithmic advances beyond publicly known course possible NSA also algorithmic advances even modest ones could obviate need special-purpose hardware writing post back-of-the-envelope got using NFS calculating 1024-bit discrete log 7 5 million times harder calculating 512-bit discrete log extrapolating 7 days took Adrian et al 512 bits suggests might ve taken 143 840 years calculate 1024-bit discrete logs thousand cores 1 year 143 840 times many cores since almost stuff extremely parallelizable Adrian et al mention optimizations expect would improve factor 3 giving us 100 million core-years similar Adrian et al estimate 45 million core-years lower-order terms running time NFS might account remaining discrepancy Adrian et al mount detailed argument paper details NSA groundbreaking cryptanalytic capabilities learned Snowden documents match would true NSA something like way Alex put sure NSA might would like understand would ve completely feasible within cryptanalytic budget NSA would ve known would ve good codebreaking value money know weakness Diffie-Hellman key exchange done obvious solution good one use longer keys decades applied cryptographers would announce attack like theorists like would say exasperation dude fix problems one stroke like increasing key sizes factor 10 exponential polynomial know exponential win eventually go applied cryptographers explain us equal exasperation voices sorts reasons efficiency maybe biggest thing backwards-compatibility unilaterally demand 2048-bit keys millions customers using browsers understand 1024-bit keys hand given new revelations looks like really big push migrate larger key sizes theorists would ve suggested ivory towers second equally-obvious solution stop relying much prime numbers Diffie-Hellman key exchange Note reason RSA isn vulnerable particular attack inherently requires different composite number N public key practice generating new huge random prime number tends expensive taking say minutes people often rely standard primes least could use libraries millions safe primes prime given session chosen randomly third solution migrate elliptic-curve cryptography ECC far anyone knows today much less vulnerable descent attacks original Diffie-Hellman scheme Alas lot understandable distrust ECC DUAL_EC_DBRG scandal came NSA backdoored NIST elliptic-curve-based pseudorandom generators choosing particular elliptic curves knew handle maybe right lesson draw mod-p groups elliptic-curve groups seem pretty good cryptography mod-p groups less good everyone using prime numbers p primes within nation-state range elliptic-curve groups less good everyone using elliptic curves lot things seem pretty predictable hindsight many predict Many people use paper ask political questions like hasn NSA codebreaking mission usurped mission ensure nation information security Doesn 512-bit vulnerability many Diffie-Hellman implementations still face holdover 1990s export rules illustrate encryption never deliberately weakened purposes national security get issue backwards-compatibility get everyone using strong crypto People absolutely asking questions readers blog one question probably looms even larger freedom versus security openness versus secrecy etc namely question theory versus practice side said won round say useless theoretical cryptographers didn even know coveted Diffie-Hellman system could broken real world theoretical cryptographers might reply course knew ability precomputation NFS wasn NSA secret something discussed openly years someone told us Diffie-Hellman actually used much world relying primes could ve immediately spotted potential attack others might reply didn spot Perhaps right lesson draw silly debates really end piecing story together took team willing everything learning fairly difficult number theory coding simulations poring Snowden documents clues NSA budget Clear thought doesn respect boundaries disciplines theory practice Thanks much Nadia Heninger reading post correcting errors see Bruce Schneier post Matt Green post entry posted Friday May 22nd 2015 9 41 pm filed Complexity Nerd Interest follow responses entry RSS 2 0 feed leave response trackback site 80 Responses NSA P poly Power Precomputation Geoffrey Irving Says Comment 1 May 23rd 2015 12 02 lesson want bring theory practice closer together use systems fewer moving parts export side bug protocol negotiation entirely separate theoretical concerns Brian Sniffen Says Comment 2 May 23rd 2015 12 22 us notice big push move SSHv1 fresh group connection SSHv2 used fixed groups people notice said loudly SSHv2 implementations fixed years later worse theory vs practice community practice vast many meanings dense takes information penetrate wolfgang Says Comment 3 May 23rd 2015 12 59 interesting also quite silly imho 1 People pay various government agencies secretly spy us 2 actually like spied also pay researchers universities various companies figure NSA others might spy us 3 vulnerability detected upgrade browsers servers etc significant cost inevitable inefficiency democratic process clever way finance CS research pure insanity Dan Miller Says Comment 4 May 23rd 2015 1 02 part-time complexity enthusiast full-time technology professional real-world security responsibilities seems result shines light intersection lack thereof crypto- theory practice take fortuitous interdisciplinary effort 14 researchers discover combination arcane implementation trivia servers made fall back 1024-bit DH DH implementations typically use primes theoretical knowledge 1024-bit DH primes weak crypto hypothetical way real-world implementationists guard deploying infrastructure known least esoteric crypto eggheads risk successful present-day attack attainable resources Greg Maxwell Says Comment 5 May 23rd 2015 2 49 Hi Scott re making lot assumptions practicing cryptographic engineers know think aren generally correct took second find cases years ago happily telling laymen pre-computation gains discrete log level knowledge unusual precompute discrete log problem solving efficiently store results precomputation lookup _very_ well know normal engineering goal adopt parameters strong enough make even single compromise infeasable feasible linear advantages grouping 100 000 high value targets really frighteningly weak defense ve basically already lost Using different session user unique group considerable costs computation needed make sure group cryptographically useful order e g picking safe primes mod p running SEA EC groups communicating group far side Communicating random group mean effectively doubling amount communicated data re able afford extra computation bandwidth use somewhat larger _static_ group gain exponential advantage vs attacker vs using bandwidth communicate random group get best linear advantage number targets also pedestrian engineering concerns might note paper reports many users non-standard groups using groups low order turns ask software things ll wrong case EC specializing group logic allows enormous implementation speedups e g 10 fold specialized code vs generic code could used permit larger groups may make difference getting cryptography used hopefully becoming less true performance still successfully used part argument mandatory always crypto HTTP2 Perhaps suggestion big list static groups would address communications costs still implementation get right still leaves performance concerns Moreover see downgrade attacks attacks negation common attacks modern IMO overly flexible cryptosystems big list vulnerable negotiation may well case need pre-compute one trick targets using hard get right what- randomly pick per connection happens kill every connection using wrong one pick one ve compromised etc Says Comment 6 May 23rd 2015 7 02 Greg Maxwell 5 Using list primes sort give exponential advantages known list million safe primes Scott suggests takes 20 bits communicate one makes million times harder precomputation attack long primes hard enough break anyone trying break big enough want break lots seems helpful Although point doesn help care security particular computation guess would require universal adoption list storage would start get significant 2 20 x 1 024 bits 128 megabytes around size version Firefox computer Quantum Mechanic Says Comment 7 May 23rd 2015 7 33 Please quit using variable also article makes hard parse Scott Says Comment 8 May 23rd 2015 7 36 wolfgang 3 1 People pay various government agencies secretly spy us 2 actually like spied also pay researchers universities various companies figure NSA others might spy us 3 vulnerability detected upgrade browsers servers etc significant cost many many cases complicated human organization government corporation full agents conflicting agendas made sound stupid treat single rationally-deliberating individual E g people California subsidize alfalfa almond growers used California water therefore people California likely forced subsidize growers even use much water OK scratch lot pretty stupid g Says Comment 9 May 23rd 2015 7 39 discussion Hacker News Completely irrelevantly Scott web browser up-to-date Firefox Windows one piece information blog header overruns box last line disappears white background one piece information becomes Quantum computers would solve hard search problems may stronger statement wish seen making - fine Chrome haven tried browsers thing different Chrome Firefox size text header including main title smaller Chrome larger Firefox Perhaps use explicit pixel sizes header since background fixed-size image Scott Says Comment 10 May 23rd 2015 7 57 Greg Maxwell 5 normal engineering goal adopt parameters strong enough make even single compromise infeasable feasible linear advantages grouping 100 000 high value targets really frighteningly weak defense ve basically already lost reflection re right giant list primes would best stopgap measure currently upgrade 1024 2048 bits backwards-compatibility reasons switch around 1024-bit primes use Knowledgeable commenters currently situation widely-used protocols Ultimately increasing key size called obvious solution also best solution one whose advantages swamp everything else asymptotic limit solving real world problems Entertaining Research Says Comment 11 May 23rd 2015 8 13 details post better understood work cryptography probably However Amir Says Comment 12 May 23rd 2015 9 12 least IPSEC standard defines 3 DH groups modulo primes one 768 bit one 1024 bit one 1536 bit However vendor-specific extensions always used know VPN vendors define groups set default re default VPN nodes come vendor won used Scott Says Comment 13 May 23rd 2015 9 16 g 9 OK tried move text upwards let know looks better browser Amir Says Comment 14 May 23rd 2015 10 33 accurate complexity class title would something like L 1 232 L 1 923 since actual complexities descent precomputation steps NFS assuming standard number-theoretic assumptions Scott Says Comment 15 May 23rd 2015 10 46 Amir 14 Yup jonas Says Comment 16 May 23rd 2015 1 32 pm something ve wanted ask post seems like good occasion know factoring large composite integers finding discrete logarithm modulo large prime broken efficiently using quantum computer using Shor algorithm quantum polynomial time mention post number field sieve algorithm fastest known classical algorithm discrete logarithms problem likely also fastest factoring large composite numbers inherent connection makes us expect two problems similar someone found faster randomized classical algorithm one problems likely also one problem elliptic curves connected Douglas Knight Says Comment 17 May 23rd 2015 2 04 pm Jonas understanding somewhat mysterious factoring discrete logarithm prime fields analogous algorithms Elliptic curves seem analogous structure exploited Thus one use small elliptic curves popular However lots classes elliptic curves extra structure exploited usually comparing multiplicative group fields applying QS NFS easy imagine new classes discovered future Indeed easy imagine NSA already class Suite B curves chose specifically vulnerable Job Says Comment 18 May 23rd 2015 2 05 pm Maybe real trapdoor finding exploit given implementation lower average-case complexity breaking encryption scheme cases easy deliberately introducing surfacing hidden vulnerability e g heartbleed OpenSSL increase average-case complexity exploit-finding Joshua Zelinsky Says Comment 19 May 23rd 2015 2 06 pm interesting idea large primes used practical implementation Diffie-Hellman make guess would guessed people set server select large prime server Actually given wonder point advantages whatsoever using Diffie-Hellman key exchange rather using RSA everything someone involved practical end explain using DH still makes sense Scott Says Comment 20 May 23rd 2015 2 37 pm Jonas 16 Yeah ask excellent question wish better answers available Empirically progress factoring discrete log algorithms tracked almost perfectly particular instances one explain example Shor algorithm handles anything whatsoever reducible order-finding abelian hidden subgroup problem factoring discrete log bit massaging currently reduction factoring discrete log vice versa Andy H Says Comment 21 May 23rd 2015 3 24 pm Given amount resources invested hack versus relative simplicity fix aren better things NSA invest spycraft much less U government things aren borderline evil Scott Says Comment 22 May 23rd 2015 3 38 pm Andy 20 indeed something like might given amazing access much world encrypted data years would hard obtain otherwise well worth hundred million dollars would ve cost standpoint Whether US government things course broader question people ought asking asking post-Snowden Scott Says Comment 23 May 23rd 2015 5 52 pm Quantum Mechanic 7 OK italicized variables William Hird Says Comment 24 May 23rd 2015 6 39 pm Andy 20 Maybe question asking de-facto policy NSA regardless President runs Congress NEVER allow public entity matter use encryption doesn weakness back-door exploit Rahul Says Comment 25 May 24th 2015 2 40 third solution migrate elliptic-curve cryptography ECC far anyone knows today much less vulnerable descent attacks original Diffie-Hellman scheme elliptic curve cryptography studied long hard Diffie Hellmam people tried exploit hard Perhaps migrated ECC motivation exploits would rise would find analogous flaws Rahul Says Comment 26 May 24th 2015 2 52 exploit pervasive Logjam site report 8 top million websites vulnerable currently mean rest using 512 bit keys protected ways Even hypothetical hundreds million infrastructure would let common 1024-bit group broken 17 top million domains seem vulnerable top million seems lot sites base assessment sites us care secure traffic least top segment one million sites might way less vulnerable 8 17 En vrac Le blog de Balise Says Comment 27 May 24th 2015 2 55 NSA P poly Power Precomputation un billet agr able lire sur les derniers v nements autour du fait que Diffie-Hellman est en pratique moins r que ce qu il pourrait devrait tre en th orie avec quelques calculs divers sur le concept et donc si la NSA-ou-autre-agence-gouvernementale voulait faire leur prendrait combien de moyens temps etc en anglais NSA decrypt ciphers 1024 bit keys Mahdix Says Comment 28 May 24th 2015 4 01 complete story story today's secure network data transfers e g enter credit card number website done based protocols using Diffie-Hellman algorithm algorithm's implementation uses fixed numbers input parameters NSA supposedly pre-calculated different computation results single common used parameter using set pre-calculated data plus several hundred CPU cores decrypt text encrypted using 1024 bit keys use 2048 bit keys able currently client server applications pre-configured use type key Says Comment 29 May 24th 2015 4 30 Professor post serious really think Factoring discrete log P Poly Scott Says Comment 30 May 24th 2015 7 06 28 even read post know factoring discrete log P poly rate think anyone knows anything like today conjecture NSA might exploiting precomputation vaguely analogous P poly precomputation post-computation would still take subexponential time post-computation would milder subexponential pre-computation calculations suggest combination could put 1024-bit discrete logs within range feasibility million dollars Also precomputations would depend exact value p input size log p none assuming algorithms aren already known Scott Says Comment 31 May 24th 2015 7 12 Rahul 25 Firstly believe 8 figure refers sites vulnerable 512-bit downgrade attack e one Adrian et al could demonstrate using computing resources easily available academics much larger percentage websites would vulnerable 1024-bit attack one within range nation-state secondly attack affects 8 top million sites already seems like big deal 80 000 sites re talking enough e g criminal enterprise make killing exploiting Joshua Zelinsky Says Comment 32 May 24th 2015 8 58 28 bring actual issue phrase terms computational complexity would want know good name following class m going call NSA language L NSA instances consist two strings x y polynomial time algorithm determining membership x y L given x f x y Additionally insist f x computed PSPACE natural actual computational class Rahul Says Comment 33 May 24th 2015 10 03 Logjam site assesses internet browser clients Chrome Opera Internet Explorer vulnerable attack fix yet Scott Says Comment 34 May 24th 2015 10 26 Rahul 31 Well says weakdh org Make sure recent version browser installed check updates frequently Google Chrome including Android Browser Mozilla Firefox Microsoft Internet Explorer Apple Safari deploying fixes Logjam attack si Says Comment 35 May 24th 2015 1 19 pm wonder NSA thinks paper saying trouble us best academics safe Unfortunately idea one truth priori probability 0 5 Yuval Levental Says Comment 36 May 24th 2015 1 22 pm Unrelated http www bbc com news world-us-canada-32865248 matt Says Comment 37 May 24th 2015 1 39 pm pre-computation done efficiently quantum computer course qc could whole computation qc qc available time limited resource might worth pre-computing qc using classical computers rest Scott Says Comment 38 May 24th 2015 1 54 pm Yuval 34 tragedy ve often gotten uneasy m taxi weaving madly traffic reflect driver every day must know right agreed months ago contribute essay P vs NP book famous open problems John Nash editing would ve first interaction counting seeing around IAS cafeteria know happen book RIP Scott Says Comment 39 May 24th 2015 1 57 pm si 33 Even NSA differs important ways paper described paper finally spurs people switch 2048-bit keys hard see wouldn cause trouble NSA Scott Says Comment 40 May 24th 2015 2 02 pm matt 35 Well output precomputation already subexponential size indeed depending tradeoffs want output large exp 1 923 o 1 log p 1 3 log log p 2 3 comparable entire running time precomputation far obvious quantum computer would speed certainly couldn polylog p time best could shave lower-order terms Says Comment 41 May 24th 2015 2 43 pm Scott 29 Sorry looked title impulsive posting read posting though case think Integer factoring DLog P Poly reasonable possibility also like pigs shall fly Either Integer factoring DLog P Poly seem affect complexity classes general could every OWF inverted P Poly reasonable possibility Scott Says Comment 42 May 24th 2015 3 01 pm 39 factoring discrete log P poly P matter say TIME nlog n regard within realm possibility far anyone knows specific problems solution wouldn cause wider collapse complexity classes disastrous structural consequences hand think safe say algorithm would constitute depend revolutionary advance number theory also strongly disagree people claim must fast classical factoring algorithm d say simply know right number field sieve something like close optimal improvable smaller subexponential also perfectly reasonable possibilities arbitrary OWFs efficiently invertible d regard much surprising almost surprising P NP final remark doubt great deal difference uniform nonuniform cases e P P poly questions Says Comment 43 May 24th 2015 3 08 pm Scott 42 Thank much Says Comment 44 May 24th 2015 3 33 pm Sorry regarding last line doubt great deal difference uniform nonuniform cases e P P poly background reading seem getting poly length string could hard seems NP P Poly would still reasonable speculate P NP right mean strength pigs shall fly seems collapse PH Pi_2 Sigma_2 Remaining problems could still hard seem significant difference P P Poly problems polynomial hierarchy Bram Cohen Says Comment 45 May 24th 2015 3 39 pm Using multiple different primes incurs huge amounts problems specific primes weak number ways possibly novel ways generally much lower performance ones selected specifically efficient implementations Selecting fresh primes opportunistic encryption particular would nightmare susceptibility potential new attacks Standard primes big advantages specifically studied weaknesses implementation tricks even standards https tools ietf org html rfc3526 others beat making points earlier pointed one thing really needed increasing sizes Joshua Zelinsky Says Comment 46 May 24th 2015 4 21 pm 44 NP P poly doesn imply P NP NP P poly would almost shocking finding P NP found NP P poly d fundamentally reevaluate entire approach things degree confidence P NP would put aside carefully examined proof NP P poly understood exactly coming limitations technique Rahul Says Comment 47 May 24th 2015 5 05 pm practical downsides going really large yet single prime large would key make NFS precomputation feasible even state entity lots resources whatever hardware scale rates foresee say next decade Scott Says Comment 48 May 24th 2015 10 30 pm Rahul 47 back-of-the-enveloped got taking 2048-bit discrete log using NFS billion times harder taking 1024-bit discrete log means d talking 45 quadrillion core-years seems plausibly beyond current range human civilization without serious algorithmic advance David Says Comment 49 May 24th 2015 11 20 pm Hopefully ll soon see enhancements IKEv1 IKEv2 support site-generated DH groups one stuck Group 5 1536 bits TLS beats IPSEC supporting custom group generation Rahul Says Comment 50 May 25th 2015 12 09 Scott 48 Interesting found link online seems say Google using 2048 bit keys almost two years sure Diffie Hellman keys discussing http www computing co uk ctg news 2285984 google-updates-ssl-certificates-to-2048bit-encryption client browsers already fixed work 2048 bit keys implementation aspects confusing e g move 2048 bit keys need changes server client ends servers need change anonymous Says Comment 51 May 25th 2015 1 22 disclosure recent interview Terence Tao related matter http www smh com au good-weekend terence-tao-the-mozart-of-maths-20150306-13fwcv html Perhaps inadvertently assisted refining choice NFS polynomials BlackSails Says Comment 52 May 25th 2015 8 20 think NSA using attack likely NSA functioning quantum computer Scott Says Comment 53 May 25th 2015 8 45 BlackSails 52 Without question Alon Rosen Says Comment 54 May 25th 2015 12 32 pm true theoretical cryptographer know DH Key-Exchange least say https jonkatz wordpress com 2010 05 12 what-do-we-know Rahul Says Comment 55 May 25th 2015 3 06 pm Wasn rather irresponsible publish major browsers chance announce fix patch ve searched lot Chrome even see development thread yet Couldn guys waited announced John Alicia Nash 1928 1933 2015 G del's Lost Letter P NP Says Comment 56 May 25th 2015 4 35 pm new Logjam attack Diffie-Hellman key exchange excellently covered Scott Aaronson echoes faults RSA implementations likewise fail diversify prime fred Says Comment 57 May 25th 2015 4 48 pm question regarding discrete logarithm E g solve 3 m 13 modulo 17 solution m 4 use brute force check k 17 13 3 m m 1 m 2 m 3 m N many powers 3 would consider know sure solution e N Jay Says Comment 58 May 25th 2015 5 27 pm Rahul 55 d take huge ressources exploit random folk could read mails tomorrow morning hand information NSA could soon decrypt information happen collect relevant Tommaso G Says Comment 59 May 25th 2015 7 44 pm elliptic-curve groups less good everyone using elliptic curves see problem expert elliptic curves AFAIK curves suitable crypto use relatively sparse standardized e g NIST NSA Suite B reason curves complex objects endless categories different properties many vulnerable one attack another see e g http safecurves cr yp also possible generate random curves testing crypto suitability involves expensive computation doubt easier generating large safe prime DH use Scott Says Comment 60 May 25th 2015 7 53 pm Rahul 55 Adrian et al whole section paper Section 6 Disclosure Response notified companies fix 512-bit vulnerability going public companies Jay 58 pointed disclosure isn really relevant 1024-bit vulnerability since one requires nation-state-level resources exploit relevant nation-states probably know already would take years develop capability Disclosing affected parties going public give chance fix whatever vulnerability found standard practice computer security community people pretty careful Rahul Says Comment 61 May 25th 2015 11 32 pm Scott 60 go weakdh org warns Warning web browser vulnerable Logjam tricked using weak encryption update browser triggered 512-bit vulnerability 1024-bit vulnerability impression browser rolled fixes yet even 512 bit downgrade exploit Sniffnoy Says Comment 62 May 26th 2015 12 13 Fred See Fermat little theorem generally Euler totient theorem generally Lagrange theorem Amir Says Comment 63 May 26th 2015 5 47 fred 57 specific problem solving modulo 17 generator 3 steps needed 16 3 16 1 smaller solution start brute-force m 0 hardest case would 3 15 6 complexity actually depends choice generator course textbook basic number theory proves Fermat little theorem follows bases optimal d need N-1 steps brute-force working modulo prime N bg Says Comment 64 May 26th 2015 8 40 Scott 31 attack affects 8 top million sites already seems like big deal 80 000 sites re talking enough e g criminal enterprise make killing exploiting reminds hedge funds consistently amazing returns mostly hire cryptographers know reality pattern recognition abilities ve always wondered could something else going behind scenes dimethylethylhexabutylpeptopeyotine derivative Says Comment 65 May 26th 2015 1 30 pm point machines get faster breaking encryption also handle higher bit encryption Furthermore people sensitive data willing upgrade Sometimes upgrades require hardware-level op codes new algorithms theory less interesting engineering point view things need scale properly fred Says Comment 66 May 26th 2015 3 36 pm Amir 63 Sniffnoy 62 thanks wonder working modulo N requires N exponentiations follow QM algorithm Shor also requires N simultaneous state superpositions work MarkH Says Comment 67 May 26th 2015 8 02 pm Bram Cohen 45 far know q prime p 2q 1 also prime multiplication group mod p less secure setting Diffie-Hellman group size e modulus length bits simple verify p test primality test p-1 2 primality verification somewhat costly barrier creating big list safe primes one-time check server domain uses custom prime aware properties multiplication group moduli materially alter cost computing discrete logs using publicly known algorithms comment suggests know several criteria security p Would kindly enlighten Amir Safavi Says Comment 68 May 27th 2015 1 06 Clear thought doesn respect boundaries disciplines theory practice fred Says Comment 69 May 27th 2015 8 37 Reading d think NSA hasn actually recruited theoretical practical cryptographers US academia possible m sure alternatives would Self-taught geniuses hackers Captured aliens Roswell crash site reading John Nash RIP came across declassified letters sent NSA http www gwern net docs 1955-nash typical member US academia work side NSA patriotism etc opposed full time Scott Says Comment 70 May 27th 2015 10 09 fred 69 typical certainly happens lots mathematicians done consulting work NSA NSA often campuses trying recruit also prestigious summer research program undergrads grad students often recruit people uphill battle since excellent researchers tend like tell everyone discovered might moral qualms working especially post-Snowden believe NSA still single largest employer mathematicians world Raoul Ohio Says Comment 71 May 27th 2015 11 50 Re 70 NSA mathematics Ph D Starbucks philosophy Ph D Says Comment 72 May 27th 2015 3 53 pm Raoul Ohio 71 objects theory CS phds physics phds Joshua Zelinsky Says Comment 73 May 27th 2015 7 49 pm Scott going blog Aram Harrow recent work improved quantum error correcting codes Scott Says Comment 74 May 27th 2015 8 14 pm Joshua 73 Could give link Joshua Zelinsky Says Comment 75 May 27th 2015 8 40 pm Sorry looks like result old Paper http arxiv org abs 1411 3334 listed November 2014 looks like getting picked general press e g http phys org news 2015-05-protocol-virtually-errors-quantum-memory html blog already point missed C Says Comment 76 May 27th 2015 8 51 pm Hi Scott thoughts http arxiv org abs 1505 06506 Scott Says Comment 77 May 27th 2015 10 06 pm C 76 Sorry one looks covered second question FAQ Joshua Zelinsky Says Comment 78 May 27th 2015 10 36 pm C 76 Scott glance paper claims ve proven NP coNP However address anywhere ve gotten around fact oracles NP coNP discuss relativization major red flag Scott Says Comment 79 May 27th 2015 11 33 pm Joshua 75 d somehow missed paper looks great m sorry anything intelligent say right Rahul Says Comment 80 May 28th 2015 4 29 University student reaction NSA trying recruit CS Departments Dow recruiters got Chemistry Departments back 70 Dow used manufacture Napalm Halliburton recruiters got Bush era Leave Reply Name required Mail published required Website Shtetl-Optimized proudly powered WordPress Entries RSS Comments RSS"),
('Google a step closer to developing machines with human-like intelligence', "Close Skip main content free become member sign subscribe search jobs dating guardian jobs dating masterclasses join us membership subscribe change edition switch UK edition switch US edition switch AU edition International beta switch UK edition switch US edition switch Australia edition Guardian Winner Pulitzer prize 2014 home science home UK world politics sport football opinion culture business lifestyle fashion environment tech travel browse sections close Science Google step closer developing machines human-like intelligence Algorithms developed Google designed encode thoughts could lead computers common sense within decade says leading AI scientist Joaquin Phoenix virtual girlfriend film Professor Hinton think reason computers couldn become friends even flirt us Photograph Allstar Warner Bros Sportsphoto Ltd Hannah Devlin Science correspondent hannahdev Thursday 21 May 2015 18 24 BST Last modified Friday 22 May 2015 00 01 BST Share Facebook Share Twitter Share via Email Share LinkedIn Share Google Share WhatsApp Computers developed common sense within decade could counting among friends long afterwards one world leading AI scientists predicted Professor Geoff Hinton hired Google two years ago help develop intelligent operating systems said company brink developing algorithms capacity logic natural conversation even flirtation researcher told Guardian said Google working new type algorithm designed encode thoughts sequences numbers something described thought vectors Although work early stage said plausible path current software sophisticated version would something approaching human-like capacity reasoning logic Basically ll common sense idea thoughts captured distilled cold sequences digits controversial Hinton said ll lot people argue say capture thought like added reason think capture thought vector Hinton due give talk Royal Society London Friday believes thought vector approach help crack two central challenges artificial intelligence mastering natural conversational language ability make leaps logic painted picture near-future people chat computers extract information fun reminiscent film Joaquin Phoenix falls love intelligent operating system far-fetched Hinton said see shouldn like friend see shouldn grow quite attached past two years scientists already made significant progress overcoming challenge Richard Socher artificial intelligence scientist Stanford University recently developed program called NaSent taught recognise human sentiment training 12 000 sentences taken film review website Rotten Tomatoes Part initial motivation developing thought vectors improve translation software Google Translate currently uses dictionaries translate individual words searches previously translated documents find typical translations phrases Although methods often provide rough meaning also prone delivering nonsense dubious grammar Thought vectors Hinton explained work higher level extracting something closer actual meaning technique works ascribing word set numbers vector define position theoretical meaning space cloud sentence looked path words turn distilled set numbers thought vector thought serves bridge two languages transferred French version meaning space decoded back new path words key working numbers assign word language deep learning comes Initially positions words within cloud ordered random translation algorithm begins training dataset translated sentences first translations produces nonsense feedback loop provides error signal allows position word refined eventually positions words cloud captures way humans use effectively map meanings Hinton said idea language deconstructed almost mathematical precision surprising true take vector Paris subtract vector France add Italy get Rome said quite remarkable Dr Hermann Hauser Cambridge computer scientist entrepreneur said Hinton others could way solving programmers call genie problem machines moment get exactly wished Hauser said problem re good wishing right thing look humans recognition individual words isn particularly impressive important bit figuring guy wants Hinton number one guru world moment added aspects communication likely prove challenging Hinton predicted Irony going hard get said master literal first Americans get irony either Computers going reach level Americans Brits flirtatious program would probably quite simple create however probably wouldn subtly flirtatious begin would capable saying borderline politically incorrect phrases said Many recent advances AI sprung field deep learning Hinton working since 1980s core idea computer programs learn carry tasks training huge datasets rather taught set inflexible rules advent huge datasets powerful processors approach pioneered Hinton decades ago come ascendency underpins work Google artificial intelligence arm DeepMind similar programs research Facebook Microsoft Hinton played concerns dangers AI raised American entrepreneur Elon Musk described technologies development humanity greatest existential threat risk something seriously dangerous happening five year timeframe Ten years Musk warned last year m scared things already happened said Hinton response NSA already bugging everything everybody time new revelation Snowden realise extent scared make technology work better help NSA misuse added d worried autonomous killer robots news Topics Artificial intelligence AI Computing Google Consciousness Neuroscience Psychology Share Facebook Share Twitter Share via Email Share LinkedIn Share Google Share WhatsApp View comments comments Sign create Guardian account join discussion discussion closed comments re maintenance right still read comments please come back later add Commenting disabled account Order newest oldest Show 25 25 50 100 Threads collapsed expanded unthreaded Loading comments Trouble loading View comments popular Guardian back top home UK world politics sport football opinion culture business lifestyle fashion environment tech travel sections close home UK education media society law scotland wales northern ireland politics world europe US americas asia australia africa middle east cities development sport football cricket rugby union F1 tennis golf cycling boxing racing rugby league US sports football live scores tables competitions results fixtures clubs opinion columnists culture film tv radio music games books art design stage classical business economics banking retail markets eurozone lifestyle food health fitness love sex family women home garden fashion environment climate change wildlife energy pollution tech travel UK europe US money property savings pensions borrowing careers science selected professional networks observer today's paper editorials letters obituaries g2 weekend guide saturday review membership crosswords video Science Artificial intelligence AI membership jobs dating masterclasses subscribe topics contributors us contact us complaints corrections terms conditions privacy policy cookie policy securedrop 2015 Guardian News Media Limited affiliated companies rights reserved"),
('Can anyone point me to articles/papers describing the class of algorithms used in the video?', "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ unified approach grown structures deskriptiv GbR SubscribeSubscribedUnsubscribe1 122 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Statistics 94 874 1 338 Like video Sign make opinion count Sign 1 339 5 Don't like video Sign make opinion count Sign 6 Loading Loading Loading Rating available video rented feature available right Please try later Published Nov 26 2014The video shows 15 different variations one computational growth process Based process created series 3D printed wearables cooperation Prof Neri Oxman MIT Media Lab project found Behance page https www behance net gallery 21605 audiotrack There's Probably Time Chris Zabriskie used video found freemusicarchive http freemusicarchive org music Chr Category Science Technology License Standard YouTube License Show Show less Loading Autoplay autoplay enabled suggested video automatically play next Next SimpSymm - procedural modeling algorithm - Duration 1 56 deskriptiv GbR 17 442 views 1 56 Play nextPlay Neil deGrasse Tyson tells Neil Gaiman Neri Oxman better nature - Duration 2 30 CTFORUM 7 520 views 2 30 Play nextPlay Agile Introduction - Duration 8 35 CA Technologies 362 685 views 8 35 Play nextPlay 3-D printing buildings future - Duration 3 06 CNN 170 662 views 3 06 Play nextPlay DoubleMesh - generator interwoven structures - Duration 1 41 deskriptiv GbR 5 704 views 1 41 Play nextPlay QUADDEL features - Duration 1 01 deskriptiv GbR 12 774 views 1 01 Play nextPlay Bewegungen - Duration 2 50 deskriptiv GbR 9 646 views 2 50 Play nextPlay Silk Pavillion - Duration 6 19 Swedbrand 3 188 views 6 19 Play nextPlay Grand Design - Duration 1 39 45 Vilcek Foundation 1 155 views 1 39 45 Play nextPlay Rational Unified Process - Duration 13 25 Audiopedia 2 924 views 13 25 Play nextPlay Waterfall V Model Software Development Life Cycle - Manual Testing Part 2 - Duration 17 41 Software Testing Training 38 186 views 17 41 Play nextPlay QUADDEL directional field - Duration 0 43 deskriptiv GbR 4 507 views 0 43 Play nextPlay QUADDEL freeform growth - Duration 0 48 deskriptiv GbR 4 737 views 0 48 Play nextPlay QUADDEL peripheral interaction - Duration 0 50 deskriptiv GbR 5 102 views 0 50 Play nextPlay Think Agency Google - Andy Lippman - Duration 33 36 Google para seu Neg cio 335 views 33 36 Play nextPlay Metodologia RUP - Duration 5 09 webmasterprogramming 23 320 views 5 09 Play nextPlay"),
('On Computability and problems with Set theory', "Skip navigation Sign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ MathHistory28 Computability problems Set theory njwildberger SubscribeSubscribedUnsubscribe23 590 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Statistics 1 667 43 Like video Sign make opinion count Sign 44 1 Don't like video Sign make opinion count Sign 2 Loading Loading Loading Rating available video rented feature available right Please try later Published May 20 2015We look difficulties controversy surrounding Cantor's Set theory turn 20th century Formalist approach resolving difficulties program Hilbert seriously disrupted Godel's conclusions Inconsistency formal systems Nevertheless went support Zermelo-Fraenkel axiomatic approach sets quick look introduce Alan Turing's ideas computability via Turing machines consequences lecture closes review historical positions contentious idea completed infinite sets quoting illustrious mathematicians Aristotle Robinson along G Cantor summary appears closed chapter History Mathematics interested depth discussion interesting issues see MathFoundations series YouTube videos--also channel Category Education License Standard YouTube License Show Show less Loading Advertisement Autoplay autoplay enabled suggested video automatically play next Next MathHistory27 Sets logic computability - Duration 53 01 njwildberger 2 212 views 53 01 Play nextPlay MathHistory26 Matrices determinants birth Linear Algebra - Duration 42 38 njwildberger 1 974 views 42 38 Play nextPlay MathHistory25 Problems Calculus - Duration 48 48 njwildberger 3 046 views 48 48 Play nextPlay MathHistory18 Hypercomplex numbers - Duration 59 31 njwildberger 16 612 views 59 31 Play nextPlay Story 1 One - Documentary - Duration 59 04 DocumentarMovie 67 906 views 59 04 Play nextPlay Walter B Rudin Set Theory Offspring Analysis - Duration 1 00 01 UW-Milwaukee Department Mathematical Sciences 7 521 views 1 00 01 Play nextPlay History Mathematics - Duration 27 58 Ron Henguillo 7 852 views 27 58 Play nextPlay 37 videos Play Play MathHistory course History Mathematicsby njwildberger Set Theory - Introduction - Duration 29 43 slcmath pc 3 051 views 29 43 Play nextPlay History Maths - Duration 27 06"),
('A list of PL-related Summer Schools', 'Sign GitHub account Sign Gists biboudis schools md Last active May 21 2015 Code Revisions 12 Stars 11 Embed URL HTTPS clone URL SSH clone URL clone HTTPS SSH Download Gist PL Summer Schools forall deadlines may passed View schools md schools md Raw File suppressed Click show Fifth Summer School Formal Techniques 17-22 May 2015 Programming Tuning Massively Parallel Systems PUMPS 6-10 July 2015 5th Halmstad Summer School Testing HSST 2015 8-11 June 2015 PLT Redex 2015 Summer School 27-31 July 2015 Summer School Software Synthesis 23-26 June 2015 Types Logic Semantics Verification OPLSS 15-27 June 2015 UPMARC Summer School Multicore Computing June 8-10 2015 Summer School Generic Effectful Programming 6-10 July 2015 27th European Summer School Logic Language Information 3-14 August 2015 Summer School DSL Design Implementation 12-17 July 2015 SAT SMT Summer School 15-17 July 2015 Applied Functional Programming Haskell 6-17 July 2015 ECOOP 2015 Summer School 8-10 July 2015 SICSA Summer School Practical Types 3-5 August 2015 Sign free join conversation GitHub Already account Sign comment Something went wrong request Please try Status API Blog 2015 GitHub Inc Terms Privacy Security Contact'),
("Dr. Turing's Automatic Machine in Python", "Mobile Menu Python3 Codes Python Resources Contributors Python Tags FOSS Linux Fractals Math Art Social Link FacebookTwitterLinked InGoogle PlusPinterestGithubTumblr Python3 Codes Python3 Codes Python Resources Contributors Python Tags FOSS Linux Fractals Math Art Python3 Codes Python Resources Contributors Python Tags FOSS Linux Fractals Math Art right reserved 2015 Python3 codes Alan Turing Automatic Machine Monty 14th May 2015 http en wikipedia org wiki User Wvbailey Alan Turing published ground-breaking paper 1936 computable numbers application Entscheidungsproblem PDF esoteric problem mathematics needed theoretical model mathematician computes pencil paper called model automatic machine call Turing Machine recognise containing minimal elements computers sense invented computers by-product mathematical research paper also generally acknowledged founded modern discipline theoretical computer science Turing Machine simple consists infinite tape divided cells along length cell contains symbol letter number taken specified set 0 1 head read write symbols tape move 1 cell one way register stores current state machine machine one finite number states determine happens next given symbol read table instructions specify machine replace current symbol new one move along tape next state table kind program indexed state current symbol simple program add 2 unary numbers numbers base 1 e g 5 11111 state symbol 0 1 0 1 1 1 1 1 0 1 0 -1 2 1 1 1 2 0 1 2 0 1 9 machine starts state 0 reads 1 tape gets instruction 1 1 0 first element symbol write back tape replacing current symbol 2nd direction move head -1 left 1 right 3rd new state effectively primitive programming language wouldn want use instead Python However principle powerful Python compute anything Python point primitive language allows us reason clearly possibilities limitations computers 1936 paper Computable Numbers Dr Turing showed programs program analyse determine ever halt simple example implements instruction table list lists tuples outermost list states innermost symbols tuples symbol write direction move tape head next state Visualise execution step-by-step Universal Turing Machines example solves one problem namely adding 2 numbers unary notation numbers provided tape least use machine solve infinite number additions program specific machine Suppose want machine compute something adding unary numbers need change prog must universal simulation imaginary mechanical device changing prog would effectively require repatching cables whatever different machine Universal Turing Machine however fixed machine accepts program another TM tape followed data Changing prog tantamount using underlying compiler interpreter plus hardware UTM wikipedia universal Turing machine UTM Turing machine simulate arbitrary Turing machine arbitrary input universal machine essentially achieves reading description machine simulated well input thereof tape cannot change prog UTM treated like black box tape change TMs found web claimed Universal algorithm already part machine one Rosetta Code example function called run_utm supply parameters rules tape rules handed Python code UTM code cheating UTM instructions take care interpreting supplied rules Python like also observed many quite big written object-oriented style apparent reason like Turing Machines used industry commerce need bullet-proof re thought experiment designed illustrate basic principles computation want people e g students grasp principles quickly expose simulator essential code without unnecessary complication See video fuller explanation Stop Writing Classes Information Turing Machines Tuxar uk Picture fanciful mechanical TM Wikipedia user WVBailey Annotated Turing Charles Petzold Probably favourite book computable numbers application Entscheidungsproblem PDF Journal website COMPUTABLE NUMBERS APPLICATION ENTSCHEIDUNGSPROBLEM M TURING text Extract computable numbers application Entscheidungsproblem fromProceedings London Mathematical Society Ser 2 Vol 42 1937 extract Computable Numbers Application Entscheidungsproblem correction FromProceedings London Mathematical Society Ser 2 Vol 43 1937 Turing Digital Archive Information measure things Part 1 Communication codes and- computation problem Turing machine new one needs built whenever new computation performed Turing proved modified version deceptively simple theoretical machine known Universal Turing machine could perform possible computations way established show could encode instruction table input output Turing machine onto Universal Turing machine tape Turing proved Universal Turing machine could perform possible computations Wikipedia Turing machine hypothetical device manipulates symbols strip tape according table rules Despite simplicity Turing machine adapted simulate logic computer algorithm particularly useful explaining functions CPU inside computer machine invented 1936 Alan Turing called a-machine automatic machine Turing machine intended practical computing technology rather hypothetical device representing computing machine Turing machines help computer scientists understand limits mechanical computation 1948 essay Intelligent Machinery Turing wrote machine consisted unlimited memory capacity obtained form infinite tape marked squares symbol could printed moment one symbol machine called scanned symbol machine alter scanned symbol behavior part determined symbol symbols tape elsewhere affect behavior machine However tape moved back forth machine one elementary operations machine symbol tape may therefore eventually innings Turing 1948 p 3 Turing machine able simulate Turing machine called universal Turing machine UTM simply universal machine mathematically oriented definition similar universal nature introduced Alonzo Church whose work lambda calculus intertwined Turing's formal theory computation known Church Turing thesis thesis states Turing machines indeed capture informal notion effective methods logic mathematics provide precise definition algorithm mechanical procedure Studying abstract properties yields many insights computer science complexity theory Share Click share Twitter Opens new window Share Facebook Opens new window Click share Google Opens new window Click share Reddit Opens new window Click share LinkedIn Opens new window Click share Tumblr Opens new window MoreClick email friend Opens new window Click print Opens new window Click share StumbleUpon Opens new window Click share Pinterest Opens new window Click share Pocket Opens new window Like Like Loading Related Categories Advanced Basic Beginner Intermediate Uncategorised Tagsassignment bit operations boolean chr color colorsys complex conditionals cos data types def dict eval events float fractal function graphics HSV import input libraries list loop math matplotlib modulo numpy pillow print pyaudio pygame random range recursion RGB search simulation sin tuple turtle tags Send Email Address Name Email Address Cancel Post sent - check email addresses Email check failed please try Sorry blog cannot share posts email d bloggers like"),
('Will Computers Redefine the Roots of Math?', 'Quanta Magazine Biology 56 Computer Science 17 Mathematics 31 Physics 61 Q 13 editorially independent division Mathematics Computers Redefine Roots Math legendary mathematician found mistake work embarked computer-aided quest eliminate human error succeed rewrite century-old rules underlying mathematics Hannes Hummel Quanta MagazineMathematics rebuilt top new foundations Quanta ArticlesMost viewedRecent Computers Redefine Roots Math New Theory Explain Higgs Mass Scientists Map 5 000 New Ocean Viruses Quantum Pairs Stitch Space-Time Particle Broke Cosmic Speed Limit New Theory Explain Higgs MassScientists Map 5 000 New Ocean VirusesWill Computers Redefine Roots Math Particle Broke Cosmic Speed LimitAnimal Copies Reveal Roots Individuality Kevin Hartnett May 19 2015 Comments 20 recent train trip Lyon Paris Vladimir Voevodsky sat next Steve Awodey tried convince change way mathematics Voevodsky 48 permanent faculty member Institute Advanced Study IAS Princeton N J born Moscow speaks nearly flawless English confident bearing someone need prove anyone 2002 won Fields Medal often considered prestigious award mathematics train approached city Voevodsky pulled laptop opened program called Coq proof assistant provides mathematicians environment write mathematical arguments Awodey mathematician logician Carnegie Mellon University Pittsburgh Pa followed along Voevodsky wrote definition mathematical object using new formalism created called univalent foundations took Voevodsky 15 minutes write definition trying convince Awodey mathematics Coq Voevodsky explained lecture past fall trying convince easy idea mathematics program like Coq long history appeal simple Rather relying fallible human beings check proofs turn job computers tell whether proof correct complete certainty Despite advantage computer proof assistants haven widely adopted mainstream mathematics partly translating everyday math terms computer understand cumbersome eyes many mathematicians worth effort nearly decade Voevodsky advocating virtues computer proof assistants developing univalent foundations order bring languages mathematics computer programming closer together sees move computer formalization necessary branches mathematics become abstract reliably checked people world mathematics becoming large complexity mathematics becoming high danger accumulation mistakes Voevodsky said Proofs rely proofs one contains flaw others rely share error something Voevodsky learned personal experience 1999 discovered error paper written seven years earlier Voevodsky eventually found way salvage result article last summer IAS newsletter wrote experience scared began worry unless formalized work computer wouldn complete confidence correct taking step required rethink basics mathematics accepted foundation mathematics set theory Like foundational system set theory provides collection basic concepts rules used construct rest mathematics Set theory sufficed foundation century readily translated form computers use check proofs decision start formalizing mathematics computer Voevodsky set motion process discovery ultimately led something far ambitious recasting underpinnings mathematics Set Theory Paradox Set theory grew impulse put mathematics entirely rigorous footing logical basis even secure numbers Set theory begins set containing nothing null set used define number zero number 1 built defining new set one element null set number 2 set contains two elements null set 0 set contains null set 1 way whole number defined set sets came Olena Shmahalo Quanta MagazineSet theory constructs mathematics starting literally nothing null set defined zero set contains single element null set becomes number 1 set contains two elements null set set containing null set becomes number 2 whole numbers place fractions defined pairs whole numbers decimals defined sequences digits functions plane defined sets ordered pairs end complicated structures set things set things set things way metal empty set bottom said Michael Shulman mathematician University San Diego Set theory foundation includes basic objects sets logical rules manipulating sets theorems mathematics derived advantage set theory foundational system economical every object mathematicians could possibly want use ultimately built null set hand tedious encode complicated mathematical objects elaborate hierarchies sets limitation becomes problematic mathematicians want think objects equivalent isomorphic sense necessarily equal respects example fraction decimal 0 5 represent real number encoded differently terms sets build specific object re stuck Awodey said want work different isomorphic object d build set theory isn way mathematics proof assistant programs Coq Agda example based different formal system called type theory Type theory origins attempt fix critical flaw early versions set theory identified philosopher logician Bertrand Russell 1901 Russell noted sets contain member example consider set things spaceships set set non-spaceships spaceship member Russell defined new set set sets contain asked whether set contains showed answering question produces paradox set contain doesn contain objects set sets contain doesn contain contain set contains sets contain Russell created type theory way paradox place set theory Russell system used carefully defined objects called types Russell type theory begins universe objects like set theory objects collected type called SET Within type theory type SET defined allowed collect objects aren collections things collection contain collections longer allowed SET instead something thought MEGASET new kind type defined specifically collection objects collections objects whole system arises orderly fashion One imagine say type called SUPERMEGASET collects objects MEGASETS Within rigid framework becomes illegal speak even ask paradox-inducing question set sets contain contain type theory SETS contain objects collections objects important distinction set theory type theory lies way theorems treated set theory theorem set statement sets contrast versions type theory theorems SETS equal footing types new kind mathematical object theorem type whose elements different ways theorem proved example single type collects proofs Pythagorean theorem illustrate difference set theory type theory consider two sets Set contains two apples Set B contains two oranges mathematician might consider sets equivalent isomorphic number objects way show formally two sets equivalent pair objects first set objects second pair evenly objects left either side re equivalent pairing quickly see two ways show equivalence Apple 1 paired Orange 1 Apple 2 Orange 2 Apple 1 paired Orange 2 Apple 2 Orange 1 Another way say state two sets isomorphic two ways traditional set theory proof theorem Set Set B symbol means isomorphic mathematicians concerned whether one pairing exists type theory theorem Set Set B interpreted collection consisting different ways demonstrating isomorphism case two often good reasons mathematics keep track various ways two objects like two sets equivalent type theory automatically bundling equivalences together single type especially useful topology branch mathematics studies intrinsic properties spaces like circle surface doughnut Studying spaces would impractical topologists think separately possible variations spaces intrinsic properties example circles come size yet every circle shares basic qualities solution reduce number distinct spaces considering equivalent One way topologists notion homotopy provides useful definition equivalence Spaces homotopy equivalent roughly speaking one deformed shrinking thickening regions without tearing point line homotopy equivalent another way saying re homotopy type letter P homotopy type letter O tail P collapsed point boundary letter upper circle P O homotopy type letters alphabet contain one hole D Q R Emily Fuhrman Quanta Magazine Homotopy types used classify essential features object letters R Q one hole homotopy type letters C X K also homotopy type transform line Topologists use different methods assessing qualities space determining homotopy type One way study collection paths distinct points space type theory well-suited keeping track paths instance topologist might think two points space equivalent whenever path connecting collection paths points x y viewed single type represents proofs theorem x y Homotopy types constructed paths points enterprising mathematician also keep track paths paths paths paths paths paths paths thought higher-order relationships points space Voevodsky tried 20 years starting undergraduate Moscow State University mid-1980s formalize mathematics way would make higher-order relationships paths paths paths easy work Like many others period tried accomplish within framework formal system called category theory achieved limited success using category theory formalize particular regions mathematics remained regions mathematics categories couldn reach Voevodsky returned problem studying higher-order relationships renewed interest years won Fields Medal late 2005 something epiphany soon started thinking higher-order relationships terms objects called infinity-groupoids said many things started fall place Infinity-groupoids encode paths space including paths paths paths paths paths crop frontiers mathematical research ways encoding similar higher-order relationships unwieldy objects point view set theory thought useless Voevodsky goal formalizing mathematics Yet Voevodsky able create interpretation type theory language infinity-groupoids advance allows mathematicians reason efficiently infinity-groupoids without ever think terms sets advance ultimately led development univalent foundations Voevodsky excited potential formal system built groupoids also daunted amount technical work required realize idea also concerned progress made would complicated reliably verified peer review Voevodsky said losing faith time Toward New Foundational System groupoids Voevodsky object left needing formal framework organize 2005 found unpublished paper called FOLDS introduced Voevodsky formal system fit uncannily well kind higher-order mathematics wanted practice 1972 Swedish logician Per Martin-L f introduced version type theory inspired ideas Automath formal language checking proofs computer Martin-L f type theory MLTT eagerly adopted computer scientists used basis proof-assistant programs mid-1990s MLTT intersected pure mathematics Michael Makkai specialist mathematical logic retired McGill University 2010 realized might used formalize categorical higher-categorical mathematics Voevodsky said first read Makkai work set forth FOLDS experience almost like talking good sense Andrea Kane Institute Advanced StudyVladimir Voevodsky univalent foundations program aims rebuild mathematics way allow computers check mathematical proofs Voevodsky followed Makkai path used groupoids instead categories allowed create deep connections homotopy theory type theory one magical things somehow happened programmers really wanted formalize type theory Shulman said turns ended formalizing homotopy theory Voevodsky agrees connection magical though sees significance little differently real potential type theory informed homotopy theory new foundation mathematics uniquely well-suited computerized verification studying higher-order relationships Voevodsky first perceived connection read Makkai paper took another four years make mathematically precise 2005 2009 Voevodsky developed several pieces machinery allow mathematicians work sets MLTT consistent convenient way first time said include new axiom known univalence axiom complete interpretation MLTT language simplicial sets addition groupoids another way representing homotopy types consistency convenience reflects something deeper program said Daniel Grayson emeritus professor mathematics University Illinois Urbana-Champaign strength univalent foundations lies fact taps previously hidden structure mathematics appealing different univalent foundations especially start viewing replacing set theory said appears ideas topology come foundation mathematics Idea Action Building new foundation mathematics one thing Getting people use another late 2009 Voevodsky worked details univalent foundations felt ready begin sharing ideas understood people likely skeptical big thing say something probably replace set theory said Voevodsky first discussed univalent foundations publicly lectures Carnegie Mellon early 2010 Oberwolfach Research Institute Mathematics Germany 2011 Carnegie Mellon talks met Steve Awodey research graduate students Michael Warren Peter Lumsdaine homotopy type theory Soon Voevodsky decided bring researchers together period intensive collaboration order jump-start field development Along Thierry Coquand computer scientist University Gothenburg Sweden Voevodsky Awodey organized special research year take place IAS 2012-2013 academic year thirty computer scientists logicians mathematicians came around world participate Voevodsky said ideas discussed strange outset wasn single person entirely comfortable ideas may slightly alien also exciting Shulman deferred start new job order take part project think lot us felt cusp something big something really important said worth making sacrifices involved genesis Following special research year activity split different directions One group researchers includes Shulman referred HoTT community homotopy type theory set explore possibilities new discoveries within framework d developed Another group identifies UniMath includes Voevodsky began rewriting mathematics language univalent foundations goal create library basic mathematical elements lemmas proofs propositions mathematicians use formalize work univalent foundations HoTT UniMath communities grown ideas underlie become visible among mathematicians logicians computer scientists Henry Towsner logician University Pennsylvania said seems least one presentation homotopy type theory every conference attends days learns approach makes sense buzzword said took awhile understand actually interesting good idea gimmicky thing lot attention univalent foundations received owing Voevodsky standing one greatest mathematicians generation Michael Harris mathematician Columbia University includes long discussion univalent foundations new book Mathematics Without Apologies impressed mathematics surround univalence model skeptical Voevodsky larger vision world mathematicians formalize work univalent foundations check computer drive mechanize proof proof verification doesn strongly motivate mathematicians far tell said understand computer scientists logicians would excited think mathematicians looking something else Voevodsky aware new foundation mathematics tough sell admits moment really hype noise field ready currently using language univalent foundations formalize relationship MLTT homotopy theory considers necessary next step development field Voevodsky also plans formalize proof Milnor conjecture achievement earned Fields Medal hopes might act milestone used create motivation field Voevodsky would eventually like use univalent foundations study aspects mathematics inaccessible within framework set theory approaching development univalent foundations cautiously Set theory undergirded mathematics century univalent foundations similar longevity Voevodsky knows important get things right start Share Article Share Article print Quanta Magazine Quanta Magazine online publication whose mission enhance public understanding research developments mathematics physical life sciences Quanta articles necessarily represent views Simons Foundation Quanta Magazine Contact Quanta replace sign SimonsFoundation org Stay Connected Informed Sign Quanta Magazine Newsletter Thank receive one confirmation email per selection receive confirmation email Email Add Comment View Comments 20 Comments entry Hayne Crum says May 19 2015 4 26 pm One advantages proof method one clear specific steps program computer proof Logical steps easily understood others Peter Walford says May 19 2015 5 33 pm Thank fascinating article One minor quibble caption building numbers diagram includes text Set theory constructs mathematics starting literally nothing null set defined zero null set literally nothing set elements nothing sms says May 19 2015 6 00 pm computer-aided quest eliminate human error succeed anyone else see irony stargene says May 19 2015 10 15 pm Since homotopy theory part parcel care feeding superstring theory wonder might Voevodsky new bestiary tools might assist exploration mostly untamed ultra-tangled zoo N Ram says May 19 2015 11 37 pm basic problem define mathematics first place elements static type apples oranges etc one say operation addition performed multiplication etc shorthand version operation elements dynamic type liquid gases speed etc integration operation performed errors mix one homogeneous sets create algebra four apples 8 bananas change way teach mathematics children addressed one show tell expect students association rather introduce concepts children associate linguistic vocabulary mathematical symbols Thus common noun superset proper noun set verifiable study regard article eye opening enjoyed Thanks Bryan Bischof says May 19 2015 11 43 pm fascinating Formal proof checkers formal mathematics general often dismissed weirdos even within abstract math circles difficulty roping higher algebraic theories ll bet program stutters However great homotopy vector attack Homotopy theory seen incredible advances generated many past 15 years lot brave new math homotopy perspective wrangling monster seems powerful Christer Svensson says May 20 2015 2 03 may limb putting whole logic AI useable terms may create measure employment among future students mathematics SAYANTAN GANGULY says May 20 2015 5 02 believe lead us understand check rigorous proofs mathematical statements world complete certainty May time get less number incorrect proofs unsolved conjectures true sense appreciate project tien says May 20 2015 10 40 Peter empty set set nothing need nothing first Craig Weinberg says May 20 2015 11 29 Instead starting null set starting set say power create appreciate sense categorical ordering fundamental set concretely real null set contrast abstraction relies sense set well sense negation fundamental derived representation null set except concept symbolize category contents category begins consciousness reflecting upon inverting reflection become absence mistake found universal system empty category since would nothing categorizing Sets mental groupings things ideas experiences absence everything cannot enveloped set except exercise abstraction perfectly valid real Brian K Spomer says May 20 2015 3 07 pm interesting ideas set theory Since mathematical set theory formal basis relational database design theory could new perspective lead definition enhanced data structure paradigm include diverse data structures types Mark Baldwin says May 20 2015 5 25 pm wonder jibes Incompleteness Theorem Raymond Ernst says May 20 2015 10 20 pm head glad see methods potential methods model growing complexities science Thomas White says May 21 2015 12 48 Peter Yes m glad m one see Tien simply re-affirming Nothing absence sets Null Set admittedly first _usable_ form Nothing certainly _not_ Nothing Null Set apeiron Even George Spencer-Brown Laws Form starts mark goes _back_ explain Nothing Steven Radtke says May 21 2015 8 28 run smack Halting Problem Larry Dale says May 22 2015 8 29 tien Craig Weinberg think need clear talking Let start reverse order Mathematics attempt model reality formalism human construct need comes human desire understand universe around us need one vital component classification become confused something defies classification Set Theory born reality mathematics reality Nothing exist Even universe expanse infinite void Nothing exist middle One thoughts always absolute Nothing would devoid property would describe Ancient Sumerians got quite well without zero null set part mathematical reference one start somewhere course calculating machine must embody Raymond E Rogers says May 22 2015 5 20 pm Since conversation seems drifted null set territory opinion null set requires context radical idea two null sets equivalent unless somehow identified correspondences properties null set certainly nothing case present correctly proved theorem would remain true system allowed basis say set theory constructed correctly known long time selection axiom set basis selection almost always different selections used Usually based utility construct set theory type theory running set theory different machine One could hope new basis would also open new realms outside set theory well instance doubts status hyperintegers terms set theory perhaps type theory could clarify picture James Jacobs says May 22 2015 5 52 pm turn 20th century David Hilbert proclaimed imagine points imagine lines imagine planes Prior time imagined mental constructs considered orthodox mathematics example DesCarte held imaginary numbers impossible imaginary numbers practical geometric construct Albert Einstein commented without acceptance Hilberts proclamation orthodox mathematics could written relativity theories c theory General Relativity equivalent square root minus one imaginary numbers geometric construct supporting existence square root minus one today Set theory considered foundational mathematical concept However Einstein explains article 1968 edition Encyclopedia Brittanica mathematics traced back one foundational principle straight line betwee two points space say language Science mathematics based foundational concept agree known scientific concept geometry space curved Mathematics opinion unable generate equation describes invisible dynamic structural order underlies everything geometric construction system uncovered structurally models structural order underlying everything numerical properties structural geometric curved space coordinate system would renew bond broken mathematics practical structural geometry turn 20th century awk says May 23 2015 6 38 author intend sound pedantic major fields mathematics precise distinction semantic metatheoretic terms empty set null set whereby empty set nowadays standard name set-theoretic notion nothingness given axiom within e g Zermelo-Fraenkel von Neumann-Bernays-G del systems see https en wikipedia org wiki Set_theory Axiomatic_set_theory incomplete overview page footer Null set mostly standard name negligible sets notably zero measure measure theory descriptive set theory cf https en wikipedia org wiki Null_set mathematician things different even perhaps mostly student construction natural numbers referring one host viable constructions due von Neumann perfectly well give logically equivalent synthetic definition e g via Peano axiom system respect preceding comments must start somewhere synthetic definition e axiomatic assumption construct anything may set theory first-order logic category theory type theory univalent theory complete rest mathematics built upon foundational theories put bluntly matter translations foundations article otherwise great thanks please keep especially regard Voevodsky Awodey entire team work astonishing work inspiration lots people Paul Boisvert says May 25 2015 1 48 pm nothing exist would necessary invent Leave Comment Cancel reply email address published name appear near comment Required Name Email Website Comment Quanta Magazine moderates comments goal facilitating informed substantive civil conversation research developments cover Comments abusive profane self-promotional misleading incoherent off-topic rejected accept comments written English Articles Back top Visit Simonsfoundation org Quanta Magazine Biology Physics Mathematics Computer Science Q Contact Us Simons Foundation'),
("Lambda Jam 2014 - Gershom Bazerman - Homotopy Type Theory: What's the Big Idea", "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ Lambda Jam 2014 - Gershom Bazerman - Homotopy Type Theory What's Big Idea YOW Australia SubscribeSubscribedUnsubscribe392 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Transcript Statistics 2 270 33 Like video Sign make opinion count Sign 34 0 Don't like video Sign make opinion count Sign 1 Loading Loading Transcript interactive transcript could loaded Loading Loading Rating available video rented feature available right Please try later Published Sep 13 2014Homotopy Type Theory http homotopytypetheory org research program brings together computer science form dependent type theory logic algebraic topology single cohesive way great insight systematizing way fields sense studying thing standpoint computer science consists new geometric interpretation dependent type theory think types topological spaces also addition single axiom univalence makes initially confusing claim equivalence equivalent equality implications work take years affect development compilers languages directly However concepts insights already help us change way think programming provide avenue programmers familiar type theory discover sense already knew homotopy theory imagined talk high level spelling basic idea homotopy interpretation well providing way concretely think univalence context Haskell also spend time discussing infinity-groupoids far straightforward name implies turn important Category Science Technology License Standard YouTube License Show Show less Loading Autoplay autoplay enabled suggested video automatically play next Next Type Theory Foundations Lecture 1 - Duration 1 24 13 p473r 6 329 views 1 24 13 Play nextPlay ICFP 2014 Depending Types - Stephanie Weirich - Duration 1 00 01 Malcolm Wallace 2 119 views 1 00 01 Play nextPlay Lambda Jam 2014 - Edward Kmett - Fast Purely Functional Cache-Oblivious Maps - Duration 30 28 YOW Australia 893 views 30 28 Play nextPlay PLT Type Theory 1 - ZFC set theory part 1 - Duration 14 24 Rehno Lindeque 7 347 views 14 24 Play nextPlay Intuitive Introduction Motivic Homotopy Theory - Vladimir Voevodsky - Duration 35 18 PoincareDuality 7 478 views 35 18 Play nextPlay Lambda Jam 2014 - Eric Meijer - Lost Art Denotational Semantics - Duration 53 44 YOW Australia 4 463 views 53 44 Play nextPlay trick math teacher - Duration 7 00 Tricklandia 1 290 441 views 7 00 Play nextPlay ICFP 2014 session Homotopy Type Theory - Duration 55 03 Malcolm Wallace 1 203 views 55 03 Play nextPlay Foundations Mathematics Homotopy Theory - Duration 1 05 09 artzejak 5 061 views 1 05 09 Play nextPlay Perturbation theory - Duration 33 32 BU Chem 4 763 views 33 32 Play nextPlay Mod-02 Lec-08 Homotopy First Fundamental Group - Duration 53 35 nptelhrd 3 283 views 53 35 Play nextPlay Current Foundations Mathematics Inconsistent Vladimir Voevodsky - Duration 58 30 videosfromIAS 6 971 views 58 30 Play nextPlay Lambda Jam 2014 - Andrew Sorensen - Live-Coding World - Duration 44 44 YOW Australia 592 views 44 44 Play nextPlay Dan Licata Guillaume Brunerie Peter Lumsdaine Homotopy Theory Type Theory - Duration 1 28 36 LeonhardEuler1 1 497 views 1 28 36 Play nextPlay Set Theory 1 Introduction - Duration 18 20 Wes Alarcone 1 724 views 18 20 Play nextPlay CS50 Lecture Mark Zuckerberg - Duration 1 05 35 CS50 222 159 views 1 05 35 Play nextPlay Introduction Perturbation Theory PHAS3226 Video 19 - Duration 11 19 David Bowler 1 550 views 11 19 Play nextPlay Neil Strickland Proof assistants routine tool - Duration 52 24 OxfordQuantumVideo 161 views 52 24 Play nextPlay YOW Nights May 2014 Jeff Patton - Top 10 Myths Misconceptions Product Ownership - Duration 1 03 33 YOW Australia 212 views 1 03 33 Play nextPlay Qu es un insight - Cristina Qui ones Mercado Negro TV - Duration 2 43 ConsumerInsightsPeru 47 446 views 2 43 Play nextPlay Loading suggestions Show Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists"),
('waifu2x: anime art upscaling and denoising with deep convolutional neural networks', "Skip content Sign Sign repository Explore Features Enterprise Blog Watch 187 Star 2 989 Fork 225 nagadomi waifu2x Code Issues Pull requests Wiki Pulse Graphs HTTPS clone URL Subversion checkout URL clone HTTPS Subversion Download ZIP Image Super-Resolution Anime-Style-Art 36 commits 1 branch 0 releases 2 contributors Lua 82 5 HTML 14 8 Shell 2 7 Lua HTML Shell branch master Switch branches tags Branches Tags master Nothing show Nothing show waifu2x update README latest commit 94629d8b31 nagadomi authored May 26 2015 Permalink Failed load latest commit information appendix add cron script fix run-web sh May 17 2015 assets fix hit May 20 2015 cache first commit May 16 2015 data add slide appendix May 17 2015 images fix ugly chroma scaling May 22 2015 lib fix ugly chroma scaling May 22 2015 models update noise1_model May 17 2015 gitignore update training script May 17 2015 LICENSE add LICENSE NOTICE May 17 2015 NOTICE add LICENSE NOTICE May 17 2015 README md update README May 26 2015 cleanup_model lua first commit May 16 2015 convert_data lua update training script May 17 2015 train lua fix ugly chroma scaling May 22 2015 train sh fix typo 4 May 21 2015 waifu2x lua add resume option May 26 2015 web lua fix ugly chroma scaling May 22 2015 README md waifu2x Image Super-Resolution anime fan-art using Deep Convolutional Neural Networks Demo-Application found http waifu2x udp jp Summary Click see slide show References waifu2x inspired SRCNN 1 2D character picture HatsuneMiku licensed CC BY-NC piapro 2 1 Chao Dong Chen Change Loy Kaiming Xiaoou Tang Image Super-Resolution Using Deep Convolutional Networks http arxiv org abs 1501 00092 2 Creators http piapro net en_for_creators html Public AMI AMI name waifu2x server AMI ID ami-75f01931 Region N California Instance g2 2xlarge require GPU OS Ubuntu 14 04 User ubuntu Dependencies Hardware NVIDIA GPU Compute Capability 3 0 later Platform Torch7 NVIDIA CUDA NVIDIA cuDNN Packages luarocks cutorch cunn cudnn graphicsmagick turbo md5 uuid NOTE Turbo 1 1 3 bug file uploading Please install master branch github Installation Setting Command Line Tool Environment Ubuntu 14 04 Install Torch7 sudo apt-get install curl curl -s https raw githubusercontent com torch ezinstall master install-all sudo bash see Torch easy install Install CUDA cuDNN Google Search keyword install cuda ubuntu install cudnn ubuntu Install packages sudo luarocks install cutorch sudo luarocks install cunn sudo luarocks install cudnn sudo apt-get install graphicsmagick libgraphicsmagick-dev sudo luarocks install graphicsmagick Test waifu2x command line tool th waifu2x lua Setting Web Application Environment needed Install luajit 2 0 4 curl -O http luajit org download LuaJIT-2 0 4 tar gz tar -xzvf LuaJIT-2 0 4 tar gz cd LuaJIT-2 0 4 make sudo make install Install packages Install luarocks packages sudo luarocks install md5 sudo luarocks install uuid Install turbo git clone https github com kernelsauce turbo git cd turbo sudo luarocks make rockspecs turbo-dev-1 rockspec Web Application Please edit first line web lua local ROOT ' path waifu2x dir' Run th web lua View http localhost 8812 Command line tools Noise Reduction th waifu2x lua -m noise -noise_level 1 -i input_image png -o output_image png th waifu2x lua -m noise -noise_level 2 -i input_image png -o output_image png 2x Upscaling th waifu2x lua -m scale -i input_image png -o output_image png Noise Reduction 2x Upscaling th waifu2x lua -m noise_scale -noise_level 1 -i input_image png -o output_image png th waifu2x lua -m noise_scale -noise_level 2 -i input_image png -o output_image png See also images gen sh Video Encoding avconv ffmpeg Ubuntu 14 04 Extracting images audio video range 00 09 00 00 12 00 mkdir frames avconv -i data raw avi -ss 00 09 00 -t 00 03 00 -r 24 -f image2 frames 06d png avconv -i data raw avi -ss 00 09 00 -t 00 03 00 audio mp3 Generating image list find frames -name png sort data frame txt waifu2x example noise reduction mkdir new_frames th waifu2x lua -m noise -noise_level 1 -resume 1 -l data frame txt -o new_frames d png Generating video waifu2xed images audio avconv -f image2 -r 24 -i new_frames d png -i audio mp3 -r 24 -vcodec libx264 -crf 16 video mp4 Training Model Data Preparation Genrating file list find path image dir -name png data image_list txt use PNG case waifu2x trained 3000 high-resolution-beautiful-PNG images Converting training data th convert_data lua Training Noise Reduction level1 model th train lua -method noise -noise_level 1 -test images miku_noisy png th cleanup_model lua -model models noise1_model t7 -oformat ascii check performance model models noise1_best png Training Noise Reduction level2 model th train lua -method noise -noise_level 2 -test images miku_noisy png th cleanup_model lua -model models noise2_model t7 -oformat ascii check performance model models noise2_best png Training 2x UpScaling model th train lua -method scale -scale 2 -test images miku_small png th cleanup_model lua -model models scale2 0x_model t7 -oformat ascii check performance model models scale2 0x_best png Status API Training Shop Blog 2015 GitHub Inc Terms Privacy Security Contact Something went wrong request Please try"),
('Obtaining a Thorough CS Background Online', "Atomic Spin Services Credentials Portfolio Approach Culture Blog Contact We're Hiring Atomic Spin Atomic Object blog everything find fascinating Close Ben Nash developer Atomic Object's Detroit office collaborate customers teammates create web mobile applications LinkedIn Posted Growing Makers Author May 15 2015 Ben Nash 25 Comments Obtaining Thorough CS Background Online d like show way obtain computer science background doesn involve enrolling university program Maybe ve completed introductory Java course d like pursue software development position maybe already formal CS training d like fill couple knowledge gaps utilizing online learning resources obtain background without incurring costs traditional university approach started core requirements typical undergraduate CS program replaced online counterparts different learning providers Types Online Courses Online courses generally take one three styles Interactive Deadlines courses start end specific dates assignment deadline must meet receive credit interactive courses submit assignments exams online course automatically tracks performance progress video lectures go Interactive self-paced Interactive without deadlines start courses time complete pace want Courseware non-interactive collections course material work independently pace still contain well-organized video lectures won get feedback work overall progress Instead ll work problem sets compare work posted solutions courseware-style material ve included OpenCourseWare Scholar courses MIT specifically designed online learning three styles preference interactive courses deadlines Since already access much information topics elsewhere online find interaction assignment feedback forum discussion etc aspect creates special learning experience Additionally fixed-duration deadline-based approach gives accountability need push finish course ve gotten weeks Curriculum Total effort hours 50-80 80-120 120 ve divided curriculum three sections Math Core CS Advanced CS general finish one section moving onto next Intro CS courses exceptions though math prerequisites Many topics multiple offerings often different workloads ve categorized workload offering help distinguish example found four different single variable calculus offerings two prior calculus backgrounds two introductory Math math listed important learn discrete math deeply understand algorithms later Single variable calculus prerequisite course Linear algebra used graphics machine learning cryptography since immediately essential understanding core concepts feel free skip Multivariable calculus probability required typical CS curriculum feel free skip re math-averse Topic Offering Institution Platform Single Variable Calculus Calculus One Calculus Two Sequences Series Ohio State Coursera Calculus 1A Differentiation Calculus 1B Integration Calculus 1C Coordinate Systems Infinite Series MIT edX Calculus Single Variable UPenn Coursera Single Variable Calculus MIT OpenCourseWare Discrete Math Mathematics Computer Science MIT OpenCourseWare Linear Algebra Coding Matrix Linear Algebra Computer Science Applications Brown Coursera Linear Algebra Foundations Frontiers Texas edX Linear Algebra MIT OpenCourseWare Multivariable Calculus Massively Multivariable Open Online Calculus Course Ohio State Coursera Multivariable Calculus MIT OpenCourseWare Probability Probability UPenn Coursera Introduction Probability Science Uncertainty MIT edX Core Computer Science core topics CS Start intro class appropriate continue one algorithms sequences strong background algorithms essential able write high-quality software well surviving technical interviews Computer architecture CS theory also crucial topics taken every CS student fill understanding low high levels Nand Tetris brilliant offering Hebrew University Jerusalem guides building layer simplified computer system scratch m currently taking two developers Detroit although programming experience needed Topic Offering Institution Platform Introduction CS Nand Tetris HUJI Coursera Introduction Computer Science Harvard edX Introduction Computer Science Programming Using Python MIT edX Algorithms Algorithms Part Part II Princeton Coursera Algorithms Design Analysis Part 1 Part 2 Stanford Coursera Computer Architecture Hardware Software Interface Washington Coursera Theory Automata Stanford Coursera Advanced Computer Science completing core topics necessary background study advanced topics student master pursue whatever interests ve tried arrange classes low toward hardware high toward abstract level two personal recommendations list Cryptography fun challenge helped look security general differently taught Dan Boneh authoritative figure crypto field also excellent instructor Functional Programming Principles Scala helped write better code day-to-day basis combining general functional programming theory actual knowledge Scala language taught designer Scala Martin Odersky Topic Offering Institution Provider Computer Architecture Computer Architecture Princeton Coursera Operating Systems Introduction Operating Systems University Buffalo Independent Databases Databases Stanford Stanford Compilers Compilers Stanford Coursera Networks Computer Networks Washington Coursera Introduction Computer Networking Stanford Stanford Parallel Computing Heterogeneous Parallel Programming Illinois Coursera Cryptography Cryptography II Stanford Coursera Computer Graphics Foundations Computer Graphics UC Berkeley edX Artificial Intelligence Artificial Intelligence UC Berkeley edX Functional Programming Functional Programming Principles Scala EPFL Coursera Reactive Programming Principles Reactive Programming EPFL Coursera Machine Learning Scalable Machine Learning UC Berkeley edX Machine Learning Stanford Coursera Programming Languages Programming Languages Washington Coursera Natural Language Processing Natural Language Processing Columbia Coursera Natural Language Processing Stanford Coursera Software Engineering Startup Engineering Stanford Coursera software developer CS background m excited courses like continue pop Coursera sites look forward jumping one every often background d love hear experiences learning online Share article HackernewsTwitterFacebookGoogleplusLinkedin Posted May 15 2015 Ben Nash Growing Makers 25 Comments incze says May 15 2015 saw couple good courses data processing john hopkins coursera https www coursera org specialization jhudatascience 1 courses mit edx would mention udacity loads cs related courses java code geaks launched online courses many available free Reply Ben Nash says May 16 2015 Thanks recommendations Reply Leo says May 15 2015 database anything Reply Ben Nash says May 16 2015 Hi Leo Since asked added Stanford database course actually collection mini-courses hadn made cut earlier lacked programming component find critical aspect learning CS Many undergraduate database courses involve implementing different layers RDBMS Reply Muhammad Taqi Hassan says May 15 2015 Udacity another source getting practical programming knowldge Reply Ben Nash says May 16 2015 Thanks tip think Udacity would especially useful looking gentler introduction programming drill specific technology Reply Israel Vicars says May 15 2015 someone completed introductory Java course Detroit Grand Circus visited Atomic Object Detroit office thanks much putting together Reply Ben Nash says May 16 2015 re welcome Israel Talking guys next steps take got lot stirring head eventually inspired post Let know end getting material Reply Mathias says May 15 2015 take bunch online courses love coursera Udacity edx self paced others even started ones mention get weeks full time job programming assignments take hours complete probability one great UPenn many assignments could get 4 weeks videos long 20 week good ones timed get week get discouraged fall behind guess best way keep taking become natural Reply Ben Nash says May 16 2015 feel ve dropped many courses realized wasn going keep workload thing helped sharing classes m interested friends coworkers m currently taking Nand Tetris two coworkers discussing different aspects class progress together really helped stay motivated Reply Mike Graf says May 15 2015 get free Mongodb training http university mongodb com d recommend taking 101X 102 202 streams well CPSC classes khan academy https www khanacademy org computing computer-programming finally http codecombat com lot fun Reply Ben Nash says May 16 2015 Thanks recommendations hadn seen Code Combat m fan creative interactive learning experiences like Reply Matthew Meyers says May 15 2015 ve going UC Berkeley CS61A amazing http cs61a org highly recommend anyone studying CS Reply Ben Nash says May 16 2015 Hey Matthew course looks like fantastic addition Intro CS section fully accessible public looked like Berkeley students could actually submit programming assignments Reply Matthew Meyers says May 16 2015 Yeah unfortunately post answers homeworks tests re kind projects definitely requires bit dedication self assessment ve found helpful Reply Peter says May 16 2015 overlooked Udacity Khan also offers awesome courses currently use 5 following -Coursera -Udacity -EdX -Khan Academy -Mitx Reply Ben Nash says May 16 2015 Hi Peter thanks pointing sites see Udacity Khan Acadamy great resources fall back supplement ones ve listed especially introductory programming math Reply name says May 16 2015 opinion curriculum also cover optimal order taking courses compilers would go automata algorithms discrete math person quite poor CS background find difficult choose course optimal Sometimes get greedy take course anyway knows available sometimes drop halfway really get much d add computer networks databases courses collection Reply Ben Nash says May 16 2015 Thanks bringing course ordering mentioned briefly three sections Math Core CS Advanced CS finish one moving onto next Like said algorithms requires discrete math also intro CS Discrete math requires single var calculus best finish core classes moving onto advanced ones many advanced courses require Theory Architecture Reply Mayank says May 16 2015 Highly recommend Nand2Tetris Programming Languages Course Reply Ben Nash says May 16 2015 ve heard great things Programming Languages course Good luck finishing Nand2Tetris Reply Moe says May 19 2015 Hey man helpful Thank much Reply Ben Nash says May 19 2015 re welcome Moe Reply Chris says May 27 2015 Thank went liberal arts undergrad business masters work years ve wanted get formalized education comp-sci self-learning ve done past ten-fifteen years fill blanks may desire go back get another undergrad masters fits perfectly Thank much Reply Ben Nash says May 27 2015 re welcome Chris m school full-time job prefer take one maybe two classes per year often give time need actually stay refreshed learn material well different always-overloaded scraping-by experience sometimes undergrad Reply Join conversation Cancel reply email address published Required fields marked Name Email Website Comment may use HTML tags attributes href title abbr title acronym title b blockquote cite cite code del datetime em q cite strike strong Don't subscribe Replies comments Notify followup comments via e-mail also subscribe without commenting We're hiring developers designers learn x Atomic talk software also make clients large small kinds industries Check portfolio Atomic software design development consultancy 2015 Atomic Object LLC Explore Careers Resources Atomic Blog Offices Grand Rapids Detroit Ann Arbor Details Fact Sheet Contact 1 616 776 6020"),
('A Scalable High-Bandwidth Architecture for Lossless Compression on FPGAs', 'research Connections Careers us Microsoft Translator Downloads Events Groups News People Projects Publications Videos Scalable High-Bandwidth Architecture Lossless Compression FPGAsJeremy Fowers Joo-Young Kim Doug Burger Scott Hauck4 May 2015AbstractData compression techniques subject intense study past several decades due exponential increases quantity data stored transmitted computer systems Compression algorithms traditionally forced make tradeoffs throughput compression quality ratio original file size compressed file size FPGAs represent compelling substrate streaming applications data compression thanks capacity deep pipelines custom caching solutions Unfortunately data hazards compression algorithms LZ77 inhibit creation deep pipelines without sacrificing amount compression quality work detail scalable fully pipelined FPGA accelerator performs LZ77 compression static Huffman encoding rates 5 6 GB Furthermore explore tradeoffs compression quality FPGA area allow throughput fraction logic utilization exchange moderate reductions compression quality Compared recent FPGA compression studies emphasis scalability gives accelerator 3 0x advantage resource utilization equivalent throughput compression ratio DetailsPublication typeInproceedingsPublished inThe 23rd IEEE International Symposium Field-Programmable Custom Computing MachinesPublisherIEEE Institute Electrical Electronics Engineers IEEE Personal use material permitted Permission IEEE must obtained users including reprinting republishing material advertising promotional purposes creating new collective works resale redistribution servers lists reuse copyrighted components work works Previous versionsJoo-Young Kim Scott Hauck Doug Burger Scalable Multi-engine Xpress9 Compressor Asynchronous Data Transfer IEEE 22nd International Symposium Field-Programmable Custom Computing Machines 11 May 2014 Publication filesfccm2015_cr2 pdfbibtex bibBy authorsHow Implement Effective Prediction Forwarding Fusable Dynamic Multicore ArchitecturesSoftware Infrastructure Tools TRIPS PrototypeTRIPS Intermediate Language TIL ManualPeople also readA Scalable Multi-engine Xpress9 Compressor Asynchronous Data TransferMy OS ought know better In-app behavioural analytics OS serviceTardigrade Leveraging Lightweight Virtual Machines Easily Efficiently Construct Fault-Tolerant Services Related peopleDoug BurgerJeremy FowersJoo-Young Kim Related projectsCompression Accelerators Related groupsComputer Architecture Group Related labsMicrosoft Research Redmond Follow us 2015 MicrosoftContact usPrivacy cookiesTerms useTrademarksCode conductFeedbackMobile Publications Scalable High-Bandwidth Architecture Lossless Compression FPGAs'),
('Fifth Summer School on Formal Techniques', "Fifth Summer School Formal Techniques May 17 - May 22 2015 Menlo College Atherton CA Techniques based formal logic model checking satisfiability static analysis automated theorem proving finding broad range applications modeling analysis verification synthesis school fifth series focus principles practice formal techniques strong emphasis hands-on use development technology primarily targets graduate students young researchers interested developing using formal techniques research prior background formal methods helpful required Participants school seriously fun time experimenting tools techniques presented lectures laboratory sessions Lecturers Natarajan Shankar SRI CSL Speaking Logic PVS PVS Course Speaking Logic Abstract Formal logic become lingua franca computing used specifying digital systems annotating programs assertions defining semantics programming languages proving refuting claims software hardware systems Familiarity language methods logic foundation research formal aspects computing course covers basics logic focusing use logic medium formalization proof Arie Gurfinkel SEI CMU USA Building Program Verifiers Compilers Theorem Provers Materials Abstract Developing automated program verifier extremely difficult task nature verifier shares many complexities optimizing compiler efficient automated theorem prover compiler perspective issues include idiomatic syntax parsing intermediate representation static analysis equivalence preserving program transformations theorem proving perspective issues include verification logic verification condition generation synthesizes sufficient inductive invariants deciding satisfiability interpolation consequence generation Luckily cores compilers theorem provers well understood well-defined readily available lectures examine build state-of-the-art program verifier re-using much existing compilers SMT-solvers lectures based SeaHorn verification framework developed CMU Cathy Meadows NRL USA Cryptographic Protocol Analysis Modulo Equational Theories Maude-NRL Protocol Analyzer Slides 1 Slides 2 Abstract course give overview Maude-NPA Protocol Analyzer Maude-NPA tool symbolic analysis cryptographic protocols searches ways active attacker could subvert protocols' goals authentication secrecy Maude-NPA designed take account algebraic properties crypto systems involved order give complete representation protocol attacker's capabilities give presentation theory principles Maude-NPA operates also give students opportunity gain hands-on experience tool Bart Jacobs KU Leuven Belgium VeriFast Modular verification sequential concurrent C Java programs using separation logic Reading materials Abstract VeriFast tool takes input C Java program module annotated preconditions postconditions loop invariants data structure descriptions proof hints written variant separation logic without user interaction usually matter seconds returns either 0 errors found failed symbolic execution path tool reports 0 errors found modules program means execution program accesses unallocated memory performs data race violates user-specified assertions tool operates symbolically executing function method using separation logic formula represent state memory using SMT solver decide proof obligations data values lectures learn use VeriFast modularly verify sequential concurrent C Java programs also learn VeriFast operates internally reports 0 errors found program indeed satisfy specified properties Kim Guldstrand Larsen Aalborg University Denmark Timed Automata Stochastic Hybrid Games -- Model Checking Performance Evaluation Synthesis Lecture material Abstract Timed automata games priced timed automata energy automata emerged useful formalisms modeling real-time energy-aware systems found several embedded cyber-physical systems last 20 years real-time model checker UPPAAL developed allowing efficient verification hard timing constraints timed automata Moreover number significant branches exists e g UPPAAL CORA providing efficient support optimization UPPAAL TIGA allowing automatic synthesis strategies given safety liveness objectives recently branch UPPAAL SMC highly scalable new engine released supporting distributed statistical model checking synthesis stochastic hybrid automata games lecture review various branches UPPAAL concerted applications range real-time cyber-physical examples including schedulability performance evaluation mixed criticality systems modeling analysis biological systems energy-aware wireless sensor networks smart grids energy aware buildings battery scheduling Also shall see branches UPPAAL may benefit new scalable engine UPPAAL SMC order improve performance well scope terms models supporting includes application UPPAAL SMC counter example generation refinement checking controller synthesis optimization lab sessions based exercises requiring hands-on experience UPPAAL UPPAAL TIGA UPPAAL SMC down-loadable www uppaal org John Harrison Intel Portland USA HOL Light --- foundations applications HOL Light Abstract HOL Light theorem prover real-world theorem proving program unusually simple logical kernel used applications formal verification especially floating-point algorithms pure mathematics including Flyspeck project's formal proof Kepler conjecture describe system built low-level foundations applied various areas lab exercises try show perform basic formal proofs conceptually simple add new correct construction derived rules inference Invited Speakers Temesghen Kahsai Trusting outsourced components flight critical software Slides Abstract common practice development complex component-based flight critical software systems outsource implementation components external contractors assemble commercial off-the-shelf COTS systems components delivered black-box systems although may first prototyped in-house system integrator talk illustrate work progress approach formally analyze flight critical software assembled COTS outsourced implementation approach based contract-based compositional verification consists two stages pre- post-delivery verification stages first stage verification focuses generating contracts widely used method organizing integration component-based systems outsourced component Contracts specify precise information needed reason component's interaction parts system well system-level properties second stage outsourced components COTS must checked conformance pre-specified formal contract Dana Scott -Calculus Scott Bio -Calculus Timeline -Calculus Enumeration Operators Types -Calculus Enumeration Operators Types Bibliography Stochastic -Calculus Extended Abstract Stochastic -Calculus Stochastic -Calculus Abstract Mariana Raykova Secure Two-Party Computation Sublinear Amortized Time Abstract Traditional approaches generic secure computation begin representing function f computed circuit f depends input bits implies protocol complexity least linear input size fact linear running time inherent non-trivial functions since party must touch every bit input lest information party input leaked seems rule many applications secure computation e g database search scenarios inputs huge Adapting extending idea Ostrovsky Shoup present approach secure two-party computation yields protocols running sublinear time amortized sense functions computed sublinear time random-access machine RAM Moreover party required maintain state essentially linear input size protocol applies generic secure two-party computation top oblivious RAM ORAM present optimized version protocol using Yao garbled-circuit approach recent ORAM construction Shi et al describe implementation protocol evaluate performance task obliviously searching database 1 million entries cost basic steps solution slower Yao small inputs However implementation outperforms Yao already DB sizes 218 entries quite small DB today standards Schedule Information previous Summer Schools Formal Techniques found SSFT14 SSFT13 SSFT12 SSFT11 expect provide support travel accommodation limited number students US universities welcome applications non-US students well non-students Non-US students cover travel charged around 550 meals lodging Applications submitted using form Applicants encouraged submit applications April 30 2015 since limited number spaces available Non-US applicants requiring US visas requested apply early Registration closed Questions aspect school posted"),
('A fun computer science related puzzle', "Skip main content Skip footer site map White House President Barack Obama Contact Us Get Email Updates Main Menu Home Briefing RoomFrom News RoomLatest News Share-Worthy Photos Video Gallery Live Events Music Arts Performances Press OfficeYour Weekly Address Speeches Remarks Press Briefings Statements Releases White House Schedule Presidential Actions Legislation Nominations Appointments Disclosures IssuesPopular Topics2015 State Union 2014 Year Review Immigration Action Raise Wage See Top IssuesEconomy Education Foreign Policy Health Care Immigration Climate Change Energy Environment Civil Rights MoreDefense Disabilities Ethics Equal Pay Homeland Security Refinancing Rural Service MoreSeniors Social Security Taxes Technology Trade Urban Economic Mobility Veterans Violence Prevention Women AdministrationPeoplePresident Barack Obama Vice President Joe Biden First Lady Michelle Obama Dr Jill Biden Cabinet Senior White House Leadership Executive Office President Advisory Boards Executive OfficesOffice Management Budget Office U Trade Representative Office Science Technology Policy Council Economic Advisers Council Environmental Quality See InitiativesLet's Move Joining Forces 1 2 Many Startup America Special EventsState Union Inauguration Medal Freedom ParticipateDigitalFollow Us Social Media Geeks Hangouts Mobile Apps Developer Tools Tools Use Join UsTours Events Jobs Administration White House Internships White House Fellows Presidential Innovation Fellows Speak OutWe People Petitions Contact White House Citizens Medal Champions Change 1600 PennInside White HouseInteractive Tour West Wing Tour Video Series D cor Art Holidays See History GroundsPresidents First Ladies Vice President's Residence Office Eisenhower Executive Office Building Camp David Air Force One GovernmentThe Executive Branch Legislative Branch Judicial Branch Constitution Federal Agencies Commissions Elections Voting State Local Government Resources Search Home Administration Office Science Technology Policy OSTP Pressroom OSTP Blog Divisions Initiatives R D Budgets Resource Library NSTC PCAST Contact Subscribe Hello World Posted Ed Felten May 17 2015 04 52 PM EDT Though wasn true President Obama became first president write line code back December traditional first program new coder writes one prints message Hello world next step people change program say something else like Hello Ed something else Coding exciting decide supposed happen computer limit skill imagination coding almost forty years still get cool simple ideas combined cleverly lead many powerful applications started coding around 1977 Hello world tradition started days hardly kids access computers one lucky Today computers skills use available many kids Administration making priority expand access computer science education millions K-12 students across country computer science slinging code Computer science help us study complex social topics like cooperation turn helps us understand help people cooperate easily smoothly without even needing place mean Well like colleague fellow Deputy Chief Technology Officer DJ Patil think great way learn new topic brainteaser mine theme cooperation Alice Bob playing game teammates win lose together game starts talk agree strategy game starts Alice Bob go separate soundproof rooms cannot communicate way flip coin note whether came Heads Tails funny business allowed honest coin flip tell truth later came Alice writes guess result Bob coin flip Bob likewise writes guess Alice flip either written-down guesses turns correct Alice Bob win team written-down guesses wrong lose puzzle think strategy Alice Bob use guaranteed win every time get started example strategy doesn work Alice Bob decide advance guess Heads isn guaranteed-winning strategy quarter time flip Tails guesses wrong ll win 75 time isn enough need win every time might seem first like puzzle impossible give solution ll reveal future post meantime watch Twitter stream edfelten44 hints Ed Felten Deputy Chief Technology Officer White House Office Science Technology Policy Feedback Link White House Blogs White House Blog Middle Class Task Force Council Economic Advisers Council Environmental Quality Council Women Girls Office Intergovernmental Affairs Office Management Budget Office Public Engagement Office Science Tech Policy Office Urban Affairs Open Government Faith Neighborhood Partnerships Social Innovation Civic Participation US Trade Representative Office National Drug Control Policy categories AIDS Policy Blueprint America Built Last Budget Civil Rights Defense Disabilities Economy Education Energy Environment Equal Pay Ethics Faith Based Fiscal Responsibility Foreign Policy Grab Bag Health Care Homeland Security Immigration Innovation Fellows Inside White House Middle Class Security Open Government Poverty Rural Seniors Social Security Service Social Innovation State Union Taxes Technology Urban Policy Veterans Violence Prevention White House Internships Women Working Families Additional Issues archives May 2015 April 2015 March 2015 February 2015 January 2015 December 2014 November 2014 October 2014 September 2014 August 2014 July 2014 June 2014 May 2014 April 2014 March 2014 February 2014 January 2014 December 2013 November 2013 October 2013 September 2013 August 2013 July 2013 June 2013"),
('Artificial Neural Networks, to the point (+ code in Lua)', 'Skip content Maker Maker Approach Artificial Intelligence Primary Menu Home GitHub RSS Contact Artificial Neural Networks point May 17 2015May 17 2015 atrilla Artificial Neural Networks powerful models Artificial Intelligence Machine Learning suitable many scenarios elementary working form direct simple However devil details models particularly need much empirical expertise get tuned adequately succeed solving problems hand post intends unravel adaptation tricks plain words concisely pragmatic style practitioner focused value-added aspects business need clear picture overall behaviour neural nets keep reading Note neural network plausibly renown universal learning system Without loss generality text makes decisions regarding model shape topology training method like design choices though easily tweaked implementation may suitable solve kinds problems accomplished first breaking complexity depicting procedure tackle problems systematically order quickly detect model flaws fix soon possible Let say gist process achieve lean adaptation procedure neural networks Theory Operation Artificial Neural Networks ANNs interesting models Artificial Intelligence Machine Learning powerful enough succeed solving many different problems Historical evidence importance found leading technical books dedicate many pages cover comprehensibly Overall ANNs general-purpose universal learners driven data conform connectionist learning approach based interconnected network simple units simple units aka neurons compute nonlinear function weighted sum inputs see clearly equations Neural networks expressive enough fit dataset hand yet flexible enough generalise performance new unseen data true though neural networks fraught experimental details experience makes difference successful model skewed one following sections cover essentials modus operandi without getting bogged small details Framework say 9 10 people use neural networks apply multilayer perceptron MLP MLP basically feed-forward network 3 layers least input layer output layer hidden layer see Figure 1 Thus MLP structural loops information always flows left input right output lack inherent feedback saves lot headaches analysis totally straightforward given output network always function input depend former state model previous input Figure 1 Framework multilayer perceptron behaviour defined weight connections given values parameters e thetas Framework multilayer perceptron Regarding topology MLP normally assumed densely-meshed one-to-many link model layers mathematically represented two matrices parameters named thetas case certain connection little relevance respect observable training data network automatically pay little attention contribution assign low weight close zero Prediction evaluation output neural network e prediction given input vector data matter matrix multiplication end following variables described convenience dimension input layer dimension hidden layer dimension output layer dimension corpus number examples Given variables parameters network e thetas matrices defined follows following sections describe ordered steps need followed order evaluate network prediction Input Feature Expansion first step attain successful operation neural network add bias term input feature space mapped input layer feature expansion input space bias term increases learning effectiveness model adds degree freedom adaptation process Note directly represents activation values input layer Thus input layer linear input vector defined linear activation function Transit Hidden Layer activations outputs input layer determined values flow hidden layer weights defined Similarly dimensionality hidden layer expanded bias term increase learning effectiveness new function introduced generic activation function neuron generally non-linear see application yields output values hidden layer provides true learning power neural model Output Prediction Finally activation values output layer e network prediction calculated follows Activation Function activation function neuron non-linear function provides expressive power neural network Typically sigmoid function hyperbolic tangent function used recommended function smooth differentiable monotonically non-decreasing learning purposes Note range functions varies respectively Therefore output values neurons always bounded upper lower limits ranges entails considering scaling process broader range predicted values needed Training Training neural network essentially means fitting parameters set example data considering objective function aka cost function process also known supervised learning usually implemented iterative procedure Cost Function cost function somehow encodes objective goal attained network usually defined classification regression evaluation function However actual form cost function effectively error fitting function cost function quantifies amount error misfitting network displays respect set data Thus order achieve successfully working model cost function must minimised adequate set parameter values several solutions valid long cost function convex function e bowl-like shape well known example quadratic function trains neural network considering minimum squared error criterion whole dataset training examples Note term cost function represents target value network e ideal desired network output given input data value cost function expressed convex optimisation procedure e g gradient-based method must conducted order minimise value Note essentially least-squares regression One last remark made amount examples training procedure considers several instances per cost computation e approach called batch learning Batch learning slow cost computation accounts available training instances contrast usual consider one training instance time e order speed iterative learning process procedure called online learning Online learning steps faster compute single-instance approximation cost function makes little inaccurate around optimum However online learning rather convenient cases Gradient Descent Given convex shape cost function minimisation objective boils finding extremum function end may use analytic form derivative cost function nightmare numerical finite difference automatic differentiation Gradient descent first-order optimisation algorithm first starts arbitrarily chosen parameters computes derivative cost function respect model parameters updated moving distance determined called learning rate former initial point direction steepest descent e along negative gradient steps iterated loop stopping criterion met e g determined number epochs e single presentation patterns training example set reached Gradient descent effectively algorithm gradient ascent seeking minimum objective function instead maximum order reuse already developed code recall DRY Repeat principle tip number 11 Pragmatic Programmer m going take negative former cost function like order conduct gradient descent approach gradient ascent algorithm Note algorithm needs learning rate parameter sets step size used update neural network model parameters set small convergence needlessly slow whereas large update correction process may overshoot even diverge Parameter Initialisation initial weights thetas assigned training process critical respect success learning strategy determine starting point optimisation procedure depending value adjusted parameter values may end different places cost function multiple local minima parameter initialisation process based uniform distribution two small numbers take account amount input output units adjacent layers order ensure proper learning procedure weights parameters need randomly assigned order prevent symmetry topology network model would likely incur convergence problems Regularisation mean squared-error cost function described incorporate knowledge constraint characteristics parameters adjusted gradient descent optimisation strategy may develop generalisation problem space solutions large solutions may turn model unstable new unseen data Therefore need smooth performance model wide range input data Neural networks usually generalise well long weights kept small tip also concordance parameter initialisation Thus Tikhonov regularisation process aka ridge regression introduced means control complexity model favour increased general performance regularisation approach favours small weight values typical trade-off Machine Learning known bias-variance trade-off direct relationship complexity model nature data amount available training data adjust ability model learn less complex scenarios raises issue respect fitting data simple explain complex model said overfit data causing overall performance drop high variance model Similarly complex data tackled simple model model said underfit data also causing overall performance drop high bias model usual engineering compromise must reached adequate value Practical Issues success Artificial Intelligence Machine Learning applications plausibly conceived matter controlling several key variables following series good practices works literature identify bits pieces taken account designing successful model described follows Focus model generalisation keep separate self-validation set data used train model test estimate actual performance model Incorporate much knowledge possible Expertise key indicator success Data driven models magic information available greater performance model Feature Engineering utmost importance relates former point useful information extracted input data better performance expected Salient indicators keys success may lead selecting informative features mutual information chi-square change feature space used represent instance data Principal Component Analysis always standardise data exclude outliers Get data model good enough Related curse dimensionality principle good data lacking successful model obtained must coherent relation parameters model e complexity amount available data train Ensemble models integrate criteria Bearing mind optimum model structure known advance one reasonable approaches obtain fairly good guess apply different models different learning features problem combine weight outputs Related techniques also known boosting following sections delve topics practical strategies Target Values designing learning system suitable take account nature problem hand e g whether classification problem regression problem determine number output units case classification amount different classes target output binary vector Given instance output unit corresponds instance class set decision rule classification driven maximum output unit Figure 2 shows digital XOR gate TTL technology voltage thresholds taken account 2 inputs 2 outputs 2 categories true class false class Figure 2 Digital XOR gate TTL technology Digital XOR gate TTL technology case regression problem equal number dependent variables Figure 3 displays regression capacitor discharge function independent variable time dependent variable voltage Figure 3 Capacitor discharge function Capacitor discharge function Hidden Units number hidden units determines expressive power network thus complexity transfer function complex model complicated data structures learn Nevertheless argument cannot extended ad infinitum shortage training data respect amount parameters learnt may lead model overfit data aforementioned regularisation function used avoid situation Thus common skew toward suggesting slightly complex model strictly necessary regularisation compensate extra complexity necessary heuristic guidelines guess optimum number hidden units indicate amount somewhat related number input output units experimental issue though rule thumb Apply configuration works problem re done end Presently hype deep learning e like rebranding multilayer neural networks next big thing Machine Learning Artificial Intelligence However recently hard publish something scientific community neural networks fashion back neural nets seem fanciest technique ever existed problems seem solvable especially size network grows huge numbers era big data right Figure 4 Artificial Neural Network -- Artificial neural network class multilayer perceptron model -- -- Activation function assumed sigmoid -- Tikhonov regularisation set 1 ann -- PRE -- - size input layer number -- HID - size hidden layer number -- - size output layer number -- -- POST -- Returns instance ANN table function ann new HID local newann Lin Lhid HID Lout self __index self setmetatable newann self newann initw return newann end -- POST -- Initialises model thetas function ann initw local epsilonIN math sqrt 6 math sqrt self Lin self Lhid local epsilonOUT math sqrt 6 math sqrt self Lhid self Lout -- local function initmat din dout value math randomseed os time local mat 1 dout local aux j 1 din table insert aux math random - 0 5 0 5 value end table insert mat aux end return mat end -- self thetain initmat self Lin 1 self Lhid epsilonIN self thetaout initmat self Lhid 1 self Lout epsilonOUT end -- PRE -- input - feat 1 N vector table -- -- POST -- Returns output 1 K vector table function ann predict input local function matprod m1 m2 local result -- init 1 m1 local row j 1 m2 1 table insert row 0 end table insert result row end -- multiply 1 m1 j 1 m2 1 local prod 0 k 1 m1 1 prod prod m1 k m2 k j end result j prod end end return result end -- local function sigmoid x local y 1 1 math exp -x return y end -- input must column N 1 vector table -- step 1 local aIN 1 1 input table insert aIN input end -- step 2 local zHID matprod self thetain aIN local aHID 1 1 zHID table insert aHID sigmoid zHID 1 end -- step 3 local azOUT matprod self thetaout aHID 1 azOUT azOUT 1 sigmoid azOUT 1 end local flatOUT 1 azOUT table insert flatOUT azOUT 1 end return flatOUT end -- PRE -- feat - list example feature vectors table -- targ - list target value vectors table -- -- POST -- Fits neural network params given data -- Returns training error number function ann train feat targ require gradient_ascent local function saveThetas local thetas -- theta 1 self Lhid j 1 self Lin 1 table insert thetas self thetain j end end -- theta 1 self Lout j 1 self Lhid 1 table insert thetas self thetaout j end end return thetas end local function loadThetas thetas -- theta local index 1 1 self Lhid j 1 self Lin 1 self thetain j thetas index index index 1 end end -- theta 1 self Lout j 1 self Lhid 1 self thetaout j thetas index index index 1 end end end local function cost thetas local sqerr pr local J 0 loadThetas thetas m 1 feat pr self predict feat m sqerr 0 k 1 pr sqerr sqerr math pow targ m k - pr k 2 end J J sqerr end J J feat -- Regularisation local R 0 1 self thetain j 2 self thetain 1 R R math pow self thetain j 2 end end 1 self thetaout j 2 self thetaout 1 R R math pow self thetaout j 2 end end R R 0 01 self Lin self Lhid self Lhid self Lout return - J R end -- flatten thetas local flatTheta saveThetas gradient_ascent cost flatTheta 1 -- deflat theta restore model trerr cost flatTheta loadThetas flatTheta -- return training err return trerr end Neural networks inherently hard per se ve always Getting succeed wide range problems challenging task indeed However basic form operation simple fact simple plain least squares regression sophisticated fitting function complete code listing shown Figure 4 Actually exists myriad techniques deal many details example renown backpropagation learning algorithm without loss generality left scope aimed post big picture neural nets ll reading future post due time Stay tuned Posted Optimisation Post navigation Gradient-based methods 7 thoughts Artificial Neural Networks point Michael says May 19 2015 06 01 Great article next post please explain recurrent neural networks work including LSTM Also programming language re using Reply atrilla says May 19 2015 21 46 Thanks Michael growing interest NN fact ve got copy venerable Hertz Krogh Palmer book delve details insightful physics perspective m thinking implementing C intensive computing purposes order effectively tackle tough learning issues deep learning facing LSTM scene sooner later regarding programming language use called Lua lightweight powerful well designed language surprising Let point former post Reply atrilla says May 21 2015 21 41 piece published today Demistifying LSTM Neural Networks Reply Michael says May 21 2015 22 20 Thanks actually saw another post RNNs today http karpathy github io 2015 05 21 rnn-effectiveness Reply atrilla says May 21 2015 22 39 Awesome Pushed back toread list Thanks Reply Michael says May 21 2015 22 31 Regarding languages m currently using Python Numpy advantage going Lua especially say still use C performance Reply atrilla says May 21 2015 22 56 use Python Numpy bundle extensively well especially work fantastic Lua like means push learn new coding techniques deliberate practice home Performance close C attainable just-in-time compiler LuaJIT Lua said easier Python port embedded platforms low memory footprint present Internet Things hype might advantage perspective still keeping C sight romantic guess got inspired work developed Facebook AI Research lab FAIR Torch project stuff related deep learning Lots things learn Reply Leave Reply Cancel reply email address published Required fields marked Name Email Website Comment may use HTML tags attributes href title abbr title acronym title b blockquote cite cite code del datetime em q cite strike strong Search Recent Posts Artificial Neural Networks point Gradient-based methods closer look problem state encoding genetic algorithms electronics genetic algorithms simulated annealing algorithm Follow ai_maker Facebook AI-Maker LinkedIn SubscribeLeave Blank Change email Categories Electronics Optimisation Search Uncategorized Archives May 2015 April 2015 March 2015 February 2015 January 2015 December 2014 Proudly powered WordPress Theme Plainly Chris Rudzki'),
("4 months ago I created a tiny text-extraction algorithm and r/compsci seemed to like it :) After spending the better part of the last 4 months testing and thinking about extraction algo's for a paper (never again), I think I've landed the big one. Well, it's small actually. 10 lines of code.", "rodri cios GitHub Posts CV Solving Data Extraction Problem 10 lines Posted 5-16-2015 Rodrigo Palacios Follow twitter github Libextract - extract data web Python implementation work Update May 22 2015 Thank visiting second time helped reach front page r programming fun experience Please feel free share links side grand scheme things extracting data web small step much larger objective micro data extraction appears us problem real definitive solution sort dirty job - often task relegated scraping web think many times you've ran type web-scraping tutorial download HTML parse HTML open dev tools flip back-and-forth browser console debug XPath expressions etc hand data extraction via web-scraping seemlessly sometimes elegantly found way larger projects Apache Nutch includes Tika Scrapy hybrid crawl-n-scrape architecture Needless say they're designed give - developer data scientist hacker one time spare - lot control fault least provide XPath tutorials 1 2 post present informal solution data extraction problem It's short it's sweet leaves much room improvement Enjoy algorithm not-so-plain words Given tree return list subtrees - sorted number children relative root node subtree Python requests import get collections import Counter lxml import html reddit_request get 'http www reddit com ' wiki_request get 'http en wikipedia org wiki Information_extraction' parsed_doc html fromstring reddit_request content SQL-like terms select parents body parent_elements parsed_doc xpath ' body ' parents_with_children_counts parent parent_elements children_counts Counter child tag child parent iterchildren parents_with_children_counts append parent children_counts line one could say wraps data-extraction algorithm maximization optimization algorithm parents_with_children_counts sort x 1 most_common 1 0 1 gets frequency value key lambda x x 1 most_common 1 0 1 reverse True Problem According wikipedia Data extraction act process retrieving data usually unstructured poorly structured data sources Typical unstructured data sources include web pages problem I'm attempting tackle extracting data websites sort data extracting Websites structured HTML sure styling also partially responsible visual structure you'll see later don't take style sheets account It's structured HTML you'll find unstructured data continue I'll give bit background heck I'm even tackling problem 4 months ago debuted eatiht text-extracting library predecessor algorithm reddit say positive things one it's landed opportunity coauthor paper Tim Weninger Tim introduced structured tabular data extraction problem illustrated scenario trying extract table 's table-like structures website like reddit Here's says first candidate list subreddits across top page second list reddit posts link time username bunch things front page reddit nothing stylized set multi-attribute lists tables wild problem appears Let's get better picture Tim saying Websites like series tables What's highlighted red meant structured tabular data Since we're dealing HTML let's look underlying markup subreddits - there's lot li's top posts - there's lot div's Looking pictures one thing clear although table 's epitome tabular data table 's HTML despite lack tables also clear tabular data front page Reddit Deconstruction Clearly define problem Data context HTML collections HTML elements Visually data presented rows columns usually Structurally data presented collection parent element children elements guys gals may thinking definition ambiguous We're practically talking every element HTML tree Yup throw phrase frequently occuring definition Structurally data presented collection parent element frequently occurring children elements reiterate clearly hopefully We're looking parents elements tag We're looking repetitive elements rather counts repetitive elements case reddit com we'd like create solution retrieve least two collections ul containing li 's parent div containing inner div 's said let's take prototyping weapon choice Python get Solution First let's get HTML Python-friendly object requests import get reddit_request get 'http www reddit com ' reddit_request content 50 ' doctype html html xmlns http www w3 org 1999' let's process HTML string library lxml take string create DOM-traversable XPath-queryable object lxml import html parsed_doc html fromstring reddit_request content start things like querying different types nodes HTML elements we're looking specific type node - type mean tag We're looking parents elements tag SQL-like terms select parents body parent_elements parsed_doc xpath ' body ' parent_elements 5 Element body 0x5a69958 Element div 0x5a699a8 Element div 0x5c37a98 Element div 0x5c37ae8 Element div 0x5c379a8 we're looking repetitive elements rather counts repetitive elements collections import Counter parents_with_children_counts parent parent_elements children_counts Counter child tag child parent iterchildren parents_with_children_counts append parent children_counts parents_with_children_counts 5 Element body 0x5a69958 Counter 'script' 4 'div' 4 'a' 1 'p' 1 Element div 0x5a699a8 Counter 'div' 3 'a' 1 Element div 0x5c37a98 Counter 'div' 1 Element div 0x5c37ae8 Counter 'div' 3 'a' 1 Element div 0x5c379a8 Counter 'span' 1 Finally let's sort list parent-child counter pairs frequency common element child counter line one could say wraps data-extraction algorithm maximization optimization algorithm parents_with_children_counts sort x 1 most_common 1 0 1 gets frequency value key lambda x x 1 most_common 1 0 1 reverse True parents_with_children_counts 5 Element div 0x5f4ae08 Counter 'a' 51 Element div 0x5f64048 Counter 'div' 51 Element ul 0x5f5f048 Counter 'li' 48 Element div 0x5f613b8 Counter 'div' 23 Element ul 0x5f60048 Counter 'li' 8 Results Let's print text content retrived extracted elements' children elem text_content elem parents_with_children_counts 0 0 iterchildren announcements Art AskReddit worldnews WritingPrompts edit subscriptions where's coming Here's It's SUBREDDITS button Let's print text content second third retrieved elements child parents_with_children_counts 1 0 print child text_content 1732273237324Dad Instincts share gifyoutube com submitted 4 hours ago redditfresher r funny2351 commentssharecancelloading 2342634273428Transparency important us today take another step forward self announcements submitted 4 hours ago weffey r announcements2424 commentssharecancelloading 3456345644565My heart belongs cat imgur com submitted 6 hours ago ShahzaibElahi1 r aww290 commentssharecancelloading 4441444154416My buddy camping near highway Haines Alaska curious fox took interest m imgur com submitted 6 hours ago iamkokonutz r pics212 commentssharecancelloading var cache expando_cache cache t3_35ufuc_cache lt iframe src quot www redditmedia com mediaembed 35ufuc quot id quot media-embed-35ufuc-1ds quot class quot media-embed quot width quot 560 quot height quot 560 quot border quot 0 quot frameBorder quot 0 quot scrolling quot quot allowfullscreen gt lt iframe gt child parents_with_children_counts 2 0 print child text_content gadgets -sports -gaming -pics -worldnews note results different image I'm slow writer Suffice say Tim's tabular data extracted algorithm extract forms data running algorithm wikipedia page top result Information extraction IE task automatically extracting structured information unstructured semi-structured machine-readable documents cases activity concerns processing human language texts means natural language processing NLP Recent activities multimedia document processing like automatic annotation content extraction images audio video could seen information extraction algorithm yielded div containing main article wiki page top result Final Thoughts far we've able extract came extract tabular data article text algorithm able exploit fact data exists depth DOM-wise - whether p 's make main article li 's list algorithm doesn't clean convert format extracted data another problem way less interesting Anyways I'm done working extraction problems Must thought There's lot research done area there's one important piece work mentioned rest Fact fiction content classification digital libraries 2001 - Aidan Finn Nicholas Kushmerik Barry Smyth 14 year old paper line sight first wrote algorithm around time Tim presented tabular-data-extraction problem 4 months ago Okay technically periphery Someone linked article comment reddit post Here's thing lexicon time limited couldn't even acknowledge respond Yacoby's question whether considered using simple maximisation algorithm responded eatiht maximization algorithm instead remember clearly describing algorithm point what's known argmax calculation whatever reason couldn't put 2 2 together Anyways logically would followed big moment Ohhhhh It's done text extraction problem viewed optimization problem must identify points j maximize number tag tokens j simultaneously maximizing number text tokens j text extracted j - pg 3 Fact fiction waited started gathering resources post read Yacoby's suggestion looked found paper ctrl-F'ed typed maxim moment like describe say repeating 14 year old work rediscovery work happens According uncle mine wavelet theory work rediscovery element history Anyways particular algorithm straight-up rework Fact fiction opinion previous eatiht algorithm worked rework Fact fiction I'd say rediscovered authors Fact fiction describing optimization algorithm extract text close describing general algorithm describe post yet pin name ideas anyone knows similar solution please let know comments onto realm startups Closed-source solutions There's fair bit options import io embed ly diffbot com solutions essentially run top extraction algorithms Import io probably one I'd recommend broke college students - service free It's user-soon-to-be-client's demands increase import io's profit model kicks Smart Embedly made clever move finding niche market exploiting make easy say New York Times make links articles site - pretty little card created contains snippet article optionally image developers provide services create embeds extract text etc Diffbot seems one playing safe providing services multiple types extractions jobs article text product pages cough tabular data cough One differentiating factor diffbot crawling engine Want see one fares algorithm Note following reasonable standard benchmark apologies lack sophistication offends anyone Wikipedia target AOL's wikipage I'll provide permalinks service's request see results first hand Diffbot Test Ey extracted text import io Test managed extract references bottom article - article embed ly Test provide pretty useful databites main content libextract Libextract name library implements algorithm demonstrate results render unstyled HTML extracted elements words it's going look ugly Best result style new style we've extract references Second best result see we've extacted main body wiki page It's clear awesome would post-processing data-cleaning steps Maybe next release Reddit target r aww import io Test Import io clearly upper hand elegantly clean data tabular format Diffbot Diffbot results similar import io's minus fancy styling embed ly Test Embed ly extracts images fine nothing close tabular data libextract Second best result Like Diffbot import io's absolutely styling never said would look pretty top result top bar subreddits point showing NYTimes target NYTimes - Dead birds embed ly Test Embed ly wins one least terms presentation cards something seen extractors Diffbot Test Diffbot handles one well import io Test Import io like meh another website libextract That's data cleaning styling libextract's next feature related work work tabular data extraction focuses mainly HTML table extraction processing instance tables columns numerical values proper processing step would make note column's datatype possibly coerce datatype code Mining Tables Large Scale HTML Texts 2000 - Hsin-Hsi Chen Shih-Chung Tsai Jin-He Tsai well-cited approach deducing table 's schema - call extracting table schema WebTables Exploring Power Tables Web 2008 - Michael J Cafarella Alon Halevy Zhe Daisy Wang Eugene Wu Yang Zhang work search engine simple n-step algorithm Here's authors described work describe WebTables system explore two fundamental questions collection databases First effective techniques searching structured data search-engine scales Second additional power derived analyzing huge corpus HyLiEn Hybrid Approach General List Extraction Web 2011 - Fabio Fumarola Tim Weninger Rick Barber Donato Malerba Jiawei Han project's solution tad bit closer solution I'm providing algorithm takes renders webpage thus employing visual-structural method Bootstrapping Information Extraction Semi-structured Web Pages 2008 - Andrew Carlson Charles Schafer Supervised learning approach extracting structured records semistructured web pages describe examples semi-structured web page domains include books sale properties rent job offers bash merits research none solutions easily available rest us Please enable JavaScript view comments powered Disqus Home Twitter GitHub"),
('SIGGRAPH 2015 - Technical Papers Trailer', "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ SIGGRAPH 2015 - Technical Papers Trailer ACMSIGGRAPH SubscribeSubscribedUnsubscribe14 414 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Transcript 23 219 313 Like video Sign make opinion count Sign 314 5 Don't like video Sign make opinion count Sign 6 Loading Loading Transcript interactive transcript could loaded Loading Loading Rating available video rented feature available right Please try later Published May 15 2015You never know kinds things might see SIGGRAPH 2015 Technical Papers program creating time lapse videos using photos internet producing objects spacially varying elasticity using 3D printing SIGGRAPH give plenty skills applied career Join us SIGGRAPH 2015 Xroads Discovery learn Category Film Animation License Standard YouTube License Show Show less Loading Autoplay autoplay enabled suggested video automatically play next Next Supergirl official First Look trailer 2015 Melissa Benoist - Duration 6 36 moviemaniacsDE 1 169 594 views 6 36 Play nextPlay SIGGRAPH 2014 Computer Animation Festival Trailer - Duration 2 42 ACMSIGGRAPH 65 680 views 2 42 Play nextPlay SIGGRAPH 2014 Technical Papers Preview Trailer - Duration 3 33 ACMSIGGRAPH 109 402 views 3 33 Play nextPlay SIGGRAPH 2013 Technical Papers Preview Trailer - Duration 3 12 ACMSIGGRAPH 944 842 views 3 12 Play nextPlay SIGGRAPH 2012 Technical Papers Preview Trailer - Duration 3 29 ACMSIGGRAPH 223 912 views 3 29 Play nextPlay Dyna Model Dynamic Human Shape Motion SIGGRAPH 2015 - Duration 7 08 Michael Black 6 349 views 7 08 Play nextPlay Jackie Chan's POLICE STORY LOCKDOWN Trailer 2015 - Duration 1 41 Fresh Movie Trailers 97 242 views 1 41 Play nextPlay LIMITLESS Season 1 TRAILER 2015 New CBS Series First Look HD - Duration 2 58 SerienTrailerMP 74 840 views 2 58 Play nextPlay Voxelnauts Siggraph 2008 Ray-casting presentation - Duration 33 05 Jon Olick 611 views 33 05 Play nextPlay Fantastic Four official trailer 2 US 2015 Marvel - Duration 2 54 moviemaniacsDE 2 393 529 views 2 54 Play nextPlay Unexpected Official Trailer 1 2015 - Cobie Smulders Movie HD - Duration 2 28 Film Festivals Indie Films 294 759 views 2 28 Play nextPlay Minions 2015 Official Trailer 3 Trailer Review Beyond Trailer - Duration 6 59 Beyond Trailer 266 482 views 6 59 Play nextPlay Computational Hydrographic Printing SIGGRAPH 2015 - Duration 4 56 Changxi Zheng 480 763 views 4 56 Play nextPlay Intern Official Trailer 1 2015 - Anne Hathaway Robert De Niro Movie HD - Duration 2 28 MOVIECLIPS Trailers 720 521 views 2 28 Play nextPlay Data-Driven Interactive Quadrangulation SIGGRAPH 2015 - Duration 5 02 Kenshi Takayama 19 126 views 5 02 Play nextPlay San Andreas - Official Trailer 2 HD - Duration 2 31 Warner Bros Pictures 8 974 475 views 2 31 Play nextPlay Time-lapse Mining Internet Photos SIGGRAPH 2015 - Duration 5 04 Ricardo Martin Brualla youtube 1 203 617 views 5 04 Play nextPlay Semantic Shape Editing Using Deformation Handles SIGGRAPH 2015 - Duration 5 09 M Ersin Yumer 1 367 views 5 09 Play nextPlay Computational Design Twisty Joints Puzzles SIGGRAPH 2015 - Duration 3 57 Changxi Zheng 6 953 views 3 57 Play nextPlay Minions Official Trailer 3 2015 - Despicable Prequel HD - Duration 3 19 MOVIECLIPS Trailers 2 411 221 views 3 19 Play nextPlay Loading suggestions Show Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists"),
('Upcoming TeXmacs 1.99.3 release change log [WYSIWYG math/science word processor  NOT a TeX/LaTeX GUI front end]', ''),
('The Little Prover | The MIT Press', 'Skip navigation BooksBrowse DisciplineArchitecture Arts Bioethics Biology General Science Business Management Innovation Cognition Brain Behavior Computer Science Intelligent Systems Design Design Theory Economics Finance Engineering Environment Urban Studies Game Studies Humanities Internet Studies Information Communication Linguistics Language MIT Regional Interest Mathematics Physics Neuroscience New Media Digital Humanities Political Science Public Policy Philosophy Science Technology Society Browse Disciplines containerNew Titles Coming Soon Textbooks Catalogs Series Authors Distributed Presses BITS Journals Blog Podcasts Contact Help Home Computer Science Intelligent Systems Little Prover Paperback 34 00 23 95 ISBN 9780262527958 248 pp 7 x 9 22 b w illus July 2015 Instructor Resources Request Exam Desk Copy Also Author Essentials Programming Languages Little Prover Daniel P Friedman Carl Eastlund Foreword J Strother Moore Afterword Matthias Felleisen Overview Little Prover introduces inductive proofs way determine facts computer programs written approachable engaging style question-and-answer characteristic humor Little Schemer fourth edition MIT Press Sometimes best way learn something sit book takes readers step-by-step examples showing write inductive proofs Little Prover assumes knowledge recursive programs lists presented first three chapters Little Schemer uses terms beyond novice programmers already know book comes simple proof assistant help readers work book complete solutions every example Authors Daniel P Friedman Professor Computer Science Indiana University coauthor Little Schemer fourth edition Reasoned Schemer Seasoned Schemer Essentials Programming Languages third edition published MIT Press Carl Eastlund software engineer Jane Street Capital New York City Endorsements Computational theorem proving useful effective important advocates present economic terms preventing costly errors software protocols gets lost much fun Friedman Eastlund two jolly characters eschew talk bugs bombs strip essence Little book Want proof Look inside Shriram Krishnamurthi Professor Computer Science Brown University learn program without actually running know reading code grand tradition Little LISPer Little Schemer Dan Friedman Carl Eastlund elegantly present small programs contain big ideas also show prove claims behavior question-and-answer format makes surprisingly easy learn master inductive proof techniques like eating peanuts overlook concise elegant code J-Bob proof assistant tucked back Little Prover marvelous introduction program proof techniques used tools ACL2 Isabelle Coq Guy L Steele Jr Software Architect Oracle Labs coinventor Scheme language coauthor Common LISP Language Friedman Eastlund Little Prover gentle introduction nuts bolts formal proofs programs Following Little Schemer excellent guide thoughtful functional programmers wondering really means know program correct do-it-yourselfers want taste proof assistants like ACL2 work Bring sense humor thinking cap Benjamin C Pierce Henry Salvatori Professor Computer Information Science University Pennsylvania US One Rogers Street Cambridge MA 02142-1209 UK Suite 2 1 Duchess Street London W1W 6AN UK Contact Us MIT Press Bookstore Staff History Jobs Internships Catalogs Events Site Help Sitemap FAQ Privacy Policy Terms Use Services Newsletter Order Journals Customer Service Rights Permissions Author Resources Book Sales Instructors MIT Discounts MIT Press Digital CogNet Digital Partners MIT Press Ebooks Facebook Twitter New Titles RSS 2015 MIT Press'),
('A simple demo about XOR encryption', "Karl's Blog Blog en espa ol OTP encryption demo May 14 2015 Karlheinz Niebuhr follow twitter github Stanford Crypto-course made demo OTP encryption using boolean exclusive XOR function order better understand concept behind XOR digital cryptography basically everything comes XOR ing things got attention simple concept literally unbreakable combined OTP encryption OTP mathematically proved unbreakable encryption may ask used OTP encryption demo turns OTP implemented little code therefore perfect XOR example One-time pad encryption one-time pad OTP encryption technique cannot cracked used correctly technique plaintext paired random secret key pad bit character plaintext encrypted combining corresponding bit character pad using modular addition key truly random least long plaintext never reused whole part kept completely secret resulting ciphertext impossible decrypt break 1 find key plaintext adversary random ciphertext disposal equation two unknowns key message mathematically unsolvable someone infinite computational power could go possible keys brute force attack would find applying key XVHEU ciphertext QJKES would produce correct word TODAY Unfortunately would also find key FJRAB would produce word LATER even worse DFPAB would produce word NEVER idea key right one fact produce desired word phrase one-time pad -encrypted message long use right wrong key way verify solution right one Therefore one-time pad system proven completely secure 2 keen readers extensive explanation OTP history behind exiting decided make proof concept came Check code Github try online script takes keyboard input user message generates random password length Note important password length message entire script import random import string import os XOR message key Exclusive disjunction exclusive logical operation outputs true whenever inputs differ one true false http en wikipedia org wiki Exclusive_or def xor b bits '' len len b return 'not equal length' range len b bits '1' else bits '0' return bits def toBin string return '' join ' 08b ' format ord character character string def toAsc bin_text return '' join chr int bin_text 8 2 xrange 0 len bin_text 8 message raw_input '-- ' print Message message message_bit_string toBin message key os urandom len message print Key key key_bit_string toBin key encrypted_message xor message_bit_string key_bit_string print encrypted message binary encrypted_message ' n' print encrypted message ASCII toAsc encrypted_message ' n' print decrypt message password decrypted_message xor encrypted_message key_bit_string print message decrypted str decrypted_message message_bit_string print message binary ' ' str decrypted_message ' n n' print message Ascii ' ' toAsc str decrypted_message ' n n' function encryption following takes two bit strings input message key iterates applies XOR every bit symbolised represented following truth table represents true 1 represents false 0 INPUT OUTPUT B B def xor b bits '' len len b return 'not equal length' range len b bits '1' else bits '0' return bits code snippet generates random key assume truly random string key '' join random choice string ascii_uppercase string digits _ range len message functions convert ASCII Binary vice versa def toBin string return '' join ' 08b ' format ord c c string def toAsc bin_text return '' join chr int bin_text 8 2 xrange 0 len bin_text 8 Output Feel free experiment code hope someone find useful get better understanding XOR encryption process Questions welcome https github com Karlheinzniebuhr XOR-encryption-demo Update great feedback Reddit made updates code namely switching os urandom better suited cryptographic use random choice Sources 1 http users telenet d rijmenants en onetimepad htm 2 http en wikipedia org wiki One-time_pad Please enable JavaScript view comments powered Disqus Karl's Blog Karlheinz niebuhr gmx com Karlheinzniebuhr NiebuhrKarl place share stuff"),
('The infinite-pixel screen', 'infinite-pixel screenLast week graded desk top mon tors re tired trusty Ap ple Cin ema Dis plays fa vor two 4K Dell mon tors ty pog ra pher grade black white grayscale fonts 90s pretty good 4K much bet ter High-res o lu tion dis plays like al ready taken phones tablets nice see re spread ing lap tops desk tops mon tors tached 2014 Mac Pro mounted aHu man scale stand key board ex cel lently retroMa tias Tac tile Pro Fonts look fantastic Well en tirely true Good fonts look fan tas tic Bad fonts look worse cause longer hide hind dis tinct edges coarser pix els work type reader writer pro gram mer de signer guess cov ers every one grad ing 4K com pletely worthwhile 4K false ad ver tis ing op ti mistic math dis play dus try 4K com mon name screen 3840 pix els wide 2160 pix els high cause 3840 guess 4000-ish twice res o lu tion di rec tion stan dard HDTV screen 1920 pix els wide 1080 high 4K screens first ap peared wasn un com mon peo ple de scribe hav ing twice many pix els wrong dou ble pixel res o lu tion hor zon tally ver ti cally like cut ting pixel half two di rec tions 4K screen four times many pix els HDTV Skep tics vited mul ti ply num bers see sur prise one dis play dus try plans keep di vid ing pix els Far ther hori zon 7680 4320 screen known 8K course desk top sizes one rapidly ap proaches di min ish ing re turns cause hu man eye res o lu tion limit jump 4K tice able im prove ment jump 8K less point man u fac tur ers stop di vid ing pixels didn di vided pix els screen fi nite num ber times many pix els would re sult ing screen many pix els pos tive te gers b Fewer c fan math like think ing ques tions like bail sum buy 4K mon tor re welcome Comparing infinitiesThe first thing might give pause im pli ca tion op tion c quan tity pix els greater num ber pos tive te gers Aren te gers fi nite isn fin ity like far go Georg tor1845 1918Turns swer re sult thank Ger man math e mati cian Georg tor tor started work 1860s fi nite num bers used math e mat ics hun dreds years al ways bit mys tery hand wav ing re ally tor cleared away fog One ques tion tor stud ied whether fi nite sets size big ger com pare fi nite sets fi nite sets d know com pare count el e ments Whichever set el e ments big ger fi nite sets count ing takes long count fi nite sets di rectly sup pose fur ther couldn count fi nite sets di rectly case could rep re sent say quan tity five could raise hand say many fin gers ing d defin ing quan tity re fer ring num ber el e ments ex ist ing set namely set fin gers hand quan tity el e ments set also called car di nal ity set car di nal ity use ful set cer tain car di nal ity use mea sure sets match ing el e ments one set el e ments two sets one-to-one cor re spon dence tween el e ments must cardinality stance sup pose want mea sure car di nal ity set toes foot tice touch fin ger hand toe foot Thus con clude fin gers toes cardinality rudi men tary ex ple gave two bags ob jects asked whether con tained num ber ob jects count ing could take item bags un til ex hausted sup ply one bag bag si mul ta ne ously empty d know car di nal ity would work re gard less many items bag brings us tor sight even though count fi nite sets di rectly com pare car di nal ity two fi nite sets size ll able put one-to-one cor re spon dence prove cor re spon dence ex ists one fi nite sets must big ger Find ing one-to-one cor re spon dence lot typ ing tech nique com pactly known bi jec tion Bi jec tion sim ple idea im por tant tool cause helps keep us coun ter tu itive weeds work ing fi nite sets stance fig ure pos tive te gers 1 2 3 even te gers 2 4 6 naive swer would must pos tive te gers cause set pos tive te gers cludes even odd integers wrong Us ing bi jec tion see put pos tive te gers even te gers one-to-one cor re spon dence like 1 2 3 4 2 4 6 8 mat ter far go al ways find el e ment one set cor re sponds el e ment bi jec tion Thus car di nal ity two fi nite sets many pos tive te gers even te gers sounds lit tle weird first proved bigger infinityTo show two fi nite sets size find bi jec tion show one fi nite set big ger prove thing dif fi cult bi jec tion exist tor proved pos si ble One meth ods di ag o nal iza tion ar gu ment sin gu larly lovely goes like tor started con sid er ing fi nite string bi nary dig like 10010101001011101010 thought set strings 10010101001010101010 01001010100101001001 10010011110001001000 asked many strings ex ist Clearly fi nite num ber looks like might able find bi jec tion pos tive te gers list ing sys tem atic way 1 10010101001010101010 2 01001010100101001001 3 10010011110001001000 4 bi jec tion works set fi nite bi nary strings car di nal ity pos tive integers comes tor jiu-jitsu move points take nth digit string flip 0 1 1 0 ll end new string 1 10010101001010101010 2 01001010100101001001 3 10010011110001001000 4 001 Ob vi ously new string self fi nite bi nary string longs set bi jec tion know cause con structed new string dif fers every string al ready bi jec tion least one digit words given tempt match fi nite bi nary strings pos tive te gers al ways con struct string bi jec tion fore bi jec tion tween pos tive te gers fi nite bi nary strings Though sets fi nite set fi nite bi nary strings re ally truly bigger tor also showed sur prise many set ra tio nal num bers count ably infinite pre cise car di nal ity set fi nite bi nary strings greater car di nal ity set pos tive te gers two fi nite car di nal ties sur face ten enough names Sets share car di nal ity pos tive te gers called count ably fi nite sets share car di nal ity fi nite bi nary strings called un count ably infinite Back infinite-pixel screenRe call screen con structed di vid ing pix els half fi nite num ber times see word fi nite sen tence refers count ably fi nite num ber pixel di vi sions cause cre ate bi jec tion tween pos tive te gers pixel divisions Sup pose start screen one gi ant pixel step 1 cut pixel half horizontally step 2 cut half vertically step 3 cut new pixel horizontally step 4 cut vertically see round cut ting cor re spond pos tive te ger cre ing bi jec tion count ably fi nite set many pix els re main end clear fi nite pix els hav ing made count ably fi nite rounds cuts tu itive swer might also count ably fi nite num ber pixels pos si ble pix els un count ably fi nite set pix els fore fig ure ask ing whether cre ate bi jec tion tweeen pix els un count ably fi nite set set al ready es tab lished tor fi nite bi nary strings un count ably infinite 10010101001010101010 01001010100101001001 10010011110001001000 cre ate bi jec tion tween strings pix els pro pose Re call con structed panel mak ing al ter nat ing hor zon tal ver ti cal cuts match bi nary strings cer tain pixel screen us ing dig string steer us step 1 made hor zon tal cut first digit string 0 ll choose top half pixel 1 ll choose bot tom half 0 1 step 2 made ver ti cal cut sec ond digit 0 ll choose left half pixel 1 ll choose right half 00 01 10 11 re peat process let ting al ter nat ing num bers string di cate top vs bot tom left vs right Af ter step 4 0000 0001 0100 0101 0010 0011 0110 0111 1000 1001 1100 1101 1010 1011 1110 1111 con tinue cells get smaller bi nary strings get longer Even tu ally mean ing end count ably fi nite process ll one-to-one cor re spon dence tween every pixel every fi nite bi nary string words de fined bi jec tion since fi nite bi nary strings un count ably fi nite pix els fore pix els pos tive integers internet demands recountThe first re lease ar ti cle ended im pres sively ef fi cient dis play Cun ning ham Law sev eral read ers wrote say rea son ing faulty fi nite-pixel screen con tains count ably fi nite num ber pixels ll con cede see let first find flaw pre vi ous demon stra tion claimed pixel-cut ting tech nique would let us ciate fi nite bi nary string pixel cou ple read ers tried find con tra dic tion us ing tor di ag o nal iza tion ar gu ment say ing way con struct new fi nite bi nary string doesn map par tic u lar pixel way cause prob lem pro posed bi jec tion fails map every fi nite bi nary string fails map Even though bi nary strings fi nite length rep re sents ex act num ber spe cific point screen shouldn alarm stance re call sev enth-grade math ex act frac tion one-third found num ber line tween 0 1 dec mal ex pan sion frac tion fi nite dec mal 0 333 add dig dec mal 0 3 0 33 0 333 0 3333 get ever closer one-third though one-third cer tainly limit se ries dec mals one-third self never ap pears within se ries sense limit ma tion side se ries approximations Like wise pix els con struc tion rep re sent ap prox ma tions fi nite bi nary strings lim ap prox ma tions way fol low 0 333 un til reach ex actly one-third way carve pixel un til get ex act point rep re sented cer tain fi nite bi nary string premise hind pro posed bi jec tion faulty tried fudge could fudged Hav ing adopted idea every pixel ap prox ma tion use con struc tion re count pix els time let la bel orig nal pixel digit 1 1Then ll ap pend bi nary digit time split cur rent pix els way 1011100101110111Skip ping step 4 need prepended 1 end bigu ous dexes like 01 001 0001 stead come 101 1001 10001 10000100011010010101100101001110110101111100011001111001110111010110111111011111In ing ciate every pixel every level con struc tion unique te ger ter pret num bers bi nary dec mal re sult course tal num ber pix els still fi nite since dou bling goes ever fi nite sub set pos tive te gers put bi jec tion pos tive te gers like ex ple even te gers vs pos tive te gers ear lier many pix els integers Extra creditWhat fi nite bi nary strings see cause re un count ably fi nite pix els screen cause count ably fi nite way re late two kinds fi nite car di nal ity within pixel con struc tion say yes OK ve wrong tor o rem dis cov ered sev eral o rems epony mous one says set items set sub sets items al ways big ger e greater car di nal ity small set easy see three-el e ment set x y z eight sub sets x y z x y x z y z x y z self empty set set sub sets also known power set gen eral big power set cre ate sub set re es sen tially mak ing se ries de ci sions whether clude el e ment set x y z three el e ments hence three de ci sions make cause de ci sion two comes clude vs ex clude num ber pos si ble sub sets 2 2 2 8 Thus fi nite set size power set 2 raised power equal num ber el e ments set neat part tor o rem also ap plies fi nite sets Con sider power set pos tive te gers mean ing pos si ble sub sets pos tive te gers power set self fi nite set tor o rem also greater car di nal ity pos tive integers idea big ger fi nite set still weird ab stract let try bring ing back fi nite-pixel screen First let ask could tate sub sets Since every sub set se ries clude ex clude de ci sions could adopt nu mer cal scheme say 1 clude 0 ex clude d need write one digit every pos tive te ger maybe like 10010101001011101010 full power set pos tive te gers would look thing like 10010101001010101010 01001010100101001001 10010011110001001000 look fa mil iar ve come full cir cle back tor set fi nite bi nary strings Re call tor di ag o nal iza tion ar gu ment showed set greater car di nal ity te gers tor o rem says thing idea power set lot bitmapsBit con trac tion bi nary digit Byte pun bit y fur ther dis tin guish words see row ze roes ones sug gests stream bits bit ing small est unit dig tal ma tion Hav ing ticed power set writ ten set bit strings pos si ble rechar ac ter ize power set terms information Let see hap pens treat power set mea sure ma tion ca pac ity set saw three-el e ment set x y z could used ex press eight dif fer ent sub sets like say ing three bits com puter ex press eight num bers deed equiv lence true fi nite set tor o rem re main true fi nite sets Let test screen count ably fi nite pix els pix els per fect items ex ple since rea son ex tence dis play ma tion make things sim ple ll sume screen stalled vin tage Mac Plus fi nite pix els ei ther white black turn com puter say screen im age bitmap tu itively un der stand way stor ing dis play ing ma tion bitmap de fined set pix els turned white sub set whole screen course pixel screen white black use com puter bitmap changes re see ing dif fer ent sub sets turned white fi nal ques tion many bitmaps pos si ble fi nite-pixel screen equiv lently ma tion ca pac ity screen Since par tic u lar bitmap rep re sented sub set screen pix els set pos si ble bitmaps set pos si ble pixel sub sets oth er wise known power set Fur ther count ably fi nite pix els screen gin power set count ably fi nite set tor showed sev eral ways un count ably infinite fore though turned screen could hold count ably fi nite num ber pix els still dis play un count ably fi nite num ber bitmaps need make slide pre sen ta tion tor fi nite bi nary strings screen get cause dis play Oth er wise ever ad vice re mains grade 4K got plenty pix els Really Matthew er ick15 18 March 2015by wayWilliam Dun ham Jour ney Ge nius ter rific ap proach able book fa mous math o rems tory cludes dis cus sions tor work know Archimedes day job de sign ing mil tary weapons didn re al ready sure en joy math miss fin ity Mind Rudy Rucker Sup pose con structed fi nite screen dif fer ent way tak ing pixel cer tain di men sion tiling def nitely di rec tions form end less grid Com pared first fi nite screen many pix els would new one Fewer Left ex er cise reader billionaire typewriter top Chapter MB lectures articles'),
('Computational Complexity: Fiftieth Anniversary of the Publication of the seminal paper on Computational Complexity', "Computational Complexity Computational Complexity fun stuff math computer science Lance Fortnow Bill Gasarch Thursday May 14 2015 Fiftieth Anniversary Publication seminal paper Computational Complexity Juris Hartmanis Richard Stearns photo dated May 1963 main theorem paper board later improved Hennie Stearns Photo courtesy Richard Stearns seminal paper Juris Hartmanis Richard Stearns Computational Complexity Algorithms appeared Transactions American Mathematical Society May 1965 issue paper gave name field Computational Complexity took name blog Hartmanis Stearns received Turing Award 1993 work I've mentioned paper several times blog including favorite theorem Hartmanis Stearns first formalized truly popularized idea measuring time resources function problem size laying foundation virtually every paper computational complexity algorithms follow Hartmanis Stearns wrote early days main breakthroughs paper started November 1962 December 31 Hartmanis wrote logbook good year good year indeed Posted Lance Fortnow 8 34 Email ThisBlogThis Share TwitterShare FacebookShare Pinterest 4 comments Fashionable complexity theorist9 24 May 14 2015Great picture Love haircuts ReplyDeleteAnonymous2 11 PM May 14 2015Were earlier complexity classes like e g Primitive Recursive functions ever considered motivated reasonable runtimes Obviously weren't aim It's kind hard imagine computability theory operating like 30 years without kind complexity theory existing ReplyDeleteCSProf4 43 PM May 14 2015People study interesting subclasses computable functions approach definitional rather use resources believe Hartmanis Stearns approach first counted steps memory important precursors include Rabin tried define f harder compute g discussed essentially one-way functions cryptography Cobham wanted formalize notion harder multiply add Edmonds needed define class P justify polynomial time algorithm non-bipartite matching good thing even though slow computers around course oversimplified account case Hartmanis Stearns explicit well argued well written practical purposes paper launched Complexity ReplyDeleteMathai1 40 May 15 2015I talked Hartmanis 2012 asked considered using recursive function theory said made things horribly complicated came across Turing machines whole thing became 'so simple' ReplyDeleteAdd commentLoad Newer Post Older Post Home Subscribe Post Comments Atom Tweets fortnow Golden Ticket Golden Ticket P NP Search Impossible popular science book P versus NP problem written Lance Fortnow Princeton University Press Popular Posts Theory Jobs 2015 2014 Fall Jobs Post Fiftieth Anniversary Publication seminal paper Computational Complexity 1 1 2 take Russell Whitehead 300 pages Logarithmic Space Closed Kleene Star Guest Post Dr Hajiaghayi new way rank departments law excluded middle road republicans Virtuous Cycle John Nash 1928-2015 Sizes DFAs NFAs DPDAs UCFG CFGs CSLs Blog Links Bill's Home Page Lance's Home Page Videos Podcast Posts Feed Comments Feed Mailing List CACM Viewpoint Foundations Complexity Graduate Student Guide Favorite Theorems Links Favorite Complexity Books TCS Q Complexity ArXiv ECCC Paper Archive Complexity Conference Complexity Zoo BEATCS Complexity Column SIGACT Parberry Referees Speakers Guides DMANET TheoryNet Announcements Blog List 0xDE Graham Erd Egyptian fractions 1 week ago Algorithmic Game-Theory Economics John Forbes Nash Jr 1928-2015 4 days ago Analysis Boolean Functions Analysis Boolean Functions book available free download 6 months ago Ars Mathematica Nine Chapters Semigroup Art 2 months ago Bits Pieces Really North Koreans 5 months ago COMPUTING RESEARCH POLICY BLOG America COMPETES Reauthorization Floor Today 1 week ago Essays Opinions Oded Goldreich FYI AIP Bulletin Science Policy News House FY 2016 NIST Appropriations Bill 21 hours ago Glencora Borradaile Recovering depression 40-hour work week 2 days ago G del's Lost Letter P NP John Alicia Nash 1928 1933 2015 2 days ago Healthy Algorithms Interesting read Stochastic Dirty Word 9 hours ago theory Two recent papers Cui Peng 1 day ago LEARNINGlover com Learn Descriptive Statistics 1 month ago Machine Learning Theory Randomized experimentation 5 weeks ago Biased Coin makes well-attended conference STOC 2017 Discussion 1 week ago Brain Open Polytopix hiring 2 months ago slice pizza Morning Madness Ode Mercedes 1 week ago Opinions Doron Zeilberger Paul Goldberg tempted cut 6k tuition fees 4 weeks ago Process Algebra Diary PhD positions Computer Science IMT Lucca Italy 1 week ago Random bits Upcoming Google Hangout 20 hours ago Shtetl-Optimized NSA P poly Power Precomputation 5 days ago Speedup Computational Complexity asymptotic sum inequality optimal guest post Yuval Filmus 10 months ago Geomblog ITA conference really enjoy 1 week ago MPC Lounge 5th Bar-Ilan Winter School 2015 Advances Practical Multiparty Computation 7 months ago polylogblog CPM 2015 4 months ago Theory Matters Change NSF Deadlines 1 week ago What's new Cancellation multilinear Hilbert transform 2 days ago Windows Theory Turning STOC 2017 Theory Festival 2 weeks ago Search Blog Loading Blog Archive 2015 41 May 7 John Nash 1928-2015 Intentional Unintentional teaching exper Theory Jobs 2015 Fiftieth Anniversary Publication sem law excluded middle road republi Virtuous Cycle Sizes DFAs NFAs DPDAs UCFG CFGs CSLs April 9 March 9 February 8 January 8 2014 111 December 8 November 8 October 10 September 11 August 9 July 9 June 11 May 10 April 10 March 8 February 8 January 9 2013 106 December 9 November 8 October 8 September 11 August 9 July 9 June 8 May 9 April 8 March 9 February 9 January 9 2012 132 December 7 November 9 October 12 September 10 August 10 July 9 June 10 May 12 April 12 March 15 February 14 January 12 2011 134 December 10 November 10 October 12 September 13 August 10 July 10 June 14 May 11 April 12 March 12 February 11 January 9 2010 192 December 8 November 12 October 15 September 14 August 18 July 15 June 17 May 20 April 22 March 20 February 15 January 16 2009 249 December 16 November 19 October 23 September 21 August 21 July 23 June 23 May 22 April 21 March 22 February 20 January 18 2008 253 December 19 November 18 October 27 September 21 August 19 July 22 June 23 May 23 April 22 March 20 February 21 January 18 2007 159 December 10 November 15 October 18 September 10 August 13 July 11 June 8 May 8 April 7 March 16 February 20 January 23 2006 238 December 18 November 22 October 22 September 19 August 24 July 18 June 18 May 18 April 18 March 21 February 20 January 20 2005 237 December 18 November 20 October 24 September 19 August 22 July 17 June 19 May 21 April 19 March 17 February 17 January 24 2004 200 December 18 November 16 October 19 September 15 August 16 July 15 June 18 May 13 April 13 March 17 February 16 January 24 2003 149 December 13 November 12 October 15 September 11 August 7 July 11 June 13 May 10 April 15 March 15 February 11 January 16 2002 76 December 20 November 17 October 15 September 18 August 6 Computational Complexity Weblog Lance Fortnow William Gasarch licensed Creative Commons Attribution-NonCommercial 3 0 Unported License Awesome Inc template Powered Blogger"),
('Against the definition of types, by Tomas Petricek', "Tomas Petricek's blog Writing practical F coding programming language research Menu Blog Books Trainings Consulting Research definition types Science much 'sloppy' 'irrational' methodological image Paul Feyerabend Method 1975 Programming languages fascinating area combine computer science logic many disciplines including sociology human computer interaction things cannot scientifically quantified like intuition taste better worse politics talk programming languages often treat mainly scientific discussion seeking objective truth surprising - science surrounded aura perfection easy think focusing core scientific essence leaving everything else right way looking programming languages However leaves many things make programming languages interesting believe one way fill missing gap look philosophy science help us understand programming language research done done wrote general idea blog post essay last year Today want talk one specific topic meaning types blog post shorter less philosophical point version essay submitted Onward Essays 2015 want get quick peek ideas essay continue reading want read full essay save later get full version Looking meaning types search meaning types inspired two things Firstly talked meaning types Stephen Kell almost year ago later wrote interesting essay subject PDF Stephen highlights difference logical types understood functional programmers data types understood engineering community resonated belief many people think different things talking types think spectrum way larger Secondly supervising Types course following list reasons types useful suspect copied previous materials couple centuries years - Detecting errors via type-checking statically dynamically Abstraction support structuring large systems Documentation Efficiency Whole-language safety past programming languages used types reasons world modern programming languages types way complicated typically still use types reasons rarely people often disagree whether language typed picks another subset reasons example Julia uses types almost exclusively performance TypeScript uses types structuring large systems documentation efficiency erased whole-language safety unsound F type providers use types mainly tooling error detection list completely make sense types First need understand meaning types evolves changes see happens philosophy science useful Finally philosophy science also suggests normal good thing necessary science still continue using types narrow well-defined sub-areas believe also interesting talk overall fuzzy concept types turn philosophy interesting ideas meaning types changes first point meaning 'types' changes evolves clearly case look history equally true nowadays foundations mathematics lambda calculus Bertrand Russell introduced types paper Mathematical logic based theory type 1908 avoid logical paradoxes arising self-reference system propositions types proposition talked propositions type n type n 1 ruling self-referential propositions Moving closer programming types added lambda -calculus Alonzo Church 1940 However still done context logic foundations mathematics even term programming language started used around 1955 Interestingly Church clearly motivate introduction types - even lambda -calculus mainly useful avoid paradoxes get strong normalization property e programs reduce value expression types computation types I'll skip early days types Stephen Kell writes I'll jump types appeared early ML languages combined tradition lambda -calculus expression type engineering tradition introduced primitive types reals integers Note Church Russell really specify base types cared types constructed ML-like languages types denoted sets values computation produce probably still dominant way thinking types - much programming language theory methodology built around idea prove things programming languages might prove computation type tau produces value v v tau However even view types sets values capture interesting type systems example languages effect systems Haskell monads track computation work coeffects captures computations require computation might type textit int textit write rho textit read sigma means computation produces int value also writes something memory region rho reads value memory region sigma know need lock protect sigma clearly goes beyond idea types sets one alternative see types relations Unsound relatively sound super-sound type systems far story mostly linear might look like going toward ultimate notion 'type' look interesting current developments see types developing different directions Super-sound type systems dependently-typed languages come back links logic extend traditional whole-language safety property another level also interestingly change think programming - given sufficiently precise type may able generate program automatically Unsound type systems another direction includes TypeScript Dart - use types mainly documentation structuring code rather proving logical properties focus simplicity ease use introduces safety holes like covariant generics break language safety enforced runtime anyway Relatively sound systems would label F type providers Type providers much follow traditional safety properties ML make relative give safety provided world behaves nicely example World Bank type provider turns countries statically typed members - gives safety long country disappears hope convinced notion types changes evolves Still think useful treat instances vaguely defined thing - types boundary objects make possible translate good ideas different areas programming language research Inconsistent theories concept stretching look philosophy science see evolving inconsistent meanings unusual might think Feyerabend's quote beginning says Science much 'sloppy' 'irrational' methodological image Two specific ideas apply nicely understanding types concept stretching research programmes introduced Imre Lakatos Research programmes look science whole identify competing research programmes research programme hard core specifies core assumptions participants research programme take granted auxiliary belt methods research questions considered interesting hard cores multiple research programmes may well contradict case types proponents one research programme might take type system safety fundamental property refuse call unsound systems type systems Proponents another research programme might take practical usability core frown upon overly complex systems Lakatos points normal way science works - affecting long stay within one research programme crossing boundaries good keep idea research programmes mind explains many pointless arguments types Concept stretching Another interesting idea introduced Lakatos idea concept stretching explains meaning concept say types changes refined counter-examples generally cases nicely fit established model discovered Lakatos presents concept stretching context mathematics - start perfectly reasonable definition discover counter-example previously unexpected kind forces us come refined notion explain various developments history types example start nice simple definition types sets values someone starts using types track effects computations breaks nice model start type safety someone starts use types talk countries world - relativize type safety property Lakatos also describes common reactions counter-examples unexpected cases favorite monster-barrers label odd case monster refuse admit well-behaved society hard find monster-barrers discussion unsound type systems Sadly usually less noble forms following turn aside shudder horror lamentable plague functions derivatives Charles Hermite 1893 definition types hope convinced whole situation types messy business might expect I'll say properly document research programmes look concept stretching properly classify organize different notions types work might useful part normal scientific work main point require law order lot sympathies Phaedrus Pirsig's famous book identifies Aristotle founder modern scientific approach laments Phaedrus saw Aristotle tremendously satisfied neat little stunt naming classifying everything saw prototype many millions self-satisfied truly ignorant teachers throughout history smugly callously killed creative spirit students dumb ritual analysis blind rote eternal naming things Robert Pirsig Zen Art Motorcycle Maintenance suspect Phaedrus's wording might bit much many scientifically-inclined readers truth Creative uses types concepts often break established rules principles time find way reconcile retrospect - believe historical developments around types support similar position defended philosopher science Paul Feyerabend explains requiring clarity precision novel interesting ideas changes restricts thinking result hurts science o 'clarify' terms discussion mean study additional yet unknown properties domain question one needs make fully understood means fill existing notions entirely different domain logic common sense take care process filling obeys accepted laws logic course investigation deflected narrow channels things already understood possibility fundamental conceptual discovery significantly reduced Paul Feyerabend Method 1975 quote comes mind way often reading programming language papers types Ideas new often rejected technical flaw surely corrected correction advancing idea - instead forces us frame idea existing context often throw away parts easily fit context Feyerabend defends position humanitarian grounds also using historical examples look history science many examples major breakthrough retrospect started idea could viewed unscientific time provide better empirical predictions need adopt Feyerabend's radical view argue level inexactness good thing Rather talking science overall Feyerabend talk individual research programmes Lakatos research paradigms Kuhn Lakatos Kuhn show early stages research programmes paradigms often imprecise imperfect even contradict accepted reality slightly weaker perhaps acceptable position require precise definition types established research programmes say talking set-based notion types functional languages ask precise definition talking work yet turned fully grown research programmes say F type providers unsound type systems TypeScript Dart Living without well-defined types summary type formal concept precise definition case narrow areas use precise definition within narrow area work types want operate think outside particular research programme read full version essay read ideas suggest full answer question couple Briefly couple methods ways thinking philosophy science require precise definitions believe provide useful complement rigorous methods use operating within narrow rigorous areas established research programme Language games use types One way understanding meaning term look used philosopher famous claim meaning use Ludwig Wittgenstein Wittgenstein says understand meaning langauge games specific contexts word use example say computer using ostensive definition language game listener familiar way talking learn computer would interesting language games context programming types One example think expression problem expression problem puzzle reveals abstraction error checking properties system gives specific perspective type system like individual Wittgenstein's langauge games tell us interesting things system without requiring precise definition believe inventing interesting puzzles similar kind one thing better understand types broader sense Stereotypes meaning types Another direction follow idea stereotypes introduced Hilary Putnam people work different research programmes might different definition types sense still talking thing Putnam's definition meaning interesting span multiple research programmes - situation could useful talking types According Putnam important part meaning stereotype description features typical normal entity features constitute ways recognizing thing belongs kind However stereotypes strict see heuristic use Putnam's example even though stereotypical tiger stripes albino tiger still tiger open question - stereotypical aspects types recognize something type system Scientific entities things types first two philosophies focus meaning types also take practical attitude instead look things types without precise definition Ian Hacking uses approach Using number historical examples shows interesting work necessarilly need complex theory important observations history science included theoretical assumptions interesting side-note made Hacking theoreticians appear history books distorts view science certain class difference theorizer experimenter find prejudices favour theory far back institutionalized science Despite prejudices experimentalist approach computer science even word engineering seems negative connotations circles believe much computer science based experimentalism - experiments silently hidden behind upper-class theory developed later need find way talking publishing programming language experiments earlier essay suggested something like case study could treated programming language experiment showing notion types helped us build certain kinds systems future programming workshop accepts submissions form screencasts another intriguing option Using Hacking's example physics - matter theory electro-magnetism believe observe Fraday's motor Summary blog post introduces key ideas recent essay partly reacts misunderstandings often happen people talk types quote abstract essay still read ideas definition type clear precise answer question would avoid many misunderstandings prevent meaningless discussions arise clear precise answer question would also hurt science hamper growth knowledge deflect course investigation narrow channels things already understood Rather seeking elusive definition type exist believe look innovative ways think work types require exact formal definition useful addition precise research done within specific research programme Discuss twitter Send corrections via GitHub pull requests Published Thursday 14 May 2015 3 46 PM Tomas Petricek Tags philosophy research calendar shows new picture month See photos 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 first photos 2015 Welcome I'm F open-source developer book author computer scientist submitted PhD thesis recently offline enjoy traveling taking pictures find tomaspetricek email tomas tomasp net Trainings consulting I'm experienced F developer trainer offer training consulting services fsharpWorks Check in-person Fast Track F course Check online F Finance course Email info private trainings What's new Functional F C books wrote contributed two books F functional programming Real World Functional Programming explains functional concepts using F C F Deep Dives collection case studies written industry experts Real World Functional Programming home page See Manning Amazon com Amazon co uk F Deep Dives home page Get Manning com Amazon com Amazon co uk also wrote series tutorials financial computing Try F interactive environment let's try F browser Research teaching submitted PhD thesis University Cambridge working making better types programs run rich context like F type providers distributed prog ramming data-flow See academic page Blog tags f 104 c 36 functional programming 16 research 30 talks 5 open source 5 data science 3 fun 4 linq 3 fslab 2 deedle 2 philosophy 2 Contact site hosted GitHub generated using F Formatting info see website source GitHub Please submit issues corrections GitHub Use pull requests minor corrections Email tomas tomasp net Connect via Twitter tomaspetricek LinkedIn Lanyrd GitHub Blog archives May 2015 2 April 2015 3 March 2015 2 February 2015 1 January 2015 2 December 2014 1 May 2014 3 April 2014 2 March 2014 1 January 2014 2 December 2013 1 November 2013 1 October 2013 1 September 2013 1 August 2013 2 May 2013 1 April 2013 1 March 2013 1 February 2013 1 January 2013 1 December 2012 2 October 2012 1 August 2012 3 June 2012 2 April 2012 1 March 2012 4 February 2012 5 January 2012 2 November 2011 5 August 2011 3 July 2011 2 June 2011 2 May 2011 2 March 2011 4 December 2010 1 November 2010 6 October 2010 6 September 2010 4 July 2010 3 June 2010 2 May 2010 1 February 2010 2 January 2010 3 December 2009 3 July 2009 1 June 2009 3 May 2009 2 April 2009 1 March 2009 2 February 2009 1 December 2008 1 November 2008 5 October 2008 1 September 2008 1 June 2008 1 March 2008 3 February 2008 1 December 2007 2 November 2007 6 October 2007 1 September 2007 1 August 2007 1 July 2007 2 April 2007 2 March 2007 3 February 2007 3 January 2007 2 November 2006 1 October 2006 3 August 2006 2 July 2006 1 June 2006 3 May 2006 2 April 2006 2 December 2005 1 July 2005 4 June 2005 5 May 2005 1 April 2005 3 March 2005 3 January 2005 1 December 2004 3 November 2004 2 License Unless explicitly mentioned articles site licensed Creative Commons Attribution Share Alike source code samples licensed Apache 2 0"),
("What's this plant? Raleigh, NC", "we're hiring blog imgur imgur store uploading tools developer api need help terms privacy ad choices upload images 23 Upload Images Video GIF Make Meme sign sign Loading browse computer drag drop Ctrl V paste clipboard publish Imgur create album Start Upload Blog Horizontal Grid Edit Images 0 uploading agree terms service Optimizing large GIFs file type supported Supported formats JPEG GIF PNG APNG TIFF BMP PDF XCF share What's plant Raleigh NC 2 weeks ago 497 views stats Download full resolution Get embed codes Love Imgur Join team store help blog request deletion terms privacy apps api advertise ad choices 2015 Imgur Inc prev next top Today's best images prev next browse way I'm sure Uploaded 0 Points 0 ups 0 downs - Views - Bandwidth usage - Comments - Favorites Daily Cumulative - waiting image data Loading views Get image internet"),
('What Every Programmer Should Know About Compiler Optimizations', 'MSDN Magazine Sign United Kingdom - English Argentina Espa ol Brasil Portugu Canada English Canada Fran ais Colombia Espa ol Deutschland Deutsch Espa Espa ol France Fran ais India English Italia Italiano M xico Espa ol Per Espa ol P United Kingdom English United States English HomeTopicsIssues DownloadsSubscribeSubmit ArticleRSS 2015201420132012201120102009 MSDN Magazine Issues Downloads 2015 February 2015 Issue Compilers - Every Programmer Know CompilersWhat Every Programmer Know Compiler OptimizationsHadi BraisDownload Code Sample High-level programming languages offer many abstract programming constructs functions conditional statements loops make us amazingly productive However one disadvantage writing code high-level programming language potentially significant decrease performance Ideally write understandable maintainable code without compromising performance reason compilers attempt automatically optimize code improve performance ve become quite sophisticated nowadays transform loops conditional statements recursive functions eliminate whole blocks code take advantage target instruction set architecture ISA make code fast compact much better focus writing understandable code making manual optimizations result cryptic hard-to-maintain code fact manually optimizing code might prevent compiler performing additional efficient optimizations Rather manually optimizing code consider aspects design using faster algorithms incorporating thread-level parallelism using framework-specific features using move constructors article Visual C compiler optimizations m going discuss important optimization techniques decisions compiler make order apply purpose isn tell manually optimize code show trust compiler optimize code behalf article means complete examination optimizations performed Visual C compiler However demonstrates optimizations really want know communicate compiler apply important optimizations currently beyond capabilities compiler example replacing inefficient algorithm efficient one changing layout data structure improve locality However optimizations outside scope article Defining Compiler OptimizationsAn optimization process transforming piece code another functionally equivalent piece code purpose improving one characteristics two important characteristics speed size code characteristics include amount energy required execute code time takes compile code case resulting code requires Just-in-Time JIT compilation time takes JIT compile code Compilers constantly improving terms techniques use optimize code However re perfect Still instead spending time manually tweaking program usually much fruitful use specific features provided compiler let compiler tweak code four ways help compiler optimize code effectively Write understandable maintainable code look object-oriented features Visual C enemies performance latest version Visual C keep overhead minimum sometimes completely eliminate Use compiler directives example tell compiler use function-calling convention faster default one Use compiler-intrinsic functions intrinsic function special function whose implementation provided automatically compiler compiler intimate knowledge function substitutes function call extremely efficient sequence instructions take advantage target ISA Currently Microsoft NET Framework doesn support intrinsic functions none managed languages support However Visual C extensive support feature Note using intrinsic functions improve performance code reduces readability portability Use profile-guided optimization PGO technique compiler knows code going behave run time optimize accordingly purpose article show trust compiler demonstrating optimizations performed inefficient understandable code applying first method Also ll provide short introduction profile-guided optimization mention compiler directives enable fine-tune parts code many compiler optimization techniques ranging simple transformations constant folding extreme transformations instruction scheduling However article ll limit discussion important optimizations significantly improve performance double-digit percentage reduce code size function inlining COMDAT optimizations loop optimizations ll discuss first two next section show control optimizations performed Visual C Finally ll take brief look optimizations NET Framework Throughout article ll using Visual Studio 2013 build code Link-Time Code GenerationLink-Time Code Generation LTCG technique performing whole program optimizations WPO C C code C C compiler compiles source file separately produces corresponding object file means compiler apply optimizations single source file rather whole program However important optimizations performed looking whole program apply optimizations link time rather compile time linker complete view program LTCG enabled specifying GL compiler switch compiler driver cl exe invoke front end compiler c1 dll c1xx dll postpone work back end c2 dll link time resulting object files contain C Inter mediate Language CIL code rather machine-dependent assembly code linker link exe invoked sees object files contain CIL code invokes back end compiler turn performs WPO generates binary object files returns linker stitch object files together produce executable front end actually performs optimizations constant folding irrespective whether optimizations enabled disabled However important optimizations performed back end compiler controlled using compiler switches LTCG enables back end perform many optimizations aggressively specifying GL together O1 O2 Gw compiler switches OPT REF OPT ICF linker switches article ll discuss function inlining COMDAT optimizations complete list LTCG optimizations refer documentation Note linker perform LTCG native object files mixed native managed object files pure managed object files safe managed object files safe netmodules ll build program consisting two source files source1 c source2 c header file source2 h source1 c source2 c files shown Figure 1 Figure 2 respectively header file contains prototypes functions source2 c quite simple won show Figure 1 source1 c File include stdio h scanf_s printf include Source2 h int square int x return x x main int n 5 m scanf_s d m printf square d d n square n printf square d d m square m printf cube d d n cube n printf sum d d n sum n printf sum cubes d d n sumOfCubes n printf dth prime number d n getPrime n Figure 2 source2 c File include math h sqrt include stdbool h bool true false include Source2 h int cube int x return x x x int sum int x int result 0 int 1 x result return result int sumOfCubes int x int result 0 int 1 x result cube return result static bool isPrime int x int 2 int sqrt x x 0 return false return true int getPrime int x int count 0 int candidate 2 count x isPrime candidate count return candidate source1 c file contains two functions square function takes integer returns square main function program main function calls square function functions source2 c except isPrime source2 c file contains five functions cube function returns cube given integer sum function returns sum integers 1 given integer sumOfcubes function returns sum cubes integers 1 given integer isPrime function determines whether given integer prime getPrime function returns xth prime number ve omitted error checking interest article code simple useful number functions perform simple computations require simple loops getPrime function complex contains loop within loop calls isPrime function also contains loop ll use code demonstrate one important compiler optimizations namely function inlining optimizations ll build code three different configurations examine results determine transformed compiler follow along ll need assembler output file produced FA compiler switch examine resulting assembly code map file produced MAP linker switch determine COMDAT optimizations performed linker also report use verbose icf verbose ref switches make sure switches specified following configurations discuss Also ll using C compiler TC generated code easier examine However everything discuss also applies C code Debug ConfigurationThe Debug configuration used mainly back-end optimizations disabled specify Od compiler switch without specifying GL switch building code configuration resulting object files contain binary code corresponds exactly source code examine resulting assembler output files map file confirm configuration equivalent Debug configuration Visual Studio Compile-Time Code Generation Release ConfigurationThis configuration similar Release configuration optimizations enabled specifying O1 O2 Ox compile switches without specifying GL compiler switch configuration resulting object files contain optimized binary code However optimizations whole-program level performed examining generated assembly listing file source1 c ll notice two optimizations performed First first call square function square n Figure 1 completely eliminated evaluating computation compile time happen compiler determined square function small inlined inlining compiler determined value local variable n known doesn change assignment statement function call Therefore concluded safe execute multiplication substitute result 25 second optimization second call square function square m inlined well However value m isn known compile time compiler evaluate computation actual code emitted ll examine assembly listing file source2 c much interesting call cube function sumOfCubes inlined turn enabled compiler perform significant optimizations loop ll see Loop Optimizations section addition SSE2 instruction set used isPrime function convert int double calling sqrt function also convert double int returning sqrt sqrt called loop starts Note arch switch specified compiler x86 compiler uses SSE2 default deployed x86 processors well x86-64 processors support SSE2 Link-Time Code Generation Release ConfigurationThe LTCG Release configuration identical Release configuration Visual Studio configuration optimizations enabled GL compiler switch specified switch implicitly specified using O1 O2 tells compiler emit CIL object files rather assembly object files way linker invokes back end compiler perform WPO described earlier ll discuss several WPO optimizations show immense benefit LTCG assembly code listings generated configuration available online long function inlining enabled Ob turned whenever request optimizations GL switch enables compiler inline functions defined translation units irrespective whether Gy compiler switch discussed bit later specified LTCG linker switch optional provides guidance linker examining assembly listing file source1 c see function calls except scanf_s inlined result compiler able execute computations cube sum sumOfCubes isPrime function hasn inlined However inlined manually getPrime compiler would still inline getPrime main see function inlining important optimizes away function call also enables compiler perform many optimizations result Inlining function usually improves performance expense increasing code size Excessive use optimization leads phenomenon known code bloat every call site compiler performs cost benefit analysis decides whether inline function Due importance inlining Visual C compiler provides much support standard dictates regarding inlining control tell compiler never inline range functions using auto_inline pragma tell compiler never inline specific function method marking __declspec noinline mark function inline keyword give hint compiler inline function although compiler may choose ignore hint inlining would net loss inline keyword available since first version C introduced C99 use Microsoft-specific keyword __inline C C code useful re using old version C doesn support keyword Furthermore use __forceinline keyword C C force compiler always inline function whenever possible last least tell compiler unfold recursive function either specific indefinite depth inlining using inline_recursion pragma Note compiler currently offers features enable control inlining call site rather function definition Ob0 switch disables inlining completely takes effect default use switch debugging automatically specified Visual Studio Debug Configuration Ob1 switch tells compiler consider functions inlining marked inline __inline __forceinline Ob2 switch takes effect specifying O 1 2 x tells compiler consider function inlining opinion reason use inline __inline keywords control inlining Ob1 switch compiler won able inline function certain conditions One example calling virtual function virtually function inlined compiler may know function going called Another example calling function pointer function rather using name strive avoid conditions enable inlining Refer MSDN documentation complete list conditions Function inlining isn optimization effec tive applied whole program level fact optimizations become effective level rest section ll discuss specific class optimizations called COMDAT optimizations default compiling translation unit code stored single section resulting object file linker operates section level remove sections combine sections reorder sections precludes linker performing three optimizations significantly double-digit percentage reduce size executable improve performance first eliminating unreferenced functions global variables second folding identical functions constant global variables third reordering functions global variables functions fall execution path variables accessed together physically located closer memory improve locality enable linker optimizations tell compiler package functions variables separate sections specifying Gy function-level linking Gw global data optimization compiler switches respectively sections called COMDATs also mark particular global data variable __declspec selectany tell compiler pack variable COMDAT specifying OPT REF linker switch linker eliminate unreferenced functions global variables Also specifying OPT ICF switch linker fold identical functions global constant variables ICF stands Identical COMDAT Folding ORDER linker switch instruct linker place COMDATs resulting image specific order Note optimizations linker optimizations require GL compiler switch OPT REF OPT ICF switches disabled debugging obvious reasons use LTCG whenever possible reason use LTCG want distribute resulting object library files Recall files contain CIL code rather assembly code CIL code consumed compiler linker version produced significantly limit usability object files developers version compiler use files case unless re willing distribute object files every compiler version use compile-time code generation instead addition limited usability object files many times larger size corresponding assembler object files However keep mind huge benefit CIL object files enabling WPO Loop OptimizationsThe Visual C compiler supports several loop optimizations ll discuss three loop unrolling automatic vectorization loop-invariant code motion modify code Figure 1 m passed sumOfCubes instead n compiler won able determine value parameter must compile function handle argument resulting function highly optimized size rather large compiler won inline Compiling code O1 switch results assembly code optimized space case optimizations performed sumOfCubes function Compiling O2 switch results code optimized speed size code significantly larger yet significantly faster loop inside sumOfCubes unrolled vectorized important understand vectorization would possible without inlining cube function Moreover loop unrolling would effective without inlining simplified graphical representation resulting assembly code shown Figure 3 flow graph x86 x86-64 architectures Figure 3 Control Flow Graph sumOfCubesIn Figure 3 green diamond entry point red rectangles exit points blue diamonds represent conditions executed part sumOfCubes function run time SSE4 supported processor x larger equal eight SSE4 instructions used perform four multiplications time process executing operation multiple values simultaneously called vectorization Also compiler unroll loop twice loop body repeated twice every iteration combined effect eight multiplications performed every iteration x becomes less eight traditional instructions used execute rest computations Note compiler emitted three exit points containing separate epilogues function instead one reduces number jumps Loop unrolling process repeating loop body within loop one iteration loop executed within single iteration unrolled loop reason improves performance loop control instructions executed less frequently Perhaps important might enable compiler perform many optimizations vectorization downside unrolling increases code size register pressure However depending loop body might improve performance double-digit percentage Unlike x86 processors x86-64 processors support SSE2 Moreover take advantage AVX AVX2 instruction sets latest x86-64 microarchitectures Intel AMD specifying arch switch Specifying arch AVX2 enables compiler use FMA BMI instruction sets well Currently Visual C compiler doesn enable control loop unrolling However emulate technique using templates together __ forceinline keyword disable auto-vectorization specific loop using loop pragma no_vector option looking generated assembly code keen eyes would notice code optimized bit However compiler done great job already won spend much time analyzing code applying minor optimizations someOfCubes function whose loop unrolled modify code m passed sum function instead n compiler won able evaluate function therefore emit code case loop unrolled twice last optimization ll discuss loop-invariant code motion Consider following piece code int sum int x int result 0 int count 0 int 1 x count result printf d count return result change additional variable incremented iteration printed hard see code optimized moving increment count variable outside loop assign x count variable optimization called loop-invariant code motion loop-invariant part clearly indicates technique works code doesn depend expressions loop header catch apply optimization manually resulting code might exhibit degraded performance certain conditions see Consider happens x nonpositive loop never executes means unoptimized version variable count won touched ever manually optimized version unnecessary assignment x count executed outside loop Moreover x negative count would hold wrong value humans compilers susceptible pitfalls Fortunately Visual C compiler smart enough realize emitting condition loop assignment resulting improved performance values x summary neither compiler compiler optimizations expert avoid making manual transformations code make look faster Keep hands clean trust compiler optimize code Controlling OptimizationsIn addition compiler switches O1 O2 Ox control optimizations specific functions using optimize pragma looks like pragma optimize optimization-list optimization list either empty contain one following values g y correspond compiler switches Og Os Ot Oy respectively empty list parameter causes optimizations turned regardless compiler switches specified empty list parameter causes specified compiler switches take effect Og switch enables global optimizations performed looking function optimized functions calls LTCG enabled Og enables WPO optimize pragma useful want different functions optimized different ways space others speed However really want level control consider profile-guided optimization PGO process optimizing code using profile contains behavioral information recorded running instrumented version code compiler uses profile make better decisions optimize code Visual Studio provides necessary tools apply technique native managed code Optimizations NETThere linker involved NET compilation model However source code compiler C compiler JIT compiler source code compiler performs minor optimizations example doesn perform function inlining loop optimizations Instead optimizations handled JIT compiler JIT compiler ships versions NET Framework 4 5 doesn support SIMD instructions However JIT compiler ships NET Framework 4 5 1 later versions called RyuJIT supports SIMD difference RyuJIT Visual C terms optimization capabilities work run time RyuJIT perform optimizations Visual C example run time RyuJIT might able determine condition statement never true particular run application therefore optimized away Also RyuJIT take advantage capabilities processor running example processor supports SSE4 1 JIT compiler emit SSE4 1 instructions sumOfcubes function making generated code much compact However spend much time optimizing code time taken JIT-compile impacts performance application hand Visual C compiler spend lot time spot optimization oppor tunities take advantage great new technology Microsoft called NET Native enables compile managed code self-contained executables optimized using Visual C back end Currently technology supports Windows Store apps ability control managed code optimizations currently limited C Visual Basic compilers provide ability turn optimizations using optimize switch control JIT optimizations apply System Runtime Compiler Services MethodImpl attribute method option MethodImplOptions specified NoOptimization option turns optimizations NoInlining option prevents method inlined AggressiveInlining NET 4 5 option gives recommendation hint JIT compiler inline method Wrapping UpAll optimization techniques discussed article significantly improve performance code double-digit percentage supported Visual C compiler makes techniques important applied enable compiler perform optimizations means comprehensive discussion compiler optimizations performed Visual C However hope given appreciation capabilities compiler Visual C much stay tuned Part 2 Hadi Brais Ph D scholar Indian Institute Technology Delhi IITD researching compiler optimizations next-generation memory technology spends time writing code C C C digging deep CLR CRT blogs hadibrais wordpress com Reach hadi b live com Thanks following Microsoft technical expert reviewing article Jim Hogg MSDN Magazine Blog 14 Top Features Visual Basic 14 Q Leading feature January issue MSDN Magazine Lucian Wischik fantastic look Visual Basic NET 14 Wischik writes Wednesday Jan 7 Big Start New Year MSDN Magazine Folks things hopping MSDN Magazine kicking new year pair issues regularly scheduled January Friday Jan 2 MSDN Magazine Blog entries Current IssueBrowse MSDN Magazines Subscribe MSDN Flash newsletterReceive MSDN Flash e-mail newsletter every week news information personalized interests areas focus Manage Profile Legal Contact Us Newsletter Registration 2015 Microsoft rights reserved Terms Use Trademarks Privacy Statement'),
('Artificial Intelligence Research Project', 'Skip content Sign Sign repository Explore Features Enterprise Blog Watch 4 Star 7 Fork 0 panchr Focus-AI Code Issues Pull requests Pulse Graphs HTTPS clone URL Subversion checkout URL clone HTTPS Subversion Download ZIP Senior Honors Focus Learning Humanlike Game AI https panchr focus 129 commits 2 branches 24 releases Fetching contributors Python 98 7 C 1 1 Python C branch master Switch branches tags Branches Tags dev master Nothing show week-14-dev week-14 week-13-dev week-13 week-12-dev week-12 week-11-dev week-11 week-9-dev week-9 week-8-dev week-8 week-7-dev week-7 week-6-dev week-6 week-5-dev week-5 week-4-dev week-4 week-3 week-2 week-1 v1 0 Nothing show Focus-AI Fixed formatting updated README link final paper latest commit e47859ad00 panchr authored May 9 2015 Permalink Failed load latest commit information ai Fixed formatting updated README link final paper May 9 2015 meta Consolidated notes progress updates well updated main guid Apr 29 2015 notes Consolidated notes progress updates well updated main guid Apr 30 2015 gitignore Added main web mechanism recording removing played moves Ba Apr 10 2015 README md Fixed formatting updated README link final paper May 9 2015 unit-tests bat Added basic unit tests DynamicScriptingAI makeMove method Mo Mar 30 2015 README md Focus AI repository contains work readings Senior Focus Honors project researching gameplaying AI interact human players Specifically want learn create AI play gamelike regular human looking numerous Machine Learning algorithms suitable games decided use Dynamic Scripting algorithm create AI plays Checkers April 2015 hope created AI Checkers using algorithm addition wish create website people play AI rate perceived humanness level opponent allow collect data AI faring improve upon necessary final project located personal website https panchr focus final paper first semester research also personal website https panchr papers focus pdf Note code development work dev branch merge master branch every week weekly tag contain latest development work Important Pages Overall Progress Overall Notes Summary Project Timeline Guiding Questions Final Paper Status API Training Shop Blog 2015 GitHub Inc Terms Privacy Security Contact Something went wrong request Please try'),
('Solve Sudoku Programmatically using Backtracking', "Tango Tech May 15 2015 Howto Solve Sudoku Programmatically using Backtracking Solving Sudoku fun Writing code fun fun writing code solve Sudoku attempted using backtracking Sudoku board represented char array size 81 9 9 one element cell cell hold values 0-9 0 denoting empty cell algorithm walks cells 1 81 finding empty cell trying fit 'legal' value cell calling recursively next cell till reaches cell 81 code snippet entire project available https github com dhuree sudoku public boolean solve throws Exception return solve 1 private boolean solve int position throws Exception boolean overall_result false last cell reached means board solved Return true position ROW_MAX COL_MAX overall_result true current cell empty pass next cell else board position '0' overall_result solve position 1 current cell empty try fit values 1 9 valid - value call self next position else board position '0' int 1 9 boolean result makeMoveByPosition position result true means valid value cell result Recursive call passing next cell position boolean solve_result solve position 1 solve_result true means right value cell solve_result return true valid value revert cell empty board position '0' Return value false don't solution cell overall_result false return overall_result solutions around Web Python - Tom Legrady Posted Dhuree 12 42 Labels Algorithms Java Programming Sudoku 2 comments Tom Legrady said roughly thing Perl http which-dwarf-are-you blogspot ca 2010 10 sudoku-in-perl5-brute-force-solution html May 15 2015 11 13 Dhuree said Thanks Tom looked solution interesting May 19 2015 3 10 PM Post Comment Older Post Home Subscribe Post Comments Atom Search Blog Loading accomplished professional seven years industry experience Enterprise Software Development Application Integration Technology Consulting Curious learner passionate programmer versatile team player avid reader Subscribe Posts Atom Posts Comments Atom Comments Labels Linux Howto Debian Ubuntu Java OEL RHEL Windows ADF APT Algorithms Chromium Cygwin Eclipse Fedora GNU Screen Git NTFS ORA-28009 Programming Quickstart SOAPUI Samba Sudoku Unix VNC Server oracle fusion Disclaimer content provided blog informational purposes owner blog makes representations accuracy completeness information site found following link site owner website liable errors omissions information availability information owner liable losses injuries damages display use information Powered Blogger"),
('HPC clean-coal boiler model aims for 1 trillion grid cells and 10 trillion solution variables. Crossposted to /r/HPC', 'SC Home SC Organization SC Jobs Contact SC DOE Home Feature Filling Standard Model boost computing Archive Kernels Data efficiency blooms ROSE Framework Archive Big Iron Utah team turns computing design clean oxy-coal boiler Archive Universities Modeling self-healing materials repair fissures turbines Archive Synchronized Program takes long deep view Earth evolving surface Archive Genealogy Code library gains renown simulation-tackling tools Archive New Faces Exploring hidden structures slash computational cost Archive Exascale Science Panel lays top 10 list exascale computing hurdles Archive Utah team turns computing design clean oxy-coal boiler Posted May 13 2015 glimpse inside coal-fired boiler Click image enlarge information Coal produces 39 percent America electricity U Energy Information Administration reports everywhere United States reliably buy countries needed contribution smog global warming coal detractors also remains largest share energy mix natural gas distant second 29 percent numerous programs researching technology clean One attempt University Utah-led Carbon-Capture Multidisciplinary Simulation Center CCMSC funded Department Energy DOE National Nuclear Security Administration Predictive Science Academic Alliance Program center employs high-performance computers novel algorithmic software parallel computing approaches one CCMSC project Utah team used 40 million supercomputing processor hours two DOE Office Science leadership computing facilities simulate design operation large oxy-coal boiler See sidebar Building Better Boiler team tool choice Uintah software platform constant development Utah since 1998 suite computational libraries simulates carbon dioxide removal radiation effects turbulence fluid dynamics particle physics physical uncertainty boiler re trying take Uintah forward solve challenging class problems says Martin Berzins University Utah computer science professor leads CCMSC computational component clean-coal research basic technique used Uintah around time applicability scalability significantly expanded last five years Uintah lets researchers test boiler improvements computationally long-time goal coal-burner simulations says Todd Harman Utah mechanical engineering professor project team member change things relatively easily rerun simulations change wall conditions coal types coal inflows physical chemical parameters relatively easily whereas experimentally major deal 1 2 Print Next Big Iron highlights development capability scientific uses world powerful computers fastest networks fastest networks CONTACT Martin Berzins University Utah mb cs utah edu Personal web page RELATED LINKS University Utah School Computing Carbon-Capture Multidisciplinary Simulation Center White Rose Carbon Capture Storage Project ASCR Leadership Computing Challenge Home Archive Subscribe ASCR Home ASCR SC Jobs Contact SC SC Web Policies DOE Phone Book DOE Employment DOE FOIA DOE Privacy Policy DOE Web Policies DOE Fear Act DOE Small Business DOE Information Quality E-Gov White House USA Gov'),
('Free Textbook: Denotational Semantics by Prof. David Schmidt', "Denotational Semantics Methodology Language Development David Schmidt Kansas State University 1986 Allyn Bacon published Denotational Semantics text wrote post-doc Edinburgh 1982-83 book sold steadily years Allyn Bacon purchased William C Brown purchased McGraw-Hill McGraw-Hill deleted text soon acquired book deleted publication rights returned interest revising reprinting time time I've mailed photocopies text various people requests copies increased salvaged text's troff source used groff produce PS-files help others please see text available free download PS PDF caveat get pay - November 2011 Dr Andrew Butterfield Trinity College Dublin assembled complete PDF-file text missing graphics restored Thank links PDF-file entire text Dr Butterfield's course page local copy text case cannot connect Dublin May 2005 text packaged PS- PDF-formats graphics missing gzipped tar-file PS-files zipped PDF-files would like thank Mr Josh Cogliati repaired files compatible Postscript Version 3 welcome send comments questions das ksu edu --- Dave Schmidt November 2011 work licensed Creative Commons License"),
('What is the appeal of dynamically-typed languages?', "Sign GitHub account Sign Gists non answer md Last active May 07 2015 Code Revisions 12 Stars 164 Forks 10 Embed URL HTTPS clone URL SSH clone URL clone HTTPS SSH Download Gist answer nuttycom View answer md answer md Raw File suppressed Click show appeal dynamically-typed languages Kris Nuttycombe asks genuinely wish understood appeal unityped languages better someone really knows well-typed unityped explain think terms well-typed unityped bit question-begging might well say good-typed versus bad-typed instead say statically-typed dynamically-typed I'm going approach article using Scala stand-in static typing Python dynamic typing feel like credibly proficient languages don't currently write lot Python still affection language probably written hundreds thousands lines Python code years Losing static guarantees Obviously biggest problem writing Python compared Scala many fewer static guarantees program I'm going sugarcoat -- it's big disadvantage advantages understood terms value compile-time guarantees may tempted acknowledge advantages think mistake really want understand makes writing Python appealing even fun willing suspend disbelief Less rope least writing Python right way think Python's types structural types strong string can't become number example best understood collection capabilities Rather asserting x Collator calling collate fact established call collate directly types enforced would tend use guide API decisions Compared languages like Scala Java Python strongly encourages APIs don't require exotic types many parameters unless sensible defaults provided almost deeply-nested structures interesting way keeps going all-in object-oriented programming want create class casual API user understand works would use Otherwise tend prefer using static methods similar act simpler data types Similarly strong pressure use standard collection types lists sets dictionaries almost cases number consequences rarely wade huge class hierarchies poor documentation APIs tend strongly-focused want get much mileage learning default collections' APIs Custom collections feel stronger pressure conform default APIs assume data useful string representation rarely worry baked-in limitations types address last point rarely worry someone baking wrong collection type numeric type type behaves similarly use instead corollary someone comes Python e g Java may tend produce APIs hard use Distinctions without difference Scala Java often end tons classes essentially data containers Case classes great job minimizing boilerplate Python classes tuples don't try come names anything else really liberating able build modules much smaller virtue worrying give things names class use Abstraction pattern recognition Abstracting things like variance become much simpler It's interesting many Python programmers see major difference lists tuples immutability tuples immutable makes sense consider iterated indexed number limitations size Compare difficulties correctly expressing abstracting product types Scala Even Shapeless' help lot work generally finding abstractions Python feels much like pattern recognition see two stanzas code essentially trivial abstract differences write common method true even differences Field method names used Arity functions tuples Classes instantiated Class package names Imports needed static typing sorts abstractions involve figuring relate types ASTs well AST shape doesn't feel much like pure abstraction compression problem dynamic language Speculative programming John De Goes made point fixing dynamic programs one-error-at-a-time versus hundreds compiler errors think he's right don't think justice approach sometimes feels better One first things learn programmers emulate machine computer interpreter VM whatever going learn trace programs imagining counters incrementing data allocated functions called etc use print view intermediate values raise exceptions halt process intermediate point etc arguments wrong way programming find convincing even people using static types determine program assemble programs debug etc Even us wish programming like writing proof One advantage Python faculty using create program also used test debug hit confusing error learning runtime executing code based state feels broadly useful trying imagine would wrote code contrast writing Scala grasp two different systems work still runtime JVM allocating memory calling methods O possibly throwing exceptions like Python also compiler creating inferring types checking invariants whole host things There's good way peek inside process see people probably never develop great intuitions around typing works complex types encoded used compiler etc Although Scala fortunate lot folks like Stephen Compall Miles Sabin Jason Zaugg happy talk learn think whole parallel system constraints proofs really nice think it's easy us learned systems ignore intellectual cost someone getting started obvious question mentally emulate machine long run I'm sure current offering statically-typed languages folks likely use think still Where's fire People often confused many scientists seem love Python think makes sense Static typing useful large shared codebases many main risks misusing someone else's API failing refactor something correctly dealing long-lived codebases full deeply-nested interacting structures contrast scientist's main concerns probably mathematical errors type system won't catch methodological problems even less likely caught overall code complexity also unlikely maintain code long periods time share codebases someone empirical dynamic runtime debugging process probably seems pleasant trying understand type system compiler complaining Even program compiles probably need runtime testing anyway Conclusion don't plan stop writing code Scala Haskell Rust even C write Python days find miss static guaranteees type-driven development don't hate writing Python I'm writing Scala still find things envy djspiewak commented May 07 2015 excellent write-up antonycourtney commented May 07 2015 one detailed constructive contributions I've seen topic Language designers advocates sides would well read Thanks taking time write SethTisue commented May 08 2015 easier metaprogramming Ovid commented May 08 2015 Great write-up thoughts read know debating type systems explain people asked computer scientists reasonable disagreements type systems computer programmers unreasonable disagreements There's also subtle play words people often miss distinction reason mkolod commented May 08 2015 Great write-up one qualification though Let's assume time data scientist mean person familiar statistics machine learning writes code analyze data generate insights it's obvious since Hadoop community even people ETL often mislabeled data scientists - it's precise term sense word data scientist distinguished machine learning engineer - latter builds long-lived code forms algorithmic infrastructural foundation data scientists work ML engineers also good data scientists course since know ML algorithm internals ML engineer would choose Scala Python reasons numerous many people using code runtime fast write Cython might well writing Scala runtime concurrent let's ignore Twisted Python's multiprocessing API etc essentially hacks said course data science ecosystem JVM much limited - yes use JavaCV NLP librries like Stanford CoreNLP etc there's real scikit-learn equivalent etc ML engineer I'd tasked building stuff different consuming way data scientists BTW there's criticism one group another - clarification two data science-related audience - builders users Since builders ML engineers creating long-lived foundation Erik's argument favor static typing applies without reservations merely clarification non-data-science folks thkoch2001 commented May 09 2015 lost Scala Java often end tons classes essentially data containers Case classes great job minimizing boilerplate Python classes tuples don't try come names anything else really liberating able build modules much smaller virtue worrying give things names class use compare maybe best dynamic language Python rather poor strawman somewhat typed language Scale Compare Python Haskell fairness also use unnamed tuples Haskell advantage compiler type interferences tuples type also give thing name thus make code much readable data Person Person firstName String lastName String age Int deriving Eq Show Read rather deal type signature Person String String Int alvare commented May 09 2015 Really good write lot truth Though agree thkoch2001 fight Haskell would way harder mean lenses MonadState imperative things python dreams Paddy3118 commented May 10 2015 Productivity main appeal firstly programmers use programming get something done Engineers Scientists Learning dynamic language Python tends make one productive quicker less language learn need bring big guns dedicated programmers ones Python knowledge helps explaining needed engineer scientist add code languages correctly embedded Python ease use odersky commented May 10 2015 extrapolate argument ideal situation would language expressive type system like Scala library-writers nevertheless restraint prefer simple Python-like APIs Would agree statement briangordon commented May 10 2015 Python fantastic scripting language little self-contained utilities like software automation tasks hobby robotics science let's get real clarify beginners might taken Python hype I'm throwing gauntlet seriously professional software engineer who's willing say they'd recommend dynamically-typed language team take 20k SLOC project case JavaScript running browser Python cute fun use it's niche tool Static typing ridiculous value jettison something gigantic like garbage collection order find serious statically typed language that's less suitable large-scale software development dynamically-typed language I'm writing Scala work hi odersky type system blows away useful write complicated deeply-nested chain functional calls get instant feedback presence mistakes without cutting code running branches repl- poke compiles know works ease refactoring changes everything- one click IntelliJ vs potentially hours grepping big codebase MareinK commented May 10 2015 thkoch2001 mostly achieved using namedtuple collections import namedtuple Person namedtuple 'Person' 'firstName' 'lastName' 'age' Paddy3118 commented May 10 2015 briangordon undermine argument immediately excluding dynamic language briangordon commented May 10 2015 Paddy3118 mean reference JavaScript meant obviously going giant frontend JavaScript projects options 5 years ago Owner non commented May 10 2015 mkolod agree entirely assessment trying address fact friends physicists economists sociologists etc overwhelmingly seem using Python work languages think someone operationalizing statistics machine-learning it's much common see something like Scala used Owner non commented May 10 2015 thkoch2001 think assumed trying make argument people using dynamic types really intended try explain nuttycom someone else can't understand anyone would enjoy programming dynamically-typed language feels good don't agree characterization Scala poor strawman statically-typed language Beyond assuming needed strawman try argue static types bad something even believe much experience writing Scala Haskell taking two languages know well trying explain appeal Python far section quoted point Haskell must care arity tuples It's trivial Python programmers abstract 1 2 3 1 2 3 4 1 2 3 4 5 way isn't someone regard three separate types See Stackoverflow question I'm talking Anyway I'm disappointed read article attacking static-typing someone spends 95 day writing code statically-typed languages wasn't intention Owner non commented May 10 2015 odersky I'm sure definitely feel way standard libraries far third-party libraries tend much live let live view several constituencies APIs domain experts want lots control tolerate lots complexity casual users mostly happy defaults hate complexity professionals may need override defaults prefer avoid complexity implied argument post static typing useful understand type system easily understand someone else's domain object model makes easier design libraries domain experts still relatively accessible However assumes familiarity expertise type system Please don't read much post I'm planning giving type classes higher-kinded types algebras anytime soon barendventer commented May 10 2015 reads like comparison structural nominal typing static dynamic typing speculative programming bit isn't really related either static checking still compiler defer actual type errors runtime treating warnings rather errors like Haskell's f-defer-type-errors statically typed Python could still preserve advantages real question asked give get static typing also suspect bit scientists second-order effect Python best language scientific numerical libraries mature enough justify using Scientists probably don't really care much whether Python statically dynamically typed next Python statically typed they'd probably still use EDIT don't disagree point made though think valid salient static type checking probably buys less two points views actually want dynamic typing I've heard follow two basic lines reasoning first reason use static typing infinite time wisdom dynamic typing embedded anyway explicit unityping however static type checking hard implement well evidenced plethora languages poor static type systems make many mistakes design language bite users second deferring type checking runtime information available you're going better JITing efficient specialized implementation dealing new types introduced hot-loaded code may make code sensible meanings didn't seen emphasis late-binding late program already running Even case still probably justify kind static type system programmer doesn't write bunch checks code argument type erasure get rid RTTI RTTI might useful new potentially useful type checking runtime expectation future distinction considered inconsequential static type systems developed practice work way expect things like Python work You'd really introducing extra static checking eliminating need manual type checking programmer good enough implementation static structural typing RTTI root type late binding you're going notice tradeoffs fact run static checker language implementers though I'm hoping that's headed Paddy3118 commented May 11 2015 barendventer future type checker also handle duck typing runtime would comex commented May 11 2015 small encounter Rust day reminded whole debate interesting really case dynamic language avoids massive horrid ugliness exquisite cleverness paper cut - paper cuts matter parser took bunch fields certain format binary file interpreted copied corresponding fields data structure pretty straightforward field got line like self modtab self file_array module table ds modtaboff ds nmodtab dylib_module_size decided wanted extend support writing well reading started write another function similar looking code going opposite direction since bunch fields complexity fields nested I'll gloss decided result would better readable declared list fields one place used reading writing functions abstract fashion I'd need specify fashion struct field field binary format also structs used Rust like languages built-in concept 'first-class field' e something like Struct field could apply multiple objects knew could simulate lambda going pointer object pointer field x mut MachO mut x dyld_weak_bind course didn't want write every field twice native-struct format-struct mapping since side field needed write macro hold let's take stock second situation I'm facing would differ languages static languages don't macros box might write lambdas would work C static language without pointers runtime reflection need two functions one get one set else add complexity interface somewhere starts look pretty ugly without macros Runtime reflection static language basically way make language dynamic need even exists happens arcane verbose it's common enough know works memory probably won't want use Macros work somewhat likely confuse reader even method_missing type stuff especially languages Rust weird limitations aren't text substitution course C style text substitution many many problems Oh could always turn whole struct Map String Foo one side least makes rest code feel weird place fallacy people call dynamic typing unityping tend fall term implies fallacy blog post started rather strongly treat dynamic typing special case static typing dynamically typed objects special case hash maps unless actually go whole hog use subset language code probably syntactically ugly least instances could make bit code nicer nearly impossible actually realize way glossed something static language probably want static performance right describes ways handling fields runtime it's sure tempting find way compile would manually write nice elegant except would probably make whole thing 5x complicated mean know it's stretch say dynamic languages slow benefit small way means you've already given hope speed especially purely interpreted langs like Python don't worry code living performance standards certainly semi-problematic ways it's uglier reading writing dumb non-abstract way probably won't you'll easy thing make code better within confines language worse compared theoretical optimum dynamically typed languages super easy need decide whether easier way boilerplate elegant way abstract field access elegant way easy two function calls getattr obj field setattr obj field value it's field access get analogous rarer dramatic comparisons things like boilerplate object shapes functions many cases generics don't cover dynamic language say never something gross pleases compiler take hard line boilerplate Sure you're giving myriad ways compilers help follow wishes say Another way saying Dynamic languages expressive type system static languages It's type checking head Anyway end using macro I'm saying they're arcane evil though I've seen different people Rust mailing list clamor removal roughly grounds bit steeper hill I'd like particular case wouldn't bad except Rust-specific issues aren't really pertinent Simple enough looking lbit dyld_weak_bind LC_DYLD_INFO dyld_info_command weak_bind_off weak_bind_size 1 record I'm saying issue somehow makes advantages static typing irrelevant various advantages neat features even small find credible don't much personal experience coding large type checking's assurances least basic consistency indispensable conflict one reason find gradual type systems interesting merely stating one aspect appeal dynamic typing others Haskell lenses though AFAIK currently require comparatively unpopular Template Haskell actually autogenerate lens record field think lenses pretty neat ep1032 commented May 11 2015 great gist one thing think where's fire nearly got stopped short dynamically typed languages default less impedance mismatch business logic statically typed languages idea Douglas Crockford talks lot know you're working statically typed OOP language I'll leave functional languages little experience programming process greatly defined identifying areas responsibility delegating work different objects understood independently encapsulation great lot advantages also means first moment code written programmer needs think greatly structure application often worst time programmer likely least knowledgeable subject matter beginning course result rework re-factoring become knowledgeable original assumptions corrected importantly means every programmer later works modifies solution go additional mental process understand changes logic need occur translate application's structure includes type choices made single change within statically typed language result cascade type changes multiple classes hopefully realization two fields passed around together requires type updating solution Every time subclass required significant thought needs put making sure original base class indeed still good abstraction given new information necessary child types Etc contrast dynamically typed language neither first two problems exist simple change object propagate solution default third problem language dependent depending dynamically typed language handles classes inheritance result paragraphs statically typed language requires programmer start making assumptions areas responsibility encapsulation project structure first moment programming dynamically typed language programmer free concentrate first getting initial business logic right sorts responsibilities easier put slightly later code writing process rapid type changes architecture changes less strongly tied code I'm arguing one approach better course ways handle benefits challenges sides coin interesting difference chris-martin commented May 13 2015 exotic type Owner non commented May 13 2015 chris-martin purposes essay meant type reader unlikely encountered specific API question obviously useful feel like see Java APIs lot example think classes live java io _ consider author wants iterate lines file would argue many types involved correct Java Scala solution feel exotic least compared line open path 'r' Obviously write Scala library makes particular example easier wrote one argument statically-typed languages may prone issue Sign free join conversation GitHub Already account Sign comment Something went wrong request Please try Status API Blog 2015 GitHub Inc Terms Privacy Security Contact"),
('What is this really about, what are postulational/operational methods, and how do they relate to the real world?', "EWD 1012 Real mathematicians don't prove Roughly speaking two ways people try reason programs shall distinguish postulational method operational method first method called postulational postulates program text specification define lemmata proved order show program meets specification effectively discharging proof obligation predicate calculus shown indispensable tool postulational method treats program text mathematical object right e semantic equivalence two programs means meet specifications second method called operational tries analyse computations could evoked control program establish possible computation compatible given specification relies computational model respect program text interpreted executable code tragedy today's world programming extent reasons programs almost exclusively operationally call tragedy purely technical point view operational method several orders magnitude inferior postulational one growing size sophistication program operational argument quickly becomes impossible carry general adherence operational reasoning considered one main causes persistence software crisis possibly fundamental flaw operational method begs question reason algorithms translates possible effects given algorithm another one viz program interpreter e abstract machine underlies computational model shall pursue potentially severe shortcoming current concerns much pragmatic admitting say generating possible computations considerations open door combinational explosion effect quickly defies exhaustive analysis Remember archetypical programmer's excuse bug Oh special case Instead finding cope effects combinational explosions much effective prevent combinatorial explosion occurring first place postulational method achieves taking account program text admits interpretation executable code postulational method deals program text parsed otherwise uninterpreted formula soon postulational method began forcefully advocated met equally forceful opposition quite predictable mention way illustration 0 theoretical level places beyond scope amateurs would require lot education Standard answers varying never claimed amateurs able program well Well education business 1 postulational method relevance real world real programmers don't think way Standard counterquestion mean say virtual programmer 2 cannot good backward reasoning weakest preconditions counterintuitive Standard answer simple calculus achieve counterintuitive beyond unaided mind much better simple calculus 3 may okay toy programs you'll never able apply case real programs Standard answer Yes scaling problem operational argument becomes much sooner impossible postulational one 4 imposing strict logical constraints stifle programmer's creativity Various answers possible Unbridled creativity done harm good programmer really wants impressionistic poet wrong business sophisticated audience explain stage design explicit statement designer's obligations time explicit statement freedom thereby inviting explore alternative designs traditional programmer almost certainly overlooks time permits give example 5 Etc moral story clear real programmers don't reason programs reasoning isn't macho rather get substitute intellectual satisfaction quite understanding daring irresponsibility subsequent excitement chasing bugs introduced first place battles familiar anyone even faintest acquaintance programming methodology reason described battles pervade rest mathematics formalists try mathematics manipulating uninterpreted formulae accordingly explicitly stated rules informalists don't call negative name presumably present real mathematicians constantly interpret formulae reason terms model underlying interpretation given examples pragmatic demonstration creative power postulational method E Bell continues Mathematicians scientists conservative persuasion may feel science constrained explicitly formulated set assumptions lost freedom almost dead Experience shows loss denial privilege making avoidable mistakes reasoning perhaps humanly natural new encroachment postulational method vigorously resisted invasion hallowed tradition Objection method neither less objection mathematics last sentence clear E Bell thinks worthy name mathematics classify one mathematicians conservative persuasion Let us quote way contrast Philip J Davis Reuben Hersch refer error identifying mathematics real mathematicians really real life model representation metamathematics prefer first-order logic next paragraph beginning sound familiar dogmatically state formal derivations first-order logic purely hypothetical activities except toy problems might played course logic next sentence refer real mathematics proofs established consensus qualified real proof checkable machine Whereas Bell 1940 refers mathematics goal Davis Hersch 1981 refer average status quo including medieval older relics trouble Reuben Hersch status quo seems close goal admit teacher teach mathematics researcher write papers without paying attention problem intuition proviso perhaps would foolish self defeating tentative conclusion never tried teach mathematics formally explicitly without appeal intuition would refreshing experience students sufficiently well-educated appreciate simplification ii never taken trouble learn let rules formal game guide writing papers would discovered mathematics way beyond former powers Speaking experience course expect convince anybody consensus model mathematics seduced J Perlis et al argue futility aim designing programs proven meet specification missed computing science probably one least medieval branches mathematics real mathematics course sociologist science question contrast sciences mathematics mean real mathematics really done real mathematicians real life medieval characteristics still overwhelming E g mathematics taught explicitly osmosis tradition guilds usual excuse even otherwise well-reputed professors mathematics way insufficiently knowledgeable offer convincing explanation understood renaissance traumatic experience intellectual establishment day Vide fate Galileo Galilei notion science understood today born Renaissance grew Enlightenment intellectual establishment Middle Ages e theology mathematics discover cope took theology least popes Rome almost four centuries solve problem divorcing religious teaching scientific pretension quite possible mathematics even rock hard place mere utility divorce science encouraged note focussing attention provability formalists turned away fuzzy metaphysical notion truth quite achievement remember even late previous century mathematics still suffered heavy philosophical pollution one less C F Gauss thought wise publish discovery non-Euclidean geometry left Bolyai Lobachewski receive flak Renaissance sciences beginning could start tabula rasa mathematics punished burden many centuries premedieval mathematics way maintained relevance quite understandable time clung Euclid historical explanation excuse fact today Euclidean geometry known defects still taught prototype strictly deductive system reliance pictures quoted evidence value geometric intuition fact symptom defects Euclid's axiomatization passing would like add see evidence precisely informality pictorial argument defies development heuristics means arguments designed orderly fashion sharp contrast highly effective heuristics could developed strictly formal environments pretence Euclidean geometry taught today viz strictly deductive system great big lie general acceptance wide-spread praise intuition wake telling mathematics today still discipline sizeable pre-scientific component spirit Middle Ages allowed linger Eventually completed Austin 24 Januari 1988 prof dr Edsger W Dijkstra Department Computer Sciences University Texas Austin Austin TX 78712-1188 USA Transcription Javier Smaldone Revised 11-Nov-2014"),
('0xAX/linux-insides', "Skip content Sign Sign repository Explore Features Enterprise Blog Watch 692 Star 6 091 Fork 383 0xAX linux-insides Code Issues Pull requests Pulse Graphs HTTPS clone URL Subversion checkout URL clone HTTPS Subversion Download ZIP Permalink branch master Switch branches tags Branches Tags master Nothing show Nothing show linux-insides Initialization linux-initialization-8 md 0xAX May 10 2015 Update linux-initialization-8 md 1 contributor Users contributed file 0xAX Raw Blame History 482 lines 362 sloc 31 393 kb Kernel initialization Part 8 Scheduler initialization eighth part Linux kernel initialization process stopped setup_nr_cpu_ids function previous part main point current part scheduler initialization start learn initialization process scheduler need stuff next step init main c setup_per_cpu_areas function function setups areas percpu variables read special part Per-CPU variables percpu areas running next step smp_prepare_boot_cpu function function preparations SMP static inline void smp_prepare_boot_cpu void smp_ops smp_prepare_boot_cpu smp_prepare_boot_cpu expands call native_smp_prepare_boot_cpu function smp_ops special parts SMP void __init native_smp_prepare_boot_cpu void int smp_processor_id switch_to_new_gdt cpumask_set_cpu cpu_callout_mask per_cpu cpu_state CPU_ONLINE native_smp_prepare_boot_cpu function gets number current CPU Bootstrap processor id zero smp_processor_id function explain smp_processor_id works alread saw Kernel entry point part got processor id number reload Global Descriptor Table given CPU switch_to_new_gdt function void switch_to_new_gdt int cpu struct desc_ptr gdt_descr gdt_descr address long get_cpu_gdt_table cpu gdt_descr size GDT_SIZE - 1 load_gdt gdt_descr load_percpu_segment cpu gdt_descr variable represents pointer GDT descriptor already saw desc_ptr Early interrupt exception handling get address size GDT descriptor GDT_SIZE 256 define GDT_SIZE GDT_ENTRIES 8 address descriptor get get_cpu_gdt_table static inline struct desc_struct get_cpu_gdt_table unsigned int cpu return per_cpu gdt_page cpu gdt get_cpu_gdt_table uses per_cpu macro getting gdt_page percpu variable given CPU number bootstrap processor id - 0 case ask following question access gdt_page percpu variable defined Actually alread saw book read first part chapter remember saw definition gdt_page arch x86 kernel head_64 early_gdt_descr word GDT_ENTRIES 8-1 early_gdt_descr_base quad INIT_PER_CPU_VAR gdt_page look linker file see locates __per_cpu_load symbol define INIT_PER_CPU x init_per_cpu__ x x __per_cpu_load INIT_PER_CPU gdt_page filled gdt_page arch x86 kernel cpu common c DEFINE_PER_CPU_PAGE_ALIGNED struct gdt_page gdt_page gdt ifdef CONFIG_X86_64 GDT_ENTRY_KERNEL32_CS GDT_ENTRY_INIT 0xc09b 0 0xfffff GDT_ENTRY_KERNEL_CS GDT_ENTRY_INIT 0xa09b 0 0xfffff GDT_ENTRY_KERNEL_DS GDT_ENTRY_INIT 0xc093 0 0xfffff GDT_ENTRY_DEFAULT_USER32_CS GDT_ENTRY_INIT 0xc0fb 0 0xfffff GDT_ENTRY_DEFAULT_USER_DS GDT_ENTRY_INIT 0xc0f3 0 0xfffff GDT_ENTRY_DEFAULT_USER_CS GDT_ENTRY_INIT 0xa0fb 0 0xfffff percpu variables read Per-CPU variables part got address size GDT descriptor case reload GDT load_gdt execute lgdt instruct load percpu_segment following function void load_percpu_segment int cpu loadsegment gs 0 wrmsrl MSR_GS_BASE unsigned long per_cpu irq_stack_union gs_base cpu load_stack_canary_segment base address percpu area must contain gs register fs register x86 using loadsegment macro pass gs next step writes base address IRQ stack setup stack canary x86_32 load new GDT fill cpu_callout_mask bitmap current cpu set cpu state online setting cpu_state percpu variable current processor - CPU_ONLINE cpumask_set_cpu cpu_callout_mask per_cpu cpu_state CPU_ONLINE cpu_callout_mask bitmap initialized bootstrap processor procesoor booted first x86 processors multiprocessor system known secondary processors Linux kernel uses two following bitmasks cpu_callout_mask cpu_callin_mask bootstrap processor initialized updates cpu_callout_mask indicate secondary processor initialized next secondary processors initialization stuff check cpu_callout_mask boostrap processor bit bootstrap processor filled cpu_callout_mask secondary processor continue rest initialization certain processor finish initialization process processor sets bit cpu_callin_mask bootstrap processor finds bit cpu_callin_mask current secondary processor processor repeats procedure initialization rest secondary processors short words works described details see chapter SMP That's SMP boot preparation Build zonelists next step see call build_all_zonelists function function sets order zones allocations preferred zones what's order understand start let's see linux kernel considers physical memory Physical memory may arranged banks called - nodes hardware support NUMA see one node cat sys devices system node node0 numastat numa_hit 72452442 numa_miss 0 numa_foreign 0 interleave_hit 12925 local_node 72452442 other_node 0 Every node presented struct pglist data linux kernel node devided number special blocks called - zones Every zone presented zone struct linux kernel one type ZONE_DMA - 0-16M ZONE_DMA32 - used 32 bit devices DMA areas 4G ZONE_NORMAL - RAM 4GB x86_64 ZONE_HIGHMEM - absent x86_64 ZONE_MOVABLE - zone contains movable pages presented zone_type enum Information zones get cat proc zoneinfo Node 0 zone DMA pages free 3975 min 3 low 3 Node 0 zone DMA32 pages free 694163 min 875 low 1093 Node 0 zone Normal pages free 2529995 min 3146 low 3932 wrote nodes described pglist_data pg_data_t structure memory structure defined include linux mmzone h build_all_zonelists function mm page_alloc c constructs ordered zonelist different zones DMA DMA32 NORMAL HIGH_MEMORY MOVABLE specifies zones nodes visit selected zone node cannot satisfy allocation request That's NUMA multiprocessor systems special part rest stuff scheduler initialization start dive linux kernel scheduler initialization process must couple things fisrt thing page_alloc_init function mm page_alloc c function looks pretty easy void __init page_alloc_init void hotcpu_notifier page_alloc_cpu_notify 0 initializes handler CPU hotplug course hotcpu_notifier depends CONFIG_HOTPLUG_CPU configuration option option set calls cpu_notifier macro expands call register_cpu_notifier adds hotplug cpu handler page_alloc_cpu_notify case see kernel command line initialization output couple functions parse_early_param parse_args handles linux kernel command line remember already saw call parse_early_param function sixth part kernel initialization chapter call Answer simple call function architecture-specific code x86_64 case architecture calls function need call second function parse_args parse handle non-early command line arguments next step see call jump_label_init kernel jump_label c initializes jump label see call setup_log_buf function setups printk log buffer already saw function seventh part linux kernel initialization process chapter PID hash initialization next pidhash_init function know process assigned unique number called - process identification number PID process generated fork clone automatically assigned new unique PID value kernel management PIDs centered around two special data structures struct pid struct upid First structure represents information PID kernel second structure represents information visible specific namespace PID instances stored special hash table static struct hlist_head pid_hash hash table used find pid instance belongs numeric PID value pidhash_init initializes hash start pidhash_init function see call alloc_large_system_hash pid_hash alloc_large_system_hash PID sizeof pid_hash 0 18 HASH_EARLY HASH_SMALL pidhash_shift NULL 0 4096 number elements pid_hash depends RAM configuration 2 4 2 12 pidhash_init computes size allocates required storage hlist case - doubly linked list contains one pointer instead struct hlist_head alloc_large_system_hash function allocates large system hash table memblock_virt_alloc_nopanic pass HASH_EARLY flag case __vmalloc pass flag result see dmesg output dmesg grep hash 0 000000 PID hash table entries 4096 order 3 32768 bytes That's rest stuff scheduler initialization following functions vfs_caches_init_early early initialization virtual file system chapter describe virtual file system sort_main_extable sorts kernel's built-in exception table entries __start___ex_table __stop___ex_table trap_init initializies trap handlers morea last two function know separate chapter interrupts last step scheduler initialization initialization memory manager mm_init function init main c see mm_init function initializes different part linux kernel memory manager page_ext_init_flatmem mem_init kmem_cache_init percpu_init_late pgtable_init vmalloc_init first page_ext_init_flatmem depends CONFIG_SPARSEMEM kernel configuration option initializes extended data per page handling mem_init releases bootmem kmem_cache_init initializes kernel cache percpu_init_late - replaces percpu chunks allocated slub pgtable_init - initilizes vmalloc_init - initializes vmalloc Please NOTE dive details functions concepts see Linux kernem memory manager chapter That's look scheduler Scheduler initialization came main purpose part - initialization task scheduler want say already many times see full explanation scheduler special chapter Ok next point sched_init function kernel sched core c understand function's name initializes scheduler Let's start dive function try understand scheduler initialized start sched_init function see following code ifdef CONFIG_FAIR_GROUP_SCHED alloc_size 2 nr_cpu_ids sizeof void endif ifdef CONFIG_RT_GROUP_SCHED alloc_size 2 nr_cpu_ids sizeof void endif First see two configuration options CONFIG_FAIR_GROUP_SCHED CONFIG_RT_GROUP_SCHED options provide two different planning models read documentation current scheduler - CFS Completely Fair Scheduler used simple concept models process scheduling system ideal multitasking processor process would receive 1 n processor time n number runnable processes scheduler uses special set rules used rules determine select new process run called scheduling policy Completely Fair Scheduler supports following normal non-real-time scheduling policies SCHED_NORMAL SCHED_BATCH SCHED_IDLE SCHED_NORMAL used normal applications amount cpu process consumes mostly determined nice value SCHED_BATCH used 100 non-interactive tasks SCHED_IDLE runs tasks processor run anything besides task real-time policies also supported time-critial applications SCHED_FIFO SCHED_RR you've read something Linux kernel scheduler know modular means supports different algorithms schedule different types processes Usually modularity called scheduler classes modules encapsulate scheduling policy details handled scheduler core without core code assuming much let's back code look two configuration options CONFIG_FAIR_GROUP_SCHED CONFIG_RT_GROUP_SCHED scheduler operates individual task options allows schedule group tasks read CFS group scheduling see assign alloc_size variables represent size based amount processors allocate sched_entity cfs_rq 2 nr_cpu_ids sizeof void expression kzalloc ptr unsigned long kzalloc alloc_size GFP_NOWAIT ifdef CONFIG_FAIR_GROUP_SCHED root_task_group se struct sched_entity ptr ptr nr_cpu_ids sizeof void root_task_group cfs_rq struct cfs_rq ptr ptr nr_cpu_ids sizeof void endif sched_entity struture defined include linux sched h used scheduler keep track process accounting cfs_rq presents run queue see allocated space size alloc_size run queue scheduler entity root_task_group root_task_group instance task_group structure kernel sched sched h contains task group related information struct task_group struct sched_entity se struct cfs_rq cfs_rq root task group task group belongs every task system allocated space root task group scheduler entity runqueue go possible CPUs cpu_possible_mask bitmap allocate zeroed memory particular memory node kzalloc_node function load_balance_mask percpu variable DECLARE_PER_CPU cpumask_var_t load_balance_mask cpumask_var_t cpumask_t one difference cpumask_var_t allocated nr_cpu_ids bits cpumask_t always NR_CPUS bits cpumask read CPU masks part see ifdef CONFIG_CPUMASK_OFFSTACK for_each_possible_cpu per_cpu load_balance_mask cpumask_var_t kzalloc_node cpumask_size GFP_KERNEL cpu_to_node endif code depends CONFIG_CPUMASK_OFFSTACK configuration option configuration options says use dynamic allocation cpumask instead putting stack groups able rely amount CPU time call two following functions init_rt_bandwidth def_rt_bandwidth global_rt_period global_rt_runtime init_dl_bandwidth def_dl_bandwidth global_rt_period global_rt_runtime initialize bandwidth management SCHED_DEADLINE real-time tasks functions initializes rt_bandwidth dl_bandwidth structures store information maximum deadline bandwith system example let's look implementation init_rt_bandwidth function void init_rt_bandwidth struct rt_bandwidth rt_b u64 period u64 runtime rt_b- rt_period ns_to_ktime period rt_b- rt_runtime runtime raw_spin_lock_init rt_b- rt_runtime_lock hrtimer_init rt_b- rt_period_timer CLOCK_MONOTONIC HRTIMER_MODE_REL rt_b- rt_period_timer function sched_rt_period_timer takes three parameters address rt_bandwidth structure contains information allocated consumed quota within period period - period real-time task bandwidth enforcement measured us runtime - part period allow tasks run us period runtime pass result global_rt_period global_rt_runtime functions 1s second 0 95s default rt_bandwidth structure defined kernel sched sched h looks struct rt_bandwidth raw_spinlock_t rt_runtime_lock ktime_t rt_period u64 rt_runtime struct hrtimer rt_period_timer see contains runtime period also two following fields rt_runtime_lock - spinlock rt_time protection rt_period_timer - high-resolution kernel timer unthrottled real-time tasks init_rt_bandwidth initialize rt_bandwidth period runtime given parameters initialize spinlock high-resolution time next step depends enabled SMP make initialization root domain ifdef CONFIG_SMP init_defrootdomain endif real-time scheduler requires global resources make scheduling decision unfortenatelly scalability bottlenecks appear number CPUs increase concept root domains introduced improving scalability linux kernel provides special mechanism assigning set CPUs memory nodes set task called - cpuset cpuset contains non-overlapping cpuset CPUs exclusive cpuset exclusive cpuset defines isolated domain root domain CPUs partitioned cpusets CPUs root domain presented struct root_domain kernel sched sched h linux kernel main purpose narrow scope global variables per-domain variables real-time scheduling decisions made within scope root domain That's see details chapter scheduling real-time scheduler root domain initialization make initialization bandwidth real-time tasks root task group ifdef CONFIG_RT_GROUP_SCHED init_rt_bandwidth root_task_group rt_bandwidth global_rt_period global_rt_runtime endif next step depends CONFIG_CGROUP_SCHED kernel configuration option initialze siblings children lists root task group read documentation CONFIG_CGROUP_SCHED option allows create arbitrary task groups using cgroup pseudo filesystem control cpu bandwidth allocated task group finished lists initialization see call autogroup_init function ifdef CONFIG_CGROUP_SCHED list_add root_task_group list task_groups INIT_LIST_HEAD root_task_group children INIT_LIST_HEAD root_task_group siblings autogroup_init init_task endif initializes automatic process group scheduling going possible cpu remember possible CPUs store cpu_possible_mask bitmap possible CPUs ever available system initialize runqueue possible cpu for_each_possible_cpu struct rq rq processor locking individual runqueue runnalble tasks stored active array indexed according priority process consumes time slice moved expired array arras stored special structure names runqueu global lock runqueu going possible CPUs initialize runqueue every cpu runque presented rq structure linux kernel defined kernel sched sched h rq cpu_rq raw_spin_lock_init rq- lock rq- nr_running 0 rq- calc_load_active 0 rq- calc_load_update jiffies LOAD_FREQ init_cfs_rq rq- cfs init_rt_rq rq- rt init_dl_rq rq- dl rq- rt rt_runtime def_rt_bandwidth rt_runtime get runque every CPU cpu_rq macto returns runqueues percpu variable start initialize runqueu lock number running tasks calc_load relative fields calc_load_active calc_load_update used reckoning CPU load initialization completely fair real-time deadline related fields runqueue initialize cpu_load array zeros set last load update tick jiffies variable determines number time ticks cycles since system boot j 0 j CPU_LOAD_IDX_MAX j rq- cpu_load j 0 rq- last_load_update_tick jiffies cpu_load keeps history runqueue loads past CPU_LOAD_IDX_MAX 5 next step fill runqueue fields related SMP cover part end loop initialize high-resolution timer give runqueue set iowait separate part scheduler number init_rq_hrtick rq atomic_set rq- nr_iowait 0 came for_each_possible_cpu loop next need set load weight init task set_load_weight function Weight process calculated dynamic priority static priority scheduling class process increase memory usage counter memory descriptor init process set scheduler class current process atomic_inc init_mm mm_count current- sched_class fair_sched_class make current process first init process idle update value calc_load_update 5 seconds interval init_idle current smp_processor_id calc_load_update jiffies LOAD_FREQ init process runned candidates first process system end set scheduler_running variable scheduler_running 1 That's Linux kernel scheduler initialized course missed many different details explanations need know understand different concepts like process process groups runqueue rcu etc works linux kernel took short look scheduler initialization process details look separate part fully dedicated scheduler Conclusion end eighth part linux kernel initialization process part looked initialization process scheduler continue next part dive linux kernel initialization process see initialization RCU many initialization stuff next part questions suggestions write comment ping twitter Please note English first language really sorry inconvenience find mistakes please send PR linux-internals Links CPU masks high-resolution kernel timer spinlock Run queue Linux kernem memory manager slub virtual file system Linux kernel hotplug documentation IRQ Global Descriptor Table Per-CPU variables SMP RCU CFS Scheduler documentation Real-Time group scheduling Previous part Jump Line Go Status API Training Shop Blog 2015 GitHub Inc Terms Privacy Security Contact Something went wrong request Please try"),
("Carnegie AI loses to poker pros at No Limit Hold'em", "Skip navigation Skip content Help using website - Accessibility statement JavaScript disabled Please enable JavaScript use News Clippings Comments user settings News Clippings Comments Benefits Today's Paper Subscribe Log Register Personalise news save articles read later customise settings trouble accessing login form go login page trouble accessing login form go login page 3 55AM Friday May 29 2015 14674 0 online know story contact us Close Provide detailed information including contact details relevant Real Estate Cars Jobs Dating Newsletters Fairfax Media NetworkMore Close News Weather smh com au theage com au brisbanetimes com au canberratimes com au nationaltimes com au watoday com au weatherzone com au Business Finance businessday com au brw com au afr com afrmagazine com au smartinvestor com au Lifestyle life style dailylife com au essentialbaby com au essentialkids com au findababysitter com au goodfood com au Classifieds domain com au drive com au adzuna com au rsvp com au Advertise us Newsletters Full list sites Fairfax Media Privacy Terms Conditions Sydney Morning Herald World Race White House 2016 Altered States Gallipoli 100 years Environment Data Point Home World Search smh Search World smh com au Web World Man bests machine two-week poker tournament Date May 9 2015 29 Read later Sean D Hamill Tweet Pin submit reddit Email article Print Humans beat machine long till computer improves Pittsburgh humans won question long hold computer two-week long Brains Vs Artificial Intelligence poker tournament Rivers Casino Pittburgh US closely watched around world poker artificial intelligence enthusiasts concluded Friday Four world's top 10 poker players beat Claudico - computer poker program designed last decade team researchers Carnegie Mellon University - combined 732 713 theoretical dollars chips real money wagered It's definitely good run said Bjorn Li finished biggest lead Claudico 529 033 ahead earned US44 676 56 313 US100 000 prize pot casino co-sponsor Microsoft put players divide Doug Polk world's top-ranked online player won US26 734 Dong Kyu Kim won US18 589 Jason Les won US10 000 Advertisement Three four human players - four ranked top 10 world online - won lost Claudico humans also won 10 13 days tournament 80 000 hands poker played total Although gap humans Claudico seemed large Tuomas Sandholm CMU computer science professor overseen Claudico's development said consider humans' win rate fact total amount wagered two weeks theoretical dollars 170 million 730 000 much statistically significant perspective Sandholm said news conference morning marking end tournament still statistical draw Polk second highest lead Claudico Li - 213 671 - followed Sandholm microphone respectfully disagree humans' win rate - 9 1 big blinds per 100 hands played - indicates fairly close match Polk said wouldn't say that's tie said I'd say humans edge sides - players CMU Rivers Casino - interested another tournament future see improved Claudico come top settle debate Sam Ganzfried one Sandholm's PhD students helped design Claudico said given everything learn reviewing 80 000 hands played think new program beat humans year two straight weeks poker four players conceded tired playing 12 hours day including two four hours post-game analysis work days Professor Sandholm invited four players home dinner Friday kind gesture players good-naturedly thought another purpose think really want find improve bot Li said smile don't think there's much share might coming back day Pittsburgh Post-Gazette Tweet Pin submit reddit Email article Print Advertisement popular 1 Laura McComb calls family final farewell Contains 2 South China Sea dispute need know Contains 3 South China Sea dispute China warned US Contains 4 Nebraska lawmakers ban death penalty dramatic Contains 5 Girl 16 burnt alive Guatemalan lynch mob Contains LATEST VIDEO World News Videos video caused Singapore's mid-air mishap Captain David Booth discusses might gone cause Singapore Airlines' engine problems last week explains happens plane engines stop altogether PT2M38S 300 169 Thu May 28 01 37 15 UTC 2015 Click play video Man breaks bee-wearing record Click play video Three gored Peruvian bull run Click play video Tornado slams Mexican border town Sydney Morning Herald -smh com au Featured advertisers Special offers View special deals Mozo Advertisement Motoring Ford Mustang Australian pricing revealed Drive com au 2014 Drive Car Year Full winners list 500 car reviews year Cars sale Drive com au Jobs Find perfect job today Adzuna com au Adzuna jobs Jobs blog Real Estate Inside Paul McCartney's New York mega penthouse Domain com au Buy real estate Johnny Depp's luxury home centre dogs fiasco Investor Hints Tips Find Babysitter Get school care organised Findababysitter com au Sydney Child Care Melbourne Child Care Brisbane Child Care Relationships Australia's Favourite Dating Site Rsvp com au Meet Sydney singles Get started free Singles events ages Compare Save Skip Best Deals Mobile Broadband Home Loans Credit Cards Low Rate Cards Rewards Cards Savings Accts Money Deals Loans Check today's best deals UBank UHomeLoan Discover low variable rate upfront monthly fees Info 20 000 Bonus Points Plus 0 p balance transfers 15 months Check Annual Fee Ever Plus earn flybuys points everyday spend Find Best PrePaid Round best prepaid plans available PrePaid Deals Mobile Plans Lock phone payment upfront save PrePaid Deals Readers' viewed viewed articles Brisbane TimesTop 5 World articles Ex-Bali nine lawyer meet bribe claim Nebraska lawmakers ban death penalty dramatic vote Satellite images capture North Korea executions 'carried anti-aircraft guns' World's largest Hindu temple begin construction Nepal quake delay South China Sea dispute need know viewed articles WA TodayTop 5 World articles Investigation way Singapore Airlines plane lost power engines World's largest Hindu temple begin construction Nepal quake delay Nebraska lawmakers ban death penalty dramatic vote Queen Elizabeth sets train Britain's in-out EU referendum Offensive photo cost Chicago police officer job made public viewed articles AgeTop 5 World articles South China Sea dispute need know Nebraska lawmakers ban death penalty dramatic vote World's largest Hindu temple begin construction Nepal quake delay Girl 16 burnt alive Guatemalan lynch mob South China Sea dispute China warned US remain 1 Asia Pacific viewed articles Canberra TimesTop 5 World articles Ex-Bali nine lawyer meet bribe claim South China Sea dispute need know World's largest Hindu temple begin construction Nepal quake delay Nebraska lawmakers ban death penalty dramatic vote Hayat Boumeddiene fourth Paris terror suspect 'on run' Syria viewed articles Sydney Morning HeraldTop 5 World articles Laura McComb calls family final farewell home swept away floodwaters South China Sea dispute need know South China Sea dispute China warned US remain 1 Asia Pacific Girl 16 burnt alive Guatemalan lynch mob Nebraska lawmakers ban death penalty dramatic vote SMH Home NSW Politics World National Environment Business Digital Life Entertainment Life Style Travel Cars Exec Style Sport Weather Sydney Morning Herald Sitemap Us Contact Us Advertise Us Today Last 8 days Text Version Site Accessibility Guide Connect Mobile Site SMH iPad Digital Edition RSS Facebook Twitter LinkedIn Products Services Subscribe Manage Subscription Benefits Good Food Guide SMH Shop Newsletters Cracka Wines Classifieds Place Ad Accommodation Cars Dating Jobs Property Price Data Real Estate Buy Sell Tributes Celebrations Special Reports Fairfax Media Member Centre Conditions Use Privacy Policy News Store Archive Photo Sales Purchase Front Pages Fairfax Syndication Fairfax Events Fairfax Careers Press Council Fairfax Media Sites Sydney Morning Herald Age Adzuna Domain Drive RSVP Essential Baby InvestSMART APM Stayz Weatherzone TheVine Partners Buy Sell Cruises Lawyers Credit Cards Business Mechanics Electricians Fitness Hair Salons Weddings Home Builder Cracker Copyright 2015 Fairfax Media"),
('24.118x Paradox & Infinity --- a new free edX course from MIT in the intersection of philosophy, math, and theoretical computer science.', 'Skip main content Main menuHow WorksCoursesSchools PartnersRegister User menu Sign inRegisterdashboard EdX offers interactive online classes MOOCs world best universities colleges organizations Online courses MITx HarvardX BerkeleyX UTx many universities taken Topics include biology business chemistry computer science economics finance electronics engineering food nutrition history humanities law literature math medicine music philosophy physics science statistics EdX non-profit online initiative created founding partners Harvard MIT 2015 edX Inc EdX Open edX edX Open edX logos registered trademarks trademarks edX Inc Terms Service Honor Code Privacy Policy Revised 10 22 2014 Website Accessibility Policy edX AboutNews AnnouncementsContactFAQsedX BlogDonate edXJobs edXSite Map Follow Us Facebook Twitter LinkedIn Google Tumblr Meetup Reddit YouTube'),
('Modern Algorithms or The Brave New O of the Big N', "Big Data Theory Posts Rss Author Tweet Grigory Yaroslavtsev Postdoctoral Fellow University Pennsylvania affiliated Warren Center Network Data Sciences work Computer Information Science Department Department Statistics Wharton School Email Twitter Facebook Google LinkedIn Github Modern Algorithms Brave New O Big N Role Algorithms Driven booming enrollments Computer Science first theoretical class majors usually take Introduction Algorithms also experiencing unprecedented growth top schools evidenced fact dozens TAs employed teach class several hundreds students year multiple reasons making Introduction Algorithms one cornerstones Computer Science curriculum One key roles plays many students serving first introduction fully rigorous analysis performance computer programs teaches students use rigorous mathematical lens see abstract structure behind data haven seen Furthermore introduces basic set tools used process large amounts data regardless assumptions generation process used create worst-case analysis Unlike popular approaches algorithm design machine learning newest incarnation called deep learning core algorithms curriculum gives solutions use training data behave robustly changes input Introduction Algorithms Look Like question asked provocative doesn hard fast answer multiple reasons First answers vary quite bit depending ask illustrate point later comparing curricula used top schools Hence stress first ideas expressed matter personal taste point opinions expressed post would teach introduction algorithms rather suggesting reader fact believe U world lucky enough diversity create curricula look quite different thus giving students options fundamental basics roughly choice advanced topics often driven instructor research interests interested pursuing research career gives opportunity get involved research early Second unlike traditional subjects maths physics subject rapidly evolving rough estimate looking history would every 10-15 years significant part curriculum undergo shake-up another reason instructor active researcher area critical keeping developments field Stale curricula even sometimes create room doubt whether algorithms still relevant class used replacement hardly doubt rigorous analysis algorithms relevant many years come concerns one seen call action Despite two fundamental challenges discussed believe guiding principles used determine choice topics introductory classes first one simplicity clarity underlying ideas second one passing test time implemented used variety software packages process serves natural selection algorithmic ideas 10-15 year period usually enough hype around hot topics settle Finally universality robustness choice particular model architecture also play important role probably hardest principle use since involves predicting future Shoulders Giants Books let briefly discuss existing literature curricula top schools Probably canonical textbook algorithms MIT book known CLRS first published 1990 recent third edition came 2009 ve got first edition high school back 2003 time book quite breakthrough compared previous generation textbooks Aho-Hopcroft-Ullman Sedgewick heavily influenced CLRS subsequently using teach introductory classes high school students mid-late 00 fact almost algorithms CLRS implemented using general purpose programming languages C Java Python also made popular programming community including competitive part E g Russian summer camps high school students CLRS formed core B C-level classes B-level classes cover topics roughly similar Erik Demaine Advanced Algorithms Advanced Data Structures data surprised CLRS didn sell copies algorithms textbook ever published recent testament popularity CLRS fact first author Thomas Cormen popular Quora President United States fact probably tells kind people active Quora though years multiple alternatives emerged among would like mention two Berkeley-UCSD Algorithms Dasgupta Papadimitriou Vazirani Cornell Algorithm Design Kleinberg Tardos books published 2005-06 best knowledge second editions aren available yet One main differences newer books CLRS concise style focus high-level ideas rather low-level details However books discussed starting show age litmus test fact either mention Chernoff bounds mention exercise one last chapters barely used would expect modern algorithms textbook introduce concentration bounds early use heavily throughout course Recently among textbooks haven seen strong newcomers might partly due fact books somewhat passe days notable exception top head recent book Foundations Data Science Hopcroft Kannan interesting somewhat different goal see introductory algorithms class based solely Courses search modern algorithms curriculum let turn classes taught recently schools U whose class pages publicly available schools different instructors teach class different years picked one random save space Certain topics appear consistently classes sorting median hashing dynamic programming greedy algorithms cuts flows BFS DFS union-find MST FFT shortest paths etc focus differences make classes unique MIT Design Analysis Algorithms class taught Erik Demaine recent page Erik one best living experts data structures surprise class little heavy cool data structures including Van Emde Boas trees Skip Lists Range Trees aren't usually present typical algorithms curriculum CMU Algorithms class recently taught Anupam Gupta Danny Sleator page interesting class instructors made great effort including modern topics linear programming zero-sum games streaming algorithms big data online algorithms machine learning gradient descent together advanced data structures splay trees segment trees Berkeley class recently taught David Wagner page class based DPV book also serves introduction Theoretical Computer Science primarily discusses detail NP-completeness either present classes mentioned briefly non-standard topics include intro machine learning streaming algorithms CountMin sketch PageRank Cornell class recently taught Eva Tardos David Steurer page surprisingly class heavily KT-based Among unusual topics lot NP-hardness computability Turing machines Church-Turing undecidability etc large module approximation algorithms Modern topics include Nash equilibria best expert algorithm multiplicative weights stable matching Overall class strong bias towards foundations approximation algorithms AGT learning spin Stanford class taught semester Virginia Williams page traditional CLRS-based class Since Stanford quarter system class shorter others advanced algorithms courses Stanford see CS168 CS261 CS267 CS367 particular CS168 Modern Algorithmic Toolbox great example advanced modernized algorithms class According private channels modernized version algorithms curriculum currently construction Stanford Harvard Data Structures Algorithms class taught Jelani Nelson page also fairly traditional CLRS KT-based class touch linear programming approximation algorithms UIUC class taught Jeff Erickson whose lecture notes basically form book Non-standard topics include matroids heavy emphasis randomized algorithms amortized data structures Brave New O Big N Finally would like suggest ideas modern algorithms curriculum mentioned motivational discussion believe three fundamental guidelines simplicity implementability test time potential future None proposed topics particularly new tested advanced graduate level classes different schools accessible expositions available Petabytes data getting crunched daily using techniques implemented variety software packages Randomized approximation algorithms Concentration bounds tail inequalities early Examples simple randomized approximation algorithms actually used practice e g PageRank Set Cover etc lot mileage basic algorithms Linear programming LP basics duality approximation algorithms Since topic already made large number courses discussed won't discuss much detail Considering LP-solvers solution available wide class problems implicit goal achieved Basics machine learning learning theory Core learning ideas perceptron boosting VC-dimension multiplicative weights order strengthen connections machine learning one emphasize clustering problems parts course SVD k-means single-linkage clustering nearest neighbor etc Linear sketching probably recent topic see two surveys Andrew McGregor David Woodruff strongly believe field mature enough covered intro class good example linear sketch CountMin data structure stronger version Bloom filter one widely used data structures basic philosophy surprisingly powerful CountMin allows maintain approximate version basic data structure array using space independent array's size Taking linear sketching powerful tool designing algorithms massive data regardless computational model Whether streaming MapReduce take pick linear sketches often best solution known proved optimal also implemented using basic linear algebraic primitives see next bullet Algorithms based linear algebraic primitives think avoiding combinatorial magic key making algorithms robust choice computational model also parallel see next bullet Whenever solution uses basic linear algebra might good idea prefer combinatorial algorithm even latter little bit faster easier implement scratch Regardless computational model one expect linear algebraic primitives already implemented e g MatLab good example All-Pairs-Shortest-Paths problem see Uri Zwick's slides details examples PageRank applications SVD linear sketching algorithms described Parallel algorithms data structures faced multiple algorithmic alternatives might good idea pick one parallelizable E g among Prim's Kruskal's Boruvka's algorithm MST Boruvka's winner one sequential fact used variety parallel MST algorithms Linear sketching going handy Algorithms based sorting hash tables good since primitives often efficiently implemented parallel systems e g Hadoop DHT Data structures NP-completeness Advanced classes order make room suggestions described would suggest reduce discussion topics bare minimum necessary order cover core algorithmic ideas believe deserves covered separate class hundreds students enrolled topics start feel specialized introductory algorithms class NP-completeness combined topics computational complexity automata theory make semester long course Data structures seem go naturally advanced algorithms another course spice things one even add purely functional data structures may sound little controversial seems general tendency towards moving away data structues among books curricula discussed NP-completeness think depends whether separate class theory computing offered good school really believe case Grigory Yaroslavtsev Postdoctoral Fellow University Pennsylvania affiliated Warren Center Network Data Sciences work Computer Information Science Department Department Statistics Wharton School Email Twitter Facebook Google LinkedIn Github Modern Algorithms Brave New O Big N published May 09 2015 might also enjoy View posts Upcoming Workshops Models Parallel Computation Hitchhiker's Guide Massively Parallel Universes MapReduce RDBMS Practice Theory 2015 Grigory Yaroslavtsev Subscribe via RSS Powered Jekyll using Minimal Mistakes theme Please enable JavaScript view comments powered Disqus comments powered Disqus"),
('Applications of computational learning theory in the cognitive sciences.', "current community chat blog Cognitive Sciences Cognitive Sciences Meta communities Sign log customize list stack exchange communities Stack Exchange sign log tour help Tour Start quick overview site Help Center Detailed answers questions might Meta Discuss workings policies site Cognitive Sciences beta Questions Tags Users Badges Unanswered Ask Question Take 2-minute tour Cognitive Sciences Stack Exchange question answer site practitioners researchers students cognitive science psychology neuroscience psychiatry It's 100 free registration required Applications computational learning theory cognitive sciences vote 18 vote favorite 5 Computational learning theory CoLT branch theoretical computer science associated mathematical analysis machine learning lot early ideas field take inspiration human learning field developed rigorous mathematical precise science seen used much cognitive sciences directly indirect use CoLT's interaction statistics machine learning algorithms say analyzing neural networks VC-dimension examples rigorous uses applications CoLT build theories psychology neuroscience cognitive science Notes two examples familiar Gold's theorem unlearnability limit certain sets languages among context-free ones Ronald de Wolf's master's thesis impossibility PAC-learn context-free languages first made quiet stir poverty-of-the-stimulus debate second unnoticed cognitive science interested approaches flavor relatively comfortable CoLT studied mathematics interested question approaches direct bearing theories human animal cognition learning classic machine learning results looking general mathematical asymptotic approaches running specific types algorithms neural-nets bayesian otherwise simulate human performance typical computational modeling cogsci relatively familiar interested arguments try trivially undercut whole approach even empirical validity instance whole approach derailed asserting human brains finite thus asymptotic arguments useless arguing computational complexity theory pointless computers whole universe matter finite valid empirical argument boring point view theory building Related questions General mathematical frameworks language acquisition since Gold ling SE complexity class closely associated human mind accomplish quickly cstheory SE learning computational-modeling mathematical-psychology theoretical-neuroscience share improve question edited Sep 17 '12 22 32 asked Jun 1 '12 19 45 Artem Kaznatcheev 7 283342122 add comment 2 Answers 2 active oldest votes vote 3 vote Related several works integration non-integration computational models general cognitive science instance Tractable Cognition Thesis basically says improve cognitive modeling limit cognitive models tractably implementable Turing machine Van Rooij 2008 Tractable Cognition Thesis Cognitive Science 32 939-984 http staff science uva nl szymanik papers TractableCognition pdf Personally disagree Tractable Cognition Thesis think similar Copeland better model would Oracle machine Copeland J 1998 Turing's O-Machines Searle Penrose Brain Analysis 58 2 128-138 work goes ahead regard proposes O-machines specifically integrated cognitive psychology give presentation proceedings published next year message provide draft copy would like http www youtube com watch v chQvZrkznbg feature plcp share improve answer answered Oct 9 '12 14 43 Jonathan Bartlett 311 1 thanks little CoLT first part answer already taken care answer links provide question Artem Kaznatcheev Oct 9 '12 15 05 add comment vote 2 vote Recently Bayesian models cognitive development successful least formulating working hypotheses abstract knowledge regularizes guides learning reasoning sparse data thinking instance following paper Tenenbaum J B Kemp C Griffiths L Goodman N D 2011 Grow Mind Statistics Structure Abstraction Science 331 6022 1279-1285 share improve answer answered Jun 28 '12 14 58 mrig 1892 Bayesian models traditionally part CoLT expand answer explain think work rigorous use CoLT building psychological theory see hand-wavy approach modeling framework don't see rigor required question Artem Kaznatcheev Jun 28 '12 17 46 add comment Answer draft saved draft discarded Sign log Sign using Google Sign using Facebook Sign using Stack Exchange Post guest Name Email Post guest Name Email discard posting answer agree privacy policy terms service answer you're looking Browse questions tagged learning computational-modeling mathematical-psychology theoretical-neuroscience ask question asked 2 years ago viewed 886 times active 2 years ago Upcoming Events Spring Cleaning 2015 May 1st - May 31st May 1st - May 31st Blog Stack Overflow Andela partner provide education beyond borders Linked 9 areas mathematics support study cognitive science 22 effective metric complexity Artificial Neural Network 3 introductory material available linking complexity theory cognitive science Related 13 Computational models early learning children 19 Evolutionary game theory cognitive sciences 13 key examples use computational methods study biological neural networks 13 cognitive science say whether learn mathematics top-down research papers 4 Biophysics Computation still good book 6 Cosyne vs CNS conferences Computational Neuroscience 7 Criteria evaluating cognitive systems 10 distantly related research computational neuroscience neural networks machine learning 4 What's relation BCM Oja's learning rule 6 Research groups Computer Science study Computational Neuroscience Hot Network Questions electron shells probability distributions Get random number focused center researcher share scientific ideas temporary position entitled recognition Rearranging numbers get largest number Request delete LinkedIn account termination employment John Nash's Mathematical Legacy Alynn Scientific Mage Career Choice Tomorrow Groundhog Day everyone society respond Simulating earths crust Decomposition partial fractions compute integral fact true 13-year-old son made foolish wasteful donation teach wrong Create base class object derived class get Lead ID already converted pgsql select distinct multiple columns List software projects CV Travel Portugal Cologne Germany Phrase mean fully prepared Jorah know correct word 'learnful' variability faculty salaries STEM fields high Rock Paper Scissors - Alter Egos evaluate normative requirements new device design don't know whether staff member PhD address Dr emails hot questions question feed tour help blog chat data legal privacy policy work advertising info mobile contact us feedback Technology Life Arts Culture Recreation Science Stack Overflow Server Fault Super User Web Applications Ask Ubuntu Webmasters Game Development TeX - LaTeX Programmers Unix Linux Ask Different Apple WordPress Development Geographic Information Systems Electrical Engineering Android Enthusiasts Information Security Database Administrators Drupal Answers SharePoint User Experience Mathematica Salesforce 14 Photography Science Fiction Fantasy Graphic Design Seasoned Advice cooking Home Improvement Personal Finance Money Academia 10 English Language Usage Skeptics Mi Yodeya Judaism Travel Christianity Arqade gaming Bicycles Role-playing Games 21 Mathematics Cross Validated stats Theoretical Computer Science Physics MathOverflow 7 Stack Apps Meta Stack Exchange Area 51 Stack Overflow Careers site design logo 2015 stack exchange inc user contributions licensed cc by-sa 3 0 attribution required rev 2015 5 28 2614 Cognitive Sciences Stack Exchange works best JavaScript enabled"),
('Adding 1 to a binary number using a turing machine - INCOMPLETE', 'JFIF C'),
("[Nautilus] In Mathematics, Mistakes Aren't What They Used To Be: Computers cant invent, but theyre changing the field anyway.", "Nautilus Issues Blog Store Thanks Joining Newsletter Prime SELECT NEWSLETTERS SUBMIT CONTACT DETAILS New chapters Thursdays Nautilus publishes new chapter feature stories monthly theme every Thursday Sign list stay date latest greatest Editor's picks SundaysRead Nautilus stories blogs we've thinking past week Issue 024 Error Issue 023 Dominoes Issue 022 Slow Issue 021 Information Issue 020 Creativity Special Issue Nature Issue 019 Illusions Issue 018 Genius Issue 017 Big Bangs Issue 016 Nothingness Issue 015 Turbulence Issue 014 Mutation Issue 013 Symmetry Issue 012 Feedback Issue 011 Light Issue 010 Mergers Acquisitions Issue 009 Time Issue 008 Home Issue 007 Waste Issue 006 Secret Codes Issue 005 Fame Issue 004 Unlikely Issue 003 Transit Issue 002 Uncertainty Issue 001 Makes Special PREVIEW ISSUE Story Nautilus See Issue Library Enter Search Search Resume Reading Mathematics Mistakes Aren Used Close Purchase Artwork Numbers Mathematics Mathematics Mistakes Aren Used Computers invent re changing field anyway Siobhan Roberts Illustration Richie Pope May 7 2015 Add comment Facebook Twitter Email Sharing Reddit Stumbleupon Tumblr Linkedin Vladimir Voevodsky sooner sat sparkling table set dinner party illustrious Institute Advanced Study Princeton New Jersey overturned empty wine glass flipping bowl stem standing glass rim signal waiters would imbibing always abstemious Voevodsky fall 2013 midst serious work Founded 1930 Institute called earthly temple mathematical theoretical physics hub manner rigorous intellectual inquiry Einstein old house around corner parking lot car sports nerdy bumper sticker reading Believe Everything Think might well aimed directly Voevodsky course professional soul-searching last decade d come realization mathematician work 5 percent creative insight 95 percent self-verification reinforced recent discovery around time dinner party d made big mistake Born Moscow 1966 Voevodsky developed interest mathematics largely initially wanted understand physics later unexpectedly fell love abstract algebra Disliking formalities academia neglecting attend classes rusticated puts Moscow State University fall Communism 1989 didn matter much never technically completed undergraduate mathematics degree established credentials working publishing betters namely mathematicians Yuri Shabat Misha Kapranov Kapranov shared passion developing mathematics new higher dimensional objects categories published important result 1990 weight Kapranov recommendation Voevodsky found accepted graduate studies Harvard without even applied 1992 doctoral thesis marked beginning line ideas algebraic geometry 10 years later earned Fields Medal so-called Nobel mathematics year 2001 young age 36 d become full professor Institute esteemed intellectual sanctuaries long-term member since 1998 Worried longer Vladimir Voevodsky uses computer proof assistant ensure work error-free Peter Badge along way met bump road 1998 American mathematician Carlos Simpson published paper indicating might mistake Voevodsky Kapranov 1990 result years Voevodsky sifted details without making much progress remained convinced result right autumn 2013 leaves changed color summer gave way autumn made breakthrough sorts confirmed error important result longer quite important plainly wrong main theorem incorrect says gap proof main theorem plainly wrong mistake explains failing question obvious proved assertion indeed true difficult cases turned false simple case never bothered check confirming error added addendum original citation official publications list Warning main theorem paper shown Carlos Simpson false even clearing matter making amends broader implications left unsettled error confirmed quarter century committed second time error found published work d another error paper widely read discussed repeatedly applied ever-evolving field Luckily smaller error easily routed Voevodsky corrected constructing different route interesting important theorems 1 people computer tool like vacuum cleaner like colleague bad margin two errors 60 papers Nonetheless found troubling clearly accident Voevodsky quick note talk predicament given least dozen times intervening years determined communicate concern complicated paper readers papers essentially get lazy technical argument trusted author hard check looks similar arguments known correct hardly ever checked detail implications mathematics grand scale got worried says Worried scared Since around time confirmed error d also working something new exciting something called 2-theories similar higher-dimensional mathematics Kapranov exploring technically complex innovative passion pursuing evaporated way knowing might make mistake d learned one likely checking diligence worries killed creativity stopped curiosity driven research areas curiosity led areas value interest beauty didn tools explore certainty anyway According Voevodsky insight-to-verification ratio every hour spent idea d need spend 19 hours ensuring correct original insight says one pay later self-verification steep price Voevodsky decided way could proceed would employ proof assistant computer program would prevent wandering far errant paths already investigating prospects computer-assisted formalization mathematics since 2003 error says like little present make argument stronger experience working proof assistant describes bit like playing video game jousting computer instructs try try even instruct try something known wrong see happens interactive says fun exciting kind addicting makes mistake assertions typed lines lines lines vanish eyes though saves work file called leftovers way Voevodsky proved something knows certain true doesn wonder mistakes lurking within arguments doesn worry convince colleagues proof assistant provides stamp authenticity Voevodsky considered pioneer arena notion proof assistants around first Automath dates 1968 time vast ecosystem proof assistants evolved myriad setups whereby computer used tool mimics traditional mathematics done computer essentially taught humans mathematics programmed axioms asked deduce proofs using laws logic Another approach deploy computers pursuit discovering altogether new mathematics new approaches procedures instance Rutgers mathematician Doron Zeilberger cited co-author Shalosh B Ekhad name gave various computers along way numerous papers published since 1980s people Zeilberger says computer tool like vacuum cleaner like colleague hopes effect nothing short revolutionary Traditional mathematics based notion rigorous formal proof think going obsolete says think since computers powerful open new vistas old agenda proving everything rigorously exciting actual moment discovery actually stop thinking Like artist connect something lies far beyond logic thinking computation purists old guard m interested proof computer says Princeton mathematician John Horton Conway prefer think notes irony official title John von Neumann Professor Applied Computational Mathematics sponsored IBM sit compute day use computer Conway best known discovering Conway groups mathematical symmetry aptly named surreal numbers cellular automata Game Life penchant recreational mathematics keen four color map theorem 1976 became first theorem proved computer behest mathematicians Kenneth Appel Wolfgang Haken hailed New York Times major intellectual feat wasn interested result might otherwise fond tinkering Kepler conjecture maximum density packing spheres three-dimensional space Thomas Hales solved 1998 using linear programming Conway left dissatisfied Conway computers kill buzz Though isn one judge doesn mind others use computers isn Different Strokes Doron Zeilberger left regularly lists computer co-author papers John Horton Conway right hand thinks computers buzzkill Doron Zeilberger Siobhan Roberts Historically purists always regarded issue equanimity computer proof four-color conjecture caused controversy mathematicians refused accept Computers math verboten Berkeley professor Edward Frenkel told New York Times upon Appel death 2013 Like landmark Supreme Court case proof legacy still felt hotly debated Broadly speaking argument use computers lament loss human element intuition understanding Acknowledging something true computer says knowing true One might reckon analogous relying Internet mash-up reviews mysteries Venice rather going splurging water taxi experiencing magic oneself conundrum arises building upon previous results rather working scratch Computers good generally much better humans designed says Frenkel author Love Math computation must realize mathematical research numbers calculations finding connections things seemingly disconnected seeing invisible achieved computation alone professional mathematician tell mathematical discoveries come us insights actual moment discovery actually stop thinking Like artist connect something lies far beyond logic thinking computation beauty math Voevodsky careful distinguish various ways computers shouldn put use Lots people understand difference using computers calculation computer-generated proofs computer-assisted proofs says computer-generated proofs proofs teach us little correct perception go toward computer-generated proofs lose good mathematics mathematics spiritual discipline mathematics something helps form pure mind broader culture practice errors occur even larger roadblock threatening foundation future mathematics gradually says use computers mathematics coming accepted inevitable respect calculation computation especially among up-and-coming generations already quite pervasive under-acknowledged Frenkel agrees saying use computers verify proofs expected welcome trend towering mathematical enterprise reaches new heights intricately esoterically turreted peaks practitioner drilling minutiae could never understood colleagues even field computers necessary advancing enterprise authenticating integrity structure structure complex detail massive scale adjudication mere human referee longer feasible Voevodsky goes even arguing role proof assistants use computers general extends beyond isolated practical instances avoiding errors broader culture practice errors occur even larger roadblock threatening foundation future mathematics Error symptomatic certain disregard really involved proving something properly Error says motivate direct dishonesty claiming proved something without actually done big force mathematics today Nobody intentionally something less well one could reckons mathematician must choose publishing sooner without working nuances proof publishing later allowing competitor get ahead temptation glide details sacrifice quality proof publish read somebody else paper even fewer details think Well normal today ll normal next time put even fewer details student looks proofs learns things done student goes around thinks completely honestly right thing gradual slippage dissolution standards Proof assistants nudge mathematicians direction Besides errors rarely ever enlightening Even Conway likes show odd error allowing others witness imperfections protests never encountered error shape form advantageous Voevodsky dismisses notion taking errant mathematical turn might like getting lost New York City stumbling upon magnificent hidden garden Well first d Manhattan might find something desirable days Voevodsky goes back forth proof assistant rigorously laying definitions theorems line line line traditional efforts pencil paper drawing diagrams sketching ideas Working proof assistant reminded real proof says grounded back able provide detailed proofs write mathematics hand Whenever tempted take shortcut say something like proof similar proof straightforward obvious forced ask Would able get away shaky reasoning company trusty proof assistant Obviously Siobhan Roberts Toronto-based writer new book Genius Play Curious Mind John Horton Conway published July Bloomsbury Issue 024 Error Explore Issue Chapter one Way Psychology Bugs Mindware Particle Physics Data Threatened Break Physics String Theory Admiral String Theory Wars Linguistics Family Couldn Say Hippopotamus Mathematics Mathematics Mistakes Aren Used Chapter two Common Wisdom Geology Sinkhole Hunters Scientific Method Trouble Scientists Archaeology Neanderthal Complex Evolution Top 10 Design Flaws Human Body Health Unlearn Disease Chapter three Take Back Scientific Fraud Biggest Fabricator Science Got Caught Architecture Let Pantheon Crack Archaeology Caveman Home Cave Zoology Necking Shaped Giraffe Chapter four Want See Philosophy Consciousness Began Gods Stopped Speaking Microbiology Infected Monkeys Cautionary Tales Biolab Architecture Ingenious John Ochsendorf Psychology Brain Handle Moon Mathematics Math Famous Proof Nearly Broke Correction originally published paragraph mistakenly stated Voevodsky's 1990 paper widely read repeatedly applied Join Discussion Next Article Matter Sinkhole Hunters David Kushner Related Articles Numbers Impossible Cookware Triumphs Penrose Tile Patchen Barss Numbers Man Invented Modern Probability Slava Gerovitch Numbers Math Beautiful Monsters Adam Kucharski Nautilus Privacy Policy Prime Subscribe Terms Service Contact Work Us Awards Press RSS Media Kit NAUTILUS SCIENCE CONNECTED Nautilus different kind science magazine deliver big-picture science reporting single monthly topic multiple perspectives Read new chapter story every Thursday 2015 Nautilus rights reserved Matter Biology Numbers Ideas Culture Connected Site Code Theory"),
('Alternatives to sorted arrays for binary searching', "Memory Layouts Binary Search Overview came help skip bottom Binary search wonderful algorithm theoretically optimal fast practice discoverable school children playing guessing games Usually think binary search applied sorted array teach way turns cache effects sorted order usually efficient way store data searching project study performance different memory layouts binary searching sorted usual sorted array binary search applied eytzinger implicit binary search tree packed array using Eytzinger k BFS layout usually seen binary heaps btree implicit B-tree packed array using obvious generalization Eytzinger layout value B chosen B-1 data items fit 64 bytes common cache line width veb implicit binary search tree packed array using van Emde Boas layout seen cache-oblivious literature Results array memory layouts fastest answer complicated seems depend data size cache size cache line width relative cache speed many settings B-trees properly chosen value B best others Eytzinger layout wins others still van Emde Boas layout winner least large enough array sizes example consider following two graphs generated running code two different Intel machines left graph Eytzinger layout almost slow plain sorted array van Emde Boas B-tree layouts twice fast right graph Eytzinger layout b-tree fastest sorted array still slowest vEB layout somewhere betweeen array sizes need help theories may explain complicated behaviour need validated larger sample hardware Linux machine would like contribute effort please follow instructions top page Help you'd like help download code unpack like tar xzvf arraylayout tgz arraylayout-0 0 arraylayout-0 0 Makefile arraylayout-0 0 eytzinger_array h arraylayout-0 0 main cpp arraylayout-0 0 btree_array h arraylayout-0 0 sorted_array h arraylayout-0 0 cacher cpp arraylayout-0 0 README arraylayout-0 0 veb_array h arraylayout-0 0 base_array h run like cd arraylayout-0 0 make data create file called run_data tgz email want extra helpful also run sudo dmidecode --type 17 include output email give detailed information amount type speed memory installed computer described Data preliminary badly-formatted data Intel Core i7-4790K 4GHz Intel Core i7-2600 3 40GHz Christian Muise Intel Core i7-3720QM 2 60GHz D Knott Intel Core i5-4670K 3 40GHz Intel Celeron E3400 2 6GHz Intel Core i7-4500U 1 8GHz Intel Core i5-5200U 2 20GHz Intel Core 2 Q8300 2 5GHz Intel Atom 330 1 6GHz Intel Xeon E5320 1 86GHz Intel Xeon E3-1230 V2 3 3GHz AMD Phenom II X4 965 Ryan Fox AMD FX-6300 Mathis Beer Intel Celeron CPU 1005M 1 90GHz Barr Detwix Intel Core i7-4700MQ CPU 2 40GHz Jos Neder Intel Core i5-4210U CPU 1 70GHz Lukas Nemec Intel Xeon CPU E5405 2 00GHz Brian Raiter Intel Core i5 CPU M 520 2 40GHz Todd Davies Intel Core i7-3517U CPU 1 90GHz Justin Whear Intel Xeon CPU E5-2699 v3 2 30GHz Justin Whear Intel Core2 Duo CPU E8135 2 66GHz Gabriele Santilli Intel Xeon CPU E5-1620 0 3 60GHz smail D nmez AMD FX-8350 Eight-Core Processor Moshev Intel Core i5-4570 CPU 3 20GHz John Howat Intel Xeon CPU E5-2699 v3 2 30GHz Justin Whear Intel Core i7-4710HQ CPU 2 50GHz Bill Miller Intel Celeron 2955U 1 40GHz Chromebook Scot Doyle Intel Core i5-4200U CPU 1 60GHz Gabriel Scherer Intel Core i7-2620M CPU 2 70GHz Alexander Duryagin Intel Core2 Duo CPU T9600 2 80GHz Ronak Buch Intel Core i7-2760QM CPU 2 40GHz Lauren iu Nicola Intel Celeron CPU J1900 1 99GHz Lauren iu Nicola AMD A10-5700 APU Radeon HD Graphics Alex Scheel Intel Xeon CPU E5-1650 v2 3 50GHz Seamus Connor Intel Core2 Quad CPU Q9550 2 83GHz Matti Niemenmaa Intel Core i7-5500U CPU 2 40GHz Matti Niemenmaa AMD Opteron Processor 6128 Matti Niemenmaa Intel Xeon CPU E5-2660 0 2 20GHz Jeff Wilcox Intel Core i7-3612QM CPU 2 10GHz Maximilian Karasinski Intel Core i5-2500K CPU 3 30GHz Sebastian Lauwers Intel Core i7-4710MQ CPU 2 50GHz Daniel Wakefield Intel Core i7-4510U CPU 2 00GHz Jonathan McElroy AMD FX-8320 Eight-Core Processor Agustin Borgna Intel Core i7-4790 CPU 3 60GHz Duncan Burke AMD A8-6600K APU Radeon HD Graphics William Albert Starms Intel Core i7-3520M CPU 2 90GHz Harrison Pincket Intel Core i5-4670 CPU 3 40GHz Ron Collinson Intel Core i7-4771 CPU 3 50GHz James McCarty AMD FX-8350 Eight-Core Processor Chris Allan Intel Core i5 CPU M 520 2 40GHz Anthony Fazio Intel Core2 Quad CPU Q8300 2 50GHz Markus Laker Intel Core2 Duo CPU E7500 2 93GHz Cristian Vat Intel Core i5-4250U CPU 1 30GHz Christian Lange Intel Core i7-4770K CPU 3 50GHz mdunphy AMD Phenom II X4 955 Processor Carlos Pantelides AMD Phenom II X4 955 Processor Carlos Pantelides Intel Core i7-4770 CPU 3 40GHz Mohsin Mirza Intel Xeon CPU E5-2660 0 2 20GHz Azure Paul Thornton Intel Xeon CPU X5675 3 07GHz Mohsin Mirza Intel Core i7-3667U CPU 2 00GHz Mohsin Mirza Intel Xeon CPU E5405 2 00GHz Mohsin Mirza Intel Core i7-3630QM CPU 2 40GHz Antoni Ro ciszewski AMD Opteron Processor 6386 SE Antoni Ro ciszewski Intel Core i7-3630QM CPU 2 40GHz Jacob Gulotta Intel Core i7-3770 CPU 3 40GHz Kumazaki Hiroki Intel Core i5-3210M CPU 2 50GHz Gianluca Della Vedova Intel Core i7-4770 CPU 3 40GHz Gianluca Della Vedova Observations preliminary observations browsing data mainly big part speedup provided cache repeated binary search comes keeping top levels implicit search tree cache cache size M line size L binary search keep log M L top levels cache packing methods keep log M top levels Eytzinger layout almost never slower usually faster sorted array even small array lengths Eytzinger child index calculations 2 1 2 2 simple done binary search Eytzinger layout surprisingly well current conjecture mainly due Paul Khuong prefetcher working really well isn't surprising since accessing array index next array index accessed 2 1 2 2 probably cache line Looking even two levels next access range 4 3 4 6 good prefetcher get lined two even three levels ahead time that's case using __builtin_prefetch directive might help Update confirmed using explicit prefetch __builtin_prefetch 16 22 top loop 4790K gives modest speedup run L2 cache Atom 330 figure left gives substantial speedup making Eytzinger layout competitive least graphs B-tree layout significant overhead small arrays example B 17 16 keys per block n 32 half searches require 10 comparisons methods 6 comparisons processors vEB layout doesn't become effective data gets really big index calculations complicated Nearly universally B-trees win data gets big enough"),
('Optimizing sparse matrix multiplication on Hadoop', "Skip content Joe Kelley's Blog programming math ramblings Optimizing Sparse Matrix Multiplication Hadoop Recently work spent time trying optimize large sparse matrix multiplication Hadoop part implementation larger algorithm Markov Clustering ended pursuing different route decided continue pursuing problem time learned fair amount think exists much better way decided write explanation algorithms involved well release code https github com jfkelley hadoop-matrix-mult post assumes knowledge Hadoop least MapReduce paradigm well mathematical definition matrix multiplication problem faced multiply two large square matrixes one roughly 500 000 x 500 000 good news relatively sparse 1 billion non-zero entries roughly 0 4 possible entries algorithms ll discuss apply larger smaller matrixes ll use point reference discussion Throughout post ll refer matrixes multiplication AB C elements a_ ij b_ ij c_ ij c_ ij sum_ k 1 n a_ ik b_ kj basic matrix multiplication algorithm pretty straight-forward implement based formula public static double multiply double double b assert 0 length b length double c new double length b 0 length int 0 c length int j 0 j c length j double sum 0 0 int k 0 k 0 length k sum k b k j c j sum return c However several obvious problems matrixes way big fit memory code requires three 2-d arrays doubles 500k x 500k 500k 500k 3 8 bytes 6 TB distributed lot computation O n 3 d like take advantage hundreds thousands cores Hadoop cluster taking advantage sparsity matrixes lot sum 0 0 0 0 executed wasteful decided tackle non-distributed problem first Whenever ve got big data algorithm problem great text start Mining Massive Datasets Leskovec Rajaraman Ullman available free online www mmds org highly recommend Sure enough book proposes two different algorithms first based fact store matrixes tuples j x meaning a_ ij x multiplication equivalent relation algebra join followed group aggregation SQL terms SELECT B j SUM x B x join B j B GROUP B j join aggregation operations relatively straightforward implementations MapReduce join pseudo-code map j x isLeft isLeft emit j j x isLeft else emit j x isLeft reduce k elements left filter elements element isLeft right filter elements element isLeft i1 j1 x1 left i2 j2 x2 right emit i1 j2 x1 x2 aggregation even easier map j x emit j x reduce j xs emit j sum xs algorithm one major flaw though intermediate data two jobs explosively large typical row column k non-zero entries k 2 records emitted call reduce first job Since matrixes aiming handle average 2000 entries per row results 2000x increase data volume originally manageable 16 GB suddenly pretty unwieldy 32 TB course would decreased back aggregation phase still slow generate write data second algorithm suggested MMDS based idea reduce key index resulting output value set reduce key j values needed calculate c_ ij values needed a_ i1 a_ i2 a_ i3 a_ well b_ 1j b_ 2j b_ 3j b_ nj actually come map function easier consider reverse question output values a_ ij used calculation would c_ i1 c_ i2 c_ i3 c_ b_ ij c_ 1j c_ 2j c_ 3j c_ nj natural translate pseudo-code map j x isLeft isLeft k 1 n emit k j x isLeft else k 1 n emit k j j x isLeft reduce j elements left filter elements element isLeft right filter elements element isLeft paired align left right based left col right row sum 0 i1 j1 x1 i2 j2 x2 paired sum x1 x2 emit j sum benefit requiring one MapReduce job data volume map reduce phases shuffle-sort even worse case data 500 000x large book wasn helpful set right sort path algorithm settled based submatrix multiplication split input matrixes configurable number submatrixes call reduce key corresponds multiplication two submatrixes submatrix multiplication another MapReduce job simply aggregation except version intermediate data times large map j x isLeft sub_i sub_j submatrix_membership j k 1 isLeft emit sub_i sub_j k j x isLeft else emit k sub_i sub_j j x isLeft reduce sub_i sub_k sub_j elements left filter elements element isLeft right filter elements element isLeft left_submatrix as_matrix left right_submatrix as_matrix right result left_submatrix right_submatrix standard in-memory matrix multiply j x result emit j x map j x emit j x reduce j xs emit j sum xs summary statistics part job hopefully explains much efficient algorithm Total input non-zero elements N Submatrix splits dimension Map-1 output records Reduce-1 input records Ns Reduce-1 number keys 3 Reduce-1 records per key frac N 2 Reduce-1 output data volume Map-2 input data volume propto Ns Reduce-2 output data volume propto N multiplication data volume set fairly low two requirements first number reduce keys 3 must enough saturate reduce slots cluster roughly total number cores perhaps 2 3 times avoid potential skew Second single reduce task must able hold frac N 2 elements memory execute submatrix multiplication good news means data volume grows multiplication factor grows sub-linearly O N 1 2 practice 10 leq leq 50 reasonable expectation additional optimization done well second job make use combiner reducer Furthermore custom partitioner used first job submatrix multiplications contribute final output value happen reduce task Thus output values part file part map task second job combiner effective fact also possible push combining logic back first reduce phase cost extra memory remaining piece puzzle submatrix multiplication wanted avoid reinventing wheel possible began looking Java matrix libraries found 40 However none could find met four basic requirements Decipherable documentation least mention popular use Sparse matrix storage Matrix multiplication utilizing sparsity Matrix multiplication outputting sparse storage last two discounted lot libraries Fair enough decided implement thought hard could first attempt store non-zero element map coordinates value missing elements implicitly 0 used HashMap IntPair Double Additionally make multiplication feasible left matrix needs map row index column indexes containing non-zero elements row right matrix needs transpose map column index row indexes containing non-zero elements column HashMap Integer TreeSet Integer implemented without much trouble went compare running time memory usage two popular libraries failed one requirements JBLAS Colt results pretty terrible First lot memory bloat overhead involved IntPair class overhead Java class Double double TreeSet also tons overhead could certainly use something else memory wasn biggest problem run time least 100x slower either Colt JBLAS think main reason probably memory access pattern accessing values HashMap TreeSet sequence memory accesses pretty much random lots little objects heap even re somewhat consolidated HashMap main array positions within chunk accessed random order mind hardware caches basically help keep mind relevant numbers every programmer know L1 cache reference 100x faster main memory reference L2 cache reference 25x faster definitely matter Furthermore random behavior means branch prediction basically help research found method called compressed row storage CRS used several libraries mentioned earlier quite way wanted CRS store three things large array doubles values containing non-zero elements array row-major order equally large array integers col_indexes containing column-indexes corresponding elements double array smaller array integers row_pointers containing locations two large arrays new rows start example consider matrix left begin array cccc 0 2 0 3 5 1 0 0 0 0 0 2 0 1 1 0 end array right CRS would stored values 2 3 5 1 2 1 1 col_indexes 1 3 0 1 3 1 2 row_pointers 0 2 4 5 also transpose compressed column storage similar values stored column-major order row indexes stored instead column indexes start-of-column pointers stored instead start-of-row pointers matrix CCS would values 5 2 1 1 1 3 2 row_indexes 1 0 1 3 3 0 2 col_pointers 0 1 4 5 Memory-wise efficient gets 12 bytes 1 double 1 int per element 4 bytes per row per column also enables extremely fast multiplication left matrix stored CRS right matrix B CCS computing output value c_ ij need row column j B row_pointers col_pointers arrays used find row column begin end within values arrays iterate sections arrays multiply elements matching values col_indexes row_indexes arrays public static void mult CompRowMatrix CompColMatrix b int 0 major benefits First note line sum vals i1 b vals i2 ever multiplies adds non-zero values non-zero values stored extraneous arithmetic perhaps real performance win memory access pattern great large arrays walked order fact entirety right matrix's values array iterated order left matrix accessed chunks Perhaps picture explains best Basically means caching super-effective Lots cache hits misses Furthermore branch prediction pretty well inner-most if-elseif-else statement real-world matrixes matrix truly random would matrixes random there's structure regions matrix non-zero branch prediction much better often long runs one branches executed Anyway I'm happy say implementation actually beats Colt JBLAS ran really simple benchmarks laptop First tested multiplying two random square matrixes varying size constant sparsity 1 non-zero entries also tested constant size varying sparsity see JBLAS actually use implementation utilizes sparsity matrix effect running time Also note crossover point 1 lower expected still safely 0 4 actual matrixes question future improvement I'd like investigate matrix multiplication methods better asymptotic performance Strassen algorithm Coppersmith-Winograd algorithm expect might tradeoff supposed algorithmic big-O speed practical details like caches branch prediction would also interesting see could incorporated MR level instead submatrix multiplication level Remember actual implementation available https github com jfkelley hadoop-matrix-mult want actually use go ahead also notes README implementation details Categorized Math Programming Posted May 8 2015May 14 2015 joefkelley Leave Reply Cancel reply email address published Required fields marked Name Email Website Copy Password Type Paste Password Comment Post navigation Dota 2 Ability Draft Statistical Analysis Part 2 Decode Scott Smith Resume Search Recent Posts Optimizing Sparse Matrix Multiplication Hadoop Dota 2 Ability Draft Statistical Analysis Part 2 Dota 2 Ability Draft Statistical Analysis Part 1 Short-form Communication Binary Matrix Proof Puzzle Recent Comments joefkelley Random sampling Hivejames Random sampling Hivetrykyn Dota 2 Ability Draft Statistical Analysis Part 1Wi Binary Operator Puzzle SolutionTB-Hypochondriac Dota 2 Ability Draft Statistical Analysis Part 1Archives May 2015 January 2015 October 2014 June 2014 May 2014 April 2014 February 2014 January 2014 December 2013 November 2013 September 2013 August 2013 June 2013 April 2013 March 2013 February 2013 January 2013 December 2012 November 2012 October 2012"),
('Intro to multithreading with a focus on pthread for examples', "POSIX Threads Programming Author Blaise Barney Lawrence Livermore National Laboratory UCRL-MI-133316 Table Contents Abstract Pthreads Overview Thread Pthreads Pthreads Designing Threaded Programs Pthreads API Compiling Threaded Programs Thread Management Creating Terminating Threads Passing Arguments Threads Joining Detaching Threads Stack Management Miscellaneous Routines Exercise 1 Mutex Variables Mutex Variables Overview Creating Destroying Mutexes Locking Unlocking Mutexes Condition Variables Condition Variables Overview Creating Destroying Condition Variables Waiting Signaling Condition Variables Monitoring Debugging Performance Analysis Tools Pthreads LLNL Specific Information Recommendations Topics Covered Exercise 2 References Information Appendix Pthread Library Routines Reference Abstract shared memory multiprocessor architectures threads used implement parallelism Historically hardware vendors implemented proprietary versions threads making portability concern software developers UNIX systems standardized C language threads programming interface specified IEEE POSIX 1003 1c standard Implementations adhere standard referred POSIX threads Pthreads tutorial begins introduction concepts motivations design considerations using Pthreads three major classes routines Pthreads API covered Thread Management Mutex Variables Condition Variables Example codes used throughout demonstrate use Pthreads routines needed new Pthreads programmer tutorial concludes discussion LLNL specifics mix MPI pthreads lab exercise numerous example codes C Language also included Level Prerequisites tutorial one eight tutorials 4 day Using LLNL's Supercomputers workshop deal new parallel programming threads basic understanding parallel programming C required unfamiliar Parallel Programming general material covered EC3500 Introduction Parallel Computing would helpful Pthreads Overview Thread Technically thread defined independent stream instructions scheduled run operating system mean software developer concept procedure runs independently main program may best describe thread go one step imagine main program contains number procedures imagine procedures able scheduled run simultaneously independently operating system would describe multi-threaded program accomplished understanding thread one first needs understand UNIX process process created operating system requires fair amount overhead Processes contain information program resources program execution state including Process ID process group ID user ID group ID Environment Working directory Program instructions Registers Stack Heap File descriptors Signal actions Shared libraries Inter-process communication tools message queues pipes semaphores shared memory UNIX PROCESS THREADS WITHIN UNIX PROCESS Threads use exist within process resources yet able scheduled operating system run independent entities largely duplicate bare essential resources enable exist executable code independent flow control accomplished thread maintains Stack pointer Registers Scheduling properties policy priority Set pending blocked signals Thread specific data summary UNIX environment thread Exists within process uses process resources independent flow control long parent process exists OS supports Duplicates essential resources needs independently schedulable May share process resources threads act equally independently dependently Dies parent process dies - something similar lightweight overhead already accomplished creation process threads within process share resources Changes made one thread shared system resources closing file seen threads Two pointers value point data Reading writing memory locations possible therefore requires explicit synchronization programmer Pthreads Overview Pthreads Historically hardware vendors implemented proprietary versions threads implementations differed substantially making difficult programmers develop portable threaded applications order take full advantage capabilities provided threads standardized programming interface required UNIX systems interface specified IEEE POSIX 1003 1c standard 1995 Implementations adhering standard referred POSIX threads Pthreads hardware vendors offer Pthreads addition proprietary API's POSIX standard continued evolve undergo revisions including Pthreads specification useful links standards ieee org findstds standard 1003 1-2008 html www opengroup org austin papers posix_faq html www unix org version3 ieee_std html Pthreads defined set C language programming types procedure calls implemented pthread h header include file thread library - though library may part another library libc implementations Pthreads Overview Pthreads Light Weight compared cost creating managing process thread created much less operating system overhead Managing threads requires fewer system resources managing processes example following table compares timing results fork subroutine pthread_create subroutine Timings reflect 50 000 process thread creations performed time utility units seconds optimization flags Note don't expect sytem user times add real time SMP systems multiple CPUs cores working problem time best approximations run local machines past present Platform fork pthread_create real user sys real user sys Intel 2 6 GHz Xeon E5-2670 16 cores node 8 1 0 1 2 9 0 9 0 2 0 3 Intel 2 8 GHz Xeon 5660 12 cores node 4 4 0 4 4 3 0 7 0 2 0 5 AMD 2 3 GHz Opteron 16 cores node 12 5 1 0 12 5 1 2 0 2 1 3 AMD 2 4 GHz Opteron 8 cores node 17 6 2 2 15 7 1 4 0 3 1 3 IBM 4 0 GHz POWER6 8 cpus node 9 5 0 6 8 8 1 6 0 1 0 4 IBM 1 9 GHz POWER5 p5-575 8 cpus node 64 2 30 7 27 6 1 7 0 6 1 1 IBM 1 5 GHz POWER4 8 cpus node 104 5 48 6 47 2 2 1 1 0 1 5 INTEL 2 4 GHz Xeon 2 cpus node 54 9 1 5 20 8 1 6 0 7 0 9 INTEL 1 4 GHz Itanium2 4 cpus node 54 5 1 1 22 2 2 0 1 2 0 6 fork_vs_thread txt Efficient Communications Data Exchange primary motivation considering use Pthreads multi-processor architecture achieve optimum performance particular application using MPI on-node communications potential performance could improved using Pthreads instead MPI libraries usually implement on-node task communication via shared memory involves least one memory copy operation process process Pthreads intermediate memory copy required threads share address space within single process data transfer per se efficient simply passing pointer worst case scenario Pthread communications become cache-to-CPU memory-to-CPU bandwidth issue speeds much higher MPI shared memory communications example local comparisons past present shown Platform MPI Shared Memory Bandwidth GB sec Pthreads Worst CaseMemory-to-CPU Bandwidth GB sec Intel 2 6 GHz Xeon E5-2670 4 5 51 2 Intel 2 8 GHz Xeon 5660 5 6 32 AMD 2 3 GHz Opteron 1 8 5 3 AMD 2 4 GHz Opteron 1 2 5 3 IBM 1 9 GHz POWER5 p5-575 4 1 16 IBM 1 5 GHz POWER4 2 1 4 Intel 2 4 GHz Xeon 0 3 4 3 Intel 1 4 GHz Itanium 2 1 8 6 4 Common Reasons Threaded applications offer potential performance gains practical advantages non-threaded applications several ways Overlapping CPU work O example program may sections performing long O operation one thread waiting O system call complete CPU intensive work performed threads Priority real-time scheduling tasks important scheduled supersede interrupt lower priority tasks Asynchronous event handling tasks service events indeterminate frequency duration interleaved example web server transfer data previous requests manage arrival new requests perfect example typical web browser many interleaved tasks happening time tasks vary priority Another good example modern operating system makes extensive use threads screenshot MS Windows OS applications using threads shown Click image larger version Pthreads Overview Designing Threaded Programs Parallel Programming modern multi-core machines pthreads ideally suited parallel programming whatever applies parallel programming general applies parallel pthreads programs many considerations designing parallel programs type parallel programming model use Problem partitioning Load balancing Communications Data dependencies Synchronization race conditions Memory issues O issues Program complexity Programmer effort costs time Covering topics beyond scope tutorial however interested readers obtain quick overview Introduction Parallel Computing tutorial general though order program take advantage Pthreads must able organized discrete independent tasks execute concurrently example routine1 routine2 interchanged interleaved overlapped real time candidates threading Programs following characteristics may well suited pthreads Work executed data operated multiple tasks simultaneously Block potentially long O waits Use many CPU cycles places others Must respond asynchronous events work important work priority interrupts Several common models threaded programs exist Manager worker single thread manager assigns work threads workers Typically manager handles input parcels work tasks least two forms manager worker model common static worker pool dynamic worker pool Pipeline task broken series suboperations handled series concurrently different thread automobile assembly line best describes model Peer similar manager worker model main thread creates threads participates work Shared Memory Model threads access global shared memory Threads also private data Programmers responsible synchronizing access protecting globally shared data Thread-safeness Thread-safeness nutshell refers application's ability execute multiple threads simultaneously without clobbering shared data creating race conditions example suppose application creates several threads makes call library routine library routine accesses modifies global structure location memory thread calls routine possible may try modify global structure memory location time routine employ sort synchronization constructs prevent data corruption thread-safe implication users external library routines aren't 100 certain routine thread-safe take chances problems could arise Recommendation careful application uses libraries objects don't explicitly guarantee thread-safeness doubt assume thread-safe proven otherwise done serializing calls uncertain routine etc Thread Limits Although Pthreads API ANSI IEEE standard implementations usually vary ways specified standard program runs fine one platform may fail produce wrong results another platform example maximum number threads permitted default thread stack size two important limits consider designing program Several thread limits discussed detail later tutorial Pthreads API original Pthreads API defined ANSI IEEE POSIX 1003 1 - 1995 standard POSIX standard continued evolve undergo revisions including Pthreads specification Copies standard purchased IEEE downloaded free sites online subroutines comprise Pthreads API informally grouped four major groups Thread management Routines work directly threads - creating detaching joining etc also include functions set query thread attributes joinable scheduling etc Mutexes Routines deal synchronization called mutex abbreviation mutual exclusion Mutex functions provide creating destroying locking unlocking mutexes supplemented mutex attribute functions set modify attributes associated mutexes Condition variables Routines address communications threads share mutex Based upon programmer specified conditions group includes functions create destroy wait signal based upon specified variable values Functions set query condition variable attributes also included Synchronization Routines manage read write locks barriers Naming conventions identifiers threads library begin pthread_ examples shown Routine Prefix Functional Group pthread_ Threads miscellaneous subroutines pthread_attr_ Thread attributes objects pthread_mutex_ Mutexes pthread_mutexattr_ Mutex attributes objects pthread_cond_ Condition variables pthread_condattr_ Condition attributes objects pthread_key_ Thread-specific data keys pthread_rwlock_ Read write locks pthread_barrier_ Synchronization barriers concept opaque objects pervades design API basic calls work create modify opaque objects - opaque objects modified calls attribute functions deal opaque attributes Pthreads API contains around 100 subroutines tutorial focus subset - specifically likely immediately useful beginning Pthreads programmer portability pthread h header file included source file using Pthreads library current POSIX standard defined C language Fortran programmers use wrappers around C function calls Fortran compilers may provide Fortram pthreads API number excellent books Pthreads available Several listed References section tutorial Compiling Threaded Programs Several examples compile commands used pthreads codes listed table Compiler Platform Compiler Command Description INTELLinux icc -pthread C icpc -pthread C PGILinux pgcc -lpthread C pgCC -lpthread C GNULinux Blue Gene gcc -pthread GNU C g -pthread GNU C IBM Blue Gene bgxlc_r bgcc_r C ANSI non-ANSI bgxlC_r bgxlc _r C Thread Management Creating Terminating Threads Routines pthread_create thread attr start_routine arg pthread_exit status pthread_cancel thread pthread_attr_init attr pthread_attr_destroy attr Creating Threads Initially main program comprises single default thread threads must explicitly created programmer pthread_create creates new thread makes executable routine called number times anywhere within code pthread_create arguments thread opaque unique identifier new thread returned subroutine attr opaque attribute object may used set thread attributes specify thread attributes object NULL default values start_routine C routine thread execute created arg single argument may passed start_routine must passed reference pointer cast type void NULL may used argument passed maximum number threads may created process implementation dependent Programs attempt exceed limit fail produce wrong results Querying setting implementation's thread limit - Linux example shown Demonstrates querying default soft limits setting maximum number processes including threads hard limit verifying limit overridden bash ksh sh tcsh csh ulimit -a core file size blocks -c 16 data seg size kbytes -d unlimited scheduling priority -e 0 file size blocks -f unlimited pending signals -i 255956 max locked memory kbytes -l 64 max memory size kbytes -m unlimited open files -n 1024 pipe size 512 bytes -p 8 POSIX message queues bytes -q 819200 real-time priority -r 0 stack size kbytes -s unlimited cpu time seconds -t unlimited max user processes -u 1024 virtual memory kbytes -v unlimited file locks -x unlimited ulimit -Hu 7168 ulimit -u 7168 ulimit -a core file size blocks -c 16 data seg size kbytes -d unlimited scheduling priority -e 0 file size blocks -f unlimited pending signals -i 255956 max locked memory kbytes -l 64 max memory size kbytes -m unlimited open files -n 1024 pipe size 512 bytes -p 8 POSIX message queues bytes -q 819200 real-time priority -r 0 stack size kbytes -s unlimited cpu time seconds -t unlimited max user processes -u 7168 virtual memory kbytes -v unlimited file locks -x unlimited limit cputime unlimited filesize unlimited datasize unlimited stacksize unlimited coredumpsize 16 kbytes memoryuse unlimited vmemoryuse unlimited descriptors 1024 memorylocked 64 kbytes maxproc 1024 limit maxproc unlimited limit cputime unlimited filesize unlimited datasize unlimited stacksize unlimited coredumpsize 16 kbytes memoryuse unlimited vmemoryuse unlimited descriptors 1024 memorylocked 64 kbytes maxproc 7168 created threads peers may create threads implied hierarchy dependency threads Thread Attributes default thread created certain attributes attributes changed programmer via thread attribute object pthread_attr_init pthread_attr_destroy used initialize destroy thread attribute object routines used query set specific attributes thread attribute object Attributes include Detached joinable state Scheduling inheritance Scheduling policy Scheduling parameters Scheduling contention scope Stack size Stack address Stack guard overflow size attributes discussed later Thread Binding Scheduling Question thread created know scheduled run operating system b processor core run Pthreads API provides several routines may used specify threads scheduled execution example threads scheduled run FIFO first-in first-out RR round-robin operating system determines also provides ability set thread's scheduling priority value topics covered however good overview things work Linux found sched_setscheduler man page Pthreads API provide routines binding threads specific cpus cores However local implementations may include functionality - providing non-standard pthread_setaffinity_np routine Note _np name stands non-portable Also local operating system may provide way example Linux provides sched_setaffinity routine Terminating Threads pthread_exit several ways thread may terminated thread returns normally starting routine It's work done thread makes call pthread_exit subroutine - whether work done thread canceled another thread via pthread_cancel routine entire process terminated due making call either exec exit main finishes first without calling pthread_exit explicitly pthread_exit routine allows programmer specify optional termination status parameter optional parameter typically returned threads joining terminated thread covered later subroutines execute completion normally often dispense calling pthread_exit - unless course want pass optional status code back Cleanup pthread_exit routine close files files opened inside thread remain open thread terminated Discussion calling pthread_exit main definite problem main finishes threads spawned don't call pthread_exit explicitly threads created terminate main done longer exists support threads main explicitly call pthread_exit last thing main block kept alive support threads created done Example Pthread Creation Termination simple example code creates 5 threads pthread_create routine thread prints Hello World message terminates call pthread_exit Example Code - Pthread Creation Termination include LT pthread h GT include LT stdio h GT define NUM_THREADS 5 void PrintHello void threadid long tid tid long threadid printf Hello World It's thread ld n tid pthread_exit NULL int main int argc char argv pthread_t threads NUM_THREADS int rc long 0 LT NUM_THREADS printf main creating thread ld n rc pthread_create threads NULL PrintHello void rc printf ERROR return code pthread_create d n rc exit -1 Last thing main pthread_exit NULL Thread Management Passing Arguments Threads pthread_create routine permits programmer pass one argument thread start routine cases multiple arguments must passed limitation easily overcome creating structure contains arguments passing pointer structure pthread_create routine arguments must passed reference cast void Question safely pass data newly created threads given non-deterministic start-up scheduling Example 1 - Thread Argument Passing code fragment demonstrates pass simple integer thread calling thread uses unique data structure thread insuring thread's argument remains intact throughout program long taskids NUM_THREADS 0 LT NUM_THREADS taskids long malloc sizeof long taskids printf Creating thread ld n rc pthread_create threads NULL PrintHello void taskids Example 2 - Thread Argument Passing example shows setup pass multiple arguments via structure thread receives unique instance structure struct thread_data int thread_id int sum char message struct thread_data thread_data_array NUM_THREADS void PrintHello void threadarg struct thread_data my_data my_data struct thread_data threadarg taskid my_data- thread_id sum my_data- sum hello_msg my_data- message int main int argc char argv thread_data_array thread_id thread_data_array sum sum thread_data_array message messages rc pthread_create threads NULL PrintHello void thread_data_array Example 3 - Thread Argument Passing Incorrect example performs argument passing incorrectly passes address variable shared memory space visible threads loop iterates value memory location changes possibly created threads access int rc long 0 LT NUM_THREADS printf Creating thread ld n rc pthread_create threads NULL PrintHello void Thread Management Joining Detaching Threads Routines pthread_join threadid status pthread_detach threadid pthread_attr_setdetachstate attr detachstate pthread_attr_getdetachstate attr detachstate Joining Joining one way accomplish synchronization threads example pthread_join subroutine blocks calling thread specified threadid thread terminates programmer able obtain target thread's termination return status specified target thread's call pthread_exit joining thread match one pthread_join call logical error attempt multiple joins thread Two synchronization methods mutexes condition variables discussed later Joinable thread created one attributes defines whether joinable detached threads created joinable joined thread created detached never joined final draft POSIX standard specifies threads created joinable explicitly create thread joinable detached attr argument pthread_create routine used typical 4 step process Declare pthread attribute variable pthread_attr_t data type Initialize attribute variable pthread_attr_init Set attribute detached status pthread_attr_setdetachstate done free library resources used attribute pthread_attr_destroy Detaching pthread_detach routine used explicitly detach thread even though created joinable converse routine Recommendations thread requires joining consider explicitly creating joinable provides portability implementations may create threads joinable default know advance thread never need join another thread consider creating detached state system resources may able freed Example Pthread Joining Example Code - Pthread Joining example demonstrates wait thread completions using Pthread join routine Since implementations Pthreads may create threads joinable state threads example explicitly created joinable state joined later include LT pthread h GT include LT stdio h GT include LT stdlib h GT include LT math h GT define NUM_THREADS 4 void BusyWork void int long tid double result 0 0 tid long printf Thread ld starting n tid 0 LT 1000000 result result sin tan printf Thread ld done Result e n tid result pthread_exit void int main int argc char argv pthread_t thread NUM_THREADS pthread_attr_t attr int rc long void status Initialize set thread detached attribute pthread_attr_init attr pthread_attr_setdetachstate attr PTHREAD_CREATE_JOINABLE 0 LT NUM_THREADS printf Main creating thread ld n rc pthread_create thread attr BusyWork void rc printf ERROR return code pthread_create d n rc exit -1 Free attribute wait threads pthread_attr_destroy attr 0 LT NUM_THREADS rc pthread_join thread status rc printf ERROR return code pthread_join d n rc exit -1 printf Main completed join thread ld status ld n long status printf Main program completed Exiting n pthread_exit NULL Thread Management Stack Management Routines pthread_attr_getstacksize attr stacksize pthread_attr_setstacksize attr stacksize pthread_attr_getstackaddr attr stackaddr pthread_attr_setstackaddr attr stackaddr Preventing Stack Problems POSIX standard dictate size thread's stack implementation dependent varies Exceeding default stack limit often easy usual results program termination corrupted data Safe portable programs depend upon default stack limit instead explicitly allocate enough stack thread using pthread_attr_setstacksize routine pthread_attr_getstackaddr pthread_attr_setstackaddr routines used applications environment stack thread must placed particular region memory Practical Examples LC Default thread stack size varies greatly maximum size obtained also varies greatly may depend upon number threads per node past present architectures shown demonstrate wide variation default thread stack size NodeArchitecture CPUs Memory GB Default Size bytes Intel Xeon E5-2670 16 32 2 097 152 Intel Xeon 5660 12 24 2 097 152 AMD Opteron 8 16 2 097 152 Intel IA64 4 8 33 554 432 Intel IA32 2 4 2 097 152 IBM Power5 8 32 196 608 IBM Power4 8 16 196 608 IBM Power3 16 16 98 304 Example Stack Management Example Code - Stack Management example demonstrates query set thread's stack size include LT pthread h GT include LT stdio h GT define NTHREADS 4 define N 1000 define MEGEXTRA 1000000 pthread_attr_t attr void dowork void threadid double N N int j long tid size_t mystacksize tid long threadid pthread_attr_getstacksize attr mystacksize printf Thread ld stack size li bytes n tid mystacksize 0 LT N j 0 j LT N j j j 3 452 N-i pthread_exit NULL int main int argc char argv pthread_t threads NTHREADS size_t stacksize int rc long pthread_attr_init attr pthread_attr_getstacksize attr stacksize printf Default stack size li n stacksize stacksize sizeof double N N MEGEXTRA printf Amount stack needed per thread li n stacksize pthread_attr_setstacksize attr stacksize printf Creating threads stack size li bytes n stacksize 0 LT NTHREADS rc pthread_create threads attr dowork void rc printf ERROR return code pthread_create d n rc exit -1 printf Created ld threads n pthread_exit NULL Thread Management Miscellaneous Routines pthread_self pthread_equal thread1 thread2 pthread_self returns unique system assigned thread ID calling thread pthread_equal compares two thread IDs two IDs different 0 returned otherwise non-zero value returned Note routines thread identifier objects opaque easily inspected thread IDs opaque objects C language equivalence operator used compare two thread IDs compare single thread ID another value pthread_once once_control init_routine pthread_once executes init_routine exactly process first call routine thread process executes given init_routine without parameters subsequent call effect init_routine routine typically initialization routine once_control parameter synchronization control structure requires initialization prior calling pthread_once example pthread_once_t once_control PTHREAD_ONCE_INIT Pthread Exercise 1 Getting Started Thread Management Routines Overview Login LC cluster using workshop username OTP token Copy exercise files home directory Familiarize LC's Pthreads environment Write simple Hello World Pthreads program Successfully compile program Successfully run program - several different ways Review compile run debug related Pthreads programs provided GO EXERCISE Mutex Variables Overview Mutex abbreviation mutual exclusion Mutex variables one primary means implementing thread synchronization protecting shared data multiple writes occur mutex variable acts like lock protecting access shared data resource basic concept mutex used Pthreads one thread lock mutex variable given time Thus even several threads try lock mutex one thread successful thread mutex owning thread unlocks mutex Threads must take turns accessing protected data Mutexes used prevent race conditions example race condition involving bank transaction shown Thread 1 Thread 2 Balance Read balance 1000 1000 Read balance 1000 1000 Deposit 200 1000 Deposit 200 1000 Update balance 1000 200 1200 Update balance 1000 200 1200 example mutex used lock Balance thread using shared data resource often action performed thread owning mutex updating global variables safe way ensure several threads update variable final value would one thread performed update variables updated belong critical section typical sequence use mutex follows Create initialize mutex variable Several threads attempt lock mutex one succeeds thread owns mutex owner thread performs set actions owner unlocks mutex Another thread acquires mutex repeats process Finally mutex destroyed several threads compete mutex losers block call - unblocking call available trylock instead lock call protecting shared data programmer's responsibility make sure every thread needs use mutex example 4 threads updating data one uses mutex data still corrupted Mutex Variables Creating Destroying Mutexes Routines pthread_mutex_init mutex attr pthread_mutex_destroy mutex pthread_mutexattr_init attr pthread_mutexattr_destroy attr Usage Mutex variables must declared type pthread_mutex_t must initialized used two ways initialize mutex variable Statically declared example pthread_mutex_t mymutex PTHREAD_MUTEX_INITIALIZER Dynamically pthread_mutex_init routine method permits setting mutex object attributes attr mutex initially unlocked attr object used establish properties mutex object must type pthread_mutexattr_t used may specified NULL accept defaults Pthreads standard defines three optional mutex attributes Protocol Specifies protocol used prevent priority inversions mutex Prioceiling Specifies priority ceiling mutex Process-shared Specifies process sharing mutex Note implementations may provide three optional mutex attributes pthread_mutexattr_init pthread_mutexattr_destroy routines used create destroy mutex attribute objects respectively pthread_mutex_destroy used free mutex object longer needed Mutex Variables Locking Unlocking Mutexes Routines pthread_mutex_lock mutex pthread_mutex_trylock mutex pthread_mutex_unlock mutex Usage pthread_mutex_lock routine used thread acquire lock specified mutex variable mutex already locked another thread call block calling thread mutex unlocked pthread_mutex_trylock attempt lock mutex However mutex already locked routine return immediately busy error code routine may useful preventing deadlock conditions priority-inversion situation pthread_mutex_unlock unlock mutex called owning thread Calling routine required thread completed use protected data threads acquire mutex work protected data error returned mutex already unlocked mutex owned another thread nothing magical mutexes fact akin gentlemen's agreement participating threads code writer insure necessary threads make mutex lock unlock calls correctly following scenario demonstrates logical error Thread 1 Thread 2 Thread 3 Lock Lock 2 1 B Unlock Unlock Question one thread waiting locked mutex thread granted lock first released Example Using Mutexes Example Code - Using Mutexes example program illustrates use mutex variables threads program performs dot product main data made available threads globally accessible structure thread works different part data main thread waits threads complete computations prints resulting sum include LT pthread h GT include LT stdio h GT include LT stdlib h GT following structure contains necessary information allow function dotprod access input data place output structure typedef struct double double b double sum int veclen DOTDATA Define globally accessible variables mutex define NUMTHRDS 4 define VECLEN 100 DOTDATA dotstr pthread_t callThd NUMTHRDS pthread_mutex_t mutexsum function dotprod activated thread created input routine obtained structure type DOTDATA output function written structure benefit approach apparent multi-threaded program thread created pass single argument activated function - typically argument thread number information required function accessed globally accessible structure void dotprod void arg Define use local variables convenience int start end len long offset double mysum x y offset long arg len dotstr veclen start offset len end start len x dotstr y dotstr b Perform dot product assign result appropriate variable structure mysum 0 start LT end mysum x y Lock mutex prior updating value shared structure unlock upon updating pthread_mutex_lock mutexsum dotstr sum mysum pthread_mutex_unlock mutexsum pthread_exit void 0 main program creates threads work print result upon completion creating threads input data created Since threads update shared structure need mutex mutual exclusion main thread needs wait threads complete waits one threads specify thread attribute value allow main thread join threads creates Note also free handles longer needed int main int argc char argv long double b void status pthread_attr_t attr Assign storage initialize values double malloc NUMTHRDS VECLEN sizeof double b double malloc NUMTHRDS VECLEN sizeof double 0 LT VECLEN NUMTHRDS 1 0 b dotstr veclen VECLEN dotstr dotstr b b dotstr sum 0 pthread_mutex_init mutexsum NULL Create threads perform dotproduct pthread_attr_init attr pthread_attr_setdetachstate attr PTHREAD_CREATE_JOINABLE 0 LT NUMTHRDS thread works different set data offset specified 'i' size data thread indicated VECLEN pthread_create callThd attr dotprod void pthread_attr_destroy attr Wait threads 0 LT NUMTHRDS pthread_join callThd status joining print results cleanup printf Sum f n dotstr sum free free b pthread_mutex_destroy mutexsum pthread_exit NULL Serial version Pthreads version Condition Variables Overview Condition variables provide yet another way threads synchronize mutexes implement synchronization controlling thread access data condition variables allow threads synchronize based upon actual value data Without condition variables programmer would need threads continually polling possibly critical section check condition met resource consuming since thread would continuously busy activity condition variable way achieve goal without polling condition variable always used conjunction mutex lock representative sequence using condition variables shown Main Thread Declare initialize global data variables require synchronization count Declare initialize condition variable object Declare initialize associated mutex Create threads B work Thread work point certain condition must occur count must reach specified value Lock associated mutex check value global variable Call pthread_cond_wait perform blocking wait signal Thread-B Note call pthread_cond_wait automatically atomically unlocks associated mutex variable used Thread-B signalled wake Mutex automatically atomically locked Explicitly unlock mutex Continue Thread B work Lock associated mutex Change value global variable Thread-A waiting upon Check value global Thread-A wait variable fulfills desired condition signal Thread-A Unlock mutex Continue Main Thread Join Continue Condition Variables Creating Destroying Condition Variables Routines pthread_cond_init condition attr pthread_cond_destroy condition pthread_condattr_init attr pthread_condattr_destroy attr Usage Condition variables must declared type pthread_cond_t must initialized used two ways initialize condition variable Statically declared example pthread_cond_t myconvar PTHREAD_COND_INITIALIZER Dynamically pthread_cond_init routine ID created condition variable returned calling thread condition parameter method permits setting condition variable object attributes attr optional attr object used set condition variable attributes one attribute defined condition variables process-shared allows condition variable seen threads processes attribute object used must type pthread_condattr_t may specified NULL accept defaults Note implementations may provide process-shared attribute pthread_condattr_init pthread_condattr_destroy routines used create destroy condition variable attribute objects pthread_cond_destroy used free condition variable longer needed Condition Variables Waiting Signaling Condition Variables Routines pthread_cond_wait condition mutex pthread_cond_signal condition pthread_cond_broadcast condition Usage pthread_cond_wait blocks calling thread specified condition signalled routine called mutex locked automatically release mutex waits signal received thread awakened mutex automatically locked use thread programmer responsible unlocking mutex thread finished Recommendation Using loop instead statement see watch_count routine example check waited condition help deal several potential problems several threads waiting wake signal take turns acquiring mutex one modify condition waited thread received signal error due program bug Pthreads library permitted issue spurious wake ups waiting thread without violating standard pthread_cond_signal routine used signal wake another thread waiting condition variable called mutex locked must unlock mutex order pthread_cond_wait routine complete pthread_cond_broadcast routine used instead pthread_cond_signal one thread blocking wait state logical error call pthread_cond_signal calling pthread_cond_wait Proper locking unlocking associated mutex variable essential using routines example Failing lock mutex calling pthread_cond_wait may cause block Failing unlock mutex calling pthread_cond_signal may allow matching pthread_cond_wait routine complete remain blocked Example Using Condition Variables Example Code - Using Condition Variables simple example code demonstrates use several Pthread condition variable routines main routine creates three threads Two threads perform work update count variable third thread waits count variable reaches specified value include LT pthread h GT include LT stdio h GT include LT stdlib h GT define NUM_THREADS 3 define TCOUNT 10 define COUNT_LIMIT 12 int count 0 int thread_ids 3 0 1 2 pthread_mutex_t count_mutex pthread_cond_t count_threshold_cv void inc_count void int long my_id long 0 LT TCOUNT pthread_mutex_lock count_mutex count Check value count signal waiting thread condition reached Note occurs mutex locked count COUNT_LIMIT pthread_cond_signal count_threshold_cv printf inc_count thread ld count d Threshold reached n my_id count printf inc_count thread ld count d unlocking mutex n my_id count pthread_mutex_unlock count_mutex work threads alternate mutex lock sleep 1 pthread_exit NULL void watch_count void long my_id long printf Starting watch_count thread ld n my_id Lock mutex wait signal Note pthread_cond_wait routine automatically atomically unlock mutex waits Also note COUNT_LIMIT reached routine run waiting thread loop skipped prevent pthread_cond_wait never returning pthread_mutex_lock count_mutex count LT COUNT_LIMIT pthread_cond_wait count_threshold_cv count_mutex printf watch_count thread ld Condition signal received n my_id count 125 printf watch_count thread ld count d n my_id count pthread_mutex_unlock count_mutex pthread_exit NULL int main int argc char argv int rc long t1 1 t2 2 t3 3 pthread_t threads 3 pthread_attr_t attr Initialize mutex condition variable objects pthread_mutex_init count_mutex NULL pthread_cond_init count_threshold_cv NULL portability explicitly create threads joinable state pthread_attr_init attr pthread_attr_setdetachstate attr PTHREAD_CREATE_JOINABLE pthread_create threads 0 attr watch_count void t1 pthread_create threads 1 attr inc_count void t2 pthread_create threads 2 attr inc_count void t3 Wait threads complete 0 LT NUM_THREADS pthread_join threads NULL printf Main Waited d threads Done n NUM_THREADS Clean exit pthread_attr_destroy attr pthread_mutex_destroy count_mutex pthread_cond_destroy count_threshold_cv pthread_exit NULL Monitoring Debugging Performance Analysis Tools Pthreads Monitoring Debugging Pthreads Debuggers vary ability handle Pthreads TotalView debugger LC's recommended debugger parallel programs well suited monitoring debugging threaded programs example screenshot TotalView session using threaded code shown Stack Trace Pane Displays call stack routines selected thread executing Status Bars Show status information selected thread associated process Stack Frame Pane Shows selected thread's stack variables registers etc Source Pane Shows source code selected thread Root Window showing threads Threads Pane Shows threads associated selected process See TotalView Debugger tutorial details Linux ps command provides several flags viewing thread information examples shown See man page details ps -Lf UID PID PPID LWP C NLWP STIME TTY TIME CMD blaise 22529 28240 22529 0 5 11 31 pts 53 00 00 00 blaise 22529 28240 22530 99 5 11 31 pts 53 00 01 24 blaise 22529 28240 22531 99 5 11 31 pts 53 00 01 24 blaise 22529 28240 22532 99 5 11 31 pts 53 00 01 24 blaise 22529 28240 22533 99 5 11 31 pts 53 00 01 24 ps -T PID SPID TTY TIME CMD 22529 22529 pts 53 00 00 00 22529 22530 pts 53 00 01 49 22529 22531 pts 53 00 01 49 22529 22532 pts 53 00 01 49 22529 22533 pts 53 00 01 49 ps -Lm PID LWP TTY TIME CMD 22529 - pts 53 00 18 56 - 22529 - 00 00 00 - - 22530 - 00 04 44 - - 22531 - 00 04 44 - - 22532 - 00 04 44 - - 22533 - 00 04 44 - LC's Linux clusters also provide top command monitor processes node used -H flag threads contained within process visible example top -H command shown parent process PID 18010 spawned three threads shown PIDs 18012 18013 18014 Performance Analysis Tools variety performance analysis tools used threaded programs Searching web turn wealth information LC list supported computing tools found computing llnl gov code content software_tools php tools vary significantly complexity functionality learning curve Covering detail beyond scope tutorial tools worth investigating specifically threaded codes include Open SpeedShop TAU HPCToolkit PAPI Intel VTune Amplifier ThreadSpotter LLNL Specific Information Recommendations section describes details specific Livermore Computing's systems Implementations LC production systems include Pthreads implementation follows draft 10 final POSIX standard preferred implementation Implementations differ maximum number threads process may create also differ default amount thread stack space Compiling LC maintains number compilers usually several different versions - see LC's Supported Compilers web page compiler commands described Compiling Threaded Programs section apply LC systems Mixing MPI Pthreads primary motivation using Pthreads LC Design MPI process typically creates manages N threads N makes best use available cores node Finding best value N vary platform application's characteristics general may problems multiple threads make MPI calls program may fail behave unexpectedly MPI calls must made within thread made one thread Compiling Use appropriate MPI compile command platform language choice sure include required Pthreads flag shown Compiling Threaded Programs section example code uses MPI Pthreads available serial threads-only MPI-only MPI-with-threads versions demonstrate one possible progression Serial Pthreads MPI MPI pthreads makefile Topics Covered Several features Pthreads API covered tutorial listed See Pthread Library Routines Reference section information Thread Scheduling Implementations differ threads scheduled run cases default mechanism adequate Pthreads API provides routines explicitly set thread scheduling policies priorities may override default mechanisms API require implementations support features Keys Thread-Specific Data threads call return different routines local data thread's stack comes goes preserve stack data usually pass argument one routine next else store data global variable associated thread Pthreads provides another possibly convenient versatile way accomplishing keys Mutex Protocol Attributes Mutex Priority Management handling priority inversion problems Condition Variable Sharing - across processes Thread Cancellation Threads Signals Synchronization constructs - barriers locks Pthread Exercise 2 Mutexes Condition Variables Hybrid MPI Pthreads Overview Login LC workshop cluster already logged Mutexes review run provided example codes Condition variables review run provided example codes Hybrid MPI Pthreads review run provided example codes GO EXERCISE completes tutorial Please complete online evaluation form - unless exercise case please complete end exercise would like go Exercise Agenda Back top References Information Author Blaise Barney Livermore Computing POSIX Standard www unix org version3 ieee_std html Pthreads Programming B Nichols et al O'Reilly Associates Threads Primer B Lewis D Berg Prentice Hall Programming POSIX Threads D Butenhof Addison Wesley Programming Threads Kleiman et al Prentice Hall Appendix Pthread Library Routines Reference convenience alphabetical list Pthread routines linked corresponding man page provided pthread_atfork pthread_attr_destroy pthread_attr_getdetachstate pthread_attr_getguardsize pthread_attr_getinheritsched pthread_attr_getschedparam pthread_attr_getschedpolicy pthread_attr_getscope pthread_attr_getstack pthread_attr_getstackaddr pthread_attr_getstacksize pthread_attr_init pthread_attr_setdetachstate pthread_attr_setguardsize pthread_attr_setinheritsched pthread_attr_setschedparam pthread_attr_setschedpolicy pthread_attr_setscope pthread_attr_setstack pthread_attr_setstackaddr pthread_attr_setstacksize pthread_barrier_destroy pthread_barrier_init pthread_barrier_wait pthread_barrierattr_destroy pthread_barrierattr_getpshared pthread_barrierattr_init pthread_barrierattr_setpshared pthread_cancel pthread_cleanup_pop pthread_cleanup_push pthread_cond_broadcast pthread_cond_destroy pthread_cond_init pthread_cond_signal pthread_cond_timedwait pthread_cond_wait pthread_condattr_destroy pthread_condattr_getclock pthread_condattr_getpshared pthread_condattr_init pthread_condattr_setclock pthread_condattr_setpshared pthread_create pthread_detach pthread_equal pthread_exit pthread_getconcurrency pthread_getcpuclockid pthread_getschedparam pthread_getspecific pthread_join pthread_key_create pthread_key_delete pthread_kill pthread_mutex_destroy pthread_mutex_getprioceiling pthread_mutex_init pthread_mutex_lock pthread_mutex_setprioceiling pthread_mutex_timedlock pthread_mutex_trylock pthread_mutex_unlock pthread_mutexattr_destroy pthread_mutexattr_getprioceiling pthread_mutexattr_getprotocol pthread_mutexattr_getpshared pthread_mutexattr_gettype pthread_mutexattr_init pthread_mutexattr_setprioceiling pthread_mutexattr_setprotocol pthread_mutexattr_setpshared pthread_mutexattr_settype pthread_once pthread_rwlock_destroy pthread_rwlock_init pthread_rwlock_rdlock pthread_rwlock_timedrdlock pthread_rwlock_timedwrlock pthread_rwlock_tryrdlock pthread_rwlock_trywrlock pthread_rwlock_unlock pthread_rwlock_wrlock pthread_rwlockattr_destroy pthread_rwlockattr_getpshared pthread_rwlockattr_init pthread_rwlockattr_setpshared pthread_self pthread_setcancelstate pthread_setcanceltype pthread_setconcurrency pthread_setschedparam pthread_setschedprio pthread_setspecific pthread_sigmask pthread_spin_destroy pthread_spin_init pthread_spin_lock pthread_spin_trylock pthread_spin_unlock pthread_testcancel"),
("I wrote a short article on 'The very brief history of Computer Science'", 'Published inHistory Computer ScienceSign Sign upAbhi Agarwal May 59 minNext storyNext storyThe author chose make story unlisted means people link see sure want share Yes show sharing optionsThe brief history Computer Science Share Twitter Share FacebookThe brief history Computer Sciencehttp longstreet typepad com 6a00d83542d51e69e201676774551b970b-piI believe fundamental overview history later formed Computer Science People know work individuals Dijkstra several individuals led computers even existing process started early 800s started grow 1800s 1900s simple changes voltage develop machines computers incredible works individuals across different centuries led computers important explore process concepts discovered 300 BCIn 300 BC Euclid writes series 13 books called Elements definitions theorems proofs covered books became model formal reasoning Elements instrumental development logic modern science first documented work Mathematics used series numbered chunks break solution problem 300 BC 800 ACFollowing Euclid notes recipes etc closest thing think algorithms today Also also inventions mathematical methods example Sieve Eratosthenes Euclid algorithms methods factorization square roots seems common us list things order Mathematics time common idea 800sThe story really starts 800s meet person named al-Khw rizm name roughly translates Algoritmi Latin develops technique called Algorism Algorism technique performing arithmetic Hindu-Arabic numerals Al-Khw rizm considered grandfather Computer Science first one develop concept algorithm Mathematics 1300sThen came Ramon Llull considered pioneer computation theory started working new system logic work Ars magna Ars manga influenced development couple subfields within mathematics Specifically idea formal languageThe idea logical ruleThe computation combinationsThe use binary ternary relationsThe use symbols variablesThe idea substation variableThe use machine logicAll led pioneer idea representing manipulating knowledge using symbols logic 1600sNext came Blaise Pascal Pascal French Mathematician early age pioneered field calculating machines Pascal invented mechanical calculator Pascal calculator roughly 10 years 1642 important milestone Mathematics engineering showed general public tools built using Mathematics simplify things e g accounting fun fact built first prototype father accountant Following Llull Pascal work Gottfried Leibniz made incredible achievements symbolic logic made developments First-order logic important development theoretical computer science work still remains Leibniz law First-order logic Leibniz Rule Mathematics Leibniz also discovered modern binary system use today wrote paper Explication de l Arithm tique Binaire 1800sCharles Babbage father computing pioneered concept programmable computer Babbage designed first mechanical computer architecture like architecture modern computer called mechanical computer Analytical Engine Analytical Engine general-purpose computer today standards first design would call Turing complete incorporated Arithmetic Logic unit ALU integrated memory control flow statements designed wasn 1940s actually built designed programmed punch-cards numeral system decimal Working Charles Baggage Analytical Machine Ada Lovelace first computer programmer notes engine wrote first algorithm ran machine algorithm compute Bernoulli numbers work contributed creating subfield Scientific Computing fun fact name inspired programming language Ada came man computer scientists know George Boole pioneer call Boolean Logic know basis modern digital computer Boolean Logic also basis digital logic digital electronics logic within electronics stands top work Boole also utilized binary system work algebraic system logic work also inspired Claude Shannon use binary system work fun fact boolean data-type named Gottlob Frege defined Frege propositional calculus first-order logic predicate calculus vital development theoretical computer science fun fact Frege programming language named 1900sIn early 1900s Bertrand Russell invented type theory avoid paradoxes variety formal logics proposed theory discovered Gottlob Frege version naive set theory afflicted Russell paradox Russell proposed solution avoids Russell paradox first creating hierarchy types assigning mathematical entity type Russell came amazing Alonzo Church introduced Lambda calculus world Lambda calculus introduced new way viewing problems Mathematics inspired large number programming languages Lambda calculus played big part development functional programming languages important might know Claude Shannon work Shannon-Fano algorithm Shannon founded base sub-field information theory concentrated work efficiently reliably transmitting storing information MIT wrote paper demonstrated powerful applications boolean algebra electrical applications Next know great Alan Turing formalized lot concepts theoretical Computer Science work Turing Machine Turing also contributed heavily Artificial Intelligence theory notable example Turing Test Apart research codebreaker Bletchley Park WW2 deeply interested mathematical biology theory work papers deeply insightful give glance Grace Hopper first exposed Computer Science assigned role work first large-scale digital computer Harvard task design implement method use computers calculate position ships early 1950s designed language COBOL built first program interprets english code binary code vision played incredible part formation Computer Science foresaw lot trends computing fun fact credited popularizing term debugging John von Neumann highly notable physicist known manhattan project also important history Computer Science designed Von Neumann architecture Basically heard certain seen model came http history-computer com ModernComputer thinkers Neumann htmlOne biggest principles idea data program saved space idea implies machine alter program internal data TLDR Neumann another level work contributed pretty much everything relation Mathematics John Backus inventor FORTRAN language team IBM Backus many important contributions functional programming languages systems Also served committees developing ALGOL system programming languages Alongside Peter Naur also developed Backus-Naur Form Backus-Naur Form used describe depict programming languages Interestingly Backus wrote article Programming Liberated von Neumann Style Functional Style Algebra Programs worth reading Alongside Backus Peter Naur made major contributions definition ALGOL 60 pioneered Backus-Naur Form Noam Chomsky known linguist made indirect direct contributions Computer Science work Chomsky Hierarchy Chomsky Normal Form well known study formal grammars Edsger Dijkstra someone learn algorithms class 1956 given task showing power ARMAC computer show power ARMAC computer came shortest-path algorithm Dijkstra algorithm Next ARMAC engineers wanted cut copper wire costs solve task Dijkstra rediscovered applied version shortest sub-spanning tree algorithm Prim algorithm kind guy Dijkstra Dijkstra also formulated Dining philosophers problem xkcd relates paper Dijkstra wrote Go-to statements considered harmful http www xkcd com 292 Donald Knuth pioneer field analysis algorithms worked developing aspect finding computational complexity algorithms also mathematical techniques performing analysis algorithms also widely known creator TeX typesetting system Art Computer Programming book KMP Knuth Morris Pratt algorithm much much https xkcd com 163 Leslie Lamport laid foundations field distributed systems fun fact won Turing Award 2013 also lives New York meet chance also magnificent beard Vint Cerf Bob Kahn known fathers Internet designed TCP IP protocols architecture Internet would laid Following progress 1989 1990 Tim Berners-Lee invented worldwide web Alongside colleague Robert Cailliau sent first HTTP communication server client know important milestone Computer Science represented new era communication also demonstrated practical nature theories Computer Science Let know gotten anything incorrect made anything clear Also wasn able include every individual along way let know ve missed anyone obvious Please expand things written comments also go much detail every individual future also going individual posts individuals posts go details accomplishments Resources learn next Key things research First-order logic Jacquard loom Analytical Engine Boolean algebra much First-order logic http cs nyu edu davise guide html http cs nyu edu faculty davise ai pred-examples htmlAnalytical Difference Engines http en wikipedia org wiki Analytical_Engine Comparison_to_other_early_computersType Theory https www princeton edu achaney tmve wiki100k docs Type_theory htmlThe Chomsky Hierarchy http athena ecs csus edu gordonvs 135 resources ChomskyPresentation pdfOne favorite talks Donald Knuth talk titled Let Dumb History Computer Science get chance please watch Couple books Minds Lives Discoveries 15 Great Computer Scientists Dennis Shasha Cathy Lazere Selected Papers Computer Science Donald KnuthThanks Snow Pettersen Freia LoboThanks reading d like checkout projects visit portfolio RecommendRecommendedBookmarkBookmarkedShareMoreFollowFollowingHistory Computer ScienceFrom introduction specificsBlockedUnblockFollowFollowingAbhi AgarwalEntrepreneur NYUGallatin student web programming enthusiast TechatNYU e-board hiker TED addictPublished May 5 rights reserved author Thanks Kjetil Pettersen'),
('Had trouble understanding Levenshtein edit distance, so I made a Javascript visualization', "Levenshtein Distance Calculator many insertions deletions substitutions take turn Calculate Levenshtein distance Don't know Try elephant relevant Saturday Sunday Google Facebook"),
('I want to get an open internet for all subreddit going', 'jump contentmy subredditsannouncementsArtAskRedditaskscienceawwblogbookscreepydataisbeautifulDIYDocumentariesEarthPornexplainlikeimfiveFitnessfoodfunnyFuturologygadgetsgamingGetMotivatedgifshistoryIAmAInternetIsBeautifulJokesLifeProTipslistentothismildlyinterestingmoviesMusicnewsnosleepnottheonionOldSchoolCoolpersonalfinancephilosophyphotoshopbattlespicsscienceShowerthoughtsspacesportstelevisiontifutodayilearnedTwoXChromosomesUpliftingNewsvideosworldnewsWritingPromptsedit subscriptionsfront-all-random gadgets-sports-gaming-pics-worldnews-videos-AskReddit-aww-Music-funny-news-movies-books-history-food-philosophy-television-Jokes-Art-DIY-space-Documentaries-Fitness-askscience-nottheonion-todayilearned-personalfinance-gifs-listentothis-IAmA-TwoXChromosomes-creepy-nosleep-GetMotivated-WritingPrompts-LifeProTips-EarthPorn-explainlikeimfive-Showerthoughts-Futurology-photoshopbattles-mildlyinteresting-dataisbeautiful-tifu-OldSchoolCool-UpliftingNews-InternetIsBeautiful-sciencemore reddit com internet4allhotnewrisingcontroversialtopgildedpromotedwant join sign create account seconds Englishlimit search r internet4alluse following search parameters narrow results subreddit subredditfind submissions subreddit author usernamefind submissions username site example comfind submissions example com url textsearch text urlselftext textsearch text self post contentsself yes self include exclude self postsnsfw yes nsfw include exclude results marked NSFWe g subreddit aww site imgur com dogsee search faq details advanced search author subreddit remember mereset passwordloginSubmit new linkSubmit new text postinternet4allsubscribeunsubscribe1 reader 1 user nowHow impacted free internet worked towards giving internet created punkprophetgeniusa community 21 daysmessage moderatorsMODERATORSpunkprophetgeniusabout moderation team get best reddit delivered weekemail subscribe 1012Mozilla fighting Open Internet Policies around world blog mozilla org submitted 18 days ago punkprophetgeniuscommentsharecancelloading aboutblogaboutvaluesteamsource codeadvertisejobshelpsite rulesFAQwikireddiquettetransparencycontact usapps toolsAlien Blue iOS appreddit AMA appmobile betabuttons 3reddit goldreddit storeredditgiftsreddit tvradio redditUse site constitutes acceptance User Agreement Privacy Policy Genitive 2015 reddit inc rights reserved REDDIT ALIEN Logo registered trademarks reddit inc Rendered PID 32741 app-125 2015-05-28 17 56 18 279994 00 00 running 6258777 country code'),
("[Survey] This short survey is for a college research paper I'm writing, which is on the topic of how to best implement software development methodologies. This survey is targeted towards those who have experience with using these methodologies.", 'Software Developement Methodologies 1 category would place company work ed BankingBusinessCustomers Relationship Management CRM Electronic Design Automation EDA Enterprise Resource Planning ERP EngineeringFinancialGamingNetworkingSecurityOther category would place company work ed 2 experienced job experienced job Entry LevelMid LevelHigh Level3 think methodologies beneficial developing software think methodologies beneficial developing software YesNoNot Sure4 company use standard software development methodology company use standard software development methodology YesNoNot Sure5 following methodologies company used Select apply following methodologies company used Select apply Agile Unified Process AUP Agile ScrumCapability Maturity Model Integration CMMI 1 waterfallCMMI 3 iterativeCMMI 5 spiralExtreme Programming XP Feature Driven Development FDD Object-Oriented Development OOD Rational Unified Process RUP Team Software Process TSP N AOther 6 selecting methodology project effective would say aiding process developing software selecting methodology project effective would say aiding process developing software Extremely effectiveQuite effectiveModerately effectiveSlightly effectiveNot effectiveN A7 think applying different methodologies tailoring based needs project would effective achieving goals adhering corporate standard think applying different methodologies tailoring based needs project would effective achieving goals adhering corporate standard YesNoNot SureWhy Optional Powered SurveyMonkey Check sample surveys create Javascript required site function please enable'),
("I'm making a functional Lisp inspired by Clojure, Haskell & ML. Take a look", "Skip content Sign Sign repository Explore Features Enterprise Blog Watch 22 Star 221 Fork 6 LuxLang lux Code Issues Pull requests Pulse Graphs HTTPS clone URL Subversion checkout URL clone HTTPS Subversion Download ZIP Lux Programming Language 159 commits 2 branches 1 release 4 contributors Clojure 100 0 Clojure branch master Switch branches tags Branches Tags master v0 2 Nothing show 0 1 0 Nothing show lux Changed link updated place latest commit 2aca948edd LuxLang authored May 5 2015 Permalink Failed load latest commit information source v0 1 May 4 2015 src v0 1 May 4 2015 gitignore Added lambdas yet real closures coming soon Dec 15 2014 README md Changed link updated place May 5 2015 project clj - Added LuxVar type properly specify type environment b May 4 2015 README md Lux Lux new programming language making It's meant functional statically-typed Lisp run several platforms Java Virtual Machine JavaScript interpreters What's current version v0 1 far ahead project Java-bytecode compiler close completion features missing compiler fast would like However small programs written try Lux get feeling language use Download 0 1 compiler https github com LuxLang lux releases download 0 1 0 lux-jvm-0 1 0-standalone jar Right current version Lux 0 1 mostly play around language it's bit limited download compiler you'll want create directory named source directory compiler located source must contain 2 files One Lux prelude lux lux program lux write anything want inside program lux play around language Note download lux lux program lux files source directory repo get started run compiler open terminal write java -jar lux-jvm-0 1 0-standalone jar generate directory named output put class files package program run using cd output jar cvf program jar java -cp program jar program cd What's license Eclipse Public License v1 0 What's interesting language Inspirations language mostly inspired following 3 languages Haskell functional programming Clojure syntax overall look feel ML module system compiler even implemented Clojure Types implemented plain-old data-structures whose expressions get eval'ed compiler integrated type-checker means it's actually possible generate types via functions However types prelude generated via several macros provide pleasant syntax types wonder types look like without makeup feel free read first hundred lines lux lux Module system module system heavily inspired ML signatures structures supported main difference Lux ML ML separates signatures structures rest language whereas Lux implements on-top base language implementing signatures record-types structures actual records use type-classes Haskell's type-class system forces user specify 1 instance given type-class it's argument means 1 possible valid instances case Monoid Int resort newtype hacks able provide alternative implementations using system like ML's problem averted Also hosting module system top records regular values get benefit structures parameterized runtime like data-structures also write functions take return structures Functors ML generate structures fly Functional programming means Java-interop provided already ways look-up inside lux lux Lux commited functional programming Functions curried partial application simple applying function less arguments needs Haskell e g let inc int 1 map inc list 1 2 3 4 5 Code portability Many languages nowadays support compilation multiple platforms e g Haskell Scala Clojure However sharing code platforms pain neck due following reasons differences features platforms languages weren't originally designed goal running native JVM JavaScript Lux designed ground-up target multiple platforms achieve maximum reusability code minimum hassle mechanism hasn't added yet language mainly there's 1 compiler moment come pretty soon one upcoming releases Macros Unlike lisps Lux macros monadic Lux type one responsibly magic treading CompilerState instances macros Macros must Macro type declared macros However using defmacro macro take care Also upcoming release you'll get another macro defining macros named defsyntax use monadic parsing AST tokens parse syntax want see macros implemented take look lux lux Custom pattern-matching Wait wut Custom pattern-matching basically means use macros provide custom syntax features top pattern-matching macro case instance list list macros used build lists also use destructure inside pattern-matching case List Int list 1 2 3 Cons x Cons y Cons z Nil int x y z _ None case List Int list 1 2 3 list x y z int x y z _ None also special macro introduces patterns deftype Weekday Monday Tuesday Wednesday Thursday Friday Saturday Sunday def weekend day - Weekday Bool case day Saturday Sunday true _ false Please note macros like anyone implement I'll adding useful pattern-matching macros upcoming releases language want see work check implementation inside lux lux community Lux born recently Come join budding community joining discussion group https groups google com forum forum lux-programming-language want communicate directly email luxlisp gmail com edit Lux code Check Emacs plugin https github com LuxLang lux-mode What's available Base syntax Comments single-line comment Multi-line comments comming soon Bool implemented java lang Boolean true false Int implemented java lang Long 1 -20 12345 Real implemented java lang Double 1 23 -0 5 Char implemented java lang Character n Text implemented java lang String yolo Hello tWorld Forms 1 2 lambda x foo 10 x Symbols foo Unprefixed symbol compiler assume it's current module bar baz Prefixed symbol compiler assume it's module specified prefix fold semi-colon compiler wil assume it's lux fold quux 2 semi-colons get automatically prefixed current-module Tags Nil lux Cons MyTag Tuples yolo 10 true Variants aka sum-types aka discriminated unions Nil Cons 10 Nil Records name Lux awesome true Types deftype Bool java lang Boolean deftype Int java lang Long deftype Real java lang Double deftype Char java lang Character deftype Text java lang String deftype Void deftype Ident Text Text deftype List Nil Cons List deftype Maybe None deftype rec Type DataT Text Host data-type TupleT List Type Tuple types VariantT List Text Type Sum-types RecordT List Text Type Records LambdaT Type Type Function-types BoundT Text VarT Int Type variables ExT Int Existential types AllT Maybe List Text Type Polymorphic types Text Text Type AppT Type Type Application polymorphic types deftype Meta m d Meta m d deftype Syntax deftype Either l r Left l Right r deftype Reader deftype LuxVar deftype CompilerState deftype Lux - CompilerState Either Text CompilerState deftype Macro - List Syntax Lux List Syntax deftype IO - Macros defmacro e g defmacro export tokens case reverse tokens list last init return List Syntax list fold - Syntax Syntax Syntax lambda post pre pre true post last init _ fail requires 1 clauses comment e g comment 1 2 3 4 writing anything list e g list 1 2 3 Cons 1 Cons 2 Cons 3 Nil list e g list 0 list 1 2 3 Cons 0 list 1 2 3 lambda e g def const lambda x y x def const lambda const x y x let e g let x foo bar y baz quux e g Application binary functions variadic arguments text Hello name nHow text Hello text name nHow e g Piping elems map - text interpose fold text fold text interpose map - text elems e g true Oh yeah Aw hell naw e g Macro treat classes types java lang Object e g Tuples Text Int Bool empty tuple aka unit e g Yes empty variant aka void e g Records name Text age Int alive Bool - e g Function types - Int Int Int type function takes 2 Ints returns Int e g Universal quantification List Nil Cons List must explicit unlike Haskell Rank-n types possible well existential types - type macro meant used directly It's used deftype struct sig io makes sure whatever computation returns IO type It's mostly host-interop io println Hello World e g type-annotation macro List Int list 1 2 3 e g type-coercion macro Dinosaur list 1 2 3 deftype e g type-definition macro deftype List Nil Cons List exec e g Sequential execution expressions great side-effects please use io macro help keep purity io exec println 1 println 2 println 3 YOLO def e g Macro definining global constants functions def rejoin-pair pair - Syntax Syntax List Syntax let left right pair list left right case e g pattern-matching macro Allows usage macros within patterns provide custom syntax case List Int list 1 2 3 Cons x Cons y Cons z Nil int x y z _ None case List Int list 1 2 3 list x y z int x y z _ None deftype Weekday Monday Tuesday Wednesday Thursday Friday Saturday Sunday def weekend day - Weekday Bool case day Saturday Sunday true _ false It's special macro meant used case It's special macro meant used case Quasi-quotation macro Unquote unquote-splice must also used forms e g def name lambda args body sig mean used directly Prefer defsig struct mean used directly Prefer defstruct defsig e g Definition signatures ala ML defsig export Ord - Bool - Bool - Bool - Bool defstruct e g Definition structures ala ML defstruct export Int Ord Ord Int def x y jvm-llt x y def x y jvm-llt x y jvm-leq x y def x y jvm-lgt x y def x y jvm-lgt x y jvm-leq x y e g true false true false e g true false true true alias-lux creates local aliases everything defined exported lux lux e g alias-lux using e g Lux equivalent ML's open Opens structure provides definitions local variables using Int Ord 5 10 Functions fold b - - b List b fold text list Hello World Hello World reverse - List List reverse list 1 2 3 list 3 2 1 map b - - b List List b map int 1 list 1 2 3 list 2 3 4 - - Bool List Bool even list 1 2 3 true Function composition f g lambda x f g x b c - - b c - b - c int - Int Int Int int - - Int Int Int int - Int Int Int int - Int Int Int int - Int Int Int int - Int Int Bool int - Int Int Bool int - Int Int Bool real - Real Real Real real - - Real Real Real real - Real Real Real real - Real Real Real real - Real Real Real real - Real Real Bool real - Real Real Bool real - Real Real Bool length List length - List Int - Bool Bool text Text string concatenation - Text Text Text get-module-name Obtain name currently-compiling module macro Lux Text find-macro Given name macro try obtain - Ident Lux Maybe Macro normalize Normalizes name lacks module prefix gets one current module - Ident Lux Ident - text - java lang Object Text interpose - List List syntax show Turn Lux syntax user-readable text Note it's pretty-printed - Syntax Text macro-expand standard macro-expand function - Syntax Lux List Syntax gensym Can't forget gensym - Text Lux Syntax macro-expand-1 - Syntax Lux Syntax id - print Neither print println return IO right I've yet implement monads do-notation - Text println - Text b - - Maybe b List Maybe b Signatures Eq defsig export Eq - Bool Show defsig export Show - Text show Ord defsig export Ord - Bool - Bool - Bool - Bool Structures Int Eq Real Eq Bool Show Int Show Real Show Char Show Int Ord Real Ord Caveats Errors compiler fully stable might get error anything funny Also error messages could really use overhaul error message get probably startle Don't worry version 0 2 improve error reporting lot doubts feel free ask complain Google Group Tags Tags unprefixed assume prefix current module you're want write variants records tags lux lux must 1 following 2 alternatives Fully prefix lux Cons Use short-cut Cons Copyright c 2015 Eduardo Julian rights reserved Status API Training Shop Blog 2015 GitHub Inc Terms Privacy Security Contact Something went wrong request Please try"),
('Albatross language -- Eiffel-like syntax, Coq semantics', 'Home Documentation Download Releases Albatross Programming Language Albatross Programming Language Static Verification develop programs algorithms prove correct Albatross Proof Assistant Arbitrary mathematical theories expressed proved Albatross Theorem Prover proof engine supports significantly proofs Albatross Unique currently lot programming languages available market adding new one add value side proof assistants theorem provers looks similar Coq Isaballe HOL PVS Mizaar Agda etc name need new one nearly proof assistants also programming languages sense write executable programs E g proof assistant Coq allows write functions proof properties functions extract functions functional programming language actually compile However cannot integrated way limited functions expressible Coq cannot write imperative constructs Coq e need fill gap programming language allows write arbitrary imperative functional code verify e proof correct compile execute Albatross going fill gap Caveat Albatross compiler development page Releases describes status development Unique Features Proof Assistant Information hiding module private view public view view resides separate file private view detailed definitions proofs developer decide functions assertions makes available users module special proof language Correctness conditions expressed assertions boolean expressions predicate logic Assertions proved automatically proof engine case proof engine cannot prove assertion programmer adds intermediate assertions proof engine step assumptions conclusion via intermediate assertions Proof automation supported proof engine lot automation features included forward backward reasoning expands function definitions simplifications etc recursively e many assertions proof engine work assertions visible proof engine e public assertions used modules already proved assertions current module powerful proof engine becomes developer extends power proof engine writing clever assertions Axiomatic base axioms inference rules whose validity evident see documentation details programmer learn inference rules order prove assertions correct need understand theory dependent types constructive logic Mathematical functions definable Beside possibility define functions via expressions recursion e via actual computation Albatross allows definition arbitrary mathematical functions e define function specifying properties result provided proof engine verify existence uniqueness result Inheritance object oriented language Albatross supports inheritance e define abstract classes abstract features assertions define functions based abstract functions prove assertions based abstract assertions class inherits abstract class prove implements abstract functions assertions inherit derived functions assertions Albatross extends inheritance mechanism applies features object oriented programming languages assertions e function assertion reuse derived classes Unique Features Programming Language Statically verified program specification proof engine verifies program satisfies specification Functional imperative concurrent Albatross combines power functional imperative concurrent languages Like favorite functional language possible use inductive algebraic data types write recursive functions pattern matching Imperative elements like arrays random access mutable data structures flow control constructs like loops alternative statements etc available Albatross principle possible write certified operating system Albatross Concurrency supported processes Albatross program process interacts environment reading writing files listening responding sockets Internally Albatross program split work various concurrently executing processes'),
('How highly-focused developers use the web', "Home Menu Skip content Go Codealike Codealike Insights Search Codealike Blog Powerful Metrics High Performance Software Developers highly-focused developers use web 4 months ago ve released Chrome extension help developers track use web productive December 2014 April 2015 accumulated many hours activity community taken sample little 30 000 hours browsing activity cleaned data analyze patterns arise put together show ve found randomly selected dataset 160 users development high activity also Chrome extension activated timeframe December 2014 April 2015 clustered sample based behavior Codealike Focus Level KPI selected upper quartile highly focused individuals moved analyzing browsing patterns haven used Codealike Premium learn focus Focus talking Focus Curve interesting statistical properties something talk in-depth another post suffices say handful developers consistently high performers metric hope data help start discussion better improve everyday performance show quantified development used help best developer CONCLUSIONS SUGGESTIONS Turn Chrome dev-tools F12 use frequently browse web app re developing consistent use Chrome dev-tools among highly focused individuals frequency use dev-tools much twice frequency time regular developers technical issues questions hesitate go web quickly Contrary conventional wisdom highly focused developers spend time browsing technical sites Social Networks Source Control Management tools Github ALMs JIRA TFS frequency time wonder using Social Networks bad focus Nearly time Regular developers spend Social Networks Highly Focused developers uses tech forums Q platforms online developers tools avoid use Social Networks try least reduce frequency visits E-mails also harmful distraction Highly focused developers spend nearly half time Regular developers checking e-mail also frequency difference much would expected Highly focused developers spend 7 46 time checking e-mail Regular developers use 12 61 time browsing web Try concentrate interaction via e-mail given moment day Check answer go back code ASAP Embracing Office Collaboration tools may bad idea might counter-intuitive actually helping others getting help via Office Collaboration tools Slack pace might better synchronous interruptions demand attention immediately Highly focused developers browse almost 3X times Office Collaboration tools Regular developers Use Codealike kidding Highly focused developers uses Codealike nearly twice Regular developers Data-backed fact Highly focused individuals visit Codealike much sum web-based Office Tools Dropbox Google Drive Office hypothesis highly focused individuals self-aware work patterns data providing ability fine-tune Percentage time visited category type developer FACTS Minutes super focus day working code developer needs focus gain concentration order understand task needs Codealike understand level concentration developer use information provide better metrics metric measures amount minutes developer stay average concentration Codealike community Average time day debugging web Codealike tracks activity developer browsing web Click learn feature Debugging web key activity Web Developers detect prevent fix bugs source code Average number interruptions day Codealike also infer amount interruptions developer across day might know interruptions harm concentration productivity Interruptions frustrating ve found significant difference amount interruptions type developer suffers day DEVELOPERS USE TIME BROWSING Time spent SCM ALM Highly focused developers 11 74 Complete Top 5 Github 47 49 JIRA 21 24 TFS 10 98 Trello 10 52 Bitbucket 8 61 1 16 Regular developers 11 24 Complete Top 5 Github 38 63 JIRA 13 89 Trello 11 49 TFS 10 01 CodeCollab 9 27 16 70 Time spent Search Engines Highly focused developers 8 17 Complete Top 5 Google 98 19 Bing 1 77 Yahoo 0 04 DuckDuckGo 0 00 0 00 Regular developers 7 55 Complete Top 5 Google 92 38 Bing 5 99 DuckDuckGo 1 40 Yahoo 0 24 0 00 Time spent Social Networks Highly focused developers 12 02 Complete Top 5 Facebook 63 00 reddit 12 65 VK 8 93 Twitter 5 31 WhatsApp 3 66 6 45 Regular developers 23 12 Complete Top 5 Facebook 52 10 reddit 18 28 WhatsApp 8 91 VK 7 90 Twitter 6 81 6 01 Time spent Troubleshooting Highly focused developers 21 27 Complete Sites Stack Overflow 47 71 MSDN 25 53 Sites 13 73 Windows Azure 2 99 AngularJS 2 76 w3schools 1 69 Bootstrap Specs Docs 1 55 Stack Exchange 1 39 JSFiddle 1 31 C Corner 0 69 API Specs 0 59 Google APIs 0 06 Clojure Docs 0 00 Regular developers 12 61 Complete Sites Stack Overflow 42 91 MSDN 23 20 Sites 17 79 Windows Azure 6 54 Bootstrap Specs Docs 2 21 w3schools 1 76 API Specs 1 69 Stack Exchange 1 50 JSFiddle 0 93 AngularJS 0 84 C Corner 0 55 Google APIs 0 07 Clojure Docs 0 01 Time spent Webmail Highly focused developers 7 47 Complete Top 5 Gmail 71 49 Hotmail Outlook 12 71 Intranets 6 38 Inbox Google 5 88 Yahoo 1 70 1 86 Regular developers 12 77 Complete Top 5 Gmail 87 80 Hotmail Outlook 4 15 4 04 Inbox Google 2 74 Intranets 1 25 Time spent Music Videos Highly focused developers 4 49 Complete Sites Tube 89 45 SoundCloud 4 50 Spotify 3 57 Vimeo 1 67 Pandora 0 81 Regular developers 10 40 Complete Sites Tube 90 13 Pandora 4 12 SoundCloud 3 82 Vimeo 1 07 Spotify 0 86 Time spent Office Tools Collaboration Highly focused developers 9 69 Complete Sites Slack 63 41 Google Docs Drive 30 22 Yammer 2 96 OneDrive SkyDrive 2 74 Dropbox 0 67 Regular developers 4 10 Complete Sites Slack 53 28 Google Docs Drive 37 67 OneDrive SkyDrive 4 52 Dropbox 3 82 Yammer 0 70 Time spent Codealike Highly focused developers 3 Complete Regular developers 1 60 Complete hope data help start discussion better improve developers everyday performance believe quantified development another tool arsenal become best want know conclusions else want know facts myths believe investigate Share Facebook Twitter LinkedIn Reddit Tumblr Google April 28 2015 Sebastian Fern ndez Quezada Posted Infographics Research Tagged facts stats web browsing Post Permalink Post navigation API Series Facts Reduce interruptions coding One Comment Pingback highly-focused developers use web techynews2015 Leave Reply Cancel reply Create Account Top Posts Pages highly-focused developers use web Teams Gain visibility help improve projects Reduce interruptions coding secret sauce Codealike track developers' time 10 brand new Codealike features Research Applied Understand Improve Software Development Process Software Developers Live Zone Stay date First Name Last Name Email address 2014 Codealike Blog Powered WordPress Theme Emphaino"),
("Models for Parallel Computation (Hitchhiker's Guide to Massively Parallel Universes)", "Big Data Theory Posts Rss Author Tweet Sergei Vassilvitskii Research Scientist Google Research NYC Email Models Parallel Computation Hitchhiker's Guide Massively Parallel Universes blog post joint effort Sergei typos missing Oxford commas mine quest make massively parallel computation easily accessible everyone daunting one many generations computer scientists engineers far complete cloud computing infrastructure available Amazon EC2 Google Compute Engine similar platforms significant milestone reached time quest establish rigorous theoretical foundations massively parallel computing led development multiple theoretical models Despite different modeling assumptions underlying models many parallel algorithmic techniques used minor modifications Moreover restricted scenarios even direct simulations available post discuss popular theoretical models parallel computing relationships MapReduce strongly emphasize connections different models modern MapReduce model computation cloud MRC described reminder MRC model specified number M identical machines local memory goal algorithm design minimize number parallel rounds computation denote R communication round number bits sent received machine fact cases bound incoming communication matters use Minimum Spanning Tree MST problem benchmark comparison models MRC MST problem solved constant number rounds sufficiently dense graphs shown filtering technique Lattanzi et al graphs edges rounds suffice assuming total space Bulk Synchronous Parallelism Bulk Synchronous Parallel model BSP introduced Leslie Valiant 1990 seminal article Bridging Model Parallel Computation model subsequently refined capture multicore computing 2008 focus original BSP model BSP MRC closely related key idea behind BSP breaking computation synchronized supersteps later formed basis MRC BSP computation assumes set p processors local memory Moreover computation proceeds series global synchronized supersteps three parameters combined give cost BSP computation number processors p number timesteps needed synchronize l communication latency number timesteps needed send one word memory different machine g communication gap descriptions models also include speed processor instructions sec easily factor working homogeneous machines cost superstep processor x operations sends receives h words l x g h total work p times cost superstep efficiency ratio best sequential algorithm total work supersteps Note since latency gap may depend number processors total cost superlinear number processors One goals BSP give analytically best algorithm different settings parameters would allow one decide fastest work efficient algorithm particular setting surprising early work focused minimize values g l various network topologies torus hypercube butterfly etc Additional work also measured across different networks realized practice One way generalize BSP model model fact communication costs linear sending 1Mb machines much cheaper sending 1 000 000 distinct one byte messages model letting G function number words sent traditional BSP MRC model computation discretized large constant K dwarfs computation costs choice cost function implies order best use communication computation broken rounds bits sent rounds MRC l taken O 1 synchronization proceed time Due large number parameters algorithmic results BSP model tend bulky state refer reader paper Adler et al details MST algorithm BSP best knowledge aren many algorithmic results BSP model might partially due invention ahead time partially due large number parameters makes friendly algorithm design One key contributions MRC model reduction number parameters making algorithmic results cleaner easier state compare Parallel Random Access Machines model characterized number processors p size shared memory m size local memory available processor l Furthermore read write access shared memory might implemented differently ER CR Exclusive Read Concurrent Read allow perform read access shared memory cell either one processor ER number processors CR superstep EW CW Exclusive Write Concurrent Write allow perform write access shared memory cell either one processor EW number processors CW case multiple write operations occur shared memory cell CW exist multiple policies resolving value going written priority-based random arbitrary etc Among four possible combinations read write access rules three typically considered EREW CREW CRCW requires specification conflict resolution policy Since discuss PRAMs briefly refer reader paper Guy Blelloch Bruce Maggs class CMU comprehensive introduction PRAMs restricted class EREW PRAM algorithms simulated MRC constant overhead number rounds basic idea following Assuming m p l M total memory used PRAM algorithm less total memory available MRC l local memory PRAM less MRC reasonable given typically p much bigger M one simulate EREW access shared memory cells rounds using memory perform local computations done assigning machines simulate PRAM processors machines simulate shared memory cells Since read write requests exclusive directly communicated simulated processors simulated memory cells Note simulating concurrent reads might overload machines simulating memory much requests simultaneously submitted See Theorem 7 1 details modulo ER vs CR issue discussed Also note number rounds preserved well simulation might lead time-inefficient algorithms since multiple PRAM processors might simulated sequentially single MRC machine Models Restricted Communication models restricted communication input graph corresponds communication network machines Initially machine list neighbors input Moreover communication restricted one two ways Messages sent underlying network machines e every round machine talk neighbors case graph problems depend entire input diameter network D often gives lower bound number rounds since messages must propagated network Messages restricted size discussing size-restricted messages always assume bound message size W O log n n input size three models discussed LOCAL CONGEST CONGESTED CLIQUE correspond three possible combinations two restrictions models computational power machines either unbounded limited polynomial time computation input discuss models briefly since applicable settings sensor networks rather massively parallel computing good introduction algorithmic techniques given class MIT LOCAL basic restricted communication models LOCAL model communication restricted underlying network message size unbounded allows solve problem trivially D rounds Lower bounds model show rounds necessary computing Minimum Spanning Tree 2-coloring even instances simple even cycle CONGEST CONGEST model restrictions imposed communication network message size W O log n Two flavors models exist one allows send arbitrary messages one allows machine broadcast message neighbors discuss first two versions studied extensively model number rounds necessary sufficient computing Minimum Spanning Tree CONGESTED CLIQUE Finally CONGESTED CLIQUE model message size restriction W O log n model Minimum Spanning Tree computed deterministically rounds Lotker Patt-Shamir Pavlov Peleg 05 recent preprint shows -round randomized algorithm model closest three MRC model restriction communication topology restricted scenarios exist simulations algorithms CONGESTED CLIQUE MRC model see However general CONGESTED CLIQUE model incomparable MRC since outgoing incoming communication machine allowed linear input size MRC strictly sublinear particular sparse graph connectivity solved CONGESTED CLIQUE one round sending edges single machine Big Data Model Big Data model introduced paper generalization CONGESTED CLIQUE model Instead number machines number vertices graph number machines treated parameter input graph vertex partitioned machines one round pair machines allowed communicate using messages size W O log n Close relationship CONGESTED CLIQUE model allows reuse existing algorithmic techniques Near-optimal results many fundamental problems big data model given particular computing Minimum Spanning Tree rounds necessary sufficient Among models restricted communication big data model one similar MRC However hard bound communication leads strong lower bounds model lower bound MST discussed Sergei Vassilvitskii Research Scientist Google Research NYC Email Models Parallel Computation Hitchhiker's Guide Massively Parallel Universes published May 03 2015 might also enjoy View posts Upcoming Workshops Modern Algorithms Brave New O Big N MapReduce RDBMS Practice Theory 2015 Grigory Yaroslavtsev Subscribe via RSS Powered Jekyll using Minimal Mistakes theme Please enable JavaScript view comments powered Disqus comments powered Disqus"),
('The Thrilling Adventures of Lovelace and Babbage [^serious]', "Bahasa Indonesia Bahasa Melayu e tina Dansk Deutsch English English UK Espa ol Filipino Fran ais Italiano Magyar Nederlands Norsk Polski Portugu Rom n Suomi Svenska Ti ng Vi rk e deech deech 2 OMG It's http www amazon com The-Thrilling-Adventures-Lovelace-Babbage dp 0307908275 ht sydneypadua pic twitter com R29erg8RfO 5 7 5 5 7 7 5 7 12 12 - 2 2015 gum agumonkey 2 deech sydneypadua that's beyond amazement 0 0 2015 140 100 Embed Video Add video website copying code Learn Include Tweet logo clicked - - 40404 21212 86444 Vodafone Orange 3 O2 40404 Nextel TIM 40404 Digicel Voila 51210 Vodafone O2 53000 Bharti Airtel Videocon Reliance 89887 AXIS 3 Telkomsel Indosat XL Axiata 4880804 Wind 3424486444 Vodafone"),
('A python library that makes benchmarking easy', 'Skip content Sign Sign repository Explore Features Enterprise Blog Watch 1 Star 10 Fork 0 Karlheinzniebuhr pythonbenchmark Code Issues Pull requests Wiki Pulse Graphs HTTPS clone URL Subversion checkout URL clone HTTPS Subversion Download ZIP 53 commits 1 branch 0 releases Fetching contributors Python 100 0 Python branch master Switch branches tags Branches Tags master Nothing show Nothing show pythonbenchmark Update README md update latest commit fca9ca2d59 Karlheinzniebuhr authored May 3 2015 Permalink Failed load latest commit information test_files added output images May 2 2015 License Created license Apr 26 2015 README md Update README md May 3 2015 pythonbenchmark py return result May 1 2015 test_pythonbenchmark py added output images May 2 2015 README md Pythonbenchmark Python library makes benchmarking easy fun Contributors wanted Please send lots pull requests suggestions timeit module comes python useful small bits Python code functions library solves provides intuitive way measure execution time functions compare relative speed two functions would want compare relative speed two functions optimizing code may want know much speed improvement gained Pythonbenchmark allows letting compare two functions take input measure one gets job done faster measure Additionally put decorator functions pythonbenchmark measure print execution time console use Import pythonbenchmark py typical use case could functionX optimized functionX want know modified version faster pythonbenchmark import compare measure import time b c d e 10 10 10 10 10 something b c d e def myFunction something time sleep 0 4 def myOptimizedFunction something time sleep 0 2 comparing test compare myFunction myOptimizedFunction 10 input Output Measuring execution time measure decorator pythonbenchmark import compare measure import time b c d e 10 10 10 10 10 something b c d e measure def myFunction something time sleep 0 4 measure def myOptimizedFunction something time sleep 0 2 myFunction input myOptimizedFunction input Output TODO Adding support compare multiple functions maybe ideas welcome Status API Training Shop Blog 2015 GitHub Inc Terms Privacy Security Contact Something went wrong request Please try'),
('Try this Crossword for Programmers !', 'NLogn Valar Codulis HomeBurn Midnight Oil Articles Puzzles Finding X Quizzes Crosswords Noodle Around Articles Comic Strips Crossword Programming Mix Bag 1 03 30 15 Nlogn 1 Comment Crosswords Mix-Bag Puzzles Click column row view associated clue Related xkcd Operating Systems One thought Crossword Programming Mix Bag 1 Nikunj Gupta says April 5 2015 6 49 pm Yo man nice work Keep Waiting updates Reply Leave comment Cancel reply Register Sign Follow Nlogn_Mag Subscribe New Posts Top Posts Crossword Linux Commands Programmers explain Game Thrones characters Quiz Diagrams Crossword Programming Mix Bag - 1 Maths Behind Paper Folding Napkin Folding Problem Categories Burn Midnight Oil 4 Articles 1 Maths Behind Paper Folding 1 Finding X 3 Noodle Around 9 Articles 2 Comic Strips 7 AbstruseGoose 1 DogHouseDiaries 1 xkcd 5 Puzzles 7 Crosswords 3 Mix-Bag 1 Networks 1 Quizzes 1 Pages Contribute Us Contact Us Archives May 2015 April 2015 March 2015 Categories Burn Midnight Oil 4 Articles 1 Maths Behind Paper Folding 1 Finding X 3 Noodle Around 9 Articles 2 Comic Strips 7 AbstruseGoose 1 DogHouseDiaries 1 xkcd 5 Puzzles 7 Crosswords 3 Mix-Bag 1 Networks 1 Quizzes 1 WordPress Register Log WordPress Copyright 2015 nlognmag Rights reserved'),
('Paul Hudak, co-creator of Haskell, has passed away', 'Yale University Official Yale University Messages Yale University Home Yale Info Yale Office Public Affairs Official Messages Current Archive Official University Messages - Message Detail Yale College Community President Peter Salovey Dean Jonathan Holloway Posted Date Apr 30 2015 10 00 06 Summary Sad news - Paul Hudak Last Updated Apr 30 2015 12 49 14 Message ID 121669 Yale College Community sad duty inform Paul Hudak professor computer science master Saybrook College died last night long battle leukemia Cathy Van Dyke associate master Saybrook family Professor Hudak life work touched many people among students faculty Department Computer Science community musicians shared love jazz high-school lacrosse athletes coached students staff fellows Saybrook College memorial service planned Sunday May 3 1 30 p m Battell Chapel giving community chance come together honor Professor Hudak celebrate life Friends may call family Saturday May 2 2 00 p m 6 00 p m Sisk Brothers Funeral Home 3105 Whitney Avenue Hamden Sincerely Peter SaloveyPresident Chris Argyris Professor PsychologyJonathan HollowayDean Yale College Edmund Morgan Professor African American Studies History American Studies Copyright 2015 Yale University rights reserved University Messaging Service managed Office Public Affairs Communications Contact us Privacy Policy'),
('The Deteriorating Software', "Tech SanskritiC Software Design Contact Home Software Design Design Principles Deteriorating SoftwareThe Deteriorating Software September 16 2014 Abhay Kumar Leave Comment Software awesome real adventure fun create wonderful see working accomplishing desired goals time software moves ahead adolescence maturity starts deteriorating unexpected undesirable ways one master piece converting monolith patches gone wrong changing requirements culprit know maintain master piece software professional doubt software requirements would sure emerge ask change accommodate newest expectations Blaming changing requirements software deterioration right thing software engineers really know maintain work art of-course know know well upgrades working fine times increasing pain world depending like never still struggling maintenance needs work harder software product runs one maintenance cycle another symptoms indicating something really well discussing handle software maintenance time coping software deterioration need know symptoms software deterioration help aware emerging problem Following symptoms deteriorating software Rigidity difficult software change rigid Seemingly trivial changes software relatively difficult implement rigid software solutions simple change software module may invoke ripples change parts software ripple may progress module module uncontrollable fashion Initially seeming trivial change bound short time span would result mammoth effort may last longer duration Fragility Fragility measure defines sensitive software change Fragility closely related rigidity Generally rigid software fragile clear symptom fragility identified change software component eventually breaks conceptually non-related component ultimately makes software maintenance nightmare Immobility One discussed buzz re-usability realm object-oriented software design development Re-usability ability write software components reuse software modules software originally written software deteriorates possibility reuse software components diminishes make clear piece software required application already available software component software effort risk reuse seems much higher write new component scratch existing component bits pieces spread across required software going re-use re-using component cleaning effort required get fit re-usability time cleaning risk may let component unstable may require effort writing new Viscosity time software engineers one way get done required change Generally one correct way change complaint software architecture design one quick fix change correct follows desired way make changes piece software difficult requires bigger effort implement compared quick fix software said high viscosity Software high viscosity exposed deterioration quick fix seems attractive particular moment change quick fixes accumulate many maintenance cycles create bloating software master piece converts monolith software inconsistent patches Road Ahead Changes inseparable part software development blame changes software deterioration exactly problem problem solutions implemented cater changing requirements software aged new engineers given task push changes software accommodate new requirements time new engineers aware original design philosophy software inclined use techniques quickly release working piece software new requirement accommodated hurry release new software version new capabilities software component dependencies violated components start make high coupling time progressive build high coupling diminishing dependency boundary makes software difficult maintain long run solution help software maintenance breeze make sure software dependency boundaries well established initial design scope accommodate future requirement time maintenance dependency boundaries needs respected strictly irrespective pain effort required Software dependency boundaries managed maintained following SOLID design principles principles show path designing maintaining software master piece Though principles like guidelines followed wise use based software-design needs required Following enlisting SOLID design principles Single Responsibility Principle SRP O Open-Closed Principle OCP L Liskov Substitution Principle LSP Interface Segregation Principle ISP D Dependency Inversion Principle DIP read detailed description principal dedicated posts Conclusion Software deterioration introduced software every change made software done without considering original design architecture philosophy following SOLID design principles course software evolution mitigate software deterioration great extent allow software adapt newer environment serve newest requirements Please share view post like post consider sharing Life simple make choices look back Unknown Share FacebookTwitterGoogleLinkedInRedditPinterestStumbleUponTumblrPocketEmailPrint Filed Design Principles Software Design Tagged Software Architecture Software DesignAbout AuthorHi That's Abhay software developer 8 years experience various web development technologies NET major love explore technology share views findings like minded people Speak mind Cancel reply Abhay Kumar Hi software developer 8 years experience various web development technologies NET major love explore new technologies share views findings like minded people Connect facebook Subscribe updates via Email E-Mail Address Copyright 2015 techsanskriti com rights reserved Send Email Address Name Email Address Cancel Post sent - check email addresses Email check failed please try Sorry blog cannot share posts email"),
('Notes on learning SSL,OpenSSL,and advanced SSL topics', "Arvind Subramanian's blog Cogito Codeito Ergo Sum Main menu Skip content HomeAbout Post navigation Lock-Free Programming Concurrency Notes learning SSL OpenSSL advanced SSL topics Posted May 1 2015 Arvind Subramanian 1 INTRODUCTION surprisingly difficult search good resources online learn functioning internals SSL related areas objective writing article following Organize already know understand quicker reference later b Organize access good resources topic come across save someone else hassle rather rude directly try peer contents someone stomach trying befriend exchange pleasantries first article go functional aspects SSL looking internals advanced topics - 2 HAPPENS SSL HANDSHAKE would recommend reading StackExchange article introduction SSL TLS first understanding overall flow clear head Section 7 3 TLS RFC spend solid quality time nice article first seconds HTTPS connection article wire-shark data-capture walks stages Client Hello Server Hello Certificate validation RSA prime factorization logic certificate signing chain trust generation pre-master secret client sharing server generation symmetric master key exchange client finally encrypting traffic XOR-based algorithm like RC4 article includes several references code ssl implementation goes in-depth happens different stages like merits hash functions used security eg MD5 vs HMAC MD5 3 USING OpenSSL COMMANDS LEARN DEBUG man page openssl command line options definitely daunting start directly figuring would recommend using resources first common scenarios like generation certificates verification certificates converting certificate formats debugging connections test ssl client server would encountered folks pertinent stuff come handy include Categorized command use-cases b Frequently used commands c Debugging SSL Communication d Certificate Signing Request Self signed Certificates e consolidated list 4 PROGRAMMING OPENSSL LIBRARY documentation OpenSSL isn best lot criticism going way people need write code directly invoking openssl library function calls However HP tutorial OpenSSL programming pretty good starting point presentation example code Shteryana Shopova good resource well presentation recent 2014 author even talks HeartBleed citing actual code-snippet etc shall write article code another article 5 TOOLS NOTE Wireshark rather obvious one Charles Web Debugging Proxy pretty popular powerful tool instance someone using could uses Charles debugging something android app makes HTTPS requests 6 NICHE Advanced TOPICS RELATED SSL PERFORMANCE 6 SSL Termination offset computation intensive portion SSL Handshake SSL termination sometimes adopted instance HTTPS connections hit reverse proxy load balancer reverse proxy terminate SSL connection send HTTP request servers sitting behind nice resource investigates compares tools SSL Termination also speaks performance impact hash functions 6 b SSL acceleration wiki article even points companies SSL acceleration usually done using dedicated chip GPU opposite side spectrum someone Google 2010 published article saying SSL computationally expensive anymore Important note point 1024 bit keys 2048 bit keys 6 c SSL Session Reuse article SSL session reuse author presents convincing arguments chose session reuse opposed SSL termination Read comments section well discussions good 6 d SSL VPN Virtual Private Network article gives pretty decent introduction SSL VPN 7 SUMMARY hope truest sense hub spoke architecture reader finds article decent hub learn understand SSL related topics better ads Share RedditGoogleLinkedInFacebookLike Like Loading Related entry posted Computer Science tagged openssl ssl Bookmark permalink Post navigation Lock-Free Programming Concurrency Leave Reply Cancel reply Enter comment Fill details click icon log Email required Address never made public Name required Website commenting using WordPress com account Log Change commenting using Twitter account Log Change commenting using Facebook account Log Change commenting using Google account Log Change Cancel Connecting Notify new comments via email Notify new posts via email Search Blog Stats 12 254 hits Books Computer Science Jogging Archives May 2015 July 2014 February 2014 March 2013 November 2012 July 2012 February 2011 August 2010 March 2010 July 2009 Recent Posts Notes learning SSL OpenSSL advanced SSL topics Lock-Free Programming Concurrency Custom Memory Pools Allocators Books read 2013 Content based Publish Subscribe Systems Blog Stats 12 254 hits Follow Arvind Subramanian's blog WordPress com Create free website blog WordPress com Rusty Grunge Theme Follow Follow Arvind Subramanian's blog Get every new post delivered Inbox Build website WordPress com d bloggers like"),
('algebraic circuit complexity, Valiants VP=?VNP, recent advances/ breakthroughs, new directions', "Turing Machine musings theory code Menu Skip content Home code Collatz conjecture experiments Turing machine compiler volunteer chat quotes arithmetic circuit complexity Valiants VP VNP recent advances breakthroughs new directions 2 Replies star idea hi recently interesting results arithmetic circuit complexity cited fortnow relates classes VP VNP invented valiant 3 decades ago VP VNP problem reduced depth-4 circuit question impressive maybe verging bordering breakthrough afaik 1st time reducing finite constant depth a1 a7 a8 shades echoes Zhangs 2013 breakthrough also recent results seem advance depth 3 case significantly a9 alas though connection VP VNP P NP apparently strong shown collapse complexity hierarchy Burgisser former V NP proven equal get wait assuming Generalized Riemann Hypothesis a13 apparently framework problem conjecture area provably equivalent P vs NP yet made implausible think P NP P poly NP type connection could eventually constructed area fact given history directions seems almost inevitable lot great surveys a1 a2 a3 a4 a5 alas lot outside streamlined polished textbook presentations field catches eye long conjectured written 2 yr ago near shortly birth launch blog fact part original inspiration rationale raison d tre strong connection factoring monotone boolean circuits written expressions closely resembling multivariate polynomials P vs NP recently factoring multivariate polynomials shown deep connections polynomial identity testing a10 turn recently announced results apr23rd maybe key motivation inspiration tipping point trigger post seems connected results arithmetic circuit complexity also depth 3 circuits a6 far much research strong connections made boolean monotone circuits arithmetic circuits papers would quite challenging exercise survey takers nevertheless sign overlap eg Berkowitz worked areas author one standout results monotone circuit complexity relating slice functions cited earlier P NP conjecture outline blog acc wikipedia algebraic circuits One benchmark understanding computation polynomials work Valiant Skyum Berkowitz Rackoff 4 showed polynomial f degree r circuit size f also circuit size polynomial r depth O log r log lower bounds notoriously difficult area new advances ought definitely celebrated wider community might even milestones signposts signalling pointing longterm ultimate eventual success circuit program alas seems many people paying attn field one lucky 24v mathoverflow question thats modest encouraging sign merely narrow abstruse area niche inside TCS a11 papers share lot indian authors clearly dedicated area maybe large group audience seems somewhat unjustified given significance recent advances scientists conservative bunch questions stackexchange sites a12 a14 a15 dont seem getting much attn ofc could due 3 yr ppl ignoring usual lol small good news havent closed far o_O tell excited ebullient ofc typical effusive emoticons italics many adjectives generally overwrought style etc running generally risky thankless nervewracking gauntlet asking SE questions meticulously referencing footnoting blog every single link hey thats ok quite proud scattered tumbleweed badges SE sites cool D even closed vaporized questions SE battle scars aka pioneers ones arrows backs twisted vnp 1 Recent Progress Arithmetic Circuit Lower Bounds Saptharishi Bulletin EATCS 2 Arithmetic Circuits survey recent results open questions Shpilka Yehudayoff 3 Characterizing Valiant algebraic complexity classes Malod Portier 4 1307 3863 Algebraic Complexity Classes Mahajan 5 Algebraic Complexity Classes Mahajan Springer 6 1504 06213 Sums products polynomials variables lower bounds polynomial identity testing Kumar Saraf 7 ECCC TR13-091 super-polynomial lower bound regular arithmetic formulas Kayal Saha Saptharishi 8 ECCC TR14-005 Exponential Lower Bound Homogeneous Depth Four Arithmetic Formulas Kayal Limaye Saha Srinivasan 9 ECCC TR15-073 Lower Bounds Sums Products Low arity Polynomials Kayal Saha 10 Equivalence Polynomial Identity Testing Deterministic Multivariate Polynomial Factorization Swastik Kopparty Shubhangi Saraf Amir Shpilka 11 computational complexity Algebraic P vs NP MathOverflow 12 complexity theory 2-depth arithmetic circuits VP vs VNP vzn Computer Science Stack Exchange 13 cc complexity theory VP neq VNP imply P neq NP Theoretical Computer Science Stack Exchange 14 cc complexity theory analogies VNP NP Theoretical Computer Science Stack Exchange 15 cc complexity theory intuition VP VNP connected P NP Theoretical Computer Science Stack Exchange 16 Valiants Permanent Contributions RJLipton blog 17 Algebraic Complexity Theory B rgisser Clausen Shokrollahi 18 Completeness Reduction Algebraic Complexity Theory B rgisser ads Share TwitterFacebookLike Like Loading Related entry posted breakthrough cstheory r d homegrown May 1 2015 vznvzn Post navigation collatz pseudo induction contd trials tribulations wordpress hacking blog code inclusion flash crash program trading villain Sarao charged USDoJ 2 thoughts arithmetic circuit complexity Valiants VP VNP recent advances breakthroughs new directions Pingback Arithmetic Circuit Complexity Recent Advances Tambo University Pingback Boolean Circuit Complexity Recent Advance Tambo University Leave Reply Cancel reply Enter comment Fill details click icon log Email Address never made public Name Website commenting using WordPress com account Log Change commenting using Twitter account Log Change commenting using Facebook account Log Change commenting using Google account Log Change Cancel Connecting Notify new comments via email Notify new posts via email Categories AI 7 bigdata 7 bitcoin 3 breakthrough 18 code 13 collatz 23 cstheory 12 econ 2 games 2 higher edu 2 math 24 movies 12 open science 4 physics 7 popsci 28 prizes awards 8 r d homegrown 28 robotics 2 Uncategorized 2 collaborative collective intelligence cs math cstheory stackexchange SIGACT announcement questions answered theory mathoverflow global mathematics commons klarreich cstheory stackexchange chat rooms theory cafe google computer science community cstheory theoretical computer science stack exchange computer science stack exchange cstheory community wiki reddit algorithms reddit compsci google TCS community polymath wiki computer science stackexchange chat rooms Reinventing Discovery Nielsen mathoverflow cs blogs Fortnow Gasarch computational complexity Venkatasubramanian geomblog Aaronson shtetl-optimized tcs blog aggregator Narayanan tcs se blog windows theory computing community consortium blog classical fluid particle physics bit player brian hayes fractalmuse marzio de biasi wavewatching Dekant opinions Doron Zeilberger Heidelberg Laureate Forum CS wolfram blog Microsoft research connections blog computer science degree hub top 30 computer science programming blogs 2014 theory salon chat room starred msgs cs links TCS online talks upcoming TCS online talks archive complexity zoo diagram greg kuperberg computing science column brian hayes american scientist magazine CodeBabes complexity zoo wiki Aaronson et al TED AI TED algorithm TED computers TED data TED internet TED software TED open source cs math foundations notices american mathematical society AMS american institute math AIM bulletin EATCS center computational intractability clay math institute simons foundation Computation Institute Center Discrete Mathematics Computer Science DIMACS Heidelberg Laureate Forum TCS discrete math Institute Advanced Study experimental empirical cs math computers trust wolchover simons foundation Experimental mathematics examples methods implications Bailey Borwein AMS proving program termination cook ACM Exploratory Experimentation Computation Baily Borwein notices AMS repository experiments computational science Institute Computational Experimental Research Mathematics ICERM math code computational physics David Moore aka NeuroFuzzy mad scientist profiles Mandelbrot mind fractal king nautilus 2013 perelman manifest destiny new yorker 2006 Doyne Farmer cracking wall st wired 1994 Kurzweil Kurzweil pulls stops witness singularity wired 2008 Douglas Hofstadter man would teach computers think Atlantic 2013 Carver Mead Meads fabulous camera forbes 1999 wolfram god stephen wolfram everything else forbes 2000 Jim Simons code breaker bloomberg 2008 zhang twin prime hero nautilus 2013 Visiting Alexandre Grothendieck Ferment magazine 1988 Fredkin universe happen Atlantic 1988 ted nelson curse xanadu wired 1995 david deutsch dream machine new yorker 2011 Chudnovsky brothers mountains Pi new yorker 1992 Danny Hillis long Wired magazine 1998 Geordie Rose DWaves dream machine Inc 2014 Geoffrey Hinton Meet Man Google Hired Make AI Reality Wired 2014 Satoshi Nakamoto face behind bitcoin Newsweek 2014 Ramanujan's Mock Modular Forms Indian Mathematician's Dream Conjecture Finally Proven paradigm shifts applied Landscape Parallel Computing Research View Berkeley next generation supercomputers kogge IEEE spectrum End Theory Data Deluge Makes Scientific Method Obsolete anderson wired report president congress designing digital future opportunities challenges exascale computing dept energy lego doom turing machine mind versus machine brian christian atlantic magazine LEGO Turing machine Wanna Build Supercomputer ll Need Legos Raspberry Pis Lego cubestormer 3 breaks world record Free Lunch Fundamental Turn Toward Concurrency Software Sutter star bottle Khatchadourian New Yorker Scientists Pursuit Bit Matter Small Matter Particle Fever Tells Search Higgs Boson CCC visioning activities middle way mesoscale physics laughlin paradigm shifts theory Incomputability Alan Turing SB Cooper notices AMS Classical Computing Embraces Quantum Ideas wolchover turings titanic machine barry cooper CACM Prime numbers get hitched quantum mechanics du Sautoy Interpreting Quantum Mechanics Wrong Whole Time Wolchover Wired Nature Scientific Proof Age Simulations Heng CCC vision nuggets Philosophers Care Computational Complexity Aaronson Blogs FollowTCS Tambo UniversityTheory MattersQuantum Bayesian NetworksThe Mobius function BlogThoughtsWindows TheorymathbabeTheory Evolution Games GroupHack MultiverseGowers's WeblogThe polymath blogG del's Lost Letter P NPJun Fukuyama's P NP PageConstraintsMy Brain OpenRecent Comments Boolean Circuit Comp arithmetic circuit complexity flash crash program high frequency trading Arithmetic Circuit C arithmetic circuit complexity Twenty Twelve Theme Create free website blog WordPress com TCS carbon-free dissemination ideas across globe Tambo University Rectus mathematica crispus logica Theory MattersQuantum Bayesian NetworksThe Mobius function BlogJust another WordPress com weblogThoughtsBy Emanuele ViolaWindows TheoryA Research BlogmathbabeExploring venting quantitative issuesTheory Evolution Games GroupThe EGG studies theoretical computer science evolution game theory Hack MultiverseProgramming quantum computers fun profitGowers's WeblogMathematics related discussionsThe polymath blogMassively collaborative mathematical projectsG del's Lost Letter P NPa personal view theory computationJun Fukuyama's P NP PageJun Fukuyama P NP ResearchConstraintsTurning local information global solutionsMy Brain OpenComputational Complexity Polyhedral Combinatorics Algorithms Graph Theory Follow Follow Turing Machine Get every new post delivered Inbox Join 38 followers Build website WordPress com d bloggers like"),
('Explosive results: HPC models help understand how a mild deflagration becomes a potent detonation in burning bombs. Crossposted to /r/HPC', "Deixis Online Computational Science National Laboratories Home Us Contact Us Article Index Subscribe Argonne Brookhaven Lawrence Berkeley Lawrence Livermore Los Alamos Oak Ridge Pacific Northwest Sandia Fellows' Research Sneak kaboom Email Post Print Andy Boyles April 30th 2015 Updated April 30th 2015 Filed Argonne Argonne research teams turn supercomputing study phenomenon trigger surprisingly powerful explosions Scientists using Mira supercomputer explore causes evenly burning fires detonate unexpectedly powerful explosions like one 10 years ago destroyed section Utah highway adjacent railway Photo Utah Department Transportation August 2005 remote part Spanish Fork Canyon Utah tractor-trailer overturned fire started engine compartment spread load 8 400 cylindrical devices containing mining explosive pentolite blast injured people nearby killed one surprise even explosives experts explosion left crater 24 meters wide 10 meters deep eruption orders magnitude powerful anyone would expected current understanding explosions holds event case deflagration would limited damage deflagration burning material heats ignites adjacent material fire progresses flammable explosive substance even pace slow-burning materials wood wax deflagration gives steady flame campfire candle faster-burning materials pentolite material burns fast creates explosion mass rapidly expanding gases Utah accident didn stop deflagration size crater showed progressed far violent type explosion detonation pressure wave forms inside fire expands throughout material faster speed sound high pressure shock wave ignite nearly explosive material milliseconds thermal explosion throw material outward away ignition site violent type explosion harder establish flammable gases primary fuel yet detonation suspected several disastrous industrial accidents coal mine explosions phenomenon deflagration-to-detonation transition DDT transforms limited explosions catastrophic ones detonation releasing 100 000 times energy deflagration Yet much process remains mystery Using supercomputers national laboratories two research groups making major contributions understanding DDT Martin Berzins University Utah Salt Lake City colleagues simulated Spanish Fork Canyon explosion using Oak Ridge Leadership Computing Facility Titan Cray XK7 Mira IBM Blue Gene Q Argonne Leadership Computing Facility took five half years actually model detonation make possible model scale needed see actually happening Berzins says major hurdle ensuring Uintah code could simulate event full scale three dimensions task requiring 64 000 500 000 CPU cores Graduate student Jacqueline Beckvermit carried simulation Berzins collaborated University Utah colleagues Andrew Bezdjian Todd Harman Justin Luitjens Qingyu Meng Joseph R Peterson Scott Bardenhagen Mesomechanics LLC Santa Fe New Mexico Charles Wight Weber State University Ogden Utah group used Uintah Computational Framework simulation code originated developed C-SAFE Department Energy Center Simulation Accidental Fires Explosions University Utah Page 1 2 Next Leave Comment Click cancel reply Name required Mail published required Website Related Links Sneak kaboom Popular Articles Laptop supercomputing Foiling airflow error spontaneous collaboration Sun Earth Pounding atomic nuclei DEIXIS Computational Science National Labs frequently updated online companion eponymous annual publication Computational Science Graduate Fellowship Krell Institute manages program U Department Energy Privacy Statement Copyright 2000-2015 Krell Institute Rights Reserved"),
('Pointer-less Scapegoat Trees', 'Paul Khuong Lisp Blog Archives RSS Pointer-less Scapegoat Trees Apr 26th 2015 11 30 pm m trying something new week gathering small group work 90 minutes short talks discussions ll also one longer slot everything fits postcard main goal really create opportunities everyone infect us excitement interest idea question successfully encouraged couple people present although many seemed intimidated notion perhaps grown expect well researched rehearsed performances However believe simple presentations preliminary work worthwhile probably likely spark fresh conversations usual polished fare healthy expose doubts trials errors certainly value reminding everyone else boat quickly quickly phone failed focus correctly put together embedding search trees sorted arrays ll note slides low tech hopefully people contribute style potluck next time didn really think implementing search trees 3-4 years ago met online collaborator Paris couple G brought topic desert island data structures stuck computer system programming guide desert island would rebuild standard library scratch data structures algorithms use every day fairly easy remember especially care proofs performance basic dynamic memory allocation hash tables sorting not-so-bignum arithmetic etc straightforward even mergeable priority queue skew heaps However got stuck balanced search trees would anyone want remember rotation rules Tries rejected argue purely theoretical grounds love searching sorted arrays kept looking way build simpler search trees top lead Bentley Saxe PDF dynamisation trick gist family methods build dynamic sets top static versions sorted arrays one extreme unsorted list fast inserts slow reads exactly one sorted array slow inserts fast lookups interesting design point lies middle log n sorted arrays yielding mathcal O lg n time inserts mathcal O lg sp 2 n lookups see design write-optimised databases problem workloads tend read heavy time later revisited paper Brodal Fagerberg Jacob PDF lot clever things get interesting performance bounds m really convinced worth complexity1 especially context desert island challenge find one trick interesting preserve logarithmic time lookups binary searching arrays missing values recasting arrays implicit binary trees guaranteeing NULLs never valid entries descendants lot simpler arguments based guaranteeing minimum density much simpler easily make work branch-free binary search need treat NULLs pm infty depending whether want predecessor successor lookups logarithmic time inserts mathcal O lg sp 2 n time Still satisfying answer desert island challenge went back real research optimisation somehow stumbled Igal Galperin PhD thesis on-line optimisation learning simpler balanced binary search trees Scapegoat trees PDF rebalance guaranteeing bound alpha 0 relative difference optimal depth lceil lg n rceil set n values height maximal depth balanced tree 1 alpha lceil lg n rceil property scapegoat tree addition binary search trees bound height tree function size Whenever new node would inserted level deep size tree go ancestors find subtree small enough accomodate newcomer rebuild scratch try provide intuition work paper much better source tree n 14 elements could alpha 0 25 maximum depth 1 25 lceil lg 14 rceil 5 Let say attempt insert new value tree structured value would child leaf already depth 5 d violate im balance bound Instead go find ancestor depth e g 3 4 descendants ancestor shallow enough space 5 - 3 2 levels descendants total height 2 1 3 subtree full binary tree height 3 2 sp 3 - 1 7 nodes thus enough space 4 descendants new node 6 values rebuilt near-perfect binary tree every level must fully populated except last one criteria find scapegoat subtree bit annoying remember especially given want constantly rebuild whole tree definitely simpler rotation rules feel like finally solves desert island balanced search tree challenge still gapped sorted arrays address interesting scapegoat trees rebalancing always localised subtree Rotating without explicit pointers hard impossible amazingly enough scapegoat trees reconstruct whole subtree e contiguous section sorted array easy slide non-empty values right redistribute recursively finding scapegoat subtree annoying alpha lg n read 1 alpha lg n lg lg n mathrm Exp cdot lg n lg lg n 1 mathrm Exp made think randomised scapegoat selection Rather counting elements subtrees could approximate probabilistically sampling exponential distribution easily approximate geometric p 0 5 counting leading zeros bitstrings m still totally convinced works vaguely remember successfully testing implementation sketching proof find scapegoat subtree going according scaled geometric preserve amortised logarithmic time inserts probability function decreases quickly enough preserve logarithmic time inserts average yet slowly enough expect redistribute region runs space argument convoluted general idea based observation tree maximum height m subtree depth k contain n sp prime 2 sp m - k 1 - 1 elements including subtree root violate imbalance bound subtree attempt insert n sp prime elements Rebalancing works designating shallowest subtree yet full scapegoat could simplify selection scapegoat tree counting number inserts subtree d waste lot space Instead count probabilistically ensure high probability always go least lg lg n levels subtree rebalanced least hits insertion count limit memoryless property geometric distribution means works even rebalance eventually fail find space time completely rebuild subtree case happens rarely enough p approx frac lg n n amortised time insertions still logarithmic 2 sp alpha lg n 2 sp 1 alpha lg n thing embedding scapegoat trees implicit trees problem multiplicative overhead depth results exponential space blowup upside overhead tunable use less space expense slowing inserts fact let alpha rightarrow 0 find Brodal et al scheme know didn cite Galperin Rivest scapegoat trees difference pretty sure easily let random number generator guide redistribution covered insertions lookups far turns deletions scapegoat trees easy replace deleted node one leaves Deletions also eventually trigger full rebalance guarantee logarithmic time lookups Classical implicit representations sorted sets make us choose appallingly slow linear time inserts slow lookups stochastic scapegoat trees embedded implicit binary trees get logarithmic time lookups continuum choices wasting exponential amount space slow mathcal O lg sp 2 n inserts order get break one rule allowed mathcal O n additional space rather mathcal o n empty space rule assumption challenge staying true spirit searching arrays ve thinking interpolation lately monotone necessarily injective function map set domain machine integers d let us bucket values interpolate skip first iterations search also assume keys uniformly distributed mapped integers use linear Robin Hood hash table linear small space overhead get constant time expected inserts lookups seems O lg lg n worst case2 lookups high probability Something else bothering embed full binary trees thus binary search arrays size 2 sp n - 1 know bad idea could switch ternary trees means inserts deletes must round next power three Regular div-by-mul scaling back divisor always works simpler way round power three find remainder number know anyone offer insights suggest new paths explore think jumping van Emde Boa thing least went minor version van Emde Boas layout maximal distance interpolation point actual location appears scale logarithmically number elements perform binary search logarithmic-size range treating empty entries infty Text authored Paul Khuong Apr 26th 2015 11 30 pm categories appnexus Lock-free sequence locks Website copyright 2015 - Paul Khuong Powered Octopress Themed K nigspress'),
('Ranking CS Departments by Publication Productivity, Interactively', 'Programming Languages Enthusiast Developments PL matter Main menu Skip content HomeAbout PL Enthusiast Post navigation Previous Next Ranking CS Departments Publication Productivity Interactively Posted April 30 2015 Swarat Chaudhuri Anyone familiar American academia tell US News rankings academic programs play outsized role world Among things US News ranks graduate programs computer science strength field large well certain specialties One specialties Programming Languages focus blog US News rankings based solely surveys Department heads directors graduate studies couple hundred universities asked assign numerical scores graduate programs Departments ranked average score receive easy see much go wrong methodology reputation-based ranking system election elections meaningful voters well-informed worry respondents necessarily qualified rank programs research areas Also plausible respondents would give higher scores departments high overall prestige personally familiar post propose using publication metrics input well-informed ranking process Rather propose one-size-fits-all ranking provide web application allow users compute rankings approach limitations discuss detail believe reasonable start better system need rankings Many would argue idea department rankings inherently problematic system comparison must evaluate department research quality using pithy metrics creative activity like research reductionist possibly harmful glib rebuttal genie already bottle marketplace spoken clearly likes university rankings starting conversation better system ranking US News reward status quo better justification department rankings valuable service prospective students Matching prospective graduate students programs problem resource allocation market However market information asymmetry students clear idea makes good Ph D experience courting prospective students universities put shows limited connection reality graduate research experience problem worse international students frequently join universities sight unseen result easy students make suboptimal choices selecting program join best university rankings help students make informed decisions Ranking objective metrics would fairer system ranking computer science departments look like seems system depend part real data research productivity problem course research productivity fuzzy concept Efforts approximate using bean counting measures like paper citation counts grant dollars basic shortcomings However think approximations value especially seen point view end users department rankings Presumably prospective student would want strong CV point finishes Ph D higher chance group joins publishes regularly top-tier publication venues areas interested likely stay funded advisor track record bringing grant money likely highly cited research advisor highly cited papers others research area level seniority objective metrics limitations also produce useful signals One could least make factor computing department rankings even using reputation-based system example survey respondents reputation-based rankings could choose asked use productivity-based rankings input decision-making process Presumably would lead respondents make informed judgments Interactive ranking putting user charge Another issue existing ranking systems static one-size-fits-all solutions Think prospective student interested interface Programming Languages PL Machine Learning ML probably pick department active PL ML recent times advisor strong track record least one areas Depending interests might want advisor primarily PL researcher also collaborates ML folks way around Finally may want work professors certain level seniority whose students postdocs gotten high-profile research jobs Unfortunately current ranking systems support nuanced decision-making Maybe needed rankings application customized different user needs example app could let user assign weights different subareas computer science rank departments advisors weighted strength areas system would fundamentally interactive users would able change weights various variables observe changes ranking results interactive ranking system based publication productivity last weeks coded first draft ranking app rankings app computes based single objective metric publication counts top-quality outlets reason used metric simple data researcher publishes available DBLP bibliography database data used compute paper counts hand easy access data citations funding history department former students believe ranking system defensible acceptance top venues correlates least extent quality research However definition considers one dimension complex multidimensional space One might extend app allow ranking using richer set features DBLP doesn track institutions researchers Alexandra Papoutsaki coauthors recently developed listing faculty members 50 top US universities cross-linking dataset DBLP data one determine professors given department publish 1 used feedback colleagues friends select top-tier publication venues several subareas computer science see details example top venues Programming Languages PL Symposium Principles Programming Languages POPL Symposium Programming Language Design Implementation PLDI Conference Object-Oriented Programming Systems Languages Applications OOPSLA International Conference Functional Programming ICFP top venues Algorithms Complexity Symposium Theory Computing STOC Conference Foundations Computer Science FOCS Symposium Discrete Algorithms SODA application interface allows user select time window within last 15 years put weights various areas app assigns score professor giving w points w number 0 1 paper top-tier venue area weight w also identify set relevant professors intuitively set professors prospective advisors areas interest qualify relevant professor faculty member must published 3 papers across top venues areas user put nonzero weight within selected period Departments ranked according three different metrics 1 Aggregate productivity measure score department sum scores professors department scores high measure likely high-energy research environment culture publication strong conferences areas interest However metric likely favor larger departments smaller ones 2 Maximal productivity score department greatest score received one professors Unlike aggregate productivity metric directly affected department size justification measure end prospective student needs one advisor Consequently joining small department one prolific researcher possibly beat joining larger department multiple less productive researchers 3 Group size metric estimates size department group students areas interest counting number relevant professors employs statistic puts productivity rankings perspective Arguably also intrinsic interest prospective students Larger groups allow courses seminars interactions fellow-students hand students prefer cosiness small departments likely score poorly metric Results purpose application allow interactive exploration data different users draw different conclusions exploration rather present results invite use application Limitations conclusion mentioned earlier ranking application meant first draft rather final word Given publication selective venues key success researcher believe app produces useful information However ranking based objective metrics limitations system even limited considering one measure app implementation issues well roster faculty members used generated crowdsourcing guaranteed free bugs Also linking faculty members roster DBLP records isn always easy professor DBLP entry may use name slightly different name roster professors appear multiple names DBLP used heuristic join two data sets correcting common variations names also manually examined data hardly failsafe process However hoping wisdom crowd used overcome limitations code data app freely available see details created public Google document collect information errors data please leave comment find bugs also welcome extend app additional features productivity metrics Going beyond particular app think need start conversation help prospective students make better decisions go graduate school long time allowed entities stake discipline rank graduate programs rankings dubious methodology also real implications departments time must recognize fill real need Creating nuanced data-driven approaches school ranking constructive way challenging hegemony post updated since first published Notes Seddighin Hajiaghayi recently developed ranking departments publication productivity Theoretical Computer Science Also Remzi Arpaci-Dusseau developed ranking systems researchers productivity couple years ago Share TwitterFacebookRedditGoogleLinkedIn entry posted Process Rankings Research Science Swarat Chaudhuri Bookmark permalink 8 thoughts Ranking CS Departments Publication Productivity Interactively gasche May 1 2015 3 49 said problem ranking decision based metrics increase incentive optimize one action toward specific metrics chosen instead actually good work think computer science research needs pressure optimize number papers accepted elitist conferences respect seems previous ranking method less harmful could argue fairer measure actual truth also good negative effect pushing people farm papers greater speed hard measure compensated positive effect students make better choices also hard measure seems rather difficult argue given none measures proposed far expect none measures proposed tweak exploration particular dataset future actually answer question graduate programs professors available students enjoyable work effectively teach good researcher skills interested coming graduate school Reply Joseph Tassarotti May 1 2015 10 46 said agree tools often fun play However goal help students make better decisions go need Even setting aside debates whether number papers top conferences good measure research productivity think gasche right research productivity even close factor relevant graduate students focus metrics directly relate experiences students think several relevant median time graduation attrition rates placement rates industry tenure track positions research universities teaching colleges current student alumni satisfaction funding reliability teaching load percentage students forced change institutions advisors faculty member leaves students know number institutions tend unhappy experience things related think advisors produce enough papers course metrics available Even universities collect rarely make public even prospective students gasche says metrics susceptible gaming manipulation exception example law schools known game placement rates giving graduates low paid fake jobs However still think much robust useful standard bibliometrics field really care improving student outcomes strive collect statistics report honestly Reply Swarat Chaudhuri May 6 2015 9 16 said Thank comments think make distinction two questions 1 whether objective metrics desirable 2 whether paper counts form reasonable objective metric Regarding first think proper evaluation demands combination human judgment data really point post Yes metrics limitations need understood use humans insidious biases well also remember everyone access enlightened human judgment personally lot experience undergraduate research choice grad school grad advisor shaped experience However every student sort privilege Anyway concerns seem 2 particular metric paper counts two responses First think overestimating impact scope app done present data appropriate caveats much love PL enthusiast think researchers start producing junk papers departments score higher app Also top-tier outlets top-tier reason submit papers doesn mean papers get Yes researchers extraordinary work publish lot metric discriminate use needs complemented human judgment available would add human recommenders often discriminate extraordinary work publish strong places aren socially academically connected recommender Second yes app doesn capture say graduate programs professors available students enjoyable work effectively teach good researcher skills interested coming graduate school scientist question would objectively model approximate questions must shy away objective analysis perfect said post would like see fuller picture research productivity one accounts citations impact would also love metrics complement research productivity example comment Joseph lists criteria placement rates teaching load funding reliablity median time graduation tangible measures love Yes data hard find know kind data look already made progress us care issue pressure departments collect publicly report data effort may successful time soon start somewhere Reply davidvanhorn May 4 2015 10 26 pm said disappointing article couches language objective metrics slips highly subjective judgment harms many programming language community classifies PLDI POPL flagship OOPSLA ICFP others PL area broken subgroups qualitative modifiers despite areas Architecture many venues 4 PL response complaining twitter author pointed reduce difference mere syntax put equal weight two categories https twitter com swarat status 595346948984610816 mere syntax Sure get one slider PLDI POPL another OOPSLA ICFP labels flagship others together default settings emphasizes flagship others carries strong value judgment PLDI POPL count OOPSLA ICFP semantics syntax Let leave aside many folks m one within OOPSLA community unhappy sharing slider ICFP vice versa Moreover author spells several places body article says top venues Programming Languages PL Symposium Principles Programming Languages POPL Symposium sic Programming Language Design Implementation PLDI Full stop mention OOPSLA ICFP methodology page states one area Programming Languages considered two categories venues Programming Languages flagship Programming Languages others latter category consists two conferences flagship venues publish strong results ICFP OOPSLA publish strong results flagship venues even mean distinction made SIGPLAN far tell term flagship event used Jan Vitek 2013 SIGPLAN Chair report implication clear refers POPL PLDI ICFP OOPSLA https dl acm org citation cfm id 2502508 2502510 look nominations CACM Research Highlights seems pretty evenly spread four OOPSLA ICFP PLDI POPL plus many coming specialized SIGPLAN venues like PPoP Haskell Symposium http www sigplan org Newsletters CACM Papers real harm substantial portion PL community publish OOPSLA ICFP harder time finding jobs seeking promotion insiders preferences prejudices calibrate accordingly reducing distinction mere syntax department chairs deans colleagues areas take completely unsubstantiated subjective judgment gospel would want hire promote researcher doesn publish flagship venues instead meddles lowly venues PL Enthusiast highly respected PL researchers making distinction Surely correct universally held opinion POPL PLDI top venues right ve reviewed papers POPL OOPSLA ICFP ve published ICFP PLDI OOPSLA ve attended experience see discernible difference quality Sure cultural differences even matter degree opinion best kind research could published Others surely disagree think ICFP bees knees PLDI real vanguard venue fine subjective matter opinion shouldn pass kinds judgments banner objective metrics field large diverse least technical matters core relatively mature area computer science Let let least four flowers blossom Reply Mike Hicks May 5 2015 7 38 said Thanks careful thoughtful reply David right judgment PLDI POPL flagship subjective one course right great papers appear ICFP OOPSLA POPL PLDI ve published four venues served PCs enjoyed reading great papers Going statement quality true PL venues like ESOP ECOOP TOPLAS journal stop PL m sure equally valid criticisms could leveled choices flagship conferences areas e g PODS ICDE databases could rectify problems including venues making slider letting user pick combination like best also think approach taken basically view PLDI POPL sample whole area unreasonable keep things simple Certainly harm meant even certainly intent imply choice POPL PLDI representative somehow determined objectively papers venues strictly dominate OOPSLA ICFP papers Perhaps use word flagship poor gave impressions could also rectify problem performing analytics matter set conferences pick weights assign easy argue metric compute wrong many ways believe metrics like one offered useful sanity check avoid completely subjective bias tends cement existing ranks better data impressions think Moneyball showed decisively analytics reveal error subjective judgment also know tell whole story therefore cannot replace judgment entirely especially final goals outcomes hard even state case research would suggest useful approach metrics like one proposed use starting point in-depth investigation considering graduate school candidate hire promote read papers learn people Stopping highly lossy metrics frankly irresponsible made opinion clear let emphasize analysis made possible Swarat tool never intended final authoritative statement intended piece larger picture current form really starting point need thoughtful comments refinement Thanks providing opinion certainly followup work Reply gasche May 5 2015 8 26 said Stopping highly lossy metrics frankly irresponsible problem people irresponsible things metrics throw persons institutions evaluated metric often control used designers metric share responsibility whenever possible try consider potential negative effects choices worried incentives artificially increase publication counts David incentive publish example POPL rather ICFP Insert preferred story administrative staff politics taking metric context make decisions wasting considerable time money One like fact Shangai Rankings computed total counts rather per-capita proportions politicians higher-administration staff world ordering smaller universities schools cluster merge order improve Shangai Ranking would expect proposed metrics come well-defined goal problem trying solve prospective students making hiring decisions trying measure approximate careful analysis positive negative side-effects metric become de-facto standard Reply Swarat Chaudhuri May 6 2015 9 33 said Thank David Mike comments position basically Mike said analysis app offers never meant final authoritative statement first draft ought refined comments discussion David says differences opinion within PL community relative quality four venues also true debates irrelevant goals tool give students partial picture high-quality PL research taking place Also David says SIGPLAN refers four venues flagship Given coalesce two PL categories time next days Reply Manu May 6 2015 12 02 pm said Thanks manually adding NEU reason Brown dataset include dataset based first 50 USN WR universities based outdated information NEU USN WR rank 42 see Could please output whole list universities first 13 curious NEU algorithms complexity fact found work trying include NEU Brown dataset first step towards answer think would useful let user specify much weight give venue example disagree weight given app STOC FOCS SODA 1 rest 0 well ranking Seddighin Hajiaghayi Reply Leave Reply Cancel reply Proudly powered WordPress Theme Duster Automattic'),
('Massive HPC simulations track how self-healing materials can repair fissures. Crossposted to /r/HPC', 'SC Home SC Organization SC Jobs Contact SC DOE Home Feature Filling Standard Model boost computing Archive Kernels Data efficiency blooms ROSE Framework Archive Big Iron Utah team turns computing design clean oxy-coal boiler Archive Universities Modeling self-healing materials repair fissures turbines Archive Synchronized Program takes long deep view Earth evolving surface Archive Genealogy Code library gains renown simulation-tackling tools Archive New Faces Exploring hidden structures slash computational cost Archive Exascale Science Panel lays top 10 list exascale computing hurdles Archive Modeling self-healing materials repair fissures turbines Posted April 30 2015 Nanocarbon embedded silica shell Click image enlarge information Whether re riding wind toiling conventional coal gas plants turbines harness mechanical energy produce electrical power heavy-duty materials turbines vulnerable high temperatures pressures even chemical corrosion Many materials cannot withstand high temperatures high pressures break says Rajiv Kalia computational physicist University Southern California Cracks form fractures occur Kalia colleagues use large-scale computations design advanced materials heal materials would last longer could reduce power plant shutdowns repair downtime critical challenge finding healing cracks cause material fail Kalia says team designs materials use embedded nanoparticles healing agents nanoparticles melt stress-induced heat materials crack cracks grow melting nanoparticles flow fissures mend Finding right combination structural material nanoparticles difficult Chemists material scientists couldn possibly test possible combinations laboratory time materials would prohibitively expensive Kalia team instead use parallel computing investigate self-healing material combinations re tapping allocation 180 million processor hours Mira Argonne National Laboratory IBM Blue Gene Q supercomputer Department Energy INCITE Innovative Novel Computational Impact Theory Experiment program Healing breach Kalia colleagues used computational simulations develop alumina ceramics synthetic aluminum oxides sturdier used turbines Although alumina withstand high temperatures relatively brittle crack forms moves material quickly Kalia says colleagues first simulated crack propagation alumina alone better understand might stop 1 2 Print Next Universities features DOE-supported research faculty student contributions advance scientific simulation CONTACT Rajiv Kalia University Southern California rkalia usc edu Personal web page RELATED LINKS USC Department Physics Astronomy dornsife usc edu physics Argonne Leadership Computing Facility www alcf anl gov Mira supercomputer www alcf anl gov mira Home Archive Subscribe ASCR Home ASCR SC Jobs Contact SC SC Web Policies DOE Phone Book DOE Employment DOE FOIA DOE Privacy Policy DOE Web Policies DOE Fear Act DOE Small Business DOE Information Quality E-Gov White House USA Gov'),
('How to get ants to solve a chess problem', 'Editions Africa Australia United Kingdom United States Sections Home Arts Culture Business Economy Education Environment Energy Health Medicine Politics Society Science Technology Search Services Events Job board Newsletter Read Google Play Information charter team audience Partners funders Contributing institutions Contact us Friends Conversation Privacy policy Terms conditions Corrections Edition Australia Africa United Kingdom United States Job Board Donate Become author Sign reader Sign Stay informed Search Academic rigour journalistic flair Arts Culture Business Economy Education Environment Energy Health Medicine Politics Society Science Technology Follow Topics NCRIS Understanding Research Ebola Health Check Indonesia Gender equality work Exam guide Iraq G20 Morality series 30 January 2014 6 05pm AEDT get ants solve chess problem Take set chess pieces throw away except one knight Place knight one 64 squares chess board make 63 legal moves visit every square Author Graham Kendall Professor Operations Research Vice-Provost University Nottingham Disclosure Statement Graham Kendall work consult shares receive funding company organisation would benefit article relevant affiliations Provides funding Founding Partner Conversation UK nottingham ac uk Jobs Admissions Coordinator RMIT University Macquarie University Fellowship Indigenous Researchers Mufir Macquarie University Professor University Western Australia Executive Officer University Canberra Director Properties Facilities Australian Catholic University Jobs Upcoming Events photograph Australia Sydney New South Wales 2016 Fulbright Scholarship Application Round Canberra Australian Capital Territory Post-Anthropocentric Creativity Special Issue Digital Creativity journal Call Submissions Melbourne Victoria Sydney School Critical Social Thought North Sydney New South Wales New Paradigms Therapies Psychosis Experience Listening ISPS Australia 2015 Meeting Bundoora Victoria Events tour artbystevejohnson Take set chess pieces throw away except one knight Place knight one 64 squares chess board make 63 legal moves visit every square chess board exactly reminder knight move two squares straight line followed ninety degree turn move one square might seem like hard task set moves called knight tour achieved many ways count able make 63 moves end square move back original square 64th legal move known closed tour tours called open tours Mathematicians pondered many closed tours exist come astonishing number 26 trillion many open tours know exact number Philip Hingston captivated knight tour problem wanted find different way solve found motivation nature specifically ants Ants use certain pattern algorithm forage food algorithm used tackle many types problems including Travelling Salesman Problem Vehicle Routing Problems Philip Graham wondered could use ant colony optimisation algorithm solve knight tour problem algorithm works computer program used simulate population ants ants assigned task find solution problem ant goes task lay pheromone trail smelly substance ants use communicate simulated algorithm successful ants ones solve problem better lay pheromone perform poorly L Shyamal repeat procedure many times perhaps millions times repetitions pheromone trails good solutions increase decrease poorer solutions due evaporation also programmed simulation algorithm simulation solve knight tour problem ants could make legal knight moves restricted stay within confines chess board ant successfully completes tour reinforce tour depositing pheromone tour compared tour full tour Ants attempt find later tours likely follow higher levels pheromone means likely make moves previously successful ants balance struck ants follow successful ants rigidly algorithm quickly converge single tour encourage ants much follow pheromone previous ants act randomly case tuning algorithm parameters try find good balance Using algorithm able find almost half million tours significant improvement previous work based genetic algorithm algorithms emulate Charles Darwin principle natural evolution survival fittest Fitter members perform well problem hand simulated population survive weaker members die easy say ant algorithm performed well compared genetic algorithm Perhaps tuning algorithmic parameters perhaps ants really like play chess knight tour problem worked far back 840 AD Little problem-solvers know ants albeit simulated ones would tackling puzzle 1 000 years future Republish article believe free flow information use Creative Commons Attribution NoDerivatives license republish articles free online print Republish Share Email Twitter233 Facebook LinkedIn Comment Tags Mathematics Algorithm Chess Articles Author 1 May 2015 Explainer run general election sweepstake 28 April 2015 Computers knocking door company boardroom 13 March 2015 day life Pi 12 August 2014 Explainer football fixtures set 14 May 2014 Explainer maths behind exam timetable Related articles Surfaces like able described thanks work Nash Hevea Project Every world grain sand John Nash astonishing geometry Daniel Mathews Monash University John Nash May 2015 NTB Scanpix John Nash beautiful mind exquisite mathematics Kevin Knudson University Florida Nash bargaining solution seminal contribution Game Theory AAP Filippo Venezia John Nash contribution Game Theory Economics John Wooders University Technology Sydney Nobel Prize winner John Nash 2007 EPA Money Sharma legacy John Nash equilibrium theory Stephen Woodcock University Technology Sydney Share Email Twitter233 Facebook LinkedIn Like us Facebook Follow us Twitter Sign free daily newsletter Email address Africa Australia United Kingdom United States Editions Job Board Find career opportunities intelligent institutions Conversation Community Community standards Republishing guidelines Friends Conversation Research Expert Database Job Board Events feeds Donate Company charter team audience blog Partners funders Contributing institutions Contact us Stay informed Subscribe Newsletters Email address Africa Australia United Kingdom United States Editions Follow us social media Privacy policy Terms conditions Corrections Copyright 2010 2015 Conversation Media Group'),
('Carnegie Mellon AI vs. Poker Pros (Live stream in comments)', "Brains Vs Artificial Intelligence Carnegie Mellon Computer Faces Poker Pros Epic No-Limit Texas Hold Em Competition-CMU News - Carnegie Mellon University Carnegie Mellon UniversitySearch CMU News Submit Carnegie Mellon University Search Skip navigation jump directly page content StoriesAll News2015MayAprilAlumni Students Organize Earthquake Relief EffortsMusician Life CoachCarnegie Mellon Marlene Behrmann Elected National Academy SciencesCarnegie Mellon Congratulates Borle Schwartz Tony Awards RecognitionResearchers Analyze Economic Effects EPA Carbon Emission GuidelinesExperiments Brave Statements Featured Preservatives Carnegie Mellon Senior Art Exhibition May 1-16Carnegie Mellon Project Divides Everyday Tasks Expenses Ways Scientifically Calculated Make Everyone HappyCMU President Subra Suresh Collaborators Discover New Mechanism Behind Malaria ProgressionNational Security Agency Director Admiral Mike Rogers Deliver Address Cybersecurity CMUCarnegie Mellon CyLab Biometrics Center Wins Gold Edison AwardsBrains Vs Artificial Intelligence Carnegie Mellon Computer Faces Poker Pros Epic No-Limit Texas Hold Em CompetitionPresident Suresh Addresses University Challenges OpportunitiesAlan Alda Give Keynote Address Carnegie Mellon Commencement May 17Become World Changer Plaid Carnegie Mellon Professor Alessandro Acquisti Awarded Fellowship Carnegie Corporation New YorkLarge Synoptic Survey Telescope Taps Carnegie Mellon Statistician Lead Informatics Statistics ScienceMedia Advisory U Secretary Transportation Anthony Foxx Discuss Future Transportation Carnegie MellonCarnegie Mellon 90 5 WESA Launch Energy Bite Raise Awareness Energy IssuesLisa Tetrault Myth Seneca Falls Named 2015 Original Book U Women HistoryCarnegie Mellon Scientists Appear Fastball Beyond Touchscreen Carnegie Mellon Disney Researchers Develop Acoustically Driven Controls Handheld DevicesCarnegie Corporation New York Grants Carnegie Mellon 1 Million Support Activities Simon InitiativeEvent Honors CMU Alumnus Fallen Marine Raises Funds Provide Service Dogs VeteransCelebrating 25 YearsCarnival 2015 Next ChapterSending Message FutureThree Minute ThesisCMU Researchers Discover Pain Fine-Tunes Pain ReliefCarnegie Mellon Scientists Question Representation Women International JournalCourt Hears Appeal Disk-Drive Patent Infringement CaseCMU Chemists Create Tiny Gold Nanoparticles Reflect Nature PatternsObituary Acclaimed Physicist Lincoln Wolfenstein Passions Science Peace FamilyCarnegie Mellon Researchers Call Broader U Renewable Fuel StandardPittsburgh Symphony Orchestra Lorna McGhee Join Carnegie Mellon School MusicCMU Spring Carnival Celebrates 101 Years April 16-18Climate RibbonNew Gallery Art Space 616 Features Work Carnegie Mellon Art Professor Martin PrekopCMU President Subra Suresh Collaborators Create Device Extracts Rare Tumor Cells Using SoundCMU School Drama Presents Three Sisters Anton ChekhovCarnegie Mellon Places Fifth 2014 Putnam Mathematics CompetitionAlumnus John Nash Wins Prestigious Abel Prize Norwegian Academy Science LettersTwo Carnegie Mellon Students Awarded Barry M Goldwater ScholarshipsCarnegie Mellon Dietrich College Create New Institute Politics StrategyAutism Making ProgressPittsburgh Girls Steel Win Chairman Award Regional FIRST Robotics CompetitionMarchFebruaryJanuary201420132012201120102009OlderCollege EngineeringCollege Fine ArtsDietrich College Humanities Social SciencesH John Heinz III CollegeMellon College ScienceSchool Computer ScienceTepper School BusinessThe Piper Campus NewsCarnegie Mellon Today MagazineFind ExpertMedia HighlightsMedia ResourcesContact Us CMU's Social Media Channels CMU News Stories News 2015 April Brains Vs Artificial Intelligence Carnegie Mellon Computer Faces Poker Pros Epic No-Limit Texas Hold Em Competition Friday April 24 2015Brains Vs Artificial Intelligence Carnegie Mellon Computer Faces Poker Pros Epic No-Limit Texas Hold Em Competition80 000 Hands Played Two-week Contest Rivers Casino PittsburghBy Ken Walters CMU 412-268-1151 walters1 andrew cmu eduand Emily Watts Rivers Casino 717-507-3754 emily hornercom com contest echoes Deep Blue chess victory Garry Kasparov Watson beating two Jeopardy Champions computer poker software developed Carnegie Mellon University challenge four world best professional poker players Brains Vs Artificial Intelligence competition beginning April 24 Rivers Casino course two weeks CMU computer program Claudico play 20 000 hands Heads-Up No-limit Texas Hold em four poker pros pros Doug Polk Dong Kim Bjorn Li Jason Les receive appearance fees derived prize purse 100 000 donated Microsoft Research Rivers Casino Carnegie Mellon scientists compete something precious Poker benchmark artificial intelligence research chess said Tuomas Sandholm professor computer science Carnegie Mellon led development Claudico game exceeding complexity requires machine make decisions based incomplete often misleading information thanks bluffing slow play decoys win machine out-smart human opponents Computing world strongest strategies game major achievement algorithms future applications business military cybersecurity medical arenas Sandholm said Though earlier version computer program called Tartanian7 decisively won Heads-Up No-limit Texas Hold em category Association Advancement Artificial Intelligence Annual Computer Poker Competition last July Sandholm said doesn mean necessarily equal human players Computers demonstrated outplay humans simpler game Heads-Up Limit Texas Hold em noted far complicated no-limit version think 50-50 proposition said Claudico chances think good chance ll lose thing imagine humans edge Polk said citing extraordinary programming challenge no-limit game However difficult determine outcome sort stability know going Polk widely considered world best player Heads-Up No-Limit Texas Hold em total live tournament earnings 3 6 million Kim Li Les also among Top 10 players professional game largely played online strategy change playing human players Polk added think less hand reading speak less mind games ways think nice focus playing pure game worry thinks think etc looking forward match Rivers Casino proud partner number-one graduate school computer science U Carnegie Mellon University right backyard said Craig Clark general manager Rivers Casino Regardless whether man machine prevails history-making experiment great win Pittsburgh competition designed ensure outcome scientifically significant result luck addition large number hands players paired play duplicate matches Player receive cards computer receives Player B vice versa One human players isolation prevent comparison cards arrangement applies Players C D Play proceed two 750-hand sessions per day 13 days two-week period one day set aside human players rest Sandholm said imperfect information games poker tremendously difficult player must reason opponent actions signal opponent cards player actions signal opponent no-limit game players may bet raise amount chips adds even greater complexity Two-player no-limit Hold em Sandholm said 10161 1 followed 161 zeroes situations information sets player may face vastly atoms universe contrast easier game limit Hold em bets raises limited pre-determined amount 1013 1 followed 13 zeroes information sets computer poker group University Alberta headed CMU alumnus Michael Bowling reported earlier year journal Science near-optimally solved simpler game tackle tougher no-limit version Claudico built using algorithms analyzed basic rules poker devise winning strategy rather try encode tricks strategies human experts Claudico Latin limp poker limping means get hand calling rather raising folding Humans generally dismiss limping bad strategy Claudico embraces pros may find playing Claudico like playing Martian said Sandholm noting limping one ways computer differs human players Even abstracted version no-limit game large necessitated Sandholm Ph D students Sam Ganzfried Noam Brown use Pittsburgh Supercomputing Center Blacklight supercomputer compute Claudico strategy Blacklight huge amount random access memory 16 trillion bytes roughly 8 000 times powerful tablet computers Though Claudico run CMU computer plays pros use Blacklight event continuously improve strategy information available https www cs cmu edu brains-vs-ai competition continues Carnegie Mellon pioneering research artificial intelligence began creation first AI program Logic Theorist 1956 top-ranked School Computer Science includes world first Machine Learning Department world leading scientists computational game theory market design natural language processing computer vision speech translation thought identification collaboration among intelligent agents 1970s 80s Hans Berliner CMU senior research scientist worked series chess-playing machines including Hitech 1985 first achieve rank senior master late 80s three CMU grad students Feng-hsiung Hsu Murray Campbell Thomas Anantharaman developed faster chess machine ChipTest IBM hired trio ChipTest evolved Deep Blue finally beat Kasparov 1997 IBM Watson beat Jeopardy champions Brad Rutter Ken Jennings 2011 benefited contributions Eric Nyberg students SCS Language Technologies Institute site competition Pittsburgh Rivers Casino opened 2009 named Best Overall Gaming Resort Pennsylvania five consecutive years Casino Player Magazine one age 21 permitted casino property CMU News5000 Forbes AvenuePittsburgh PA 15213 412 268-2900The Piper Campus NewsCarnegie Mellon Today MagazineEvent CalendarCarnegie Mellon Home"),
("Beej's Guide to Network Programming", "Prev Beej's Guide Network ProgrammingNext Beej's Guide Network Programming Using Internet Sockets Brian Beej Jorgensen Hall beej beej us Version 3 0 15 July 3 2012 Copyright 2012 Brian Beej Jorgensen Hall Contents 1 Intro 1 1 Audience 1 2 Platform Compiler 1 3 Official Homepage Books Sale 1 4 Note Solaris SunOS Programmers 1 5 Note Windows Programmers 1 6 Email Policy 1 7 Mirroring 1 8 Note Translators 1 9 Copyright Distribution 2 socket 2 1 Two Types Internet Sockets 2 2 Low level Nonsense Network Theory 3 IP Addresses structs Data Munging 3 1 IP Addresses versions 4 6 3 2 Byte Order 3 3 structs 3 4 IP Addresses Part Deux 4 Jumping IPv4 IPv6 5 System Calls Bust 5 1 getaddrinfo Prepare launch 5 2 socket Get File Descriptor 5 3 bind port 5 4 connect Hey 5 5 listen somebody please call 5 6 accept Thank calling port 3490 5 7 send recv Talk baby 5 8 sendto recvfrom Talk DGRAM-style 5 9 close shutdown Get outta face 5 10 getpeername 5 11 gethostname 6 Client-Server Background 6 1 Simple Stream Server 6 2 Simple Stream Client 6 3 Datagram Sockets 7 Slightly Advanced Techniques 7 1 Blocking 7 2 select Synchronous O Multiplexing 7 3 Handling Partial send 7 4 Serialization Pack Data 7 5 Son Data Encapsulation 7 6 Broadcast Packets Hello World 8 Common Questions 9 Man Pages 9 1 accept 9 2 bind 9 3 connect 9 4 close 9 5 getaddrinfo freeaddrinfo gai_strerror 9 6 gethostname 9 7 gethostbyname gethostbyaddr 9 8 getnameinfo 9 9 getpeername 9 10 errno 9 11 fcntl 9 12 htons htonl ntohs ntohl 9 13 inet_ntoa inet_aton inet_addr 9 14 inet_ntop inet_pton 9 15 listen 9 16 perror strerror 9 17 poll 9 18 recv recvfrom 9 19 select 9 20 setsockopt getsockopt 9 21 send sendto 9 22 shutdown 9 23 socket 9 24 struct sockaddr pals 10 References 10 1 Books 10 2 Web References 10 3 RFCs Index Prev Beej's Guide Network ProgrammingNext"),
('Short story on scaling an #NLP problem without using a ton of hardware', "Toggle Navigation Machinalis Company Services Solutions Blog Contact create monstrous gazette relation extraction Short story scaling NLP problem without using ton hardware Posted Javier Mansilla 1 month ago Comments cornerstone small work done getting info great charts IEPY able catch mentioned companies basic idea relation extraction able detect mentioned things text called Mentions Entity-Occurrences later decide text expressed target relation couple things case needed find companies mentioned later determine given sentence said Company-A funding Company-B order detect funding needed sure capturing every mention company although NER used catched always folks name company waywire 8th Story words easily trackable NER good solution build Gazetteer containing company names get idea working Gazettes using time one Gazette entries seen text automatically considered mention given object ie Entity-Occurrence encyclopedic source got 300K entries Great next challenge well text process company could mentioned different way official one stated encyclopedic source instance would natural find mentions Yiftee Yiftee Inc incorporating basic schema alternative names ie substrings original long name number entries grew 600K felt confident gazette wanted start processing text faced several issues weren able handle gazette size reasonable speed tons poor quality Entity-Occurrences ie times human reader would say wrongly labeled Entity-Occurrence tons poor quality Entity-Occurrences implied quadratic tons potential funding evidences check roughly one per pair Entity-Occurrences sentence knowing trading recall 1 decided add several levels filters Let pruning start First step add second encyclopedic source augment instead add confidence keeping intersection 2 sources Next precomputed count words frequency filtered company names probable occur normal text used threshold tuned bit leaving fixed idea words frequency pruned companies sub-names substrings original long company names higher threshold company listed like Hope Street Media didn't end dangerous entry Hope instead Yiftee Inc Yiftee final list done reduced list 100k still capturing really good portion names work reducing lot mentioned issues last step pick sample documents preprocess simply hand-check used found Gazette-Items creating blacklist cases obvious occurrences times company mentioned natural usage words language finished satisfied results also lessons learnt Hopefully tips help 1 recall also known sensitivity fraction relevant instances retrieved http en wikipedia org wiki Precision_and_recall Want read related content Follow us Twitter machinalis Tags used post data processing python crunchbase iepy information extraction Natural language processing Share post Share Twitter Share Facebook Previous Next posts Moving lot data databases Participando de FLISOL 2015 Comments Related Posts IEPY released demo available Introducing Iepy Information Extraction tool information extraction iepy techcrunch crunchbase d3js python Reading TechCrunch easy way using Data Science information extraction iepy techcrunch crunchbase d3js python Tags 1 Algorithms 5 Artificial Intelligence 1 Basemap 5 Canopy 11 Code 4 Complex Web Development 3 Crunchbase 2 D3js 2 Data Migration 3 Data Processing 1 Data Warehouse 7 Django 1 Geodjango 1 Gevent 2 Google Maps 1 Graphs 5 Html5 3 Iepy 3 Information Extraction 2 Informationextraction 6 Ipython 6 Iso9001 2 Java 4 Javascript 1 Job-Posting 2 Jvm 2 Jython 19 Machinalis 6 Machine Learning 1 Machine Translation 1 Matplotlib 2 Mysql 8 Natural Language Processing 1 Ninja-Ide 1 Nodejs 1 Numpy 17 Open Source 1 Openlayers 1 Os X 5 Pandas 1 Postgis 3 Postgresql 2 Pydata 37 Python 6 Qms 1 Rabbitmq 1 Redis 4 Scikit-Learn 1 Social Media 3 Socketio 3 Talk 2 Techcrunch 3 Testing 3 Websockets Feeds RSS Atom missing piece machinalis 2009-2015 Github Facebook Twitter Linkedin Hello We'll happy hear tell us story get back soon Name Email Message media contacts Ok aren't form friend reach us ways Twitter machinalis Telephone 54 351 4710977 Email info machinalis com Address Av Roque Saenz Pe 1357 - X5000JFIC rdoba Argentina"),
('What does the slash mean on the ALU operation input line? Thanks for the help!', ''),
('A Paper About Reading Papers: How to Read a Paper', "PDF-1 3 11 0 obj endobj xref 11 42 0000000016 00000 n 0000001186 00000 n 0000001515 00000 n 0000001775 00000 n 0000001811 00000 n 0000001924 00000 n 0000002457 00000 n 0000002522 00000 n 0000009114 00000 n 0000009629 00000 n 0000009804 00000 n 0000009885 00000 n 0000009980 00000 n 0000010056 00000 n 0000010078 00000 n 0000010434 00000 n 0000012817 00000 n 0000015676 00000 n 0000015968 00000 n 0000016066 00000 n 0000016494 00000 n 0000016776 00000 n 0000018563 00000 n 0000018585 00000 n 0000020136 00000 n 0000020158 00000 n 0000021760 00000 n 0000021782 00000 n 0000023329 00000 n 0000023351 00000 n 0000025989 00000 n 0000026261 00000 n 0000026585 00000 n 0000028087 00000 n 0000028109 00000 n 0000029620 00000 n 0000029642 00000 n 0000031078 00000 n 0000031100 00000 n 0000031150 00000 n 0000001261 00000 n 0000001494 00000 n trailer startxref 0 EOF 12 0 obj endobj 51 0 obj stream H b lZ 0k b4 pt r K 1 m D 0 CP L O tk7 ' u endstream endobj 52 0 obj 149 endobj 13 0 obj Contents 32 0 R 34 0 R 36 0 R 38 0 R 43 0 R 45 0 R 47 0 R 50 0 R CropBox 0 0 612 792 endobj 14 0 obj endobj 15 0 obj endobj 16 0 obj endobj 17 0 obj endobj 18 0 obj stream x Y X Z u Q K _D l P Y n jm R o o y Hl V IxU K E ' n5 H 7 q 3fLs q G G q r u 7B y z 2p WH EQ W 0 p U gq H G 5v ' go G Q 7 Pj ZD P b N ZB 6PK Hj z Em SS fj5 B Rc N1Tw M Q b j6 O P W k M6O Ve IVI CwM ' 9 vn o 7 K o p -y 7 z r5 d K 1 _ X lS m X 2 y C U K U ' c - o U 0y' n Ma r65O 1 JI m_ f o Nm B k3 M G 9 F 8 O 5 B9 b Y e ln cW - iIN8 wC CY5qVz B JX F 6 u R j HL31I Y D 7 'PXV F W k m 9 ' O V R 2 n ' V R rT eE H P v ZD 0 K L 8 7 Ut x 8 F M B xR j N B Ql J Q N s8 B D8 B v m d M L F U B1 X l H v oE gFu Z 0z C 5 OL 7 f5q e w d 8S UsW wd f 0 sA 1 9 2 n l9T l d D le X B Rm G B C p8oa 9 z Y Bu l Vy -c-4 1 oX p 0 tj 9 0 z Pt _N 1 V 51 g vFz x 7 h C y ' k 2 k LM ed8 w W Sw V N o U - l Gs e y F v qWj Y LL O nx7 ' h h0 8HNT Ix 0 x YtU eg y 5 n R 3 mOd D F l L Lq _HLs yS 0 L G ' L G E 4Fd R4 kRa b 3 _ z d f U xw ub ik E x W e 0 9 EJ4 b e 2 0 h 5h D _ c D L - b 9 a7 h - - SX N K K H 5 P ' n Ad qfkEZ2 l B V X XqOd TcCN - KH 0 l9TXv 93 0 z 2W 6' E -G DZ Y2 a0 c 5 k M QqGb 6nn p ri v ' y D g O x n 7 G m ntX U d '1 g E H 1VV W X K x - oKQ_ c N kwNV Gk 9E V 7 ' U _B Q b uh r k X H dFZ d yLK h F X C ' ' Q 7 m M r X Q m R q l M1 M hn G 4 -E 3 7U q J g p _ pI8_- AeqtN 9 N L E x L Q Lx O QY C Ra CV N K F e LJt N D Z 'l p y n q y 7 Ty Uz x f 1I R K fP 5e ' C2q 6 hz U2 - R W 7q3 Eq mw4 T9 0 7 'j V4 M J -9w G e F Zs Y FD28 D B Z V Vrx Eo C Hi eio d 5Av Z E m 8Q Ns F P x R W 5 s1 3 85 q 4C w K 3N e 3c 9 - N sS ' X L Ky 'm 2 o r G K g TI F3 Fv q n N Vv O pU r v b 8 E p w SM B p Z jIR C X- M 9Z W M Y 5 V n m X U D 58F g R X B P g jU b 2T TeB CY- pW w 0 V Z LV EE E o g kT c k L k z8fuc _9w jW x e Rb P NF z E x b 7 N k C E P M z Xz O D E E p teVmy N n '9I zE 'q g p E g G 8 r ' Ou 5f 7 Xb y n E E e BSY 5o d m O 2 1_6 dG cW 7 Dw4 Bga V 9 q 4nb 8 zL E hb l j C B ewZ lI p6Y Z zQP 2 v UyI 1 R Z 5 b K j 1 x ZVi d_N PqZO l -Q JQ u K yn v m d G CD C E zm 2 ' z Q9 w w u oP 8Up 2 2w v l - n UZ Dj 9 Z_ J f b J f TU B E n n X P JB x p Bmm Y hn 3Z ap J f c F s9 V TB G P X R 5Nd C K - hB Z C ku d ' Ot 1 - Q 7 e V U 2- L e X 3 B Ap 1 r Y Z t' r 5 r 0T ln tq O p Ui p H 5 w 4l 8 H - jn n p 1mD c -V -be 5q1 1x eC - 0 ykC r oS 0 FY ak U V 0u Q_Sh ph kQ C d 4 HQ pd X E o nM 0t 5 GVTU re M 8 R P 5 l8 F9 Gg f b K KcK L ZV 6 n N bGqG b 2 M m rT6 J1 Y 7 X O2 G _ E d 5 3 hh LE U 3 2 k M d 1U Z x B AE 5 Av Rd V J 8 w_X E R r IK C b o 8k lD_ h C 6 N Y' zu 0 4 'U' b h wB o B z D r pg 6 n o L f o o E6 g V Tr 2 cl h m D g p x yC 1 y r nm q ' 4 ws x endstream endobj 19 0 obj endobj 20 0 obj endobj 21 0 obj endobj 22 0 obj endobj 23 0 obj endobj 24 0 obj 1709 endobj 25 0 obj endobj 26 0 obj stream x V TS Hmk 6w Vl U V 0j 1 BB N y e q N 0 43 SFtj gL 5 h Lc R RQ Rg p w7w jnaO - _ sy xb H 3R U W D xR pOj O - 9 XK o3 2b F b3 XB M E ' o M X 89 Vx o 'H _3 I_3 D Q_t2 3X 2 L- RKp jW - h p -N o e Z M Zeon 9 k R - d GU v m wkZM PE Kk rO 5 2 l 9 U V e OT m Wm-W L b Q2 k Q E j N b 7R g P b 4 l 5_ shh k q B r J g j h 7 YT V c B- Y c V k 7 g ES M 9YM v u Y 8y v q 2 C 3T Km Q V h 0 X I8 si q Y C c R_ d Y VW5X 7 lu _ nx P P u mQ f 0 K b G z k h X p9 K D w N j 1P W F3 w G pz tM d X H Q n Za 8 U vCH J jg O d f K r ZyC hl z MS O ZI 5Ta 2 e E W 8 0 Y Y _ C 4X o3Q e Z P PU AA p Np Cc F 3 v l1 N z v Y 9ftj V v Ys R l _ Rj 0 - 6 n 9 h 8 4Z3 v ' P v M Qx C r_ 0 D g -K C- X CLT u JVA U W 4_Y AJ Q Z B eI B 5N9 r H 3 EW - r r f X u CcU 3ym 0 fo_ fwOu 3 X NZ 5 5 c g Hx j j w ZI 8 o Q N w J h9 R W k 4 U L Pd 6 E X -t w dL f _5U K M4a H U2 - 2 P Cls7 g f TOWks m P q T'0 c Z r1 Rk E AO VHh 3 fs F' K p w l Zu u r CH 5 x x yv Qcs re 4 M9 _ FO IE 7 ' 4 0 9 pu 8 hK o endstream endobj 27 0 obj stream x V TW L D F Q42 h 6P b4JM 33 Q h 1 f2 'gf N _ wYFo l 8 _ O C Xv 21 0 VK 2 5u k Vh h M Qq cc L y91 ' ML sl K b Ff 3 qb 2f 3 qa - qe 7 Y X2 53 B L 1 6 Q r 3a k apkl d L Hf c C ' e Qa H vo 5 _ K X P' z X x hh LPY Ph Z 7 z U Y N f2 D Mp N 5 mA g d D N W Qk YI h nil yHL K g K ty 9 u 1 pb q k d 22 9 6 AC d 8 9 Rf 3tLzC 0 6m F hy tm r y 1 cG ' oS w n K dRt c X 2d 4 b jV VX q QM 2 - f ' 6 PBCnN TvHCC ' 7 x ' O F K C R NV d Wo u 3Rj p Q 8 B b8 k N X DbD 2 U L lq QJ r h gm5 xG 3p6 Jt qZQ 0 W h Q 5aTU 9 qI P 75u x nj 9 y 7 X YY JZ r w 0 PU m tHs 3 9 Z PZ dB Y X Vw wtr _ - m Z w bR yUU' K X w m X FFn vV G 8 e 3f l u OJOKT b' f o _I M u - a'dF Z 5 g M eJ c l z P z 6F K o Y' fT l l 8 3 J p g h Wb 7 mn R H 0 9 r M Z D h 7N Mq m 1 j k b gpf 3 - 9 D g tP W D3 W G N 5 P l N E h 65E m Ls N 4e Ks ruY usP P X 7 9 7Nt 7 l WU W 6 ' wx po ii K SFDNn R C _ h x_ fh d K WV m4 52G P E M XXHX W6 o V P H DJ p h F M m 8 p Z M X H WP 1F 0 x R M q N 4n W 5 ' U2w 5 oW 9 3 2 'K r Y z d r'l B' X u Q wsOs R U V 8Q- c6n l f0 v m vx zL n h' _O 09 D Wp 5 D yW Z - M o R nB RTV r U RG sS oh PX 8e b U y SM o -q g x cqM E7 V G 4T Ted Q d e g M endstream endobj 28 0 obj endobj 29 0 obj endobj 30 0 obj endobj 31 0 obj endobj 32 0 obj stream H W n7 Y x r0 5 X 7 l 0DpX W o 'q8 w p Gi0Q1 4 O G V W 3 v6Z O I1 I' r 3 q Zk x C 1 ICs SA B sF q SQq7 f7 iv 8m Qy L _ W q G h - r Em BNz j EO'd Y M v aB Bwy Cq3j Bo JA r f eR - 1 FC 5 4 y Lk x e B HR h ' Z v W x NM g M rp JJ's6 4 _ v 1q Q q 6Z HC M y M d ab O Q w 0 eb B k h q L M E Ka y r ti P N 9 LT1 d Z x t2 K cw P U4y e tv O r 0o GY XL jW a2V rG L b BO4UW L MM y w 2 c jB J 2T XJ kE x r x dT h C v 0 Y 7 y fK _ K d' Xd saC c n 7 R v JP N 4 C gsW C j 1 w 1 Y B LI Q f J ' Y k d Y 5g 8 7a3lr W R 5 1 G 0 2 Yg Q 6i8 B x v F Y Ae pj b C w M P 6z M X j f 3 Q 15 V k4 o 3 F l Z_ iK 4 2 c 3 v h p 9 o 2 ZE _YlV V w 8b y f 0 SDvt j m x YEJ U Vdz4Ze ROo u pYE1 r 1 ' v F 2 Ce W c LH 1A 0K D 9d l N 5 - endstream endobj 33 0 obj 1473 endobj 34 0 obj stream H W 6 oQ X UI 6 - 6 R lK r F d H v Sgzo K 6 ry k 8 O r 5 2 X _ L 8 9v aJ r 7x2n'Hk9 Ur 9 _ g 9w z6 n Ki R D y YF l4 dS kM w h 4 D2 v oy QJS5 1 y 9 ei 10 h 0g M n 0g 3 I8 S2 sE r w xF Qr Ny dZ HM 5 0L j x d 9 R b h1Ar Y L g Ff P M 9 iX W6 O 4 Q V w d h YLd Z 2 J 9 r x 8 j R E z Y 9 y pnaO3h7 d H FQ C u G ' J 9 5 F g Z v B T-P BW 4 7 KDz W5 V G J 0 vwooa V k K E l Q Z q 0aC kU ji 5 2 uw0 R f u_ w ho s- J 4 o 2 G l KBa 0 da kj g 3 v 3 Kw R J p x W d u x 8 q5P 4 u8 N y G 3v 7 sK V Eh NT Yl M l1 M P e d G f08B6 H Pe MT 46 uX m c g mm4 j CV Z9 V _nf M w 83Yil X fWuN y C k h5 N5 _ G Ha VS g 1 c w X3 0 endstream endobj 35 0 obj 1524 endobj 36 0 obj stream H W 5 7 nD OvB 9 nW n m N ' ' a9vo k L e 2 p J Qq Eo B e p j C 2 Gl v e g D 8 C 3b j 8 b1 wO 7 E 0 z S6 v4 ST j u - u C 51 XR kz V H m MH e CO WhV U G d 3-T z n m L N M 5 kl 3 J D W 3 f Q J 9 v v d E U e G ZfJ x o3 f - b M 8 Z lH 2 hrJ 0o zX6 Js J J V5 ' C z N c2L_ N 2 J k Q o 9t IRa x B -Mv w nv G e V 2q E m LQc J U3 F _ o c _ y V H 0y l 3 B E H y _ l G V B n Cgeb tdST l i8u - 9 xjz k h Gi x 9a x e Z -C uA 1r k 2 O MJ y b c ZPoc mk5 juIN D Q 2 E qf Mr xJ e J h P U C f YO m ' nb y v F m oC 2Y' j ey -q - b xn mP v 1 C5 2 5r w Q y G KK8- C l r endstream endobj 37 0 obj 1469 endobj 38 0 obj stream H WMo7z4 n J ' rp 5 4 P Zq j x y1 g rn L Yo M r z m D M 1r E5K f q 0 5 M 8 Cv lM k O X cL lw u L h Nw r M RI -YN O G6N k q M Y 3 k f _1 c pI RDn UE 8 J 6 z ZV dB K RSY 5 8 9 rH Y pgrH g B nh R O b m ozk n N Ta h xO9 hsn W hK N Y xD MT CZ J 3 e' J F7 Zu 2iK B _ f d TK1 w 0 C dlzA R _ c 9KY - J r 1 m ' y E_U ePuDcM _ Y E q2d H 9 e M 4 4 Q 7rIu 9 y 3r L s_ af n k d u p 9 9 O_ d dR cAZ 9 W 2u hz K'rZ u U3i 5 -YuP k qD M6 2 Q gN 8x H O V jQ wr X QM 6_o 6 _B B - 7 3 D CT '-Y m F Nj k 'w y q f w 2 U sZj l 6 E W o Zm8 e _ K O C u E Q - c7 P 2 E m 9 p Z G-o M j r u y rm N Y 2 Z6i'7 Lk SD 2 _ endstream endobj 39 0 obj 1424 endobj 40 0 obj stream x VitT e eq P 5 2Y d f L23 l KZ1x R x w -z X j 2 r N O v 0 E q BfI6 -brE f G 0 f e d sQinY 3 X H H o YI5 f 1 c X o F zn u 3_ l T5 d P - H Q l e F uM r 5r j 8k1 l E e l x0 1EV zInn IPN - - q 8 GG o F 13 ktx z 3Y POC 'A Lr Yz x Tu2 Y P H K0 d Pz Lf 6P W ByJ HSe 0 TV Vc 0 P g 6 4 J-m 8 W LXwu p _ - hT H 3xS wu x o k J W 6Fn w Z '' E 3j j z Y Rm J F F Q 4 d Ty Vs dPX Q 8z IonO9' puB W 8 - 5 F b4H r o cx u Z 6q qP Mh VU 5 6c Z p H v O ys R j V i2 nL p p _ O CFUi W8 f n v 6z 8 N q3 g q k M 3 7 p n5 p X M d o dh pe PK g U x 4y r1 F Q 1O p 4Dh 6 p F_Q qZ G RL j ' Z c l p h2 Km G 8 C r 2 p v H E E Vo c r2 zeb C jeb poF 7 y 6 w m E _N 1N E 2o u' m fXe3xd z kg' v j DL v e W - Vy U Z h8 h OH 0 D u 4 e 7 z m q 27M E ce q l tXD m pgLD bu c w X V 8 P P y P uG4 y Z0 7 0 X P f m C Y dn2 P 4 3 vuP 0 J 1 5 N jO rO z k E rL w 1o P z g g r4 k w '2 h r M ns y dh c j Z Y q E r u t2 H H 0J Z E B hmT g k r P B 9 Ih reED F d q5 9 4 Ui M y K E 4 Q R 3p Z zB1Y m x sdtjg P rD r JQ Fz 35lM F W _ u d I3Z ' Nr U 2d c l E E K K endstream endobj 41 0 obj endobj 42 0 obj endobj 43 0 obj stream H W 5 hc d3 B XE X f B n Q u h l 8 g di j 1 F c Mo d t_ y QX 0 J kR aR 9 i7 PV 6 _c O g Hi w_z pL G v7 2 O L V 5 Q Bj g - 2Y D Z g B 1 2 o 9k Ze G E o 4x r _ _ w14 kr w B F d R N ' N m7Ou k w gyq 1U 5 E z c h J O W O wU j NdCB N L V n B 9jIW 'H 5X u su o w p Zx GF q C J R4 4 c3 m f h 4 0 k F dE Z RG q 4 - U L Q C q0 ozi 0 r L F ZU d v OGT T78 HQB jUN Pl 7 N QlX 3 y z KV 7 Xb Jq U 6 U q U w o Mo U 9 D o 8q Ual 78 0 7 q 8v U U P tJN r D 5 Dc vb 7 sdQ E nTH yL r l m IKF j P h N 4 Gf n C cI I3 B b''Wa 5 4 ax 6 Oo1 9 8xY _ 8 w D g stream H WMs5 e Hq LqHrpX blp 3 qb gS E 2I Y 5 l 7 xU 1 n e 4 8Y h c h ' b9 1 7 8 5R Q M q U r 0 ' Wk rzL ad v o 7 hJ F W p u 0 8i JgO G L bQ v 4 y n K E c j 5 V J J 3r 8 9 H p 8 r x J R k r w ax Q B 4 ZR F 1 2 w z oKdK 6 - Y q 4c E '1 P 2 p h b PwrZzA 9P Wgx R4 R V -5 mZ J N dgkGj R uU FB Y K fM 6 - oZ u b 0 C R Y L O e 9 9 0 8 G K B 4 NNo W b z P 1 uF b ro jPe - h m 5 7 K 7 YJB v3 Zj m y mw z e qex _u E NH - L ZX GQ K P K Y R Y kG' y q er C d nK -9 Ve U9l 5'r 'l M P B n NR - d e jU j Q id 4 R D 3 qid _ 0 f rY q KN w U u '7 _ y w h uu Y w y G c c W 8a F U 5 Z o - l o 0 endstream endobj 46 0 obj 1358 endobj 47 0 obj stream H W r7 N Q J Yrbe o 3 5 7 m B l W 8L C p1 c N Z 3 l x C F 7 ' DL w x 6 O tR K y O W 8 f V6 r w x 4q Q v 2 0 bp y 5 1 q 5 w E 5 8 qP GHM 9 C Z K -S z 4 4 b2 u F 02T M 1 Q ' J 8 C 'g 0 N - g 6x oQ k W Ra K f h m Kwp v RajJ6BL Z H V W CmN BO- v d Egf G R_ rd 8 d0 7 U O1 n s3YZ ' 7n 3 'h k 7 E p o 1K e W N d l g g 3 j o 3 R Y L e 27vn M W B 2 Z- n q vO3 4 y '4'M O G 6 B 0H c y ym g M ' rV 8 6 1 Ag 2 o b Y wP c J - il W b 4 Og YTH W_ uoXe 3 2 Zc g e G_ o K w F 1 L 2 Y J- H N v b G H 6 m EN ' 7 8 o 3n j z 9 P Y X lU x W f b Z M v P endstream endobj 48 0 obj 1042 endobj 49 0 obj endobj 50 0 obj stream H V oG Y H C E fo 8 ho 8 C V X QI ZKw g b 0QfQV ' 2 ' TJy Y g B kj 0 j G u _l 3f M C 0kY x C E f Z K 5F 5 Lv J C iI 8 d U dD Lf c 8 W Z 3 X7 Q nAo b z L'E qyv Zz K V cHL W 9R_kj V rw h j n _ Ja f kY 0m -z u b q r l JIB C v8 y J B x D's n Q 4B EsGlr f 4dr j ' F Y j P r j 07 h6ct - E y _ NeIp p R M 0 -4 Y 7 o sB Z 2 n0 mu x 5 IE V rX3 l u 4 1 F ye n Y 2a njS l 1 W N en h FHW yz 9cg c endstream endobj 1 0 obj Contents 3 0 R CropBox 0 0 612 792 endobj 2 0 obj endobj 3 0 obj stream x G W G x M r3bYx Y 7 UY gF UYy x ' h C R e TXM yy uP7 8 b X C c o 7o _ __ b o J o r _ tY f z O nq 0 Z 4V 6 y V qy k R 6 q W e F W yQ l0 D e M o Z z kc Xr iy V O b B- H l z _ w E6 _ tu Mu qf 5 AR Vm L u uS0 o b z 80 P O O u U 9 ' Z uv M T3f _ ' 6 b Y o 0W g k H 6x Io q eg z M 1 - E Z hx h o 4 3mD E n SPnK st Cd m Y R A4q e EV rx 5 O j q D wtT1 4 D hWj L k E Ex P q B 6 b 4 g U -QrI 8 2 j Dc C 3 Ftt GE E 4 U 3H C 4 Y n7F f x B B N 9S Y g q 1 m P 5 P V o e 4 O Wz zj y o 7 j P D F2 rl h 6 z c 2 M v3 e h Z e sQ un - p 0 Z W D u W b o p8 N 0 nda F 0 U 1Q z je Y VE 9 1Y 9 ' U N SN _ D L6 jg k D 7 Y - Jf W 6 r o M _ 4 3 O 3 sz H F A7 C n YI W 0 93 M8Gl Ipb D lCP n b DT E N tYH z 3 fS qA M ql Dn x 9E 7 - w - gR d P_H e n 3qN y 9 q qF H b U 8 z 8 6j 7 Fu 17Q w ' H o p jE u z Q 9 5 n U o F r N g n Q O F1 x 2e CDZ 8 xI m H Wr8 J h l 7 w0 k P 7 r ft F_ m nN l E 8 M 24 U _ Ht HL k 7 d AP 6 'J fT v zR 0A o E P m g 3 sh 1 E d s48 X 8 i_quu w x r M 2 n 0 d _w c - C B C 4 - d C q CRMo 3v Y d q mj1 zG_ e' zD q ' C y 5 m c K 1 3 PNv Rf 0 r o M So_p 1 Kux Sr kX3 3 u v _ d x Zi f 7 762XQ5 G _ u D q X D c C 93GY M n R c IL V Z ' P3 q B '4 c E DZ 7 v 1 EL w J za zB mj nF O 8 Yde9 HV5 LLKT 7 u j7 G E z e Q0 ne C NV C 0 W BS fj XQ Q j lQ D Z Mp C O u P5 F DH 2b5h V 9 X' 9l3 8 991 E 4 8 W 3 o tD 2 C Y VO CZQ dl d2 O hYC C F 1' G7 W k hX 6 cCL L K H7 F v0 ZK J3 y Q r3 Z 0 HR 9 9 U q zG sf t2D 7YZ D f 2T E J HD u J r 3 ' 5o 0 b Y L h dfB f Q 8 _ l5 B s8 cvfz n psrE VEgW m X p9 ' V q 5 E fP 9 e6 9 R Q ' ' V B ks 5 KR 1 X1 bR f XAf G lN v 4 O Uw x W Q eE 1 G I4 g j 8 6Y f x qjs XC w E2 O _a fD 27 AW-4n P b EP 0 QzZ 0T B7 k D x M -Z ZL - L K ZD N 0p m8 _ _ V O P Ye 5 xm' q 3 b TA 0 AEk P y VTI z ER p BW P v Z 4 N tdh zw 0rii2 r w dT' R 6c n W 49 L Z1 r h'Y Q - 2 Z x4 3 sx P '1 3 H x k 6 09N E O aA p ' O E 9V 1 yx0D wnn _Tb pK l n k u J q 4 w- 9 ha ad M3k cM 8 5 n E 0 v _ q U FGF8S d D2 b V JPHm _b G F 3 H f4 K W ULg5h 7 - cq-t LV 8 W B g B f b _ 4F xmh8 o V n d 3nj v gP_ x y _Q A-1I q IK c ERu PVY V md Q L e Y n5Kp r aQ k lVm Bu ZV R h l O js e 8 qx V e f k E o aW 5 d d ' k 8L f5 M Gm 6 j '8wR B U D _ 2 q - k h c Z R 8 7FUS w M O E v sG U -L - y UH Y ' nn U X R r H M e D b Ye o qs3 05 F -h 8 z 8 L D1 R J dR Q 31 _h z 16 L 4Ay o N 8 Y 5 v wO 6 z qs H 18 j D pb NH8k R r v _jO5 4 mL G Q IE v_ M sf u k i- z y 4yN D C5rs dAL ue oFp LD1 0z C Q u C mw c7J F 7r Bq d z 2 Q m w j h p L 5ocJrRb P w u7 Bc U Y r Q 0 x x d 8 Z B xe Wc Zyg o _ yI 1d P F 0d y 9 4 n yl Ho Ys FO C 9 ' m 2J U Ma 6 o r F G yG u _ h B4O v n 'V6 w wM Y B - P 6 cL 9p o P fU 5 Jh yPQ4 Su m vq l 9 L u x D ma2 J Le 2 DUq L iv 4AF Lt EJ z V H iDu m OUE P e9 CZ 1 uw w 7d X v JWQj K 8 yY K D ' Y k QK Wi uH K M 5a v pS xD Z b M 1Y X Gz Qf O 10 N 0i CUNyqE O r Y 7 w q GW0 Nv b P WWJ v p J Hu5VR 9' v SE vHbg szl K z W h JCB 6 - O F lZ6 m W w C H L s7 f Rx Mb Wk o7 3 R P4'I z E 3 3A zM c3 X P P UtYb v - 9 N L 4M - ga8 Z w z 4 rh h B- R 3 7p o r R0 5 _Yk 1U C 8 XO W p 6 w iU F Q rD l g FB 0 U0 M 8 X 5 c nS G 4 Q m u u rF X j dj D k dR N Q8J ' E PN7 Y O o h z8m JPK z n PR td tx h o _ 7B L d C _ v8 e Hk Y U C J 0 0dC uq GG Y 3 O 0 7 r uI 4 k JP TPl c X InmDD 7 q M N q h p M p xHg r 2 0 4 k8 mR E N F y w GH ISB2 R y 0B F F L f Bm R v U Ti _5 X 9 2 K1 R QpH m c ' R w Q 7T 7 5 7 1 Xt 4 u 2 E 5 L R y 4 c N-m 1 k R R O Z 1 Wf C ' u u z L f Ma n Jg 0 nc K oH wRG dIH h u pG J H x _ q j q- d qz aG bZ ' F oG F y6 w RX RR zz R H 0 Y 1 M bR g _h Q VN2 ni 0 x ' CNl eyZ 9 5I' Il f r y2 K N kNFK82 3g U sR D XK eh c 4G Y 9 J Dl Er Q b R D r M 0s f gn H w d e f 7 g C X g8 gi6 vf- J jV Z n c ' Rn P b lf Q M aP x0 r X k dh D r X N 7 g 5 C P b6 h V_ 3 Ft 3QI cq m Ti 1 g m F W J Pg xqED J m B 06 N SGO'ik p1 4 P Js w gq mL9N E 0 z op f IL 71 K yrR VL L g w 9 j 2 y4 k1 g N uC kL 13 r G d K M 8 Sf x j ld U N 1G P b D C m zvx9k Y - IQ YR q p Na q y Sy x B H C K c aKL Y G hY R Z o r Q x 3 c 4 - zF e qfm K P D w _ z K H R p E W 6KF U y Wz h z M G G J O h 7 P IU p VZ AY - U l J E L 6 -p O l - o r b 6 g O m g5 1 df x IvZtPEH W _ H Ie R J H L Us5 W M DpCl5 - al E w F Z o N M En K6 Qj H Q x v 7 Q7 N l W 9QDI HNS g 8 _ k n Ns k o q ' Q q L 4 N H OOU Q 8 h 8 N2 II J1 D9 x n n 2 y D e 6 j e n _9 O endstream endobj 4 0 obj 10626 endobj 5 0 obj endobj 6 0 obj endobj 7 0 obj endobj 8 0 obj endobj 9 0 obj endobj 10 0 obj endobj xref 0 11 0000000000 65535 f 0000032270 00000 n 0000032473 00000 n 0000032508 00000 n 0000043210 00000 n 0000043232 00000 n 0000043294 00000 n 0000043502 00000 n 0000043573 00000 n 0000043612 00000 n 0000043647 00000 n trailer startxref 173 EOF 1 0 obj Contents 60 0 R CropBox 0 0 612 792 endobj 6 0 obj endobj 13 0 obj Contents 55 0 R 32 0 R 34 0 R 36 0 R 38 0 R 43 0 R 45 0 R 47 0 R 50 0 R 56 0 R 58 0 R CropBox 0 0 612 792 endobj 15 0 obj endobj 53 0 obj endobj 54 0 obj endobj 55 0 obj stream q endstream endobj 56 0 obj stream Q endstream endobj 57 0 obj Type XObject Subtype Form BBox 0 0 1000 1000 FormType 1 Matrix 1 0 0 1 0 0 Name SPIPa0 stream 1 000000 1 000000 1 000000 rg 1 w 1 000000 1 000000 1 000000 RG 0 790 m 612 790 l 612 792 l 0 792 l 0 790 l B 1 000000 1 000000 1 000000 rg 1 w 1 000000 1 000000 1 000000 RG 0 0 m 612 0 l 612 2 l 0 2 l 0 0 l B BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG HeadingPaginationFont 12 Tf 53 774 Td 0 Tc Tj ET BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG HeadingPaginationFont 12 Tf 306 774 Td 0 Tc Tj ET BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG HeadingPaginationFont 12 Tf 559 774 Td 0 Tc Tj ET BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG FootingPaginationFont 9 Tf 53 30 Td 0 Tc ACM SIGCOMM Computer Communication Review Tj ET BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG FootingPaginationFont 9 Tf 301 30 Td 0 Tc 83 Tj ET BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG FootingPaginationFont 9 Tf 428 30 Td 0 Tc Volume 37 Number 3 July 2007 Tj ET endstream endobj 58 0 obj stream SPIPa0 endstream endobj 59 0 obj stream q endstream endobj 60 0 obj 59 0 R 3 0 R 61 0 R 63 0 R endobj 61 0 obj stream Q endstream endobj 62 0 obj Type XObject Subtype Form BBox 0 0 1000 1000 FormType 1 Matrix 1 0 0 1 0 0 Name SPIPa0 stream 1 000000 1 000000 1 000000 rg 1 w 1 000000 1 000000 1 000000 RG 0 790 m 612 790 l 612 792 l 0 792 l 0 790 l B 1 000000 1 000000 1 000000 rg 1 w 1 000000 1 000000 1 000000 RG 0 0 m 612 0 l 612 2 l 0 2 l 0 0 l B BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG HeadingPaginationFont 12 Tf 53 774 Td 0 Tc Tj ET BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG HeadingPaginationFont 12 Tf 306 774 Td 0 Tc Tj ET BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG HeadingPaginationFont 12 Tf 559 774 Td 0 Tc Tj ET BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG FootingPaginationFont 9 Tf 53 30 Td 0 Tc ACM SIGCOMM Computer Communication Review Tj ET BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG FootingPaginationFont 9 Tf 301 30 Td 0 Tc 84 Tj ET BT 0 000 0 000 0 000 rg 0 000 0 000 0 000 RG FootingPaginationFont 9 Tf 428 30 Td 0 Tc Volume 37 Number 3 July 2007 Tj ET endstream endobj 63 0 obj stream SPIPa0 endstream endobj xref 0 2 0000000000 65535 f 0000044020 00000 n 6 1 0000044279 00000 n 13 1 0000044487 00000 n 15 1 0000044824 00000 n 53 11 0000044999 00000 n 0000045103 00000 n 0000045209 00000 n 0000045263 00000 n 0000045317 00000 n 0000046435 00000 n 0000046498 00000 n 0000046552 00000 n 0000046601 00000 n 0000046655 00000 n 0000047773 00000 n trailer startxref 47836 EOF"),
('Amazon Machine Learning: use cases and a real example in Python', "CloudAcademy BlogCloud AcademyHow worksPlans PricingVideo CoursesAWS CertificationsCommunityFAQs Cloud Academy Blog Amazon Machine Learning use cases real example PythonAmazon Machine Learning use cases real example PythonApril 27 2015 Alex CasalboniWhat Amazon Machine LearningAmazon Machine Learning service makes easy developers skill levels use machine learning technology UPDATE published new hands-on Lab Cloud Academy give try free start practicing Amazon Machine Learning real AWS environment using AWS Machine Learning hours definitely agree definition although still feel many developers idea could use machine learning lack mathematical background really grasp concepts would like share personal experience amazing technology introduce important sometimes misleading concepts machine learning give new AWS service try open dataset order train use real-world AWS Machine Learning model Luckily AWS done great job creating documentation everybody understand machine learning used need order built useful model check official AWS tutorial ready-to-use dataset However even follow step produce promising model may still feel like re yet ready create AWS Machine Learning tipsIn personal experience crucial time-consuming part job defining problem building meaningful dataset actually means making sure know going classify predict andcollecting much data context without making many assumptions relevant first point seems somehow trivial turns every problem solved machine learning even AWS Machine Learning therefore want understand whether scenario fits second point important well since often discover unpredictable correlations input data features target value e column trying classify predict might decide discard input features advance somehow inadvertently decrease model accuracy hand deciding keep wrong column might expose model overfitting training therefore weaken new predictions example let say trying predict whether registered users pay product include gender field model current dataset mostly contains data male users since females signed might end always-negative prediction every new female user even though actually case words overfitting simply means creating model specific current dataset behave well new data Naturally something want avoid always plan evaluation phase split dataset two segments first one used train model test model second segment data see behaves good model able correctly predict new values magic want use cases ranging typical start-up needs advanced scenarios Predict whether given user become paying customer based activities first day week month Detect spammers fake users bots system based website activity records Classify song genre rock blues metal etc based signal-level features Recognize character plain image also known OCR Detect based accelerometer gyroscope signals whether mobile device staying still walking upstairs downstairs lying vertical horizontal etc problems share common assumption need predict something completely unknown runtime enough Ground Truth data e labelled records computing power let Machine Learning solve problem AWS Machine Learning youIf ever built classification model know carefully choose model type based specific use case found powerful AWS Machine Learning need care since automatically trains tests lot complex models tuned different parameters best one chosen final evaluation fact generally one would usually end figuring hand trial error course AWS machine Learning also handle input normalization dataset splitting model evaluation work fact long provide valid data source AWS Machine Learning solve low-level problems Even training evaluating model analyze data source better understand often hidden correlations within data Indeed Datasource attributes section find values distribution columns clearly see contribute defining target value example probably generate completely useless model correlation features target spending time money actual model training evaluation task always want look statistics whole process take thirty minutes even without considering S3 upload real use case Human Activity RecognitionThere plenty open datasets machine learning provided public institutions University California MLdata org deeplearning net One might good starting point use case need adapt input format kind simple csv file AWS Machine Learning expects understand input features computed actually use model online data obtain predictions found interesting dataset HAR Human Activity Recognition based smartphone sensors data freely available dataset contains 10 000 records one defined 560 features one manually labeled target column take one following values 1 walking2 walking upstairs3 walking downstairs4 sitting5 standing6 lying downThe 560 features columns input data model represent time frequency domain variables obtained accelerometer gyroscope signals Since target column take two values known multi-class problem rather simpler binary problem find information values downloadable zip file even imagine mobile applications may actually use kind data Perhaps want gain insights app usage perhaps track daily activity patterns order integrate fitness daily report Preparing Datasource csv fileThis dataset formatted way AWS Machine Learning expected typical notation ML field indicates input matrix X output labels y Also usual 70 30 dataset split performed dataset authors already find four files total case AWS Machine Learning us want upload whole set one single csv file Therefore coded tiny python script convert four matrix-formatted files single comma-separated file input data Datasource Dataset manipulation csvPython itertools import izip import re output_file 'dataset csv' input_files 'train X_train txt' 'train y_train txt' 'test X_test txt' 'test y_test txt' def getOutputLines filenames X y filenames iteritems open X Xf open y yf Xline yline izip Xf yf Xline re sub ' ' ' ' Xline strip yield ' ' join yline strip Xline split ' ' n open output_file 'w ' f newline getOutputLines input_files f writelines newline 1234567891011121314151617181920from itertools import izipimport re output_file 'dataset csv'input_files 'train X_train txt' 'train y_train txt' 'test X_test txt' 'test y_test txt' def getOutputLines filenames X y filenames iteritems open X Xf open y yf Xline yline izip Xf yf Xline re sub ' ' ' ' Xline strip yield ' ' join yline strip Xline split ' ' n open output_file 'w ' f newline getOutputLines input_files f writelines newline Luckily Datasource input either use single S3 file set files schema decided split big file 90MB smaller files 1000 records uploaded S3 Note couldn uploaded raw dataset files directly schema coherent comma-separated Data manipulation massaging typical step pre-training phase data might come database analytics data warehouse need format normalize sometimes create complex features via aggregation composition improve results Training evaluating modelThe process creating datasource training evaluating model fairly painless AWS Machine Learning long input data well formatted worry case receive error Datasource creation Everything automatically stop 10K invalid records detected case everything go pretty smoothly even kind slowly model created first evaluation available point shown model F1 score evaluation metric 0 1 takes account precision recall given dataset got pretty good 0 92 score Besides score also shown evaluation matrix evaluation matrix graphical representation model behavior testing set model works fine find diagonal pattern meaning records belonging N class correctly classified N least time general scenario classes easier guess others case classes 1 2 3 three walking classes pretty similar well 4 5 sitting standing table see hardest class guess 5 standing 13 cases classified 4 sitting hand class 2 walking upstairs easy guess almost 95 precision might wrongly classified 1 3 4 5 Based data might decide enrich dataset example could add standing records help model distinguish sitting might even find data wrong biased experimental assumptions case ll need come new ideas solutions improve data e tall chair used record sitting positions reference average person height etc use model codeNow machine learning model running want use real-world app specific case would need sit study 560 input features computed code mobile app call AWS Machine Learning model obtain online prediction given record order simplify demo let assume already computed features vector re using python server installed well known boto3 library need order obtain new prediction Model ID Prediction Endpoint First need enable ML model online predictions simply click Enable real time predictions wait endpoint available retrieve via API Note since 500 input columns didn really take time name input features would definitely good idea way ll avoid deal meaningless input names Var001 Var002 python script reading features record local file generating names based column index find full commented code record csv file Online Prediction python import boto3 boto3 session import Session session Session aws_access_key_id 'YOUR_KEY' aws_secret_access_key 'YOUR_SECRET_KEY' machinelearning session client 'machinelearning' region_name 'YOUR_REGION' model_id 'YOUR_MODEL_ID' labels '1' 'walking' '2' 'walking upstairs' '3' 'walking downstairs' '4' 'sitting' '5' 'standing' '6' 'laying' try model machinelearning get_ml_model MLModelId model_id prediction_endpoint model get 'EndpointInfo' get 'EndpointUrl' open 'record csv' f record_str f readline record index val enumerate record_str split ' ' record 'Var 03d' index 1 val response machinelearning predict MLModelId model_id Record record PredictEndpoint prediction_endpoint label response get 'Prediction' get 'predictedLabel' print currently labels label except Exception e print e 123456789101112131415161718192021222324252627import boto3from boto3 session import Session session Session aws_access_key_id 'YOUR_KEY' aws_secret_access_key 'YOUR_SECRET_KEY' machinelearning session client 'machinelearning' region_name 'YOUR_REGION' model_id 'YOUR_MODEL_ID'labels '1' 'walking' '2' 'walking upstairs' '3' 'walking downstairs' '4' 'sitting' '5' 'standing' '6' 'laying' try model machinelearning get_ml_model MLModelId model_id prediction_endpoint model get 'EndpointInfo' get 'EndpointUrl' open 'record csv' f record_str f readline record index val enumerate record_str split ' ' record 'Var 03d' index 1 val response machinelearning predict MLModelId model_id Record record PredictEndpoint prediction_endpoint label response get 'Prediction' get 'predictedLabel' print currently labels label except Exception e print e record passed model evaluated real-time synchronously obtain Prediction object Online Prediction ObjectJavaScript 'Prediction' 'predictedLabel' '2' 'predictedScores' '1' 2 609832350231045e-09 '3' 5 4868586119027896e-08 '2' 0 999945878982544 '5' 5 999675582735176e-13 '4' 5 4045554861659184e-05 '6' 5 1530719795411795e-12 'details' 'PredictiveModelType' 'MULTICLASS' 'Algorithm' 'SGD' 'ResponseMetadata' 'HTTPStatusCode' 200 'RequestId' '8525850d-ec68-11e4-9306-034326bf643c' 123456789101112131415161718192021 'Prediction' 'predictedLabel' '2' 'predictedScores' '1' 2 609832350231045e-09 '3' 5 4868586119027896e-08 '2' 0 999945878982544 '5' 5 999675582735176e-13 '4' 5 4045554861659184e-05 '6' 5 1530719795411795e-12 'details' 'PredictiveModelType' 'MULTICLASS' 'Algorithm' 'SGD' 'ResponseMetadata' 'HTTPStatusCode' 200 'RequestId' '8525850d-ec68-11e4-9306-034326bf643c' field need predictedLabel represents classified result based input Note also get probability measure class case predicted class greater 99 probability correct statistics could incredibly useful even given prediction reliable enough cases might inspect classes degree reliability decide switch prediction based context assumptions alternative solution could storing larger set records e one minute worth sensors signals call create_batch_prediction method API resource expects set observations input asynchronously generate one prediction record given S3 bucket use predicted value provide real-time feedback device store use generate insights etc focusing specific software architecture work well using wide range alternative profiles long use mentioned API correctly ready AWS Machine Learning million use cases dataset somehow unique context AWS Machine Learning successfully manages let focus data without wasting time trying tons models dealing boring math personally curious see service going evolve AWS users exploit features Moreover would like see AWS handle another typical need keeping model updated new observations moment quite painful would need upload brand new source S3 go whole training testing process every time ending N models N evaluations N 3 datasources AWS Machine Learning dashboard found useful datasets going use AWS Machine Learning Let us know think help improve models meanwhile d like invite Cloud Academy try new hands-on Lab free allow practice mentioned concepts explore Amazon ML real AWS Console Start Lab Become Cloud expert Annual MembershipNew courses every week 100 May 31st Start 7 day Free Trial Alex CasalboniI Software Engineer great passion music web technologies I'm experienced web development software design particular focus frontend UX sound music engineering background allows deal multimedia signal processing machine learning AI lot interesting tools even powerful merge Cloud Posts - WebsiteFollow JeffWeakley signed Cloud Academy trial went tutorial blog update interested idea behind AWS Machine Learning got stuck 4th part set S3 maybe found confusing Never got work moved read content Granted wasn able wanted m clear models ran interpret output http alexcasalboni com Alex Casalboni Hi Jeff sorry hear got stuck Datasource creation didn focus much explaining AWS Console S3 work would normally upload dataset already uploaded needed files publicly accessible S3 bucket please help find went wrong shown error message source validation JeffWeakley Thanks Alex m tutorial trying chose N Virginia region know s3 amazon-machine-learning HAR assumed maybe click S3 opens another tab little except permission use Amazon S3 Console know proceed see hints move forward actually using system http alexcasalboni com Alex Casalboni Sorry misleading instructions use S3 want select Amazon Machine Learning service launch Data source Model creation process m going add clear screenshot step asap Let know manage create Data source using S3 files input Latest E-booksSign Cloud Academy Start Freeor social sign Learn AWS Cloud Academy Labs Learn Cloud Computing Cloud Computing Fundamentals Become AWS Certified AWS Certifications Guide Amazon Web Services AWS Microsoft Azure Docker Open-Source TechSubscribe newsletterStay updated Cloud Computing news weekly learning material Follow Cloud Cloud Academy Blog Amazon Machine Learning use cases real example PythonAbout Sitemap Cloud FundamentalsCopyright 2013-2015 Cloud Academy rights reserved Share Facebook Twitter Google LinkedIn"),
('Artificial Intelligence and Atari - Hill Climbing Algorithms with Fishing Derby', "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ Artificial Intelligence Atari - Hill Climbing Algorithms Fishing Derby UW-AI Class SubscribeSubscribedUnsubscribe7 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Statistics 877 views Like video Sign make opinion count Sign Don't like video Sign make opinion count Sign Loading Loading Loading Rating available video rented feature available right Please try later Published Dec 18 2014Project using hill climbing algorithms teach AI agent play Fishing Derby Category Gaming License Standard YouTube License Show Show less Comments Comments disabled video Autoplay autoplay enabled suggested video automatically play next Next Threes AI - Duration 5 02 UW-AI Class 6 293 views 5 02 Play nextPlay Greedy Best-First Search - Duration 4 28 89 views 4 28 Play nextPlay Breadth First Search Algorithm - Duration 4 34 Go GATE IIT 170 557 views 4 34 Play nextPlay CSCI 6350 Artificial Intelligence Minimax Alpha-Beta Pruning Algorithms Psuedocodes - Duration 46 40 CSCI Tutorials 4 413 views 46 40 Play nextPlay Aula Resumo Inteligencia Artificial - Algoritmos de Busca e SBC's - Duration 33 05 Aulas Aleat rias 1 570 views 33 05 Play nextPlay Artificial intelligent Pacman min-max algorithm q-learning algorithm demonstration - Duration 7 39 Yu Shao 1 228 views 7 39 Play nextPlay AI teaches play 49 Atari 2600 games - Duration 1 13 Electronic Products Magazine 522 views 1 13 Play nextPlay Intelligence Artificielle 4 2 Jeux deux adversaires - algorithme minimax - Duration 17 40 Hugo Larochelle 2 765 views 17 40 Play nextPlay Pushing Atari Limits - Computerphile - Duration 8 58 Computerphile 78 970 views 8 58 Play nextPlay Hill climbing - Duration 9 40 Audiopedia 462 views 9 40 Play nextPlay Algoritmos de intelig ncia artificial para ve culos aut nomos parte - Duration 1 04 04 LabdeGaragem 6 167 views 1 04 04 Play nextPlay Intelig ncia Artificial - Busca Heur stica Gulosa - Duration 5 11 Marciel Dantas 3 134 views 5 11 Play nextPlay algoritmo Inteligencia Artificial minimax mp4 - Duration 6 21 luis soto 4 614 views 6 21 Play nextPlay Artificial Intelligence Humans Volume 1 Fundamental Algorithms - Duration 8 07 Jeff Heaton 3 892 views 8 07 Play nextPlay Ian Miller Dan Janiak HMM Localization - Duration 5 02 UW-AI Class 25 views 5 02 Play nextPlay Dawn Killer Robots Full Length - Duration 28 40 Motherboard 400 892 views 28 40 Play nextPlay CANNON FODDER SEGA MEGADRIVE GAMEPLAY VIDEO - Duration 9 53 Paul Rhodes 3 601 views 9 53 Play nextPlay 4 Search Depth-First Hill Climbing Beam - Duration 48 42 MIT OpenCourseWare 28 112 views 48 42 Play nextPlay hillclimbing - Duration 6 24 profgeier 1 851 views 6 24 Play nextPlay Hill Climbing Algorithm Artificial Intelligence - Computerphile - Duration 7 20 Computerphile 87 246 views 7 20 Play nextPlay Loading suggestions Show Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists"),
("What do you think of Linus Torvalds' opinion on the advantage of C over C++?", "Home Reading Searching Subscribe Sponsors Statistics Posting Contact Spam Lists Links Hosting Filtering Features Download Marketing Archives Weaver FAQ Linus Torvalds torvalds linux-foundation org Subject Re RFC Convert builin-mailinfo c use Better String Library Newsgroups gmane comp version-control git Date 2007-09-06 17 50 28 GMT 7 years 37 weeks 5 days 6 hours 6 minutes ago Wed 5 Sep 2007 Dmitry Kakurin wrote first looked Git source code two things struck odd 1 Pure C opposed C idea Please don't talk portability it's BS full bullshit C horrible language It's made horrible fact lot substandard programmers use point it's much much easier generate total utter crap Quite frankly even choice C nothing keep C programmers would huge reason use C words choice C sane choice know Miles Bader jokingly said piss it's actually true I've come conclusion programmer would prefer project C C likely programmer really would prefer piss doesn't come screw project I'm involved C leads really really bad design choices invariably start using nice library features language like STL Boost total utter crap may help program causes - infinite amounts pain don't work anybody tells STL especially Boost stable portable full BS it's even funny - inefficient abstracted programming models two years road notice abstraction wasn't efficient code depends nice object models around cannot fix without rewriting app words way good efficient system-level portable C ends limit things basically available C limiting project C means people don't screw also means get lot programmers actually understand low-level issues don't screw things idiotic object model crap I'm sorry something like git efficiency primary objective advantages C huge mistake fact also piss people cannot see big additional advantage want VCS written C go play Monotone Really use real database use nice object-oriented libraries use nice C abstractions quite frankly result design decisions sound appealing CS people end result horrible unmaintainable mess I'm sure you'd like git Linus"),
('Recursive Sierpinski Fractal', "we're hiring blog imgur imgur store uploading tools developer api need help terms privacy ad choices upload images 23 Upload Images Video GIF Make Meme sign sign Loading browse computer drag drop Ctrl V paste clipboard publish Imgur create album Start Upload Blog Horizontal Grid Edit Images 0 uploading agree terms service Optimizing large GIFs file type supported Supported formats JPEG GIF PNG APNG TIFF BMP PDF XCF share Recursive Sierpinski Fractal 1 month ago 782 views stats Download full resolution Get embed codes Love Imgur Join team store help blog request deletion terms privacy apps api advertise ad choices 2015 Imgur Inc prev next top Today's best images prev next browse way I'm sure Uploaded 0 Points 0 ups 0 downs - Views - Bandwidth usage - Comments - Favorites Daily Cumulative - waiting image data Loading views Get image internet"),
('AI for the Threes game', "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ Threes AI UW-AI Class SubscribeSubscribedUnsubscribe7 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Statistics 6 339 30 Like video Sign make opinion count Sign 31 1 Don't like video Sign make opinion count Sign 2 Loading Loading Loading Rating available video rented feature available right Please try later Published Dec 17 2014John Downey's final project Category People Blogs License Standard YouTube License Show Show less Loading Autoplay autoplay enabled suggested video automatically play next Next 2048 AI Run - 8192 TIle - Duration 12 08 Yiyuan Lee 1 706 views 12 08 Play nextPlay Artificial Intelligence Atari - Hill Climbing Algorithms Fishing Derby - Duration 4 02 UW-AI Class 863 views 4 02 Play nextPlay Improved 2048 AI 344864 points - Duration 20 00 Maarten Baert 177 823 views 20 00 Play nextPlay game 2048 Processing Java js around 100 lines - Duration 33 17 Ben KTByte 22 656 views 33 17 Play nextPlay Creating Poker Bot - Duration 4 52 UW-AI Class 79 views 4 52 Play nextPlay One Dimensional Search Atari 2600 Games - Duration 4 45 UW-AI Class 25 views 4 45 Play nextPlay COSC 4550 Atari Game Agents - Duration 4 50 UW-AI Class 45 views 4 50 Play nextPlay Ian Miller Dan Janiak HMM Localization - Duration 5 02 UW-AI Class 25 views 5 02 Play nextPlay Lecture7 Expectimax Utilities - Duration 1 12 02 CS188Spring2013 2 689 views 1 12 02 Play nextPlay MTV Roadies X2 - Kathmandu - Journey Episode 12 - Full Episode - Duration 45 41 mtvroadies 305 351 views 45 41 Play nextPlay Sun Saathiya Disney's ABCD 2 Varun Dhawan Shraddha Kapoor - Duration 2 33 UTV Motion Pictures 3 091 238 views 2 33 Play nextPlay Sardaar ji Official Trailer Diljit Dosanjh Neeru Bajwa Mandy Takhar Releasing 26th June - Duration 2 40 White Hill Productions 743 394 views 2 40 Play nextPlay Chakravartin Ashoka Samrat - 26th May 2015 - - Full Episode HD - Duration 21 20 Colors TV 110 588 views 21 20 Play nextPlay Subramanian Swamy shocks people wedding India News7 Tamil - Duration 1 07 News7 Tamil 1 406 112 views 1 07 Play nextPlay Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists"),
('Sirius: An Open Source Intelligent Personal Assistant', "Welcome Setup Sirius Download Install Contact Cite Sirius Sirius Suite Download Setup Automatic Speech Recognition ASR Image Matching IMM Question-Answering QA Cite Sirius-suite Watch Learn Slides Tutorial Seminar Abstract Target Audience Outline Schedule Presenters Downloads People Press Search Disclaimer Sirius produced Apple way derived Apple's Siri Menu Welcome Setup Sirius Download Install Contact Cite Sirius Sirius Suite Download Setup Automatic Speech Recognition ASR Image Matching IMM Question-Answering QA Cite Sirius-suite Watch Learn Slides Tutorial Seminar Abstract Target Audience Outline Schedule Presenters Downloads People Press Welcome Sirius open end-to-end standalone speech vision based intelligent personal assistant IPA similar Apple Siri Google Google Microsoft Cortana Amazon Echo Sirius implements core functionalities IPA including speech recognition image matching natural language processing question-and-answer system Sirius developed Clarity Lab University Michigan Sirius published International Conference Architectural Support Programming Languages Operating Systems ASPLOS 2015 Link publication 1 Check Sirius Sirius-suite seminar held ASPLOS re interested contributing Sirius fork repo post sirius-users Contributors Sirius developed Clarity Lab supervision Jason Mars Lingjia Tang members Clarity Lab collaborators contributed developing Sirius listed people page 1 Johann Hauswald Michael Laurenzano Yunqi Zhang Cheng Li Austin Rovinski Arjun Khurana Ron Dreslinski Trevor Mudge Vinicius Petrucci Lingjia Tang Jason Mars Sirius Open End-to-End Voice Vision Personal Assistant Implications Future Warehouse Scale Computers Proceedings Twentieth International Conference Architectural Support Programming Languages Operating Systems ASPLOS ASPLOS 15 New York NY USA 2015 ACM Acceptance Rate 17 Bibtex inproceedings hauswald15asplos author Hauswald Johann Laurenzano Michael Zhang Yunqi Li Cheng Rovinski Austin Khurana Arjun Dreslinski Ron Mudge Trevor Petrucci Vinicius Tang Lingjia Mars Jason title Sirius Open End-to-End Voice Vision Personal Assistant Implications Future Warehouse Scale Computers booktitle Proceedings Twentieth International Conference Architectural Support Programming Languages Operating Systems ASPLOS series ASPLOS '15 year 2015 numpages 13 publisher ACM address New York NY USA note Acceptance Rate 17 2015 Sirius Open Intelligent Personal Assistant"),
('The Thrilling Adventures of Lovelace and Babbage', "TOPICS LISTEN WATCH READ EDUCATE DONATE Science Friday Ira Flatow SciFri Stations Staff Board Jobs Internships Freelancing Advertising Donating Supporters Contact Us Listen Home Planet Space Body Brain Biology Nature Go Figure Physics Chemistry Engineers Gadgets Geeks Art History Culture Food Garden Energy Ethics Education Policy Big Thinkers Listen 04 24 2015 Unusual Laboratory Earth Dreaming Future Interstellar Travel YouTuber Wants Make Smarter Every Day Stegosaurus Smackdown Plus Bumblebee Mosquito Mysteries Thrilling Adventures Lovelace Babbage New Era NASA Charles Bolden Leads Way Pot-Stirrer Archive 2015January February March April May 2014January February March April May June July August September October November December 2013January February March April May June July August September October November December 2012January February March April May June July August September October November December 2011January February March April May June July August September October November December 2010January February March April May June July August September October November December 2009January February March April May June July August September October November December 2008January February March April May June July August September October November December 2007June July August September October November December Subscribe Podcast Apr 24 2015 Thrilling Adventures Lovelace Babbage Click enlarge images Tweet Listen Later Stitcher Tweet Inventor Charles Babbage proto-programmer Ada Lovelace gone history first computer pioneers true story sad one writing many consider first computer program Lovelace died age 36 Meanwhile Babbage analytical engine essentially steam-powered computer made cogs never built Comic artist animator Sydney Padua writes Lovelace Babbage happier ending new graphic novel Thrilling Adventures Lovelace Babbage duo build analytical engine use adventuring fighting crime Check excerpt novel Produced Annie Minoff SciArts Producer Guests Sydney Padua Comic ArtistAuthor Thrilling Adventures Lovelace Babbage Pantheon 2015 London England Discussion FEATURED READING Seveneves Novel Neal Stephenson ADVERTISEMENT MIGHT ALSO LIKE Picture Week Limpet TeethThe title-holder strongest biological material goes small mollusk Day Moon Blew UpAn excerpt Neal Stephenson's new book Seveneves Fine Art Toxic WasteAn engineer artist transforming pollution coal mines pigments used tint paint Math Like Baking Need RecipeAn excerpt Bake Pi Eugenia Cheng NEWSLETTER Sign SciFri inbox ADVERTISEMENT Contact Supporters Newsletter Policies Available iTunes Science Friday produced Science Friday Initiative 501 c 3 nonprofit organization Science Friday SciFri registered service marks Science Friday Inc Site design Pentagram engineering Mediapolis Contact Supporters Newsletter Policies Available iTunes Science Friday produced Science Friday Initiative 501 c 3 nonprofit organization Science Friday SciFri registered service marks Science Friday Inc Site design Pentagram engineering Mediapolis Home Planet Space Body Brain Biology Nature Go Figure Physics Chemistry Engineers Gadgets Geeks Art History Culture Food Garden Energy Ethics Education Policy Big Thinkers Loading"),
('It turns out PageRank is bad at ranking sports teams...and sports tournament ranking methods might work better for certain types of websites.', "IEEE org IEEE Xplore Digital Library IEEE Standards IEEE Spectrum Sites Follow Advertisement Engineering Topics Special Reports Blogs Multimedia Magazine Professional Resources Search Ongoing coverage Shanghai first CESAsia Spectrum Stephen Cass Close Ticker Podcasts Work Innovation Football Rankings Versus Google's PageRank mathematicians rank rankings PageRank doesn't always come top Steven Cherry Posted 22 Jun 2011 19 37 GMT Share Email Print Reprint Loading podcast player Download Podcast Subscribe Podcast rank things important sometimes easy College basketball teams relatively easy rank top 68 teams play knockout tournament best team last one standing speak one hasn lost game think know second best team always one lost final round Maybe one lost team semifinal round turns easy rank basketball teams even month-long tournament process College football teams even harder rank notoriously effort get best teams play one another comprehensive tournament like basketball Last year two undefeated teams Number 1 Number 2 five teams one loss Number 3 Number 7 lot rides college ranking systems best teams get millions dollars television revenue rich-get-richer way attract best high school athletes may lead future championships lot rides ranking systems first foremost Google Last year JC Penney department store chain spent lot money pump Google search results earning banner season online holiday revenue Google tweaked PageRank algorithms Penney position terms like dresses living room furniture plummeted Number 1 50 turns ranking football teams Google PageRank common might think group mathematicians recently compared found key respects sports systems superior ranking sports teams ranking Web pages well research current issue Society Industrial Applied Mathematics Journal Scientific Computing two guests today Without ranking way Tim Chartier associate professor mathematics Davidson College lead author SIAM study joins us phone Davidson North Carolina Erich Kreutzer listed second author study time undergraduate researcher Davidson developed many paper real-world experiments software engineer Marin Software creates search-related systems large advertisers also another connection Google 2007 student developer Google annual Summer Code joins us cellphone San Francisco rank things important sometimes easy College basketball teams relatively easy rank top 68 teams play knockout tournament best team last one standing speak one hasn lost game think know second best team always one lost final round Maybe one lost team semifinal round turns easy rank basketball teams College football teams even harder rank notoriously effort get best teams play one another comprehensive tournament like basketball Last year two undefeated teams 1 2 five teams one loss 3 7 lot rides college ranking systems best teams get millions dollars television revenue rich-get-richer way attract best high school athletes may lead future championships lot rides ranking systems first foremost Google Last year JC Penney department store chain spent lot money pump Google search results earning banner season online holiday revenue Google tweaked PageRank algorithms Penney position terms like dresses living room furniture plummeted 1 50 turns ranking football teams Google PageRank common might think group mathematicians recently compared found key respects sports systems superior ranking sports teams ranking Web pages well research current issue Society Industrial Applied Mathematics SIAM Journal Scientific Computing two guests today Without ranking way Tim Chartier associate professor mathematics Davidson College lead author SIAM study joins us phone Davidson North Carolina Tim welcome podcast Tim Chartier Yeah Thank much Steven Cherry Erich Kreutzer listed second author study time undergraduate researcher Davidson developed many paper real-world experiments software engineer Marin Software creates search-related systems large advertisers also another connection Google 2007 student developer Google annual Summer Code joins us cellphone San Francisco Erich welcome podcast Erich Kreutzer Hi Thank much Steven Cherry Tim let start college ranking systems Tell us group wanted compare PageRank Tim Chartier One called Colley method named Wesley Colley particular method looks wins losses score information put ranking method create linear systems using linear algebra get ax b take information solve linear system get call rating team instance playing tennis instance decided use Colley method rank us people might also playing rating 0 6 mine 0 4 would ranked higher Massey method second method put paper coming sports ranking method named Ken Massey created method actually honors thesis undergraduate degree consulting Bowl Championship Series also high school sports method Bowl Championship Series believe still look score Bowl Championship Series prefers part ranking method actually folded two methods looked mainly interested called stability sensitivity methods Sensitivity means small difference like one team beats another team much rating change rating vector earlier talked think used numbers 0 4 0 6 two us whereas stability says small change outcome games much ranking change looked Colley method Massey method mentioned earlier instance JC Penney PageRank one developed Sergey Brin Larry Page Google Steven Cherry Erich tell us real-world experiments gather specifically designed test ideas stability sensitivity Erich Kreutzer Well yes initial part paper talk idea perfect season real world idea set teams say 1 ranked team beaten teams 2 team beaten teams lost first team forth get last team lost every team idea perfect season introduce one upset say 10th team might actually beat second team outing see changes rankings ratings various algorithms everyone kind understands sports aren predictable re going perfect season needed find scenario could isolate one game ended upset talked amongst research group finally came idea examining possible Monday night football games since kind go season Monday night football game happens games occurred already happened consider Monday night football game rank-one update whole systems ended creating little piece code would go back think last 10 15 years NFL seasons look Monday night football games see upsets d found d analysis d done see rankings ratings various teams changed single game Steven Cherry turns PageRank system highly unstable Tell us six-team jump saw Erich Kreutzer Yeah kind expected team upset would generally lose rankings mean think human hears team going high loses team performing pretty poorly d expect ranking go happens one tests PageRank algorithm actually team upset increase ranking actually New York Giants believe jumped six spots talking lost Cleveland Indians actually last place according PageRank algorithm Steven Cherry Yeah guess would Cleveland Browns guess happened two systems New York Giants game Erich Kreutzer Yes game actually Colley method Giants dropped nine places rank Massey dropped 10 places instead increase rank systems Cleveland since lower-ranked team increased rank Cleveland jumped one position Colley ranking jumped three positions Massey ranking Steven Cherry Tim learn paper guess one lesson PageRank wouldn best way rank college sports teams lesson ranking Web pages well right Tim Chartier Yes part reason re seeing behavior PageRank take ratings graph PageRank actually follows power rule essentially exponential drop ratings sorted moved along means highest-ranked Web page instance re talking Web pages high rating quickly move along lower-rated Web pages small page rank means small rating re close Well issue stability issues terms induce small change system really change lot things particularly call tail small-ranked Web pages sports teams instance mathematics would true engineering science sometimes fairly esoteric Web searches terms totality Web sometimes notice actually pull Web page search top pages necessarily highest quality hypothesize part may related fact instability tail ve actually used ranking methods March Madness create brackets ve consistently found Massey Colley much much better PageRank rank basketball teams predict outcome March Madness predict perfectly mean d nice really guess re shooting ideal way Steven Cherry would equivalent upset case Web page ranking Tim Chartier Well Web page ranking basically one page points another page sharing page rank page complicated even linear systems complicated everything interdependent creates linear system means rating depends ratings teams ve played two teams like Giants Browns play moment game played rating change rating everyone else changes PageRank way done actually link Web page pointing another Web page actually share page rank mean want raise page rank part way done getting high quality Web pages point things called link farms create high quality Web pages re often educational sites educators pointing particularly K-12 education Web pages actually link businesses forth raise page rank m sure m quite answering question kind analogy two sports setting treat win certain sense link one page another Steven Cherry fair say sports systems Colley Massey systems would less sensitive page farms say Google Tim Chartier Yeah certain sense think would bigger issue Colley Massey spent lot time Colley Web pages actually underlying model re built one reasons PageRank works well even susceptibility spam actually built model people surf Web actually working win loss type model Colley actually built called random surfer model assumes re particular Web page 85 percent chance following link Web page 15 percent time re going randomly jump teleport anywhere Web nice model even though none us probably follow nice model people move along Web one reasons get overall good results However Colley terms Web ranking ve found robust model Web ranking found instance social networks work quite well debatable whether PageRank good model ve active applying Colley ve talked lot ve moved using Massey instance Twitter ve used think setting like model aligns well would also less susceptible spam Steven Cherry comes static Web pages PageRank still probably way go questions whether sort system would best social networks Tim Chartier Yes one didn mention Well said jump called teleporting teleport doesn really make sense social networks mean certain sense kind teleport somebody else Twitter account fact one people retweet something sort visit account overall basically reader reading pages people follow re surfing Twitter large different behavior moves network instance PageRank Steven Cherry good Well thanks lot Tim Chartier Thank Erich Kreutzer Thank Steven Cherry ve speaking Professor Tim Chartier Davidson College Erich Kreutzer Marin Software two researchers compared Google PageRank college sports ranking systems somewhat surprising results IEEE Spectrum Techwise Conversations m Steven Cherry interview recorded 21 June 2011 Audio engineer Francesco Ferorelli Follow us Twitter spectrumpodcast NOTE Transcripts created convenience readers listeners may perfectly match associated interviews narratives authoritative record IEEE Spectrum's audio programming audio version Learn Google PageRank sports Share Email Print Reprint Comments Comment Policy Please enable JavaScript view href http disqus com ref_noscript comments powered Disqus Comments powered Disqus Advertisement Telecom Real-Time Search Stumbles Gate Experts say instantaneous info cool real-time search isn't quite ready prime time10 Feb 2010 Telecom Learned Live Google-free quest quit pervasive company Web6 Jun 2011 Telecom 5 Technologies Shape Web Innovations make web smarter sleeker irresistibly social too31 May 2011 Computing Facebook Versus Google It's Button War Like Send beat 1 also give Facebook control social identity 25 May 2011 Advertisement Telecom Giving Google Get new study asks whether personalized search results worth private data give up15 Apr 2011 Work Google Patent Portal Closing Fast Next week Google experiment patent purchasing ends really helped fight trolls 19 May Work Liquid 3-D Printing new 3-D printing technique manufacture soft elastic materials ceramics biological tissues minutes instead hours17 Mar Work Crabots Giant Transparent Tents Key Google's Reconfigurable Campus Autonomous construction cranes reconfigure Google's proposed campus moving modular offices around needed5 Mar Work Question Authority Make Top Tech 2015 Predictions Join IEEE Spectrum SciCast technology-prediction tournament1 Jan Work 2015 Top Tech Watch predict technologies make headlines year ll never surprised31 Dec 2014 Work Crowdfund Hardware Start-up Sites like Kickstarter boost start-up expose critical flaws30 Dec 2014 Work Predicting Great Achievements 21st Century Looking technologies 1914 might give hint future25 Dec 2014 Work Interactive Patent Power 2014 Scorecards19 Nov 2014 Work Patent Power 2014 year roundup companies organizations strongest U patent portfolios19 Nov 2014 Work Scientific Community Blasts Microsoft Closing Silicon Valley Lab Prominent computer scientists ask Microsoft polite way heck thinking 22 Oct 2014 Work Hewlett-Packard Splits Labs HP Labs splitting though much left split7 Oct 2014 Work Venture Capitalists Placing Bets optimism VCs new technologies rising across board especially cloud computing mobile health-care IT26 Sep 2014 Work Choosing Remote-Collaboration Software Hardware development requires general-purpose tools22 Sep 2014 Work Last Day Microsoft Research Silicon Valley somber mood reigns Microsoft Building 6 today edge Google campus behind lab researchers won far go find new jobs19 Sep 2014 Work Japan Act Like Silicon Valley Stanford engineer Richard Dasher thinks could18 Sep 2014 Topics Aerospace Work Biomedical Computing Energy Gadgets Geek Life Robotics Semiconductors Telecom Connect Facebook Twitter LinkedIn Google RSS IEEE Spectrum Contact Us Newsletters Mobile Site Reprints Permissions IEEE Partners Advertising Media Center IEEE Job Site Buyer Guide Magazine Subscribe Digital Download Copyright 2015 IEEE Spectrum Terms Conditions Privacy Opting Cookies Accessibility Nondiscrimination Policy IEEE Conferences Events Education Careers Membership Services Publications Standards Societies Communities"),
('Evaluating job packing in warehouse-scale computing', "Skip content Home Research Areas Publications Overview Algorithms Theory Artificial Intelligence Machine Learning Data Management Data Mining Distributed Systems Parallel Computing Economics Electronic Commerce Education Innovation General Science Hardware Architecture Human-Computer Interaction Visualization Information Retrieval Web Machine Perception Machine Translation Mobile Systems Natural Language Processing Networking Security Cryptography Privacy Software Engineering Software Systems Speech Processing People Research Programs Work Google Publication Data Venue IEEE Cluster Madrid Spain 2014 Publication Year 2014 Authors Abhishek Verma Madhukar Korupolu John Wilkes BibTeX inproceedings 43103 title Evaluating job packing warehouse-scale computing author Abhishek Verma Madhukar Korupolu John Wilkes year 2014 booktitle IEEE Cluster address Madrid Spain Evaluating job packing warehouse-scale computing Abstract One key factors selecting good scheduling algorithm using appropriate metric comparing schedulers metric used evaluating schedulers warehouse-scale cloud clusters machines different types sizes heterogeneous workloads dependencies constraints task placement long-running services consume large fraction total resources Traditional scheduler evaluations focus metrics queuing delay makespan running time fail capture important behaviors ones rely workload synthesis scaling often ignore important factors constraints paper explains complexities issues evaluating warehouse scale schedulers focusing find single important aspect practice well pack long-running services cluster describe compare four metrics evaluating packing efficiency schedulers increasing order sophistication aggregate utilization hole filling workload inflation cluster compaction Google Plus Thoughts Google's academic community Twitter Research Google announcements Research Blog latest news Research Google Google Scholar Search scholarly literature YouTube Tech Talks Tech talks leaders field Google Google Privacy Terms"),
('Three MIT CS students/roboticists doing AMA right now [X-Post from r/iAMA]', "jump contentmy subredditsannouncementsArtAskRedditaskscienceawwblogbookscreepydataisbeautifulDIYDocumentariesEarthPornexplainlikeimfiveFitnessfoodfunnyFuturologygadgetsgamingGetMotivatedgifshistoryIAmAInternetIsBeautifulJokesLifeProTipslistentothismildlyinterestingmoviesMusicnewsnosleepnottheonionOldSchoolCoolpersonalfinancephilosophyphotoshopbattlespicsscienceShowerthoughtsspacesportstelevisiontifutodayilearnedTwoXChromosomesUpliftingNewsvideosworldnewsWritingPromptsedit subscriptionsfront-all-random gadgets-sports-gaming-pics-worldnews-videos-AskReddit-aww-Music-funny-news-movies-books-history-food-philosophy-television-Jokes-Art-DIY-space-Documentaries-Fitness-askscience-nottheonion-todayilearned-personalfinance-gifs-listentothis-IAmA-TwoXChromosomes-creepy-nosleep-GetMotivated-WritingPrompts-LifeProTips-EarthPorn-explainlikeimfive-Showerthoughts-Futurology-photoshopbattles-mildlyinteresting-dataisbeautiful-tifu-OldSchoolCool-UpliftingNews-InternetIsBeautiful-sciencemore IAmAcommentsrelatedother discussions 2 want join sign create account seconds Englishlimit search r IAmAuse following search parameters narrow results subreddit subredditfind submissions subreddit author usernamefind submissions username site example comfind submissions example com url textsearch text urlselftext textsearch text self post contentsself yes self include exclude self postsnsfw yes nsfw include exclude results marked NSFWe g subreddit aww site imgur com dogsee search faq details advanced search author subreddit post submitted 23 Apr 20151 965 points 86 upvoted shortlink remember mereset passwordloginSubmit new text postIAmAunsubscribesubscribe8 241 384 readers11 493 users nowSubmit AMA Request AMA Hide AMA Requests Please check Rules FAQs Click request added calendar AMAs scheduled Eastern Daylight Time GMT-4 00 Date Time Person Description 27 May 12pm Jim Sciutto Journalist 27 May 1pm Martin Smith Producer Documentarian 27 May 1pm Joey Corneau Emily Home Writers 27 May 4pm Missy Suicide Suicide Girls Founder 27 May 4pm Dr Matthew Blaze Patty Hsue Jonathan Curtis Dr Mustaque Ahamad David Dewey FTC Robocall Contest Reps 27 May 6pm Kellan Lutz Actor 27 May 8pm Ethan Embry Actor 28 May 10am CERN scientists Scientists 28 May 11am Adam Richman Actor 28 May 11 30am Steve Hilton Author 28 May 1pm Chad Hodge Writer Producer 28 May 2 30pm Helen Greiner Co-Founder iRobot 28 May 5 30pm Todd Williams Actor 29 May 9am Garrett Ingolia Americare Vice President 29 May 12 30pm Jack Noseworthy Actor 29 May 1pm Joy Ito Director MIT Media Lab 29 May 3pm Mackenzie Davis Actor 29 May 3 30pm Robert LaSardo Actor 29 May 4pm Brazzers Adult Company 29 May 7pm Koji Igarashi Castlevania producer 1 Jun 1pm Tabatha Coffey TV Personality Hair Stylist 1 Jun 1pm Jerry Ferrara Actor 2 Jun 5pm Diplo Musician 3 Jun 3pm Mew Band see Submitting AMAs Something uncommon plays central role life truly interesting unique event Explanation examples rule found AMAs require proof Proof included text post start AMA must remain confidential message moderators verify See tips concerning proof examples Request threads Requests must reasonable realistic requests must 5 questions person requested Requests celebrities must contain public contact info body request See information requests Commenting Please note initial responses posters must contain properly punctuated question Attempting bypass rule adding non question result permanent ban See comment removals policy Useful Links Step-by-step guide AMA Traffic Visitor Stats Related subreddits Follow us Twitter Official IAMA App Android iOS 03 Oct Melissa Etheridge Musician 11 Nov Andy Cohen Talk show host 28 Oct Johnny Weir Figure skater 21 Jan Legally blind woman Stargardt's Disease 26 Jan Jerry Springer Steve Wilkos TV hosts TwitterGoogle CalendarAndroidiPhone Please check Rules FAQs created 32bitesa community 6 yearsmessage moderatorsMODERATORSkarmanautroastedbagelbrownboy13flyryancahaselerIKingJeremyUnholyDemigodImNotJesusorangejuliusSeraph_Grymm 12 discussions r IAmA X1074 points 483 comments best friend playfully pushed pool bachelorette party IAMA quadriplegic known paralyzed bride new mom AMA 2122 points 975 comments IamA disabled American expatriate Philippines founded 8ch net 4chan clone users make boards like Reddit Al Jazeera documentary year ago frontpage r videos AMA 5032 points 2334 comments IamA retired NASA Engineer worked NASA infancy beginning 1954 shuttle program AMA 55 points 375 comments It's Nick Swardson penis smells great today AMA 70 comments m CNN Chief National Security Correspondent Jim Sciutto got exclusive access spy plane secret mission near China AMA 30 comments IamA 3D model 3D print weapon props games movies AMA 105 points 97 comments Hey It's Dr Dan Pancake Man guy made crazy Avengers pancakes AMA 35 comments Hello m Martin Smith FRONTLINE correspondent director Obama War AMA 21 comments Emily Horne Joey Comeau co-creators Softer World ending June 1st Ask Us Anything 24 comments I'm Ben Brody - combat camera soldier Iraq I'm photojournalist covering war Afghanistan GroundTruth Project AMA196419651966TechnologyWe re 3 MIT roboticists answer Qs programming academia anything self IAmA submitted 1 month ago CSAILroboticistsHi We're trio researchers MIT Computer Science Artificial Intelligence Laboratory largest research lab MIT home people things like make robotic fish invent World Wide Web listen conversations using potato-chip bags thought d fun chat guys share like MIT CSAIL Feel free ask us questions almost anything including limited -why computer science amazing -how got programming -the best worst parts grad school -what think day -why important get young people excited coding bit us relevant links etc Ross Twitter rossfinman Medium rossfinman undergrad Carnegie Mellon University research 3D robotic perception also studied space robotics kidnapped CSAIL robots name ALS awareness Patrick undergrad MIT research artificial intelligence robotic manipulation dance disco tunes programmed PR2 robot join competitive pole vaulter MIT varsity pole vault coach Ariel Research page GitHub undergrad UC-Santa Cruz go Banana Slugs researches robotic manipulation previously studied dental robotics thesis abbreviates SWAG Ask away also Tweet questions Requisite disclaimer means speaking MIT CSAIL official capacity Proof http imgur com f2SxQwF http imgur com H3ybEvk UPDATE 2 00 p m EST we're UPDATE 4 00 p m EST we're done Hope answers helpful fun 699 commentssharecanceltop 200 commentsshow 500sorted besttopnewhotcontroversialoldrandomq stormy_rawr 46 points47 points48 points 1 month ago 14 children two questions one far important goes 1 far away robo-assisted personal care 2 Given chance would either augment current newly developed equipment extent permalinksavereportgive goldreply CSAILroboticists 96 points97 points98 points 1 month ago 10 children ROSS 1 Well cop answer depends Fully autonomous health care robots would fully displace human health care professionals decades level difficulty job difficulty robots deviation immense Smaller aspects automated whole long time 2 would love augment brain access internet hitting problem taking time go search online solution inefficient could done thoughts would awesome Also one friends working wearable version Facebook could remind know someone Would avoid awkward situations pretend know someone permalinksaveparentreportgive goldreply Llys 16 points17 points18 points 1 month ago 5 children Oh god give tech I'm tired forgetting peoples names permalinksaveparentreportgive goldreplyload comments 5 replies load comments 4 replies spcms 50 points51 points52 points 1 month ago 2 children personal care assume mean jacking right permalinksaveparentreportgive goldreply spamky23 1 point2 points3 points 1 month ago 0 children think already exists permalinksaveparentreportgive goldreplyload comments 1 reply Bentumbo 108 points109 points110 points 1 month ago 70 children much free time MIT students permalinksavereportgive goldreply CSAILroboticists 257 points258 points259 points 1 month ago 52 children ARIEL enough AMA permalinksaveparentreportgive goldreply Commander_Luka 24 points25 points26 points 1 month ago 46 children Sorry I'm late sophomore high school MIT dream school advice give best chance permalinksaveparentreportgive goldreply Ambassador_Buta 33 points34 points35 points 1 month ago 17 children aren't taking AP classes point sorry try next life atleast get 4 0 undergrad go graduate school MIT Thats guy know got Harvard permalinksaveparentreportgive goldreplyload comments 17 replies flacciddick 1 point2 points3 points 1 month ago 0 children parents wealthy Don't care much school permalinksaveparentreportgive goldreply WaitForItTheMongols 14 points15 points16 points 1 month ago 23 children person headed next year Don't force Don't things look good applications things interest love truly fit MIT they'll let permalinksaveparentreportgive goldreply TheEarwig 23 points24 points25 points 1 month ago 0 children advice stop worrying school go Don't operate assumption you're good enough you'll get probably won't you'll think it's personal fault rather fact many damn good applicants let permalinksaveparentreportgive goldreply Alexandur 93 points94 points95 points 1 month ago 1 child b urself wow good advise permalinksaveparentreportgive goldreplyload comments 1 reply Hangst 24 points25 points26 points 1 month ago 8 children That's extremely shitty advice permalinksaveparentreportgive goldreply Guerrilla705 57 points58 points59 points 1 month ago 4 children Senior MIT class taught admissions officer idea taking probably best advice I've read know plenty kids never took ap ib class many perfect gpas test scores didnt get APs grades extracurriculars great guess That's enough way many people perfect test scores need set apart permalinksaveparentreportgive goldreplyload comments 4 replies Secret_Mexican 2 points3 points4 points 1 month ago 1 child Could elaborate permalinksaveparentreportgive goldreplyload comments 1 reply load comments 1 reply load comments 11 replies load comments 3 replies load comments 5 replies asportking 46 points47 points48 points 1 month ago 15 children MIT student depends Take four classes semester nothing else you'll less fine Take five classes four hard classes extracurricular two it's easy get wrecked Also MIT much hard time-consuming experience homework hasn't work twelve hours one problem set It's often looked first question problem set literally idea permalinksaveparentreportgive goldreply ThisDamnSite 66 points67 points68 points 1 month ago 12 children I'm MIT student think look first question homework set idea likely least twelve hours work ahead permalinksaveparentreportgive goldreply asportking 20 points21 points22 points 1 month ago 3 children I'm saying doesn't take twelve hours I'm saying it's akin staring blankly paper eleven hours actually working one rather monstrous calculations nonstop Also probably varies depending major I'm math major could imagine mechanical engineering major would probably spend time manual labor 3D-modeling running tests things time-consuming hard permalinksaveparentreportgive goldreply ThisDamnSite 20 points21 points22 points 1 month ago 1 child I'm fucking math major college Maybe you've read book Name Wind Patrick Rothfuss you'll understand mean say stared piece paper long know true name permalinksaveparentreportgive goldreplyload comments 1 reply load comments 1 reply epicblob 15 points16 points17 points 1 month ago 3 children 12 hours genuine challenge far preferable 10 hours busywork permalinksaveparentreportgive goldreply BlueThen 1 point2 points3 points 1 month ago 0 children thing it's lot difficult manage time problem sets don't know approach first permalinksaveparentreportgive goldreplyload comments 2 replies EatGulp 2 points3 points4 points 1 month ago 0 children go MIT permalinksaveparentreportgive goldreply maestro2005 2 points3 points4 points 1 month ago 2 children go get help Ask another student someone dorm already took class go office hours etc reason spin wheels understanding something permalinksaveparentreportgive goldreplyload comments 2 replies load comments 2 replies load comments 1 reply alwayslurkeduntilnow 31 points32 points33 points 1 month ago 12 children recommend high school looking getting started robotics money spend obviously limited permalinksavereportgive goldreply CSAILroboticists 59 points60 points61 points 1 month ago 0 children ROSS Robotics awesome future best thing stuff Whatever stuff learn heck lot building programming robots Many high schools FIRST Robotics teams fantastic groups teach practical experience high school build self-leveling autonomous underwater vehicle bunch PVC pipes fit together waterproof electronics box bilge pump motors super simple learned lot - sniff memories permalinksaveparentreportgive goldreply tanmaker 21 points22 points23 points 1 month ago 6 children Like others said check FIRST Robotics school doesn't team look area high schools 9 times 10 they'll let join 2 high school levels FTC FRC FTC stands FIRST Tech Challenge features smaller robots 18 x18 x18 much cheaper team run FRC stands FIRST Robotics Challenge features much bigger robots 120lbs 6' tall Also watch videos year's FRC game you'll disappointed Watch almost year get much better idea games normally like permalinksaveparentreportgive goldreply Liana916 7 points8 points9 points 1 month ago 2 children freshman High school please don't yell I'm aware age FRC participant one two team drivers say FRC amazing agree years game called Recycle Rush rather underwhelming slow Aerial assist WAY fun permalinksaveparentreportgive goldreply sdh59 5 points6 points7 points 1 month ago 0 children Ditto Recycle Rush one best ways introduce people FRC I'd definitely show last year's game one permalinksaveparentreportgive goldreplyload comments 1 reply load comments 3 replies ryan31s 6 points7 points8 points 1 month ago 0 children FIRST big name limited budget also VEX Robotics permalinksaveparentreportgive goldreply RedHotChiliRocket 2 points3 points4 points 1 month ago 0 children FIRST high school level probably FRC http www usfirst org permalinksaveparentreportgive goldreply Kyle700 1 point2 points3 points 1 month ago 0 children FIRST defined high school years made extremely enjoyable really loved Check ASAP would look Ultimate Ascent good example permalinksaveparentreportgive goldreplyload comments 1 reply drwritersbloc 52 points53 points54 points 1 month ago 20 children get programming robot cheap kits online could recommend self taught programmer permalinksavereportgive goldreply CSAILroboticists 77 points78 points79 points 1 month ago 10 children PATRICK heard LEGO mindstorm awesome younger people think buying adruino simple electronics reasonably cheap way start learning parts robotics puzzle point ask kind robot looking looking big humanoid robot getting access one platforms hard creating robot manipulate world interesting ways impossible super expensive may take lot creativity end line robot pretty fuzzy people trying come accessible ways people robotics researchers Distributed Robotics Lab CSAIL working various things aim One read permalinksaveparentreportgive goldreply Rhineo 10 points11 points12 points 1 month ago 5 children heard raspberry pie received one wife yet play around curious think permalinksaveparentreportgive goldreply CwrwCymru 2 points3 points4 points 1 month ago 0 children r raspberry_pi Check sub permalinksaveparentreportgive goldreply Riverjig 1 point2 points3 points 1 month ago 0 children can't wait get one many dope projects guy company built helicopter one automation can't wait see mind comes permalinksaveparentreportgive goldreplyload comments 3 replies load comments 4 replies Stryker295 6 points7 points8 points 1 month ago 0 children I'd highly recommend LEGO set Mindstorms series run 300 bucks pretty damn decent compared you're getting find programming interface simple use alternate widely-established programs actually write code run http bricxcc sourceforge net software lets program different models C-based language example permalinksaveparentreportgive goldreplyload comments 8 replies SummerOftime 77 points78 points79 points 1 month ago 30 children favourite programming language use robotics field permalinksavereportgive goldreply CSAILroboticists 125 points126 points127 points 1 month ago 9 children PATRICK mostly use C code runs robot although use python plotting validation code permalinksaveparentreportgive goldreply wevsdgaf 75 points76 points77 points 1 month ago 3 children read comment started googling PATRICK lang Guess know didn't get MIT permalinksaveparentreportgive goldreply brobro2 20 points21 points22 points 1 month ago 1 child fair wouldn't surprised P R C K obscure programming language permalinksaveparentreportgive goldreplyload comments 1 reply load comments 1 reply KDLGates 1 point2 points3 points 1 month ago 2 children University smart people Robotics lab say C better choice C someone knowledgeable enlighten never personally worked microcontroller system without OS kernel object oriented overhead use C features inefficient Maybe compilers can't magic away bad things provide advantages code everything straight C gives permalinksaveparentreportgive goldreply wevsdgaf 5 points6 points7 points 1 month ago 1 child C simpler C complicated That's extent There's lot bad practices good practices okay-on-Tuesdays-but-not-Saturdays practices aware C two compilers ever seem compile code exactly quite way C hand limited features straightforward permalinksaveparentreportgive goldreply KDLGates 1 point2 points3 points 1 month ago 0 children Thanks That's easily digestible explanation -- need direct straightforward things something would probably appreciate experience robotics implementing straightforward language environment help minimize bad practices implementations complexities makes sense permalinksaveparentreportgive goldreplyload comments 2 replies CSAILroboticists 54 points55 points56 points 1 month ago 17 children ROSS use C smattering Python permalinksaveparentreportgive goldreply ffffffffuuuuuuuuuuuu 23 points24 points25 points 1 month ago 16 children feel name sound ROS permalinksaveparentreportgive goldreply CSAILroboticists 65 points66 points67 points 1 month ago 15 children ROSS Actually walked lab first week MIT someone said ROS sucks awkward first meeting -P de-ROSed computer took fresh install Linux Life much better - permalinksaveparentreportgive goldreply Ghotiol 6 points7 points8 points 1 month ago 10 children huh particular reason ROS good thinking looking permalinksaveparentreportgive goldreply GreyMX 8 points9 points10 points 1 month ago 7 children ROS good getting basic stuff going hurry especially use case matches really well ROS developers intended soon want something that's novel cutting edge you're going find fighting uphill battle design decisions went ROS Also need fast reliable performance you're going terribly satisfied ROS offers interprocess communication protocol used ROS lot overhead cannot really considered real time You'll also find modules called nodes servers crash inexplicably ROS sometimes reason beyond control prevent without making changes ROS's source code permalinksaveparentreportgive goldreply Erithom 2 points3 points4 points 1 month ago 0 children Yeah interprocess communication go TCP awful anything need scaleable you're using anything like stock Turtlebot nodes publish much crap network going grind halt two running permalinksaveparentreportgive goldreplyload comments 6 replies load comments 2 replies load comments 4 replies CSAILroboticists 65 points66 points67 points 1 month ago 0 children ARIEL use python C languages well supported ROS permalinksaveparentreportgive goldreplyload comments 1 reply albinokangaroo 24 points25 points26 points 1 month ago 13 children computer science amazing permalinksavereportgive goldreply CSAILroboticists 67 points68 points69 points 1 month ago 8 children ROSS get create new things sciences discover already pure sciences CS make new things permalinksaveparentreportgive goldreply hmichaelt 14 points15 points16 points 1 month ago 5 children isn't engineering permalinksaveparentreportgive goldreply 98521745639852174563 154 points155 points156 points 1 month ago 3 children Engineering study application attending meetings safety briefings permalinksaveparentreportgive goldreply bangorthebarbarian 32 points33 points34 points 1 month ago 1 child form committee investigate permalinksaveparentreportgive goldreply brobro2 5 points6 points7 points 1 month ago 0 children think lawyers read proper regulations first Time get back redditing permalinksaveparentreportgive goldreply tenemu 3 points4 points5 points 1 month ago 0 children know know aren't student anymore many meetings permalinksaveparentreportgive goldreply thehitmaniptf 4 points5 points6 points 1 month ago 0 children That's job roles programmers Software Engineer - it's writing code permalinksaveparentreportgive goldreplyload comments 2 replies hellnukes 12 points13 points14 points 1 month ago 3 children get feel like wizard permalinksaveparentreportgive goldreplyload comments 3 replies no_malis 22 points23 points24 points 1 month ago 5 children currently challenging aspect developing artificial intelligence e roadblocks getting mechanical slave permalinksavereportgive goldreply CSAILroboticists 43 points44 points45 points 1 month ago 4 children PATRICK question pretty general people different answers topic think many big problems developing AI think one representation hard general way think represent problem parts problem even begin think solve example real differences cup bowl even humans could easily distinguish representation question one specific type problem end spectrum deal huge amount information humans get every moment every day context robot computer also unclear pay attention ignore much process little things happen reuse information learned later learn first place permalinksaveparentreportgive goldreply bschreck 19 points20 points21 points 1 month ago 3 children far away making pole-vaulting robot think humanity danger losing chance Olympic gold non-sentient mechanical beings permalinksaveparentreportgive goldreply CSAILroboticists 42 points43 points44 points 1 month ago 1 child PATRICK made yesterday yes permalinksaveparentreportgive goldreply corymonroe 5 points6 points7 points 1 month ago 0 children await glorious ruling Sergei Bubkatron 9000 Renaudilus Lavillenie XJ7 permalinksaveparentreportgive goldreplyload comments 1 reply mqxum 44 points45 points46 points 1 month ago 7 children close Skynet self-aware computers permalinksavereportgive goldreply CSAILroboticists 91 points92 points93 points 1 month ago 5 children ROSS Unfortunately quite ways Robotics still quite brittle take lot effort get anything Humans comparison annoyingly robust Skynet still quite ways get technical self-aware fuzzy concept hard define computers need unfortunately strict definitions hard answer definition permalinksaveparentreportgive goldreply PM_ME_UR_OBSIDIAN 174 points175 points176 points 1 month ago 2 children Unfortunately permalinksaveparentreportgive goldreply hedgefundaspirations 38 points39 points40 points 1 month ago 1 child Unfortunately humans annoyingly robust Aka hard kill permalinksaveparentreportgive goldreply digital_carver 1 point2 points3 points 1 month ago 0 children quote reads perfectly Alan Rickman's voice permalinksaveparentreportgive goldreply PM_ME_UR_OBSIDIAN 4 points5 points6 points 1 month ago 0 children look Scott Aaronson's musings consciousness viewpoint quantum information theory think general idea readers Scott Aaronson another CSAIL researcher thesis consciousness least non-reversible computation precise sense related QIT permalinksaveparentreportgive goldreplyload comments 1 reply load comments 1 reply clawclawbite 17 points18 points19 points 1 month ago 11 children work industrial robots automation manufacturing looking coming academia improve capabilities machines work permalinksavereportgive goldreply CSAILroboticists 24 points25 points26 points 1 month ago 10 children ROSS Funny waiting industry improve capabilities robots Probably stuff coming Computer Vision short timeframe permalinksaveparentreportgive goldreply clawclawbite 2 points3 points4 points 1 month ago 0 children kind capability looking industry I'm excited see improvements accuracy repeatability large robot arms people see car commercials permalinksaveparentreportgive goldreplyload comments 9 replies slacker87 15 points16 points17 points 1 month ago 10 children think important teach kids today hardware software example arduinos breadboards vs javascript linux permalinksavereportgive goldreply CSAILroboticists 54 points55 points56 points 1 month ago 9 children ROSS future San Francisco last year one cofounders ANKI told something found quite profound execs Google stay late night worrying students talking college dorms execs GE sleep soundly knowing one going make new jet engine anytime soon Yes argue specifics idea hardware offers lot security since takes lot effort time lot people going CS EECS Electrical Engineering Computer Science department think nearly 90 undergrads CS CS growing area CS stuff hardware become limiting factor MobileEye cofounder gave great talk MIT weeks back make hardware runs one algorithm super fast energy efficient cheap seems future permalinksaveparentreportgive goldreply blackblur7 10 points11 points12 points 1 month ago 5 children TIL General electric makes jet engines permalinksaveparentreportgive goldreply seniorheff 24 points25 points26 points 1 month ago 1 child General Electric makes everything permalinksaveparentreportgive goldreply TheSlimyDog 4 points5 points6 points 1 month ago 0 children sounds pretty general permalinksaveparentreportgive goldreply huntdawgin 12 points13 points14 points 1 month ago 1 child Train Locomotives naval engines electric motors hydroelectric generators nuclear reactors wind turbines solar panels software needed use also make household appliances permalinksaveparentreportgive goldreplyload comments 1 reply load comments 1 reply BenTheHokie 3 points4 points5 points 1 month ago 1 child EE also knows software yessss permalinksaveparentreportgive goldreplyload comments 1 reply load comments 1 reply WhatsUrRingtone 27 points28 points29 points 1 month ago 8 children ringtones permalinksavereportgive goldreply CSAILroboticists 72 points73 points74 points 1 month ago 1 child ROSS Humpback whale mating calls - permalinksaveparentreportgive goldreply rokthemonkey 23 points24 points25 points 1 month ago 0 children got kicked restaurant enjoying sound bite humpback whale mating calls demand acceptance MIT high school GPA 2 5 got straight A's elementary school I'm good right permalinksaveparentreportgive goldreply CSAILroboticists 98 points99 points100 points 1 month ago 2 children ARIEL vibrate permalinksaveparentreportgive goldreply betonboor 201 points202 points203 points 1 month ago 1 child permalinksaveparentreportgive goldreply TeleGram 24 points25 points26 points 1 month ago 0 children _ permalinksaveparentreportgive goldreply CSAILroboticists 53 points54 points55 points 1 month ago 1 child PATRICK Mine super mario brothers theme permalinksaveparentreportgive goldreplyload comments 1 reply load comments 1 reply BotJunkie 14 points15 points16 points 1 month ago 1 child funniest interesting failures you've experienced working robots permalinksavereportgive goldreply CSAILroboticists 57 points58 points59 points 1 month ago 0 children ROSS Funniest Programming robot hug advisor seen enough failed robot demos sufficiently worried hehehehe interesting maddening bugs seem make sense clicks quickly quick otherwise maddening robot wasn't working window open worked fine closed confusing window reflecting light blinding IR camera permalinksaveparentreportgive goldreply pvgurl 27 points28 points29 points 1 month ago 8 children good long term strategy becoming boss permalinksavereportgive goldreply CSAILroboticists 76 points77 points78 points 1 month ago 2 children ARIEL start company permalinksaveparentreportgive goldreply CSAILroboticists 113 points114 points115 points 1 month ago 1 child ROSS http magoosh com sat files 2014 10 htcs_img2 gif permalinksaveparentreportgive goldreplyload comments 1 reply CSAILroboticists 103 points104 points105 points 1 month ago 2 children ROSS Fake make permalinksaveparentreportgive goldreply Carrot_Fondler 9 points10 points11 points 1 month ago 1 child Fake become permalinksaveparentreportgive goldreply gilbot89 5 points6 points7 points 1 month ago 0 children TED permalinksaveparentreportgive goldreply pvgurl 6 points7 points8 points 1 month ago 1 child Patrick suggestions permalinksaveparentreportgive goldreply bschreck 8 points9 points10 points 1 month ago 0 children hear learn pretty much anything youtube videos permalinksaveparentreportgive goldreply guineapigcalledSteve 11 points12 points13 points 1 month ago 6 children computer able learn it's mistakes future permalinksavereportgive goldreply CSAILroboticists 96 points97 points98 points 1 month ago 2 children ROSS humans able learn mistakes future permalinksaveparentreportgive goldreply engimaneer 19 points20 points21 points 1 month ago 0 children computer able learn human's mistakes future permalinksaveparentreportgive goldreply Tairnyn 25 points26 points27 points 1 month ago 0 children Meatbags got rekt permalinksaveparentreportgive goldreply bradfordmaster 4 points5 points6 points 1 month ago 0 children already whole field called reinforcement learning AI basically tries bunch things figures ones work don't keeps trying new better things well known technique probably genetic algorithm systems learn play games like Tetris move robot crazy legs fly rc helicopter crazy stunts permalinksaveparentreportgive goldreply shelledpanda 2 points3 points4 points 1 month ago 0 children Yeah dood look AI's running Neural Networks Genetic Algorithms recently wrote Tetris AI running GA play far better human starts horrible Tetris time learns important becomes insanely good permalinksaveparentreportgive goldreplyload comments 1 reply u770017 10 points11 points12 points 1 month ago 2 children feel Python permalinksavereportgive goldreply CSAILroboticists 18 points19 points20 points 1 month ago 0 children PATRICK know uses times it's useful permalinksaveparentreportgive goldreply CSAILroboticists 18 points19 points20 points 1 month ago 0 children ARIEL rocks permalinksaveparentreportgive goldreply librariansguy 8 points9 points10 points 1 month ago 1 child research go discovered publicly funded institution owned private corporation much artificial intelligence concerns companionship humans permalinksavereportgive goldreply CSAILroboticists 12 points13 points14 points 1 month ago 0 children PATRICK probably many paths research industry relatively common one one researchers group create private entity licenses technology academic institution Infrequently experience private corporation research created academic institution although private corporation may technology creates separately companionship question don't know much topic know groups work human-robot interaction space emotional interaction groups work robots help people autism spectrum sure percentage people working problems although would guess it's huge permalinksaveparentreportgive goldreply Pootytang001 8 points9 points10 points 1 month ago 9 children What's important topic many aspiring roboticists overlook studies classes wish you'd pay attention permalinksavereportgive goldreply CSAILroboticists 28 points29 points30 points 1 month ago 8 children ARIEL think everyone engineering could benefit improved technicial writing skills permalinksaveparentreportgive goldreply nairebis 4 points5 points6 points 1 month ago 0 children Ha ha important answer one wants hear permalinksaveparentreportgive goldreply Auhydride 2 points3 points4 points 1 month ago 0 children it's boring permalinksaveparentreportgive goldreply d0pey 1 point2 points3 points 1 month ago 0 children grad advisor would strongly agree talking yesterday said students still stuck English paper writing mode technical writing permalinksaveparentreportgive goldreplyload comments 5 replies neptunefox 6 points7 points8 points 1 month ago 2 children get computer science bachelors non-cs field permalinksavereportgive goldreply CSAILroboticists 20 points21 points22 points 1 month ago 1 child ROSS Absolutely One labmates math major another Electrical Engineering know another person business major learning CS nice thing CS lot places start learning code supportive online community CS different way thinking hard learning curve first start thinking coding picking languages lot easier permalinksaveparentreportgive goldreplyload comments 1 reply thenightcrawler 7 points8 points9 points 1 month ago 3 children ever boston dynamics permalinksavereportgive goldreply CSAILroboticists 8 points9 points10 points 1 month ago 0 children ROSS personally I've seen work people compete DARAP Grand Challenge use ATLAS robot super impressive great work permalinksaveparentreportgive goldreply CSAILroboticists 9 points10 points11 points 1 month ago 0 children PATRICK know number people work love permalinksaveparentreportgive goldreplyload comments 1 reply SpokenWorder 6 points7 points8 points 1 month ago 4 children remember reading article robot sex becoming mainstream thing 2050 according robotics experts http www digitaljournal com article 256430 agree disagree assertion permalinksavereportgive goldreply CSAILroboticists 14 points15 points16 points 1 month ago 3 children PATRICK guess it's possible end first train would surprised article linked suggests people built robots kind things suggests robots work deployed solutions problems suggestions pervade media stories robotics accurate produced demonstrations robots certain things sorts robots might sound like precursors get important sex robots don't exist general way yet Also don't know anyone working thinks permalinksaveparentreportgive goldreply PM_ME_UR_OBSIDIAN 10 points11 points12 points 1 month ago 1 child wanted sex robotics NSERC pulled grant permalinksaveparentreportgive goldreply 18of20today 9 points10 points11 points 1 month ago 0 children Fister Roboto permalinksaveparentreportgive goldreplyload comments 1 reply skillmage 11 points12 points13 points 1 month ago 10 children know good free sites use get feet wet programming actually working permalinksavereportgive goldreply CSAILroboticists 30 points31 points32 points 1 month ago 9 children ARIEL learned program introduction CS class UCSC CMPS5J uses Processing It's easy install start writing running code also fits neatly arduino start building physical projects couple years ago learned html css java codeacademy actually working first day able following things processing- simple computer animations arduino - build circuit flashes led codeacademy - boring website colors lists permalinksaveparentreportgive goldreply Thecrazyredhead 4 points5 points6 points 1 month ago 0 children want learn Python strongly suggest code academy permalinksaveparentreportgive goldreply colecf 1 point2 points3 points 1 month ago 0 children know missed cutoff time see I'm UCSC first year how'd get working MIT lab permalinksaveparentreportgive goldreplyload comments 7 replies walkingthedinosaurs 5 points6 points7 points 1 month ago 6 children currently CSC 250 school know Java languages would recommend learning would say best way learn permalinksavereportgive goldreply CSAILroboticists 28 points29 points30 points 1 month ago 2 children Ariel learned python graduate school use main goto language side projects easiest way learn language project need use languages like C permalinksaveparentreportgive goldreplyload comments 2 replies PM_ME_UR_OBSIDIAN 24 points25 points26 points 1 month ago 2 children Scientific computation Python High-performance C Web Typescript seriously even Angular guys Personal growth Haskell permalinksaveparentreportgive goldreply garnett8 2 points3 points4 points 1 month ago 1 child Haskell Get outta permalinksaveparentreportgive goldreply PM_ME_UR_OBSIDIAN 1 point2 points3 points 1 month ago 0 children Expand permalinksaveparentreportgive goldreply pecanbutt 6 points7 points8 points 1 month ago 1 child think best languages learn money knowledge Overall permalinksavereportgive goldreply CSAILroboticists 9 points10 points11 points 1 month ago 0 children ROSS Depends entirely want C good all-around language permalinksaveparentreportgive goldreply ThederpiestOne 5 points6 points7 points 1 month ago 2 children CSAIL shirt big get smaller one permalinksavereportgive goldreply CSAILroboticists 3 points4 points5 points 1 month ago 1 child ROSS Ariel wash -P permalinksaveparentreportgive goldreply ThederpiestOne 1 point2 points3 points 1 month ago 0 children something folds clothes invest I've made adaptive robots time even good ones don't circuitry required permalinksaveparentreportgive goldreply DANMACLEAN 6 points7 points8 points 1 month ago 1 child Give man fish eats day Teach man fish eats lifetime Build robot fish men starve men eat -- Scott Santens close building army solar powered robot farmers permalinksavereportgive goldreplyload comments 1 reply DrTranceDM 4 points5 points6 points 1 month ago 1 child best advice give senior Computer Science major that's graduate permalinksavereportgive goldreply CSAILroboticists 10 points11 points12 points 1 month ago 0 children ROSS Figure enjoy want Pursue goal figure break path sizable manageable chunks work WAY easy bite chew speak experience -P permalinksaveparentreportgive goldreply thenightcrawler 4 points5 points6 points 1 month ago 1 child guys know want work industry pursue academia permalinksavereportgive goldreply CSAILroboticists 11 points12 points13 points 1 month ago 0 children ROSS probably going start route Robotics feels computers 70's Exciting times ahead permalinksaveparentreportgive goldreply drake0727 6 points7 points8 points 1 month ago 26 children best IDE Java C Also permalinksavereportgive goldreply sashaaa123 27 points28 points29 points 1 month ago 1 child magnetized needle steady hand permalinksaveparentreportgive goldreply arharris2 7 points8 points9 points 1 month ago 0 children Reference permalinksaveparentreportgive goldreply CSAILroboticists 102 points103 points104 points 1 month ago 17 children ARIEL vim permalinksaveparentreportgive goldreply badjuice 34 points35 points36 points 1 month ago 0 children Ariel gets permalinksaveparentreportgive goldreply CSAILroboticists 33 points34 points35 points 1 month ago 12 children PATRICK use emacs I'm sure gets mixed keys every editor uses wouldn't recommend completely hooked permalinksaveparentreportgive goldreply badjuice 16 points17 points18 points 1 month ago 0 children Heathen permalinksaveparentreportgive goldreply HelixDnB 9 points10 points11 points 1 month ago 9 children http en wikipedia org wiki Editor_war don't start safe place permalinksaveparentreportgive goldreply CSAILroboticists 22 points23 points24 points 1 month ago 8 children ROSS I'm waiting someone say gedit -P permalinksaveparentreportgive goldreply HelixDnB 10 points11 points12 points 1 month ago 3 children SublimeText get D permalinksaveparentreportgive goldreplyload comments 3 replies Zahninator 2 points3 points4 points 1 month ago 0 children Nano Masterrace Don't kill actually use vim permalinksaveparentreportgive goldreplyload comments 3 replies load comments 1 reply dakkeh 3 points4 points5 points 1 month ago 0 children vimrc GTFO permalinksaveparentreportgive goldreplyload comments 2 replies load comments 6 replies maikerusan123 8 points9 points10 points 1 month ago 2 children comes progamming neural net trigger threshold least that's think it's called explain bit pseudo-code logic might work robot making decision neurons fire Say instance wanted robot learn ball kind neurons would required would interact permalinksavereportgive goldreply _NW_ 11 points12 points13 points 1 month ago 1 child Basically neuron vector scaling constants take inputs scale vector constants add results together get output It's really matrix multiplication input single column vector neuron row vector matrix Lets look single neuron tell apple orange simple example set camera aimed table pixel input single neuron Lets say positive output indicates apple negative indicates orange teach neuron show neuron lots different apples oranges teach mode adjust scaling constants sample make output like want lots different algorithms adjusting constants popular one backprop you're done training neuron longer adjust constants you're operational mode able show apple orange sample it's never seen correctly identify show something else peach example output basically meaningless never trained detect peach output choices want neurons need exactly pseudo-code wordy explanation process Also may left minor details permalinksaveparentreportgive goldreply The_Amp_Walrus 1 point2 points3 points 1 month ago 0 children helpful explanation thanks permalinksaveparentreportgive goldreply pbrunk 6 points7 points8 points 1 month ago 3 children best food campus permalinksavereportgive goldreply CSAILroboticists 16 points17 points18 points 1 month ago 2 children ARIEL Whitehead institute pretty good lunch permalinksaveparentreportgive goldreply jerrypizzle 17 points18 points19 points 1 month ago 1 child Whitehead institute Sounds delicious permalinksaveparentreportgive goldreply Derekabutton 4 points5 points6 points 1 month ago 0 children Creamy delicious permalinksaveparentreportgive goldreply 12084182 3 points4 points5 points 1 month ago 3 children think best way motivate future generations children get involved nephews 7 8 respectively know far around age used paintbrush Windows 5 0 played basic games They've got iPads play games think get interested coding technology don't become part generation stares screen day pointlessly actually something useful knowledge Also viable think self-driving self-operating technology you're Reddittors favorite subs permalinksavereportgive goldreply amc22004 4 points5 points6 points 1 month ago 0 children OP RE nephews try program like Scratch aims make coding accessible younger kids think created folks MIT permalinksaveparentreportgive goldreply CSAILroboticists 3 points4 points5 points 1 month ago 1 child ROSS got started Legos building things know summer camps make minecraft mods students play change games play 3-D print minecraft world thought awesome people curiosity think things want robots hard part picking easy break manageable chunks gave Reddit new years resolution last year spending much time went useless things like r funny r pics hehe permalinksaveparentreportgive goldreplyload comments 1 reply Tairnyn 2 points3 points4 points 1 month ago 4 children robotics field seems high cost entry hardware often prohibitively expensive starting research significant understanding required evoke simple reliable behavior using noisy sensors actuators limited memory processing capability robotic platforms simulation environments feel provide great entry point new researchers looking get excited robotics permalinksavereportgive goldreply CSAILroboticists 10 points11 points12 points 1 month ago 1 child ROSS Tell Super hard Easier start smaller problems actually don't use physical robot research use xbox kinect style camera collect data hand Many research areas robotics don't need physical robot said Clearpath robots use move around annoying times though Wish better answer permalinksaveparentreportgive goldreplyload comments 1 reply load comments 2 replies NicknameUnavailable 3 points4 points5 points 1 month ago 3 children What's take recent scare campaign big names dangers follow-up agree see slave labor believe something high intellect would want harm people permalinksavereportgive goldreply CSAILroboticists 9 points10 points11 points 1 month ago 1 child PATRICK think people often listen rich successful people regardless knowledge think AI far people pretend things people afraid don't even think think worrisome parts AI moment sites like Facebook learn preferences predict people's choices using simple AI algorithms free info people give don't think anywhere near skynet type AI permalinksaveparentreportgive goldreplyload comments 1 reply load comments 1 reply Fregdee 2 points3 points4 points 1 month ago 2 children decide study AI permalinksavereportgive goldreply CSAILroboticists 14 points15 points16 points 1 month ago 1 child ROSS started young Legos loved building things later Lego Mindstorms started programming led full obsession building robots got college MechE realized robotics CS went AI route afterward clear Robotics AI two related different things Robots physical embodiment computers Machine Learning separate field closer people consider AI Robotics three main components makes field different others 1 Things run real time 2 move around current state world 3 change current state world Side tangent important distinction - permalinksaveparentreportgive goldreplyload comments 1 reply Brickspace 2 points3 points4 points 1 month ago 4 children really cool find topic really interesting accomplishments think robots robotics reach next 5 10 20 years permalinksavereportgive goldreply CSAILroboticists 7 points8 points9 points 1 month ago 2 children ROSS much media would suggest Even popular robots like self driving cars probably decades full autonomy I'm looking forward seeing future Don't want make predictions I'll probably wrong hehee permalinksaveparentreportgive goldreply Brickspace 3 points4 points5 points 1 month ago 1 child TIL media lies permalinksaveparentreportgive goldreply VennDiaphragm 7 points8 points9 points 1 month ago 0 children Dude media tells want hear reddit I've computer vision field 30 years I've tried explain technological hurdles comes self-driving cars reddit wants hear morons worshiping circlejerk permalinksaveparentreportgive goldreply CSAILroboticists 3 points4 points5 points 1 month ago 0 children PATRICK It's really hard say think one thing cool flashy demos general approaches generalizable different environments might make lots progress time spans might hard tell aren't deep permalinksaveparentreportgive goldreply celbertin 2 points3 points4 points 1 month ago 2 children robots we're right permalinksavereportgive goldreply CSAILroboticists 4 points5 points6 points 1 month ago 1 child PATRICK think obvious places using robots possible situations great humans example dangerous rescue operations could conducted robots eventually Really tedious jobs jobs cause humans long term injury could done robots Dangerous jobs also fit category also think jobs get human inaccessible except wealthier people like 24 elderly care person's home etc great places go permalinksaveparentreportgive goldreplyload comments 1 reply Kazz580 2 points3 points4 points 1 month ago 1 child often guys use recursion programming permalinksavereportgive goldreplyload comments 1 reply ArchAthens 2 points3 points4 points 1 month ago 0 children someone trying get computer science language think best recommend start permalinksavereportgive goldreply thenightcrawler 4 points5 points6 points 1 month ago 2 children ever rickrolled permalinksavereportgive goldreply CSAILroboticists 29 points30 points31 points 1 month ago 1 child PATRICK Yes actually wrote blog post permalinksaveparentreportgive goldreply Theyreillusions 6 points7 points8 points 1 month ago 0 children don't trust permalinksaveparentreportgive goldreply pravda63 1 point2 points3 points 1 month ago 1 child general interest engineering mechatronics finally decided act I'm currently full time public accountant looking pursue online engineering masters degree NC State currently enrolled edx org MIT 6 00 x python intro class taught Eric Grimson begin studies programming I've also purchased bunch arduino parts plan tinker later summer Would suggestions help pursue career robotics python good way start would suggest different language Also - work Eric Grimson lot seems like awesome guy odd resemblance Phil Dunphy opinion Thanks AMA permalinksavereportgive goldreplyload comments 1 reply break0ut1 1 point2 points3 points 1 month ago 7 children best way get started Robotics best resources learn robotics considering previous knowledge programming permalinksavereportgive goldreply CSAILroboticists 3 points4 points5 points 1 month ago 0 children ROSS Depends age you're started Lego Mindstorms younger ardinos raspberry pi great permalinksaveparentreportgive goldreply DetectiveDeadpool 2 points3 points4 points 1 month ago 0 children totally recommend picking cheap arduino components learning look ebay amazon find Arduinos cheap 3 bucks don't mind waiting shipped China I've collecting bunch parts including tons LEDs 4 arduinos varying sizes various wires breadboards sensors soon servos I've spent maybe 50 Ninja Edit Also check see hackerspace area That's started messing arduino got hooked bunch play people hanging able teach lot I'm still learning system straightforward enough start pretty cool stuff quickly permalinksaveparentreportgive goldreply Yourself5times 1 point2 points3 points 1 month ago 4 children you're high school look FRC program It's worldwide robotics competition great introduction world engineering robotics Depending live there's good chance teams already exist aren't teams around talk people see starting team happen grade 9th First competitions available youre high school want make connections places go mentor team experience usually liked whether engineering anything FRC teams would love mentors You'll get meet tons people related robotics competition teams sponsors basic gist program game task given January 3rd teams 6 weeks design build working robot accomplish task compete games It's busiest 6 weeks year it's amazing dedicated group kids short amount time Source rookie team year wouldn't trade world permalinksaveparentreportgive goldreplyload comments 4 replies jmaynard84 1 point2 points3 points 1 month ago 1 child important electronic princliples degree class jump right areas math one focus permalinksavereportgive goldreplyload comments 1 reply MoCJones 1 point2 points3 points 1 month ago 2 children What's favorite technological advancement permalinksavereportgive goldreply CSAILroboticists 3 points4 points5 points 1 month ago 0 children ARIEL love bluetooth headphones permalinksaveparentreportgive goldreplyload comments 1 reply jasperflint 1 point2 points3 points 1 month ago 2 children Hi bunch questions coolest things made robot want build life size robot tiger building robots always seemed fun programming 2 replicate muscles robots mimic animals 2 b built put it's details internet would interested writing code 2 c long take robot tiger pets act like real pets except less eating owners wanted work MIT robotics lab student researcher Thank Edit idea format things permalinksavereportgive goldreply CSAILroboticists 5 points6 points7 points 1 month ago 1 child ROSS 1 Make Mac Cheese 2 3 Motors currently primary actuators robots research muscles hard beat motors 4 b generally need sit robots since issues hardware software probably 5 c I'll leave 6 Depends skill set permalinksaveparentreportgive goldreplyload comments 1 reply DeafLady 1 point2 points3 points 1 month ago 0 children Cochlear implants innovated hardware software consumer use Different cool uses could hear like average hearing person nudge industry way permalinksavereportgive goldreply cloud-is-good 1 point2 points3 points 1 month ago 1 child think programming required course American schools believe everyone benefited knowing programming skills permalinksavereportgive goldreply CSAILroboticists 8 points9 points10 points 1 month ago 0 children ARIEL required beneficial definitiely permalinksaveparentreportgive goldreply uriman 1 point2 points3 points 1 month ago 1 child PhD students extensive research backgrounds entering program none permalinksavereportgive goldreplyload comments 1 reply wjwwood 1 point2 points3 points 1 month ago 0 children guys use ROS permalinksavereportgive goldreply Meowow123 1 point2 points3 points 1 month ago 0 children opportunity ability build super-intelligent self aware machine right now- would kind implications think would humanity know permalinksavereportgive goldreply Phisopholer 1 point2 points3 points 1 month ago 0 children assume you've watched Big Hero 6 awesome robotics One line liked programmed 10 000 medical procedures rough estimate long would take one person program much information robot like Baymax permalinksavereportgive goldreplyload comments 364 replies aboutblogaboutvaluesteamsource codeadvertisejobshelpsite rulesFAQwikireddiquettetransparencycontact usapps toolsAlien Blue iOS appreddit AMA appmobile betabuttons 3reddit goldreddit storeredditgiftsreddit tvradio redditUse site constitutes acceptance User Agreement Privacy Policy Genitive 2015 reddit inc rights reserved REDDIT ALIEN Logo registered trademarks reddit inc Rendered PID 18878 app-91 2015-05-27 17 33 27 788192 00 00 running 8944350 country code"),
('Reducing big data using ideas from quantum theory makes it easier to interpret', "Home Technology Computer Sciences April 23 2015 Reducing big data using ideas quantum theory makes easier interpret Apr 23 2015 Analysing large volumes data gathered modern businesses public services problematic Traditionally relationships different parts network represented simple links regardless many ways actually interact potentially loosing precious information recently general framework proposed represent social technological biological systems multilayer networks piles 'layers' one representing different type interaction approach allows comprehensive description different real-world systems transportation networks societies drawback requiring complex techniques data analysis representation new method developed mathematicians Queen Mary University London QMUL researchers Universitat Rovira e Virgili Tarragona Spain borrows quantum mechanics' well tested techniques understanding difference two quantum states applies understanding relationships system similar enough considered redundant drastically reduce amount information displayed analysed separately make easier understand new method also reduces computing power needed process large amounts multidimensional relational data providing simple technique cutting redundant layers information reducing amount data processed researchers applied method several large publicly available data sets genetic interactions variety animals terrorist network scientific collaboration systems worldwide food import-export networks continental airline networks London Underground could also used businesses trying readily understand interactions different locations departments policymakers understanding citizens use services anywhere large numbers different interactions things Dr Vincenzo Nicosia co-author paper QMUL's School Mathematics said We've trying find ways simplifying way big data represented processed inspired way complex relationships quantum theory understood much data gathered companies governments nowadays hope method make easier analyse make sense well reducing computing costs cutting amount processing required extract useful information Explore Uncovering complex network structures nature information M De Domenico V Nicosia Arenas V Latora 'Structural reducibility multilayer networks' 2015 appear Nature Communications Thursday 23 April 2015 Journal reference Nature Communications Provided Queen Mary University London 107 shares feedback editors Tweet Favorites Email Print PDF Featured Popular shared Petrels tracked across Oceans May 26 2015 0 Cancer waiting time targets simply good enough May 25 2015 0 Engineer develops real-time listeria biosensor prototype May 25 2015 0 NASA image Hubble revisits tangled NGC 6240 May 25 2015 0 Graphene diamonds prove slippery combination May 25 2015 0 Phys org facebook Relevant PhysicsForums posts BIOS UEFI confusion 9 hours ago Best free anti virus 15 hours ago Talking Printers 20 hours ago Windows clock cannot sync May 26 2015 Fast cheap website hosts May 26 2015 slow computer startup May 26 2015 Computing Technology Related Stories Uncovering complex network structures nature Dec 10 2014 global spread Ebola due complex interactions individuals societies transportation trade networks Understanding building appropriate statistical mathematical models Beyond genetics Mining biological networks new treatments disease Oct 14 2013 genes define us every living organism hold essential information build maintain organism's cells pass genetic traits offspring - everything eye hair colour big data used understand major events Mar 04 2015 unpredictable UK general election looming modern times big data used understand elections covered media New research first time analysed 130 000 Patterns large data show information travels Feb 16 2015 According Fariba Karimi network scientist Ume University analysis massive online data reveal information matters us common example networks Researchers identify genetic regulatory networks influence poplar wood formation Apr 20 2015 begin understand complex genetic interactions control poplar growth potential bioenergy crop researchers developed robust high-throughput pipeline studying hierarchy genetic Better models studying flow information networks Sep 19 2013 Physicist Atieh Mirshahvalad uses network models better understand connection flow information social structures Among things introduced group formation model Recommended Machine-learning breakthrough paves way medical screening prevention treatment 23 hours ago breakthrough machine learning also brought game changer science metabolomics - hasten development diagnostic predictive tests Alzheimer's cancer diabetes numerous Extracting useful scientific information social media May 27 2015 second takes 'like' article 6 000 tweets 5 000 profile updates 4 000 photos 500 blogs posted multiple social media platforms second extends minute Smartphones Twitter help gauge crowd size May 27 2015 Data smartphones Twitter accurately show size crowd helping first responders emergency study Wednesday said 'Deep web search' may help scientists May 25 2015 simple Web search topic results pop aren't whole story Internet contains vast trove information sometimes called Deep Web isn't indexed search computer algorithm mines rap lyrics create song May 22 2015 Phys org team researchers working Aalto University Finland devised algorithm mines database full rap songs picks lines based rhyming produces new song Crowdsourced computational expertise advance social good May 22 2015 William Buddy Christopher problem commissioner Boston's Inspectional Services Department responsible enforcing health regulations city's 3 043 restaurants regularly getting User comments 1 0 Adjust slider filter visible comments rank Display comments newest first zakaria rated yet Apr 28 2015 1 Weird Trick Forces Eyes perfect 20 20 Vision 7 Days Practically EffortSo wait Click watch free tutorial detailswww bit ly EyesIntoperfect Please sign add comment Registration free takes less minute Read Click reset password Sign get notified via email new comments made phys org PhysicsAll PhysicsGeneral PhysicsCondensed MatterOptics PhotonicsSuperconductivityPlasma PhysicsSoft MatterQuantum PhysicsNanotechnologyAll NanotechnologyBio MedicineNanophysicsNanomaterialsEarthAll EarthEarth SciencesEnvironmentAstronomy SpaceAll Astronomy SpaceAstronomySpace ExplorationChemistryAll ChemistryBiochemistryPolymersAnalytical ChemistryMaterials ScienceOtherBiologyAll BiologyPlants AnimalsEvolutionEcologyCell MicrobiologyBiotechnologyOtherTechnologyAll TechnologyInternetSoftwareConsumer GadgetsHardwareBusinessRoboticsEngineeringSemiconductorsOtherTelecomEnergy Green TechComputer SciencesHi Tech InnovationSecurityOther SciencesAll SciencesMathematicsArchaeology FossilsOtherSocial SciencesEconomics Business Enter Science X account credentials Remember Forget password Sign Sign Facebook Google account member Register Profile Newsletter Favorites Activity PM news Sign Top Home Medical Xpress Search Help FAQ Contact Science X Account Sponsored Account Newsletter RSS feeds Feature Stories Weblog Reports Archive iPhone iPad Apps Blackberry App Android App Widget Amazon Kindle Mobile version Connect Privacy Policy Terms Use Phys org 2003 - 2015 Science X network"),
('40 Key Computer Science Concepts Explained In Laymans Terms', "Home Software Websites Infographic Computer Mobile Programming Navigation Menu 40 Key Computer Science Concepts Explained Layman Terms Carl Cheo Follow Twitter make learning fun interesting list important computer science theories concepts explained analogies minimal technical terms like ultra-fast-track computer science degree program everyone get understand general concepts Important notes Explanations without specified source self-written Correct spot inaccuracies Suggest better one possible Headings linked respective Wikipedia articles Please refer Wikipedia serious detailed explanations Analogies awesome perfect want fully understand concepts need boil things fundamental truths reason Also check infographic re getting started programming Core Concept 1 Algorithms Data Structures 1 1 Big O Notation Say order Harry Potter Complete 8-Film Collection Blu-ray Amazon download film collection online time want test method faster delivery takes almost day arrive download completed 30 minutes earlier Great tight race Advertisement order several Blu-ray movies like Lord Rings Twilight Dark Knight Trilogy etc download movies online time time delivery still take day complete online download takes 3 days finish online shopping number purchased item input doesn affect delivery time output constant call O 1 online downloading download time directly proportional movie file sizes input call O n experiments know online shopping scales better online downloading important understand big O notation helps analyze scalability efficiency algorithms Note Big O notation represents worst-case scenario algorithm Let assume O 1 O n worst-case scenarios example Big O Notations video Plain English explanation Big O Beginner Guide Big O Notation 1 2 Sorting Algorithms Sorting Algorithm Animations Beautiful configurable visualizations sorting algorithm 1 3 Recursion Someone movie theater asks row re sitting lazy count ask person front simply add 1 person answer get current row number Brilliant right However person front exactly thing Finally question reaches row 1 answers m row 1 correct message incremented one row pass way person asked Aaron Krolik Quora another example known Droste effect nurse carrying tray box cocoa cup containing smaller image holding thing turn contains even smaller version image Droste effect examples get drowsier still get recursion check Otherwise continue reading 1 4 Big Data Let assume leak water pipe garden take bucket sealing materials fix problem see leak much bigger need plumber bring bigger tools meanwhile still using bucket drain water notice massive underground stream opened need handle gallons water every second Buckets aren useful anymore need completely new approach solve problem volume velocity water grown prevent town flooding may need government build massive dam requires enormous civil engineering expertise elaborate control system Balaji Viswanathan Quora Big data describes data sets large complex impossible manage conventional data processing tools Big Data TED-Ed video Big Data Hadoop video 1 5 Data Structures Every computer scientist programmer least know Array Tree Stack Queue Graph Hash Table Linked List Heap Core Concept 2 Artificial Intelligence 2 1 Greedy Algorithm Imagine going hiking goal reach highest peak possible already map start thousands possible paths shown map lazy simply time evaluate Screw map started hiking simple strategy greedy short-sighted take paths slope upwards trip ended whole body sore tired look hiking map first time Oh god muddy river ve crossed instead keep walking upwards greedy algorithm picks best immediate choice never reconsiders choices 2 2 Hill Climbing time re climbing another hill re determined find path lead highest peak However map provided foggy make trips easier downloaded hiking app track paths ve taken measures current altitude climb hill time take exact path leads highest peak ever recorded somewhere middle journey choose slightly different route also randomly choose different starting point known random-restart hill climbing linger around area reduce probability getting stuck hill climbing algorithm attempts find better solution generating neighboring solution neighboring solution generated based best solution far single element modified 2 3 Simulated Annealing Mount Everest biggest challenge ve ever faced goal reach summit impractical climb Mount Everest one chance cautious Instead always climbing upwards occasionally move lower point explore paths reducing chance taking wrong path higher climb lower probability move lower point explore 2 4 Dynamic Programming Advertisement Dad Writes 1 1 1 1 1 1 1 1 sheet paper Dad equal Kid counting 3 seconds later Eight Dad Writes another 1 left Dad Kid instantly Nine Dad Wow calculate fast Kid added one Dad didn need recount remembered eight Brilliant Jonathan Paulson Quora example describes memoization yes memoization memorization top-down approach dynamic programming store results previous computations future use Dynamic Programming Novice Advanced TopCoder Tutorial Dynamic Programming CodeChef 2 5 Machine Learning Pararth Shah wrote brilliant analogy long included 2 6 P vs NP Problem P vs NP one popular important unsolved problem computer science field Say give multiplication question like Q1 7 x 17 p answer 119 Easy solve right reverse question Q2 p x q 119 p q cannot 1 119 solve Q2 assuming haven seen Q1 probably go possible numbers 2 118 yet discover efficient algorithm find factors number easily ask Could p possibly 7 easily verify answer right divide 119 7 Multiplication easy Finding original factors number hard Q1 P polynomial problem easy solve Computer easily multiply 2 super large numbers without spending significantly computer time small numbers Q2 NP nondeterministic polynomial problem easy verify hard solve Finding factors 119 still fairly easy computer solve 500-digit number impossible computers right important part NP problems e g factorization also P problems e g multiplication haven discover efficient way solve NP problems NP problems really hard solve need aha moment brilliant scientist come efficient algorithm maybe humans dumb Imagine exist machine life possesses much higher intelligence human see us like see ants level intelligence insignificant Solving P vs NP problem like solving 1 1 P vs NP problem important able prove P NP means NP problems solved easily within reasonable computer time able cure cancer protein folding break passwords RSA etc world-changing P vs NP listed 1 7 Millennium Prize Problems Clay Mathematics Institute 1 million awarded first correct solution P vs NP Computational Complexity Zoo video Simple Wikipedia Read Also Lord Rings Analogy Programming Languages Infographic Core Concept 3 Computer Architecture Engineering 3 1 computers work Computers work adding complexity top complexity drive car necessarily understand car engine works complex details hidden computers turn binary code 0 1 programs excellent video uses dominoes visualize computers perform binary calculations basic fundamental level Interactive explanation computer works 3 2 Halting Problem Freeze App Analogy Simple Wikipedia Computer architecture engineering huge topic includes subfields like operating system compiler Core Concept 4 Concurrency Let say work secretary company answer phone calls arrange meetings typing documents etc always switch back forth tasks based priority Every time phone rings stop whatever task working Concurrency property programs systems allow tasks run overlapping time periods 4 1 Parallelism Eventually cope job much data entry tasks complain boss happily hires data entry clerk handle data entry tasks Parallelism allows 2 tasks run time provided machine multiprocessing capability However implementation concurrency concepts also introduces potential problems race condition 4 2 Race Condition happen allow concurrent transactions banking system race condition isn handled 1000 bank account Someone transfers 500 withdraw 300 ATM Imagine transactions performed time transactions see 1000 current balance transaction adds 500 account 1500 However transaction B also sees 1000 current balance completes millisecond later deducts 300 1000 updates account balance 700 700 instead 1200 transaction B overwrites transaction happens banking system isn aware ongoing transactions handle situation One really simple way mutual exclusion 4 3 Mutual Exclusion Mutex whenever ongoing transaction system lock account involved transaction time moment transaction occurs account locked withdraw money ATM unlocks transaction completes mutual exclusion solves problem right Yes nobody wants get rejected ATM every time ongoing transaction Let modify solution little bit 4 4 Semaphore 4 4 1 Binary Semaphore let set different priority levels different types transactions Say cash withdrawal request higher priority bank transfer withdraw money ATM transaction bank transfer stop allow transaction B carry first higher priority resume transaction B completed 4 4 2 Counting Semaphore Binary semaphore simple 1 ongoing transaction 0 waiting hand counting semaphore allows 1 process running time Let say re locker room manager spa 30 lockers keep track number keys time receive hand key exactly know lockers full others queue Whenever someone done hand key first person queue 4 5 Deadlock Deadlock another common issue concurrency system Let use banking system analogy different scenario keep mind access bank account locked whenever ongoing transaction Peter transfer 1000 transaction transfer 500 time transaction B Transaction locks Peter account deducts 1000 Peter account Transaction B locks account deducts 500 account transaction tries access account add 1000 Peter time transaction B also tries add 500 Peter account However since transactions aren completed access locked accounts wait complete Deadlock real life example Boy Let approach first Girl Let approach first dies budding love story Padmakar Kalghatgi Quora Core Concept 5 Computer Security 5 1 Computer Hacking Hacking similar breaking house popular hacking techniques 5 1 1 Brute-force Attack Try hundreds thousands different keys experienced burglar try commonly used keys first brute-force attack tries every possible passwords usually starts guessing commonly used passwords like 123456 abcdef etc 5 1 2 Social Engineering couple moved next door really nice helpful often invite dinner One day mentioned going two-week vacation soon happily offered take care dog left spare key Since heard news Social engineering tricking users revealing private information 5 1 3 Security Exploit burglar checks every possible entries find easiest way weakness get Maybe second-floor windows left open knows 5 1 4 Trojan Horse burglar pretends plumber unlock door fixes leaking pipe everything looks perfectly normal left discovered jewelry missing trojan horse malware program pretends useful helpful runs malicious code background 5 1 5 Rootkit door lock jammed call locksmith fixes door lock secretly duplicates another key rootkit gains administrator root access computer various ways like social engineering disguise necessary files hard detect antivirus software 5 1 6 Distributed Denial-of-service Attack DDoS bookshop analogy Imagine 100 people visit little bookshop time bookshop occupied others come ask leave seem coming groups probably know seem genuinely interested buy books even ask book shelved Someone counter pay pennies People keep coming hours look perfectly normal end day ve made one book sale Remember guy pay pennies DDoS attempts bring site service flooding visitors IPViking live cyber-attack monitoring site Imgur 5 2 Cryptography Cryptography study application secure communication 2 widely used cryptographic protocols 5 2 1 Symmetric cryptography Say Alice Bob want send stuff make sure nobody see stuff lock box make 2 identical symmetric keys lock meet share keys beforehand 5 2 2 Asymmetric cryptography Sharing identical keys works fine among 2 people Alice want exchange stuff another guy named Carl Alice doesn want anybody see stuff Alice use lock key shared Bob else Bob unlock box easily course Alice share completely new different lock key Carl Alice wants exchange stuff 10 different people need keep manage 10 different keys Alice come brilliant solution maintains one key private key distribute padlocks public key friends Anyone close padlocks encrypt key open decrypt anyone send stuff Alice using padlock distributed Alice longer manage different keys different people Alice wants send something Carl ask Carl padlock public key use lock encrypt stuff send Carl basic principle everyone private key decrypt message provide senders public key message encryption Public Key Cryptography Diffie-Hellman Key Exchange video Read Also Famous Early Posts Larry Page Linus Torvalds Core Concept 6 Software Development Methodologies 6 1 Waterfall Development figure everything need document requirements Like waterfall way go back unless start move next phase current phase completed 6 2 Agile Development figure things need beginning continuously improve evolve collaborate adapt development goes popular implementations agile development methodology Scrum Extreme programming Kanban 6 3 Software Development Real World graduated write good beautiful code hopefully everything perfect far Let introduce cowboy coding software development methodology isn taught college Next wonder suck estimating development time methodologies often implemented wrongly Dilbert Dilbert go Computer science nutshell Feel free suggest new computer science theories concepts add think important often confusing Common Beginner Questions Q1 difference computer science programming Computer scientist like physicist programmer like engineer HerbN Stack Overflow Q2 programming Writing specific instructions dumb yet obedient machine mean Imagine teach kid shower kid knows follow instructions ask kid Walk bathroom Turn shower Stand shower Take soap Oh wait kid didn even remove clothes entering shower computer works tell computer exactly needs doesn know assume never think consequences Q3 shouldn interrupt developer zone Getting zone like falling asleep Imagine waking person close falling asleep seconds spend time fall back sleep EpsilonVector Programmers Stack Exchange Q4 difference Java JavaScript related Java Javascript similar like car carpet similar Greg Hewgill Stack Overflow Q5 difference JavaScript JQuery JQuery library built top JavaScript Javascript ugly nerd jQuery wizard turns handsome quarterback Suggested Sargent Q6 difference framework library call library Framework calls Ian Boyd Stack Overflow library tool framework way life James Curran Stack Overflow Q7 many lines code average software engineer write per day impossible tell number even negative developers paying technical debts Measuring software productivity lines code like measuring progress airplane much weighs Bill Gates Q8 object-oriented programming Objects nouns methods verbs k rey Programmers Stack Exchange Objects like people re living breathing things knowledge inside things memory inside remember things rather interacting low-level interact high level abstraction like re right example m laundry object give dirty clothes send message says get clothes laundered please happen know best laundry place San Francisco speak English dollars pockets go hail taxicab tell driver take place San Francisco go get clothes laundered jump back cab get back give clean clothes say clean clothes idea knowledge laundry place Maybe speak French even hail taxi pay one dollars pocket Yet knew didn know complexity hidden inside able interact high level abstraction objects encapsulate complexity interfaces complexity high level Steve Jobs Rolling Stone Interview Q9 application program interface API restaurants order food call API menu APIs food ready API response ready waiter serve food basic idea ask want system returns response without exposing happening behind scene Q10 difference SQL NoSQL database NoSQL databases store information like would recipes book want know make cake go recipe information make cake ingredients preparation mixing baking finishing etc one page SQL like shopping ingredients recipe order get ingredients cart go many different aisles get ingredient done shopping grocery cart full ingredients run around collect Wouldn nicer store organized recipe could go one place store grab everything need one spot Granted ll find ingredients like eggs 50 different places bit overhead stocking shelves consumer standpoint much easier faster find looking mgoffin Stack Overflow liked check 100 Brilliant Tech Hacks Need Know Right Programming Language Learn First Infographic Programming Programmers Infographic Fascinating Early Posts Larry Page Linus Torvalds Jeff Bezos Share least I'm annoying pop-up like posts give email list try We'll send 2-4 emails month hate spam much Related Posts 100 Brilliant Tech Hacks Need Know Right 40 Incredibly Useful Computer Tips Keyboard Shortcuts Early Footages Videos Wildly Successful Tech Founders Comments entry closed http yashghelani com Yash Ghelani goooooood http carlcheo com Carl Cheo Thanks Yash m actually adding theories right improving explanations stay tuned http yashghelani com Yash Ghelani Keep posted coppertrial helpful analogies However Asymmetric cryptography section think Alice realize isn brilliant thought finds solve initial problem sending stuff Carl 10 people http carlcheo com Carl Cheo mean part distribute padlocks friends thing asymmetric cryptography eliminates need managing different keys different people Alice needs keep one key distributes padlock duplicating coppertrial meant earlier part first paragraph understand Carl send stuff Alice great still leaves Alice unable send stuff Carl Carl lock going help open packages Alice original problem http carlcheo com Carl Cheo original problem number key person increases number friends increase re right Alice send stuff Carl Carl easily send lock Alice Carl needs manage single key basic idea everyone needs manage one private key broadcasts public key anyone coppertrial case remove line Alice want send stuff another guy named Carl Alice doesn want anybody see stuff ll happy could also change problem Alice could receive stuff want maintain separate keys locks everybody problem would make sense http carlcheo com Carl Cheo Updated Thanks lot pointing mistake coppertrial re welcome Thank helpful post dleuchter Incredibly good post gives analogies would never thought otherwise use advising clients Thanks http carlcheo com Carl Cheo re welcome Jafnee Dear Carl Cheo Wow Thanks man understand cars used cars explanation understand computer sciences Sincerely Jafnee http carlcheo com Carl Cheo re welcome Jafnee rockneurotiko really good post learn concepts remember request could add Actor model Concurrency point http carlcheo com Carl Cheo Noted consider add http tersesystems com Sargent Javascript jQuery example Javascript ugly nerd jQuery wizard turns handsome quarterback http carlcheo com Carl Cheo good added article http nothingyoumissed wordpress com togakangaroo really dynamic programming description really caching Maybe functional language runtime-level caching http carlcheo com Carl Cheo analogy indeed memoization top-down approach ve updated section avoid confusion Thanks pointing Alan Hawkins analogy article describes regard nosql actually denormalisation analogy nosql would telling taxi driver routes travel instead list locations arrive taxi driver doesn spend much time looking map assuming satnav http carlcheo com Carl Cheo really get analogy mind elaborate Edwin Cervito way tnx Dude Since im beginner computer help lot Tnx Man http carlcheo com Carl Cheo problem Edwin Cassie Moy yeah enthusiastic javascript jquery analogy kind rude really tell except jquery nicer look otherwise great post thanks http carlcheo com Carl Cheo ve removed analogy sorry offended Cassie Moy appreciate think really valuable post thanks work writing compiling SABEEH AHMED teacher thankfull core heart http carlcheo com Carl Cheo re welcome Sabeeh Paul Zhang section P NP incorrect misleading Specifically defined Q2 membership NP easy verify hard solve qualification needed Q2 NP part problem easy verify Hard solve precludes Q2 P otherwise affect Q2 NP way Also kind nitpicking Q2 impossible within reasonable amount time say uncomputable http modestdeveloper com Omid Hezaveh Thank small list top would make great reference http carlcheo com Carl Cheo add ASAP swarup deshpande hiiii m india simply awesome Hats ur efforts http carlcheo com Carl Cheo Thanks Swarup Ken Wood hope mind shared Facebook group m member aims help educate science science communication called Science Media Skepti-Forum also aims help teach tools skepticism m hoping members enjoy Thank sharing http carlcheo com Carl Cheo course mind meant help many people possible Shanmugasundaram Professor Computer Science bet best giving real world analogies explain complex CS concepts thanks ton Lindsey Rosie great thank much Zex Konjina aren really Layamn terms example text data structures redirects Wikipedia Wikipedia horrible source non-technical people sometimes horrible even technical people tends show simple things complicated way fact time make new Wiki tries show things simple possible simpler paraphrase old Chinese proverb Follow Us Follow Recent Posts 100 Brilliant Tech Hacks Need Know Right May 12 2015 40 Incredibly Useful Computer Tips Keyboard Shortcuts April 30 2015 Early Footages Videos Wildly Successful Tech Founders April 28 2015 40 Key Computer Science Concepts Explained Layman Terms April 22 2015 Torrenting Works Book Photocopying Analogy Infographic April 11 2015 Programming Programmers Infographic March 24 2015 Fascinating Early Posts Tech Founders Changed World March 22 2015 iPhone vs Android Smartphone Infographic March 7 2015 Create Website Definitive Beginner Guide Infographic February 20 2015 Build WordPress Website Step-by-Step Tutorial Beginners February 20 2015 CarlCheo com - Tech Blog Yeah Another Sign Box seriously like posts consider give email list try We'll send 2-4 emails month right new articles come Never Spam Follow Us PagesAbout Contact Write Us Privacy Policy Disclosure Policy Categories Software Websites Infographic Windows Computer Social Media Programming Recent Commentssoumik Top 7 Best Picture Collage Maker SoftwareClaude B 9 Best Photo Stitching Software Create Panorama ImagesZex Konjina 40 Key Computer Science Concepts Explained Layman Terms Copyright 2012 - 2015 CarlCheo com rights reserved"),
('Can someone explain to me what precisely we are seeing here (cyberattack map). Who is orchestrating those attacks? What causes them and what are the consequences?', "Loading Attack Origins Country Attack Targets Country Attack Types Service Port Live Attacks Attacker Target Type Timestamp Organization Location IP Location Service Port Norse Dark Intelligence Every second Norse collects analyzes live threat intelligence darknets hundreds locations 40 countries attacks shown based small subset live flows Norse honeypot infrastructure representing actual worldwide cyber attacks bad actors glance one see countries aggressors targets moment using type attacks services-ports Hovering Attack Origins Attack Targets Attack Types highlight attacks emanating country service-port respectively Hovering bubble map highlight attacks location type Press toggle table sizes Norse exposes threat intelligence via high-performance machine-readable APIs variety forms Norse also provides products solutions assist organizations protecting mitigating cyber attacks information please contact inquiry norse-corp com Linked Facebook Twitter YouTube Google particle represents attack Attack origins grouped clusters Countries shaded they're attacked Norse Corporation Thomas Pocketknife Many thanks ArtZub inspiration luminous particle Built d3 GoSquared Flag Icon Set vsn 2014 Norse Corp - Rights Reserved Message Dialog Close"),
("The Coolest Problem You've Never Heard Of", "Machinations Archives April 2015 February 2015 January 2015 October 2014 August 2014 July 2014 June 2014 May 2014 March 2014 February 2014 January 2014 December 2013 November 2013 October 2013 September 2013 August 2013 May 2013 April 2013 March 2013 January 2013 November 2012 October 2012 September 2012 August 2012 July 2012 June 2012 May 2012 April 2012 March 2012 February 2012 January 2012 December 2011 November 2011 October 2011 September 2011 August 2011 July 2011 June 2011 May 2011 April 2011 March 2011 February 2011 January 2011 October 2010 September 2010 August 2010 July 2010 June 2010 May 2010 April 2010 March 2010 February 2010 January 2010 December 2009 November 2009 October 2009 September 2009 August 2009 July 2009 Search Recent Comments George Saad Congratulations Navin Congratulations Amitabh Trehan Congratulations effervescxnce Game Theory EvolutionJared Bitcoin Byzantine Agr Top Posts Yao's Millionaire Problem SODA accepted papers Astonish Us Consensus II Feige's Leader Election Protocol Consensus Top Clicks ee technion ac il idish academic job advice agreement algorithms Barabasi Bing borges Byzantine agreement censorship circuits cloud computing complex systems conferences consensus cryptography distributed algorithms distributed computing education election enigma error-correcting codes expanders facility location Faloutsous funding game theory grants grid computing high performance computing Hotmail humor Idit Keidar Internet IPDPS jobs leader election Lidong Zhou literature Microsoft Research nazis networks NSF papers parallel computing Paxos peer-to-peer PODC power-law power-laws preferential attachment primal-dual quorum sensing randomness random walks reliability Rome routing scale-free secure multiparty computation security self-healing SIGACT small worlds SODA SPAA students talks teaching theory Uri Feige vertex cover volunteer computing WINE wireless networks workshops Blog Stats 37 744 hits Follow Blog via Email Enter email address follow blog receive notifications new posts email Join 15 followers Coolest Problem ve Never Heard April 20 2015 6 32 pm Filed Uncategorized Tags distributed computing interactive computation reliability theory compute noisy channel Say Alice Bob want run distributed algorithm communicate channel bit flipped either stochastically adversarially smallest number bits must send order obtain correct output algorithm high probability general problem called Interactive Communication sometimes Interactive Coding Computation let use IC short doesn take much imagination think applications IC enabling sensor nodes compute function inputs noisy environment designing reliable algorithms natural algorithms 1 designing attack-resistant algorithms 2 examples Wait may thinking isn problem solved error correcting codes bits sent distributed algorithm may determined one time dynamic manner Even stochastic noise naively encode bit sent order get union bound ensuring probability decoding error small ll need logarithmic blowup bit better fact first paper problem Coding Interactive Communication Leonard Schulman described algorithm requires constant blowup even constant fraction bits channel flipped adversarially Schulman algorithm based new type code tree codes designed specifically interactive communication paper published 1996 subsequent work focused improving error tolerance Schulman algorithm e tolerating larger constant fraction errors tuning communication blowup known error rate considering situation computation occurs 2 parties See survey paper Coding interactive computation progress challenges especially Sections 3 4 details ll note sense information theory though subset IC particular information theory considers class distributed algorithms Alice input wants send Bob IC need handle possible distributed algorithms way pretty amazing constant adversarial noise rate even tolerated recent breakthrough IC occurred FOCS 2014 Bernhard Haeupler paper Interactive Channel Capacity Revisited made huge progress problem tuning communication blowup known error rate particular described algorithm given fixed known adversarial noise rate epsilon achieves communication blowup function epsilon conjectured optimal epsilon known advance m going end post short advertisement recent paper collaborators mine begins address problem paper Interactive Communication Unknown Noise Rate Varsha Dani Mahnush Movahedi Maxwell Young upcoming ICALP first paper ve written IC hope won last fact d like see people distributed computing community consider problem particular d nice make progress currently hard problem somehow generalizing results 2 parties 1 example see paper closely related problem Breathe Speaking Efficient Information Dissemination Despite Noisy Limited Anonymous Communication 2 last domain particularly interesting obvious connection attacks communication channels less-obvious connection attacks nodes communication node bounded increasingly common algorithms large networks may fairly tight connection attacks communication channels attacks nodes Thus may connections attacks like Byzantine faults ads Share FacebookRedditTwitterMoreEmailPrintLike Like Loading Leave Comment Leave Comment far Leave comment RSS feed comments post TrackBack URI Leave Reply Cancel reply Enter comment Fill details click icon log Email required Address never made public Name required Website commenting using WordPress com account Log Change commenting using Twitter account Log Change commenting using Facebook account Log Change commenting using Google account Log Change Cancel Connecting Notify new comments via email Create free website blog WordPress com Benevolence Theme Follow Follow Machinations Get every new post delivered Inbox Build website WordPress com Send Email Address Name Email Address Cancel Post sent - check email addresses Email check failed please try Sorry blog cannot share posts email d bloggers like"),
('Fermilab-led project builds codes to model particle accelerators, improving the odds of filling in the Standard Model. Crossposted to /r/particlephysics, /r/HPC', 'SC Home SC Organization SC Jobs Contact SC DOE Home Feature Filling Standard Model boost computing Archive Kernels Data efficiency blooms ROSE Framework Archive Big Iron Utah team turns computing design clean oxy-coal boiler Archive Universities Modeling self-healing materials repair fissures turbines Archive Synchronized Program takes long deep view Earth evolving surface Archive Genealogy Code library gains renown simulation-tackling tools Archive New Faces Exploring hidden structures slash computational cost Archive Exascale Science Panel lays top 10 list exascale computing hurdles Archive Filling Standard Model boost computing Posted April 21 2015 Accelerated particles green electrostatic field purple generated particles Click image enlarge information decades giant accelerators used radio frequency RF waves push elementary particles near light speeds particles collisions increasingly stupendous energy levels created enough suspected previously unidentified kinds matter fill major blanks particle physics list known Standard Model theorists suspect found provided even advanced accelerator technology built find particle physics statistical science particles get greater chances making discoveries says James Amundson heads Fermi National Accelerator Laboratory scientific software infrastructure department Illinois lab Scientific Computing Division increase odds Department Energy launched Community Project Accelerator Science Simulation ComPASS Fermilab-led multi-institutional program enlists advanced computer modeling increase collider performance allowing particle physicists probe matter outer limits ComPASS partnership computational physicists applied mathematicians computer scientists formed coordination DOE Scientific Discovery Advanced Computing program SciDAC DOE computers increasing capability invigorating program Amundson says Computing technology gotten much better things 10 years ago completely outside realm possibility us Engineers still develop accelerator hardware prototypes virtually computer first makes sense cheaper faster flexible Amundson primary architect Synergia modeling tool created ComPASS Soon creation 2002 researchers used Synergia probe performance problems Booster intermediate part Fermilab accelerator system pushes protons high beam intensities 1 2 3 Print Next Feature showcases projects people developments shape scientific computing CONTACT James Amundson Fermilab amundson fnal gov Website RELATED LINKS Fermilab ComPASS SciDAC Home Archive Subscribe ASCR Home ASCR SC Jobs Contact SC SC Web Policies DOE Phone Book DOE Employment DOE FOIA DOE Privacy Policy DOE Web Policies DOE Fear Act DOE Small Business DOE Information Quality E-Gov White House USA Gov'),
('Moores Law turns 50, but will it soon cease to exist?', 'menu Main Menu Fortune com Subscribe Subscribe Search Sign 2015 Time Inc rights reserved TECH MANAGEMENT FINANCE MARKETS CAREERS AUTOS INTERNATIONAL RETAIL FEATURES SMALL BUSINESS VIDEO MAGAZINE FORTUNE CONFERENCES Tech Smartphone Moore Law turns 50 soon cease exist Supratik Guha FortuneMagazine April 19 2015 10 19 EDT E-mail Tweet Facebook Google Plus Linkedin Share icons 1950 time fewer 10 digital computers worldwide Bill Pfann 33-year-old scientist Bell Laboratories New Jersey discovered method could used purify elements germanium silicon could possibly imagined discovery would enable silicon micro-chip rise computer industry Internet emergence information age Today 10 billion Internet-connected devices world laptops mobile phones heart devices least one micro-chip acts engine reason behind relentless progress neatly contained prophetic law announced 50 years ago Sunday called Moore Law micro-chip built tiny electrical switches made purified silicon called transistors law stated number transistors chip would double every year 1975 Gordon Moore revised forecast state count would double every two years law held true since Moore Law relevant doubling number transistors led computer chips could packed increasingly sophisticated circuitry energy efficient cheap led widespread adoption computers mobile phones information technology revolution price computation 10 million times cheaper 40 years ago computing power held smart phone outstrips workstations computer scientists used offices 1990s able far hold true Moore Law reason electronic circulation information commoditized changing way many us learn bank travel communicate socialize Take example social networking using mobile phone works cost transistor dropped million fold computing 10 000 times energy efficient since 1980 writer first went engineering school Consequently 200 smart phone powered biscuit-sized battery contains micro-chip billion transistors enough computing power digitally process image upload share wirelessly using powerful mathematics encode data consequence Moore Law action Yet 50th anniversary tell-tale signs Moore Law slowing almost certain law cease hold within decade miniaturization silicon transistors attain dimensions order handful atoms laws physics dictate transistors electronic circuits cease work efficiently point Moore Law slows innovations areas developments software pick slack short-term longer-term fundamental changes essential design classical computer remarkably remained unchanged since 1950s Designed precise calculations today computing machines make inferences qualitative decisions recognize patterns large amounts data efficiently next substantive leap forward computers human-like cognitive capabilities also energy efficient IBM Watson computing system won television game show Jeopardy 2011 consumed 4000 times energy human competitors experience reinforced need new energy efficient computing machines designed differently sequential calculative methodology classical computers inspired perhaps way biological brains work journalist recently asked whether continuation Moore Law indispensable beauty collective enterprise human innovation ensures nothing indispensable indefinitely technology progress Decades later one might look era Moore Law golden period computers came age masterful display industry ability miniaturize create billions flawless identical copies tiny circuits factories throughout world much pack migratory birds flying V-formation rotate lead position future time many technologies carried us forward information age Supratik Guha director physical sciences IBM 6 celebrity endorsements enraged consumers take break work feel guilty TECH MANAGEMENT FINANCE MARKETS CAREERS AUTOS INTERNATIONAL RETAIL FEATURES SMALL BUSINESS VIDEO MAGAZINE FORTUNE CONFERENCES Time Inc rights reserved Fortune com part Time com network sites Powered WordPress com VIP Fortune 500 Auto Energy Finance Leadership Powerful Women Retail Tech Newsletters Rankings Video subscribe 2015 Time Inc rights reserved Fortune com part Time com network sites Powered WordPress com VIP Ad Choices Custom Content Customer Service Feedback Fortune Datastore Media Kit Privacy Policy California Privacy Rights Reprints Permissions Site Map Terms Use Quotes delayed least 15 minutes Market data provided Interactive Data ETF Mutual Fund data provided Morningstar Inc Dow Jones Terms Conditions http www djindexes com mdsidx html tandc indexestandcs html P Index data property Chicago Mercantile Exchange Inc licensors rights reserved Terms Conditions Powered implemented Interactive Data Managed Solutions 2015 Time Inc rights reserved Fortune com part Time com network sites Powered WordPress com VIP Sign Email address Password incorrect EMAIL USERNAME PASSWORD Remember Forgot Password Want Full Story SUBSCRIBE Get Email Privacy Policy Thank interest licensing Fortune content Please find information various licensing contacts choose one best suits needs 1 license Fortune articles excerpts headlines republication various media including books eBooks film web newsletters newspapers magazines others please email syndication timeinc com 2 license Fortune cover order reprint e-print copies article cover license accolade please contact PARS International www timeincreprints com 3 license text photocopies Fortunearticles print digital handouts academic settings academic coursepacks please contact Copyright Clearance Center www copyright com'),
('Dawn to Ceres: Processors for the Protoplanet', "CPU History Museum Intel CPUs AMD Processor Cyrix Microprocessors Microcontrollers Total CPU's 4000 Total Manufacturers 120 Total EPROM's 1000 Home Pictures Reference Trade Links Contact Us Test Boards Products CPU Shack variety Test boards available sale including MCS-4 40 Boards MCS-80 Boards Z80 8085 Expansions Categories CPU Day EPROM Day GPU Fun Museum News Processor Manufacturers Processor News Products Research Uncategorized Recent Posts TI TMS7000 SCAT Microcontroller AMD AM29501 8-bits ByteSlice Forgotten Ones Unisys SCAMP-D Mainframe Processor Die Photos Christoph Morlinghaus e2v PowerPC HiTCE Packages Archives May 2015 April 2015 March 2015 February 2015 January 2015 December 2014 November 2014 October 2014 September 2014 August 2014 July 2014 June 2014 May 2014 April 2014 March 2014 February 2014 January 2014 November 2013 October 2013 September 2013 August 2013 July 2013 June 2013 May 2013 April 2013 March 2013 February 2013 January 2013 December 2012 November 2012 October 2012 September 2012 August 2012 July 2012 September 2011 August 2011 May 2011 April 2011 March 2011 February 2011 January 2011 December 2010 November 2010 October 2010 September 2010 August 2010 June 2010 May 2010 April 2010 March 2010 February 2010 January 2010 November 2009 October 2009 September 2009 July 2009 June 2009 May 2009 April 2009 March 2009 February 2009 January 2009 March 6th 2015 admin Dawn Ceres Processors Protoplanet Dawn mission Ceres Dawn launched 2007 NASA JPL built Orbital Sciences becoming first interplanetary spacecraft Dawns mission visit two largest dwarf planets Asteroid belt Vesta Ceres visiting Vesta year 2011-2012 Dawn used ion engines break orbit travel Ceres journey 2 5 years next hours Dawn captured Ceres gravity begin orbiting protoplanets interesting scientifically provide look solar systems past Dawn orbit Ceres several years perhaps discover mysterious bright spots among things Studying planet even dwarf planet requires processing power Dawn well equipped Dawn solar powered power budgets great concern 3AU three times sun Earth Dawns solar panels rates 1300 Watts run science experiments main computers comms importantly electric ion engine uses electricity generated panels excite eject Xenon gas high velocities Thus power consumption important raw processor power especially systems time BAE RAD6000 16 5MHz Dawns Central Electronics Unit CEU contains Board Computer OBC electronics OBC backup twin powered BAE RAD6000 processor running 16 5MHz RAD6000 radiation hardened version original IBM RISC Single Chip processor POWER derivative dating 1992 RAD6000 running VxWorks 5 2 1 Windriver typical OS RAD6000 series providing excellent real time control reliability rather important million miles department OBC course computer Dawn perhaps surprisingly powerful Dawn contains 3 scientific instruments Framing Camera FC Visible infrared spectrometer VIR Gamma Ray Neutron Detector GRaND FC used science also navigation considered mission critical component thus two one backup FC data processing handling ESA designed LEON2 processor LEON2 SPARC-V8 processor implemented Xilinx Virtex 600 FPGA running 25MHz 20 MIPS VIR also uses FC data processor data handling GRaND runs microcontroller made UTMC Aeroflex likely 69R000 16-bit RISC microcontroller essentially RISC version dual mode UTMC1750 Dawn subsystems well OBC powered use communications systems uplink cards dual course always providing telemetry heart beat signals back Earth uplink card powered UTMC 69R000 RISC microcontroller running 12MHz redundant Attitude Control Electronics also contain microcontroller managing Dawn 12 attitude control thrusters takes lot processing power sling 446 million hardware couple icy rocks millions miles away icy rocks offer clues Solar System built likely worthwhile price pay Tags RAD6000 Space Tweet Posted Processor News DEC Rigel VAX Shoots Stars Emulating Intel 8080 MOS 6502 Leave Reply Name required Mail published required Website RSS Feeds Largest CPU Museum daily hunt new processors chips museum well information new chips constantly come across interesting chips strange locations get chance learn many chips museum come Latest CPU Images sorted manufacturer technically brand may also view raw directory form didnt make gallery Popular Articles Links CPU Made AMD 29K Reference Guide Mergers Aquisitions Spin-Offs K6-2 CPU ID Guide VIA C3 CPU Overview ULi M6117C Embedded 80386SX Overclocking Eastern Bloc CPU Guide CPU Socket ID Guide MediaGX Geode CPU Guide Cyrix ID CPU Guide Intel RapidCAD CPU Datasheet Archive Tags2901 6502 6800 ALU AMD Apple ARM Atmel bit slice CPU Cyrix DEC economy embedded Engineering Sample EPROM Fairchild HP IBM Intel LSI MCM MCU MIL-STD-883 MIL-STD-1750A MIPS Motorola multi-core national NEC Nvidia PowerPC Qualcomm Renesas RISC SBP9900 signetics Soviet Space SPARC TI TMS9900 VLIW Z80 Zilog Vintage Intel eBay Double Hammock Space Saving Steel Stand Includes Portable Carrying Case 79 99 8d 5h Apple iPad Air 1st Gen 16GB 32GB Wi-Fi Retina Display 299 99 19d 23h Space Saving Steel Hammock Stand 9' Outdoor Patio Portable Carrying Case 49 99 18d 4h 50 30 12 6 PAIR FREE STANDING SHOE TOWER RACK ORGANIZER SPACE SAVE SHOE RACKS 32 99 3d 20h Avid Watchers 'Hidden' Deals Fun Searches Start eBay shopping 2009 CPU Shack site PXL Creative"),
('The Type Theory Podcast Episode 4: Stephanie Weirich on Zombie and Dependent Haskell', 'Menu Skip content HomeAboutYour Hosts Type Theory Podcast podcast type theory Episode 4 Stephanie Weirich Zombie Dependent Haskell Posted April 18 2015April 18 2015 David Christiansen fourth episode speak Stephanie Weirich University Pennsylvania Zombie language Dependent Haskell Stephanie long-time contributor Haskell involved design implementation features generalized algebraic datatypes higher-rank polymorphism type families promoted datatypes also participant Trellys project goal combining proofs programming language Zombie different kind dependently typed language eschewing automatic -reduction type checker approach based explicit equality rewriting enables new ways combining proofs programs well new forms proof automation Meanwhile languages designed dependently typed programming come closer practical applicability Haskell also moving towards full dependent types discuss challenges opportunities available cutting edge Haskell Reading Combining Proofs Programs Dependently Typed Language technical appendix Chris Casinghino Vilhelm Sj berg Stephanie Weirich POPL 2014 Programming Congruence Extended version Vilhelm Sj berg Stephanie Weirich POPL 2015 Dependently Typed Programming Singletons Richard Eisenberg Stephanie Weirich Haskell Symposium 2012 Kinds Adding Dependent Heterogeneous Equality FC Extended Version Stephanie Weirich Justin Hsu Richard Eisenberg ICFP 2013 Video Video lectures designing dependently typed languages Oregon Programming Languages Summer School Depending Types keynote talk dependent Haskell ICFP 2014 Code Trellys repository Github contains source code Zombie Pi-Forall tutorial implementation type checker dependently typed language AAC 29 MB MP3 36 MB FLAC 144 MB Opus Audio 34 MB DownloadShow URL Post navigation Episode 3 Dan Licata Homotopy Type Theory Subscribe RSS feed iTunes Search'),
('Efficient algorithm for this optimization problem? Dynamic programming?', "current community chat blog Computer Science Computer Science Meta communities Sign log customize list stack exchange communities Stack Exchange sign log tour help Tour Start quick overview site Help Center Detailed answers questions might Meta Discuss workings policies site Computer Science beta Questions Tags Users Badges Unanswered Ask Question Take 2-minute tour Computer Science Stack Exchange question answer site students researchers practitioners computer science It's 100 free registration required Efficient algorithm optimization problem Dynamic programming vote 7 vote favorite 1 I've created diagram depicts I'm trying accomplish Full-size Image input sequence nodes close together possible want white nodes close respective black nodes possible edges nodes lengthened try minimize error cannot shortened 1 - 2 less 4 example I've included possible solution edges lengthened labeled Note lengthening edge shifts nodes right axis continuous could possibly discretize helps I'm thinking dynamic programming approach could work I'm sure - never good DP What's fastest running algorithm solve categorized re-framed well-known problem algorithms dynamic-programming share improve question asked Apr 18 0 44 FogleBird 1386 solve DP think structure sub-structure solution solve bottom give linear run-time think it's also generally solvable system linear equations solving optimizing may better run-time Jason Apr 18 6 08 1 plz put key details written image text also havent actually formally described problem math terms thats half battle minimize mean squared error however looks like 1d version facilities location problem vzn Apr 18 21 07 add comment 3 Answers 3 active oldest votes vote 4 vote accepted extension bastien Loisel's answer Notice minimize x_i-y_i 2 subject x_i-x_ i-1 ge c_i equivalent minimize x_i- y_i-c_i 2 subject x_i geq x_ i-1 Let a_i y_i-c_i precisely isotonic regression problem exist O n time algorithm share improve answer answered Apr 19 17 25 Chao Xu 1 310421 Excellent - implemented isotonic regression pool adjacent violators algorithm it's working perfectly much faster memoized search algorithm Thanks FogleBird Apr 24 0 28 add comment vote 4 vote discretize axis use dynamic programming ball b feasible location ell within reasonable bounds calculate best mean squared error first b balls done usually kind information ball b-1 share improve answer answered Apr 18 1 06 Yuval Filmus 71k452138 take look code wrote tell DP approach might differ performance-wise FogleBird Apr 18 2 17 approach works great estimate complexity estimate complexity suggestion help decide whether it's worth program approach decide it's worth compare two approaches empirically approach works better also depends size nature inputs make sure test approach actual inputs Yuval Filmus Apr 18 3 38 add comment vote 2 vote quadratic program trying minimise sum x_i-y_i 2 subject x_i-x_ i-1 ge c_i share improve answer edited Apr 18 9 47 David Richerby 17 9k52259 answered Apr 18 6 11 bastien Loisel 1211 answers categorized re-framed well-known problem would nice givesome detail David Richerby Apr 18 9 49 add comment Answer draft saved draft discarded Sign log Sign using Google Sign using Facebook Sign using Stack Exchange Post guest Name Email Post guest Name Email discard posting answer agree privacy policy terms service answer you're looking Browse questions tagged algorithms dynamic-programming ask question asked 1 month ago viewed 1432 times active 1 month ago Blog Stack Overflow Andela partner provide education beyond borders Get weekly newsletter Top questions answers Important announcements Unanswered questions see example newsletter Related 20 Deciding Sub-Problems Dynamic Programming 2 Inventory planning problem solved dynamic programming 1 Recursive relation help dynamic programming 2D plane algorithm 2 master Dynamic Programming 1 Knapsack problem partition problem general dynamic algorithm negative numbers allowed 0 Help dynamic programming solution pipe cutting problem 0 Dynamic programming rectangular grid 5 Proving optimality dynamic programming algorithm 2 Solving dynamic programming problem Hot Network Questions Clint entranced Wanda Maximov Age Ultron Rock Paper Scissors - Alter Egos electric sparks appear blue purple Formula comparing cell fixed date always returns false roll Insight person telling truth bought shirt offline correct usage word 'offline' affected area buff Buddhist Sacred Texts used practice historically given questioned authenticity Creating complex diagrams Explaining quote Weinberg signifcance symmetry groups physics Can't use inline array c terrible idea aim lower journal paper question glycolysis sound like pedant seemingly simple complicated questions good testers competing see opens bugs Create base class object derived class Defining QM Bra Ket operations CSS underline moving click using cream cheese instead cheddar grilled cheese sandwich old edition Cinder Wall able attack evaluate normative requirements new device design neutral word describe ones ability bypass social expectations interpersonal interactions jet fighter missiles descend ascend difference Multiple robots swarm robots hot questions question feed tour help blog chat data legal privacy policy work advertising info mobile contact us feedback Technology Life Arts Culture Recreation Science Stack Overflow Server Fault Super User Web Applications Ask Ubuntu Webmasters Game Development TeX - LaTeX Programmers Unix Linux Ask Different Apple WordPress Development Geographic Information Systems Electrical Engineering Android Enthusiasts Information Security Database Administrators Drupal Answers SharePoint User Experience Mathematica Salesforce 14 Photography Science Fiction Fantasy Graphic Design Seasoned Advice cooking Home Improvement Personal Finance Money Academia 10 English Language Usage Skeptics Mi Yodeya Judaism Travel Christianity Arqade gaming Bicycles Role-playing Games 21 Mathematics Cross Validated stats Theoretical Computer Science Physics MathOverflow 7 Stack Apps Meta Stack Exchange Area 51 Stack Overflow Careers site design logo 2015 stack exchange inc user contributions licensed cc by-sa 3 0 attribution required rev 2015 5 28 2614 Computer Science Stack Exchange works best JavaScript enabled"),
('Very cool paper showing that certain problems encountered in Pokemon, Legend of Zelda and more are NP-Hard', ''),
("Alan Turing's notebook sells for more than $1 million at auction", "Mashable We're using cookies improve experience Click find Mashable Mashable Australia Mashable UK Sign Like Follow Mashable see Search Social Media Tech Business Entertainment World Lifestyle Watercooler Channels Social Media Tech Business Entertainment World Lifestyle Watercooler CompanyAbout UsLicensing ReprintsArchiveMashable Careers ContactContact UsSubmit News AdvertiseAdvertise LegalPrivacy PolicyTerms UseCookie Policy AppsiPhone iPadAndroid ResourcesSubscriptions SitesJobsEventsSocial Good SummitMedia Summit World Like Follow Alan Turing's notebook sells 1 million auction 1 1k Shares Share Tweet Share What's notebook British mathematician pioneer computer science Alan Turing sold 1 million Image Kin Cheung Associated Press Associated Press2015-04-14 10 40 20 UTC handwritten notebook British World War II code-breaking genius Alan Turing subject 2014 Oscar-winning film Imitation Game brought 1 million auction Monday See also 'The Imitation Game' Enigma Praise Cumberbatch Clunker 56-page manuscript written time mathematician computer science pioneer working break seemingly unbreakable Enigma codes used Germans throughout war contains complex mathematical computer science notations believed extensive Turing manuscript known exist Bonhams auction house said sale price 1 025 000 Imitation Game starring Benedict Cumberbatch role Turing won Best Adapted Screenplay year's Academy Awards Turing's notebook dates 1942 team cryptanalysts Britain's World War II code cypher school Bletchley Park one entry Turing wrote complex calculus notation Leibniz notation find extremely difficult understand spite one understood best wrote certainly implies relation x y laid eg y x2 3x sale also included working German Enigma enciphering machine three-rotor device manufactured German military July 1944 sold 269 000 Turing prosecuted gay time illegal Britain convicted indecency 1952 agreed undergo hormone treatment bid eliminate homosexuality alternative imprisonment died 1954 cyanide poisoning death ruled suicide although family friends believed might accidental notebook among papers left friend fellow mathematician Robin Gandy page hand-written notebook Alan Turing World War II code-breaking genius Image Bebeto Matthews Associated PressGandy gave papers Archive Centre King's College Cambridge 1977 kept notebook using blank pages writing dreams request psychiatrist notebook remained Gandy's possession died 1995 Bonhams describes entries highly personal beginning journal Gandy writes seems suitable disguise write notes Alan's notation possibly little sinister dead father figure whose thoughts completely inherited Turing scholar Andrew Hodges statement Bonhams said notebook sheds light Turing remained committed free-thinking work pure mathematics Imitation Game also stars Keira Knightley based Hodges' book Alan Turing Enigma Bonhams said buyer wished remain anonymous Part proceeds donated charity something add story Share comments Topics alan turing Enigma imitation game World Load Comments Powered Livefyre What's Hot World What's New What's Rising What's Hot What's New What's Rising What's Hot UsJobsAdvertiseSubscribePrivacyTerms Mashable leading source news information resources Connected Generation Mashable reports importance digital innovation empowers inspires people around world Mashable's record 42 million unique visitors worldwide 21 million social media followers one influential engaged online communities Founded 2005 Mashable headquartered New York City office San Francisco 2005-2015 Mashable Inc Reproduction without explicit permission prohibited Rights Reserved Designed collaboration Code Theory"),
('AMA from creators of SCIgen fake-paper generator [X-post from IAMA]', "jump contentmy subredditsannouncementsArtAskRedditaskscienceawwblogbookscreepydataisbeautifulDIYDocumentariesEarthPornexplainlikeimfiveFitnessfoodfunnyFuturologygadgetsgamingGetMotivatedgifshistoryIAmAInternetIsBeautifulJokesLifeProTipslistentothismildlyinterestingmoviesMusicnewsnosleepnottheonionOldSchoolCoolpersonalfinancephilosophyphotoshopbattlespicsscienceShowerthoughtsspacesportstelevisiontifutodayilearnedTwoXChromosomesUpliftingNewsvideosworldnewsWritingPromptsedit subscriptionsfront-all-random gadgets-sports-gaming-pics-worldnews-videos-AskReddit-aww-Music-funny-news-movies-books-history-food-philosophy-television-Jokes-Art-DIY-space-Documentaries-Fitness-askscience-nottheonion-todayilearned-personalfinance-gifs-listentothis-IAmA-TwoXChromosomes-creepy-nosleep-GetMotivated-WritingPrompts-LifeProTips-EarthPorn-explainlikeimfive-Showerthoughts-Futurology-photoshopbattles-mildlyinteresting-dataisbeautiful-tifu-OldSchoolCool-UpliftingNews-InternetIsBeautiful-sciencemore IAmAcommentsrelatedother discussions 4 want join sign create account seconds Englishlimit search r IAmAuse following search parameters narrow results subreddit subredditfind submissions subreddit author usernamefind submissions username site example comfind submissions example com url textsearch text urlselftext textsearch text self post contentsself yes self include exclude self postsnsfw yes nsfw include exclude results marked NSFWe g subreddit aww site imgur com dogsee search faq details advanced search author subreddit post submitted 14 Apr 2015193 points 87 upvoted shortlink remember mereset passwordloginSubmit new text postIAmAunsubscribesubscribe8 241 389 readers11 446 users nowSubmit AMA Request AMA Hide AMA Requests Please check Rules FAQs Click request added calendar AMAs scheduled Eastern Daylight Time GMT-4 00 Date Time Person Description 27 May 12pm Jim Sciutto Journalist 27 May 1pm Martin Smith Producer Documentarian 27 May 1pm Joey Corneau Emily Home Writers 27 May 4pm Missy Suicide Suicide Girls Founder 27 May 4pm Dr Matthew Blaze Patty Hsue Jonathan Curtis Dr Mustaque Ahamad David Dewey FTC Robocall Contest Reps 27 May 6pm Kellan Lutz Actor 27 May 8pm Ethan Embry Actor 28 May 10am CERN scientists Scientists 28 May 11am Adam Richman Actor 28 May 11 30am Steve Hilton Author 28 May 1pm Chad Hodge Writer Producer 28 May 2 30pm Helen Greiner Co-Founder iRobot 28 May 5 30pm Todd Williams Actor 29 May 9am Garrett Ingolia Americare Vice President 29 May 12 30pm Jack Noseworthy Actor 29 May 1pm Joy Ito Director MIT Media Lab 29 May 3pm Mackenzie Davis Actor 29 May 3 30pm Robert LaSardo Actor 29 May 4pm Brazzers Adult Company 29 May 7pm Koji Igarashi Castlevania producer 1 Jun 1pm Tabatha Coffey TV Personality Hair Stylist 1 Jun 1pm Jerry Ferrara Actor 2 Jun 5pm Diplo Musician 3 Jun 3pm Mew Band see Submitting AMAs Something uncommon plays central role life truly interesting unique event Explanation examples rule found AMAs require proof Proof included text post start AMA must remain confidential message moderators verify See tips concerning proof examples Request threads Requests must reasonable realistic requests must 5 questions person requested Requests celebrities must contain public contact info body request See information requests Commenting Please note initial responses posters must contain properly punctuated question Attempting bypass rule adding non question result permanent ban See comment removals policy Useful Links Step-by-step guide AMA Traffic Visitor Stats Related subreddits Follow us Twitter Official IAMA App Android iOS 03 Oct Melissa Etheridge Musician 11 Nov Andy Cohen Talk show host 28 Oct Johnny Weir Figure skater 21 Jan Legally blind woman Stargardt's Disease 26 Jan Jerry Springer Steve Wilkos TV hosts TwitterGoogle CalendarAndroidiPhone Please check Rules FAQs created 32bitesa community 6 yearsmessage moderatorsMODERATORSkarmanautroastedbagelbrownboy13flyryancahaselerIKingJeremyUnholyDemigodImNotJesusorangejuliusSeraph_Grymm 12 discussions r IAmA X1074 points 490 comments best friend playfully pushed pool bachelorette party IAMA quadriplegic known paralyzed bride new mom AMA 2122 points 975 comments IamA disabled American expatriate Philippines founded 8ch net 4chan clone users make boards like Reddit Al Jazeera documentary year ago frontpage r videos AMA 5032 points 2334 comments IamA retired NASA Engineer worked NASA infancy beginning 1954 shuttle program AMA 55 points 375 comments It's Nick Swardson penis smells great today AMA 70 comments m CNN Chief National Security Correspondent Jim Sciutto got exclusive access spy plane secret mission near China AMA 30 comments IamA 3D model 3D print weapon props games movies AMA 105 points 97 comments Hey It's Dr Dan Pancake Man guy made crazy Avengers pancakes AMA 38 comments Hello m Martin Smith FRONTLINE correspondent director Obama War AMA 21 comments Emily Horne Joey Comeau co-creators Softer World ending June 1st Ask Us Anything 24 comments I'm Ben Brody - combat camera soldier Iraq I'm photojournalist covering war Afghanistan GroundTruth Project AMA192193194TechnologyAt MIT created SCIgen generates gibberish science papers continue fool academic conferences Ask us anything self IAmA submitted 1 month ago SCIgenAMAHi 10 years ago grad students MIT Computer Science Artificial Intelligence Laboratory CSAIL fed bogus journals conferences spam researchers charge crazy fees articles even read accepting created SCIgen program available randomly generates grammatical nonsense computer-science papers SCIgen made major headlines SCIgen paper Rooter Methodology Typical Unification Access Points Redundancy got accepted World Multi-Conference Systemics Cybernetics Informatics WMSCI WMSCI un-invited us attending event Orlando managed crowd-fund 2 500 fly MIT rent room inside conference space hold series randomly-generated talks wielding fake names fake business cards fake moustaches SCIgen continues used hundreds thousands times year Last year IEEE Springer Publishing got rid 120 papers websites French researcher determined written SCIgen info MIT News story CSAIL Tweet little bit us Dan Aguayo aguayoooooo worked Roofnet project MIT 2006 left join Meraki spun project remained member technical staff since Meraki part Cisco since 2012 Max Krohn maxtaco co-founded SparkNotes OKCupid undergrad Harvard leads Keybase aimed making cryptography accessible Jeremy Twitter - follow MIT_CSAIL instead find GitHub worked IBM Google Nicira joined Keybase month 10-year anniversary SCIgen made new program called SCIpher hides messages inside calls papers CFPs emails bogus conferences like WMSCI always barraging grad students SCIpher put secret message want tell friend SCIpher creates text looks like CFP send friend put back SCIpher message reveal We'll starting 2 p m EST Feel free ask us questions anything including - created SCIgen SCIpher - like perpetrate hoax - favorite programming language - like MIT CSAIL Parallel Distributed Operating Systems group Disclaimer means speaking MIT Cisco Meraki Keybase official capacity Proof https twitter com maxtaco status 587438503836827648 https gist github com strib c0aa6b1a0f1a39e168d8 UPDATE 4 05 EST thanks questions Hope soon 58 commentssharecancelall 58 commentssorted besttopnewhotcontroversialoldrandomq amc22004 18 points19 points20 points 1 month ago 9 children make fact last month Springer Publishing released tool detect SCIgen papers good thing publishers Slate suggests tacit admission even reputable publishing houses peer-reviewed journals incapable providing even minimally competent peer review permalinksavereportgive goldreply SCIgenAMA 26 points27 points28 points 1 month ago 8 children Jeremy Yeah pretty standard arms-race stuff think would trivial beat detector could beat generator point it's easier minimally competent peer review right Though said another response one reasonable use detector find people already used SCIgen pad CVs past It's hard believe people actually exist swear one though conference rejections I've received might imply otherwise permalinksaveparentreportgive goldreply maxToTheJ 3 points4 points5 points 1 month ago 7 children point it's easier minimally competent peer review right feasible incentive flood journals papers academia due publish perish model modern research permalinksaveparentreportgive goldreply ZippytheSquirrel 1 point2 points3 points 1 month ago 6 children That's incentive scientists pump papers journals publish permalinksaveparentreportgive goldreply maxToTheJ 1 point2 points3 points 1 month ago 5 children must able see correlation amount papers input ability put input X amount scrutiny permalinksaveparentreportgive goldreply ZippytheSquirrel 0 points1 point2 points 1 month ago 4 children deeply scrutinize ones publish permalinksaveparentreportgive goldreply maxToTheJ 0 points1 point2 points 1 month ago 3 children Isn't whole discussion publishing something weak applying scrutiny help permalinksaveparentreportgive goldreply ZippytheSquirrel -1 points0 points1 point 1 month ago 2 children meant ultra deep scrutiny needs really applied papers intend going actually publish need tons manpower examine studies never going published permalinksaveparentreportgive goldreply maxToTheJ 0 points1 point2 points 1 month ago 1 child decide intend publish Hint applying scrutiny whole set Nobody arguing spending manpower something don't intend use permalinksaveparentreportgive goldreply ZippytheSquirrel -1 points0 points1 point 1 month ago 0 children employer interview every single candidate permalinksaveparentreportgive goldreply wonkypedia 12 points13 points14 points 1 month ago 7 children got inspired created used basic Markov chains trained bunch paper abstracts results seem pretty good good training data hood scigen permalinksavereportgive goldreply SCIgenAMA 30 points31 points32 points 1 month ago 2 children Jeremy explicitly avoided Markov chains anything else technically challenging service trying make papers funny possible Markov chains might get something syntactically correct likely boring SCIgen literally sat around two weeks brainstormed buzzwords clauses paragraph structures paper elements based thought would funny That's grammar SCIgen goes grammar makes random choices fill stuff That's see things like testbed Gameboys evaluation sections sometimes -- thought would hilarious permalinksaveparentreportgive goldreply wonkypedia 2 points3 points4 points 1 month ago 0 children Wonderful permalinksaveparentreportgive goldreply inthebrilliantblue 0 points1 point2 points 1 month ago 0 children makes giddy permalinksaveparentreportgive goldreply wonkypedia 8 points9 points10 points 1 month ago 3 children Fwiw generator generated Energy - Delay - Product - aware DVFS widely - used technique exploits hardware resources minimize performance degradation less 6 19 wrong - path instructions 3 allocates cores validate analysis means simulation Specifically model assumes combination cores reduced maximum value achieve better energy efficiency dynamically adjusting frequencies cores clear OS thread scheduling play major threat reliable processor operation raw device soft error rate estimates AVF fraction faults detecting anomalous software behavior last SELSE create proof - - - art scheduling proposals 8 7 sampling - based scheduling policy permalinksaveparentreportgive goldreply InvincibleAgent 2 points3 points4 points 1 month ago 1 child replace WordPad You'd fix 8 7 manually though permalinksaveparentreportgive goldreply wonkypedia 0 points1 point2 points 1 month ago 0 children yep need modify python script permalinksaveparentreportgive goldreply salgat 0 points1 point2 points 1 month ago 0 children It's bunch loosely related claims could almost make coherent thought haha awesome permalinksaveparentreportgive goldreply shinypidgey 7 points8 points9 points 1 month ago 1 child idea put author's name fake citations order make look like citing work That's favorite little touch permalinksavereportgive goldreply SCIgenAMA 2 points3 points4 points 1 month ago 0 children Jeremy don't remember think pretty much requirement you're taking academic papers basically pre-ordained start project permalinksaveparentreportgive goldreply malgorithmsChris Coyne 5 points6 points7 points 1 month ago 2 children rewarding part project reading papers presenting writing grammar seeing get accepted conference permalinksavereportgive goldreply SCIgenAMA 11 points12 points13 points 1 month ago 1 child Jeremy putting fake conference together probably favorite part Setting shell corporations getting disguises tricking hotel thinking real purpose -- like getting real taste like running WMSCI fame fortune permalinksaveparentreportgive goldreply SCIgenAMA 3 points4 points5 points 1 month ago 0 children Max loved claim ROOTER widely-read CS systems paper wonder still ever true permalinksaveparentreportgive goldreply maltamal 7 points8 points9 points 1 month ago 2 children prestigious conferences journals mean one ordinarily thought fraudster conference actually accepted one auto-generated papers especially CS fields okay permalinksavereportgive goldreply SCIgenAMA 9 points10 points11 points 1 month ago 1 child Jeremy highest profile ones know Springer IEEE journals http www nature com news publishers-withdraw-more-than-120-gibberish-papers-1 14763 ones pretty interesting actually don't think intention submitters expose journals fraudulent -- trying pad resumes said particular journals considered prestigious using well-known brand name actual prestigious conferences use peer review permalinksaveparentreportgive goldreply YoHoHoandaCupofTea 2 points3 points4 points 1 month ago 0 children probably dumb one tell conference prestigious impact-factor equivalent permalinksaveparentreportgive goldreply autocorrector 2 points3 points4 points 1 month ago 1 child What's favorite thing CSAIL UROPed recently miss permalinksavereportgive goldreply SCIgenAMA 5 points6 points7 points 1 month ago 0 children Max I'm sure much experience specific CSAIL grad student general adult supervisors pretty hands-off came letting us roam free project got eye rolls every gave us leeway burn many hours SCIgen Cheers course huge multiplicative factor work research group wasted man-centuries time could spent reading coherent papers otherwise contributing society permalinksaveparentreportgive goldreply oconnor663 2 points3 points4 points 1 month ago 2 children best post-SCIgen paper generator guys heard Postmodern Essay Generator come guys permalinksavereportgive goldreply SCIgenAMA 2 points3 points4 points 1 month ago 0 children Jeremy MathGen http thatsmathematics com mathgen permalinksaveparentreportgive goldreply SCIgenAMA 2 points3 points4 points 1 month ago 0 children Jeremy vague recollection POMO around time I'm pretty sure didn't know developing SCIgen permalinksaveparentreportgive goldreply ankscricholic 1 point2 points3 points 1 month ago 2 children What's favorite programming language came idea long take implement permalinksavereportgive goldreply SCIgenAMA 6 points7 points8 points 1 month ago 1 child Max original version programmed Perl ripped code TheSpark com's high school english paper generator also written Perl It's since modernized magic grammar rules though DSL guess you'd call nowadays data file called back permalinksaveparentreportgive goldreply SCIgenAMA 2 points3 points4 points 1 month ago 0 children Actually SCIgen code -- still available via CVS -- still Perl it's disaster new SCIpher code https github com strib scipher upgraded Python leverage NLTK original SCIgen took 2 weeks three us media frenzy followed took much longer deal permalinksaveparentreportgive goldreply heroltz998 1 point2 points3 points 1 month ago 2 children EDIT link messed conserns anyone else don't know reason apologize false info know last link gist doesn't work least browser extra symbols shown directly browser actual link actual question anyone tried get payback created program like threaten sue something like permalinksavereportgive goldreply SCIgenAMA 2 points3 points4 points 1 month ago 1 child Jeremy weird gist html post looks right don't know extra symbol coming Anyway here's link https gist github com strib c0aa6b1a0f1a39e168d8 question worst payback got original conference accepted paper retracted acceptance media attention Boo set fake conference next conference tried keep attendees coming We've gotten little negative feedback SCIgen general think anti-SCIgen position pretty hard defend permalinksaveparentreportgive goldreply heroltz998 1 point2 points3 points 1 month ago 0 children That's suprising considering embarassment extra work caused journals confrences would expected form action behalf permalinksaveparentreportgive goldreply silence7 1 point2 points3 points 1 month ago 2 children extent inspired Alan Sokal permalinksavereportgive goldreply SCIgenAMA 2 points3 points4 points 1 month ago 1 child Jeremy plead ignorance Sokal time -- didn't learn hoax started media interviews got asked since learned awesomeness considered retrospectively inspired permalinksaveparentreportgive goldreply khakimage 1 point2 points3 points 1 month ago 0 children Amazing assumed SCIgen attempt pointing finger back STEM world often interprets Sokal hoax proof liberal arts meaningless drivel permalinksaveparentreportgive goldreply AtheistConservative 1 point2 points3 points 1 month ago 0 children AMA fact SCIgen 2 0 sure Question trying pull wool eyes dumb computer following answer put day month except correct twentysomethingdate day Christmas fall Answer December __ permalinksavereportgive goldreply AutoModerator M 1 point2 points3 points 1 month ago 0 children Users please wary proof welcome ask proof find insufficient OP need help please message mods Thank bot action performed automatically Please contact moderators subreddit questions concerns permalinksavereportgive goldreply amc22004 0 points1 point2 points 1 month ago 1 child What's strangest conference that's accepted SCIgen paper know non-CS journals accepted SCIgen papers permalinksavereportgive goldreply SCIgenAMA 2 points3 points4 points 1 month ago 0 children Jeremy see http pdos csail mit edu scigen relwork weird ones Honestly stopped keeping track success stories back it's bit date particularly like Russian story though http pdos csail mit edu scigen blog EDIT original link broken sorry Especially since Russian word Rooter implies low-quality science really goal start permalinksaveparentreportgive goldreply samipjain 0 points1 point2 points 1 month ago 4 children kind software catch paper created SCIgen submitting permalinksavereportgive goldreply SCIgenAMA 3 points4 points5 points 1 month ago 3 children Jeremy Yes http scidetect forge imag fr Springer positioning positive thing seems like way avoid real peer review guess one good thing use catch resume-padders trying exploit system besides better ways solve problems exposed SCIgen detector permalinksaveparentreportgive goldreply SCIgenAMA 2 points3 points4 points 1 month ago 0 children Max really calls question purpose Springer even serving modern world publishing papers free easy editorial oversight largely provided free charge academics working public research grants permalinksaveparentreportgive goldreply samipjain 0 points1 point2 points 1 month ago 0 children Yeah true permalinksaveparentreportgive goldreply 10-10withrice 0 points1 point2 points 1 month ago 1 child What's favorite video game permalinksavereportgive goldreply SCIgenAMA 0 points1 point2 points 1 month ago 0 children Jeremy http www newgrounds com portal view 547307 permalinksaveparentreportgive goldreply an_actual_human 0 points1 point2 points 1 month ago 0 children Rooter reference Mikhail Gelfand's work inspired maybe way around permalinksavereportgive goldreply desultoryquest 0 points1 point2 points 1 month ago 2 children mention lack peer reviews always thought papers peer reviewed catalog disreputable journals publications don't peer review would save lot time could easily reject drivel researching something I'm academic lowly code monkey occasionally wade papers work I've found many papers either unintelligible reproducible Nowadays trust filter papers written reputable individuals field permalinksavereportgive goldreply dga-dave 1 point2 points3 points 1 month ago 1 child Beall's list predatory open access journals good start http scholarlyoa com publishers you're researching something - find easier filter first positive inclusion rather excluding crap find e g Microsoft Academic Search's ranking CS journals conferences it's particularly accurate course rankings subjective -- difference conference top 10 area fake journal large it's quite useful purpose http academic research microsoft com RankList entitytype 4 topDomainID 2 subDomainID 0 last 0 start 1 end 100 permalinksaveparentreportgive goldreply desultoryquest 0 points1 point2 points 1 month ago 0 children Thanks lot links looks really useful permalinksaveparentreportgive goldreply zeptimius 0 points1 point2 points 1 month ago 0 children Would consider Turbo-Encabulator precursor SCIGen permalinksavereportgive goldreplyaboutblogaboutvaluesteamsource codeadvertisejobshelpsite rulesFAQwikireddiquettetransparencycontact usapps toolsAlien Blue iOS appreddit AMA appmobile betabuttons 3reddit goldreddit storeredditgiftsreddit tvradio redditUse site constitutes acceptance User Agreement Privacy Policy Genitive 2015 reddit inc rights reserved REDDIT ALIEN Logo registered trademarks reddit inc Rendered PID 29507 app-165 2015-05-27 17 34 06 809320 00 00 running 8944350 country code"),
("Real Programers don't use Pascal", "Real Programmers Don't Use PASCAL Ed Post Graphic Software Systems P O Box 673 25117 W Parkway Wilsonville 97070 Copyright c 1982 decvax ucbvax cbosg pur-ee lbl-unix teklabs ogcvax gss1144 evp Back good old days -- Golden Era computers easy separate men boys sometimes called Real Men Quiche Eaters literature period Real Men ones understood computer programming Quiche Eaters ones didn't real computer programmer said things like 10 1 10 ABEND actually talked capital letters understand rest world said things like computers complicated can't relate computers -- they're impersonal previous work 1 points Real Men don't relate anything aren't afraid impersonal usual times change faced today world little old ladies get computerized microwave ovens 12 year old kids blow Real Men water playing Asteroids Pac-Man anyone buy even understand Personal Computer Real Programmer danger becoming extinct replaced high-school students TRASH-80s clear need point differences typical high-school junior Pac-Man player Real Programmer Understanding differences give kids something aspire -- role model Father Figure also help employers Real Programmers realize would mistake replace Real Programmers staff 12 year old Pac-Man players considerable salary savings LANGUAGES easiest way tell Real Programmer crowd programming language uses Real Programmers use FORTRAN Quiche Eaters use PASCAL Nicklaus Wirth designer PASCAL asked pronounce name replied either call name pronouncing 'Veert' call value 'Worth' One tell immediately comment Nicklaus Wirth Quiche Eater parameter passing mechanism endorsed Real Programmers call-by-value-return implemented IBM 370 FORTRAN G H compilers Real programmers don't need abstract concepts get jobs done perfectly happy keypunch FORTRAN IV compiler beer Real Programmers List Processing FORTRAN Real Programmers String Manipulation FORTRAN Real Programmers Accounting FORTRAN Real Programmers Artificial Intelligence programs FORTRAN can't FORTRAN assembly language can't assembly language isn't worth STRUCTURED PROGRAMMING Computer science academicians gotten structured programming rut past several years claim programs easily understood programmer uses special language constructs techniques don't agree exactly constructs course examples use show particular point view invariably fit single page obscure journal another -- clearly enough example convince anyone got school thought best programmer world could write unbeatable tic-tac-toe program use five different computer languages create 1000 line programs WORKED Really got Real World first task Real World read understand 200 000 line FORTRAN program speed factor two Real Programmer tell Structured Coding world won't help solve problem like -- takes actual talent quick observations Real Programmers Structured Programming Real Programmers aren't afraid use GOTOs Real Programmers write five page long loops without getting confused Real Programmers enjoy Arithmetic statements make code interesting Real Programmers write self-modifying code especially saves 20 nanoseconds middle tight loop Programmers don't need comments code obvious Since FORTRAN doesn't structured REPEAT CASE statement Real Programmers don't worry using Besides simulated necessary using assigned GOTOs Data structures also gotten lot press lately Abstract Data Types Structures Pointers Lists Strings become popular certain circles Wirth above-mentioned Quiche Eater actually wrote entire book 2 contending could write program based data structures instead way around Real Programmers know useful data structure array Strings lists structures sets -- special cases arrays treated way easily without messing programing language sorts complications worst thing fancy data types declare Real Programming Languages know implicit typing based first letter six character variable name OPERATING SYSTEMS kind operating system used Real Programmer CP M God forbid -- CP M basically toy operating system Even little old ladies grade school students understand use CP M Unix lot complicated course -- typical Unix hacker never remember PRINT command called week -- gets right Unix glorified video game People don't Serious Work Unix systems send jokes around world USENET write adventure games research papers Real Programmer uses OS 370 good programmer find understand description IJK305I error got JCL manual great programmer write JCL without referring manual truly outstanding programmer find bugs buried 6 megabyte core dump without using hex calculator actually seen done OS 370 truly remarkable operating system It's possible destroy days work single misplaced space alertness programming staff encouraged best way approach system keypunch people claim Time Sharing system runs OS 370 careful study come conclusion mistaken PROGRAMMING TOOLS kind tools Real Programmer use theory Real Programmer could run programs keying front panel computer Back days computers front panels actually done occasionally typical Real Programmer knew entire bootstrap loader memory hex toggled whenever got destroyed program Back memory memory -- didn't go away power went Today memory either forgets things don't want remembers things long they're better forgotten Legend Seymour Cray inventor Cray supercomputer Control Data's computers actually toggled first operating system CDC7600 front panel memory first powered Seymour needless say Real Programmer One favorite Real Programmers systems programmer Texas Instruments One day got long distance call user whose system crashed middle important work Jim able repair damage phone getting user toggle disk O instructions front panel repairing system tables hex reading register contents back phone moral story Real Programmer usually includes keypunch lineprinter toolkit get along front panel telephone emergencies companies text editing longer consists ten engineers standing line use 029 keypunch fact building work doesn't contain single keypunch Real Programmer situation work text editor program systems supply several text editors select Real Programmer must careful pick one reflects personal style Many people believe best text editors world written Xerox Palo Alto Research Center use Alto Dorado computers 3 Unfortunately Real Programmer would ever use computer whose operating system called SmallTalk would certainly talk computer mouse concepts Xerox editors incorporated editors running reasonably named operating systems EMACS VI probably well known class editors problem editors Real Programmers consider see get bad concept text editors women Real Programmer wants asked got text editor -- complicated cryptic powerful unforgiving dangerous TECO precise observed TECO command sequence closely resembles transmission line noise readable text 4 One entertaining games play TECO type name command line try guess possible typing error talking TECO probably destroy program even worse -- introduce subtle mysterious bugs working subroutine reason Real Programmers reluctant actually edit program close working find much easier patch binary object code directly using wonderful program called SUPERZAP equivalent non-IBM machines works well many working programs IBM systems bear relation original FORTRAN code many cases original source code longer available comes time fix program like manager would even think sending anything less Real Programmer job -- Quiche Eating structured programmer would even know start called job security programming tools used Real Programmers FORTRAN preprocessors like MORTRAN RATFOR Cuisinarts programming -- great making Quiche See comments structured programming Source language debuggers Real Programmers read core dumps Compilers array bounds checking stifle creativity destroy interesting uses EQUIVALENCE make impossible modify operating system code negative subscripts Worst bounds checking inefficient Source code maintainance systems Real Programmer keeps code locked card file implies owner cannot leave important programs unguarded 5 REAL PROGRAMMER WORK typical Real Programmer work kind programs worthy efforts talented individual sure real Programmer would caught dead writing accounts-receivable programs COBOL sorting mailing lists People magazine Real Programmer wants tasks earth-shaking importance literally Real Programmers work Los Alamos National Laboratory writing atomic bomb simulations run Cray supercomputers Real Programmers work National Security Agency decoding Russian transmissions largely due efforts thousands Real Programmers working NASA boys got moon back cosmonauts computers Space Shuttle programmed Real Programmers Programmers work Boeing designing operating systems cruise missiles awesome Real Programmers work Jet Propulsion Laboratory California Many know entire operating system Pioneer Voyager spacecraft heart combination large ground-based FORTRAN programs small spacecraft-based assembly language programs incredible feats navigation improvisation hitting ten-kilometer wide windows Saturn six years space repairing bypassing damaged sensor platforms radios batteries Allegedly one Real Programmer managed tuck pattern-matching program hundred bytes unused memory Voyager spacecraft searched located photographed new moon Jupiter One plan upcoming Galileo spacecraft mission use gravity assist trajectory past Mars way Jupiter trajectory passes within 80 - 3 kilometers surface Mars Nobody going trust PASCAL program PASCAL programmer navigation tolerances tell many world's Real Programmers work U Government mainly Defense Department Recently however black cloud formed Real Programmer horizon seems highly placed Quiche Eaters Defense Department decided Defense programs written grand unified language called ADA registered trademark DoD seemed ADA destined become language went precepts Real Programming -- language structure language data types strong typing semicolons short language designed cripple creativity typical Real Programmer Fortunately language adopted DoD enough interesting features make approachable it's incredibly complex includes methods messing operating system rearranging memory Edsgar Dijkstra doesn't like 6 Dijkstra I'm sure know author GoTos Considered Harmful -- landmark work programming methodology applauded Pascal Programmers Quiche Eaters alike Besides determined Real Programmer write FORTRAN programs language real programmer might compromise principles work something slightly trivial destruction life know providing there's enough money several Real Programmers building video games Atari example playing Real Programmer knows beat machine every time challange Everyone working LucasFilm Real Programmer would crazy turn money 50 million Star Wars fans proportion Real Programmers Computer Graphics somewhat lower norm mostly nobody found use Computer Graphics yet hand Computer Graphics done FORTRAN fair number people Graphics order avoid write COBOL programs REAL PROGRAMMER PLAY Generally Real Programmer plays way works -- computers constantly amazed employer actually pays would fun anyway although careful express opinion loud Occasionally Real Programmer step office breath fresh air beer two tips recognizing real programmers away computer room party Real Programmers ones corner talking operating system security get around football game Real Programmer one comparing plays simulations printed 11 14 fanfold paper beach Real Programmer one drawing flowcharts sand Real Programmer goes disco watch light show funeral Real Programmer one saying Poor George almost sort routine working coronary grocery store Real Programmer one insists running cans past laser checkout scanner never could trust keypunch operators get right first time REAL PROGRAMMER'S NATURAL HABITAT sort environment Real Programmer function best important question managers Real Programmers Considering amount money costs keep one staff it's best put environment get work done typical Real Programmer lives front computer terminal Surrounding terminal Listings programs Real Programmer ever worked piled roughly chronological order every flat surface office half-dozen partly filled cups cold coffee Occasionally cigarette butts floating coffee cases cups contain Orange Crush Unless good copies OS JCL manual Principles Operation open particularly interesting pages Taped wall line-printer Snoopy calender year 1969 Strewn floor several wrappers peanut butter filled cheese bars type made stale bakery can't get worse waiting vending machine Hiding top left-hand drawer desk stash double stuff Oreos special occasions Underneath Oreos flow-charting template left previous occupant office Real Programmers write programs documentation Leave maintainence people Real Programmer capable working 30 40 even 50 hours stretch intense pressure fact prefers way Bad response time doesn't bother Real Programmer -- gives chance catch little sleep compiles enough schedule pressure Real Programmer tends make things challenging working small interesting part problem first nine weeks finishing rest last week two three 50-hour marathons inpresses manager despairing ever getting project done time creates convenient excuse documentation general Real Programmer works 9 5 Unless it's 9 evening 5 morning Real Programmers don't wear neckties Real Programmers don't wear high heeled shoes Real Programmers arrive work time lunch 9 Real Programmer might might know wife's name however know entire ASCII EBCDIC code table Real Programmers don't know cook Grocery stores aren't often open 3 m survive Twinkies coffee FUTURE future matter concern Real Programmers latest generation computer programmers brought outlook life elders Many never seen computer front panel Hardly anyone graduating school days hex arithmetic without calculator College graduates days soft -- protected realities programming source level debuggers text editors count parentheses user friendly operating systems Worst alleged computer scientists manage get degrees without ever learning FORTRAN destined become industry Unix hackers Pascal programmers contrary experience report future bright Real Programmers everywhere Neither OS 370 FORTRAN show signs dying despite efforts Pascal programmers world Even subtle tricks like adding structured coding constructs FORTRAN failed Oh sure computer vendors come FORTRAN 77 compilers every one way converting back FORTRAN 66 compiler drop option card -- compile loops like God meant Even Unix might bad Real Programmers latest release Unix potential operating system worthy Real Programmer two different subtly incompatible user interfaces arcane complicated terminal driver virtual memory ignore fact it's structured even C programming appreciated Real Programmer there's type checking variable names seven ten eight characters long added bonus Pointer data type thrown It's like best parts FORTRAN assembly language one place mention creative uses define future isn't bad past years popular press even commented bright new crop computer nerds hackers 7 8 leaving places like Stanford M Real World evidence spirit Real Programming lives young men women long ill-defined goals bizarre bugs unrealistic schedules Real Programmers willing jump Solve Problem saving documentation later Long live FORTRAN ACKNOWLEGEMENT would like thank Jan E Dave Rich G Rich E help characterizing Real Programmer Heather B illustration Kathy E putting atd avsdS mark initial inspriration REFERENCES 1 Feirstein B Real Men Don't Eat Quiche New York Pocket Books 1982 2 Wirth N Algorithms Datastructures Programs Prentice Hall 1976 3 Xerox PARC editors 4 Finseth C Theory Practice Text Editors - - Cookbook EMACS B Thesis MIT LCS TM-165 Massachusetts Institute Technology May 1980 5 Weinberg G Psychology Computer Programming New York Van Nostrabd Reinhold 1971 page 110 6 Dijkstra E GREEN Language Submitted DoD Sigplan notices Volume 3 Number 10 October 1978 7 Rose Frank Joy Hacking Science 82 Volume 3 Number 9 November 1982 pages 58 - 66 8 Hacker Papers Psychology Today August 1980 9 Datamation July 1983 pp 263-265 Hacker's Wisdom Real Programmers Don't Use PASCAL Last modified Tue Feb 23 17 12 40 EST 1999"),
('Watching (and re-watching) The Mother of All Demos by Douglas C. Engelbart', "ArsTechnica Ars Technica Ars Technica UK Register Log Home Main Menu Information Technology Technology Lab Product News Reviews Gear Gadgets Business Technology Ministry Innovation Security Hacktivism Risk Assessment Civilization Discontents Law Disorder Apple Ecosystem Infinite Loop Gaming Entertainment Opposable Thumbs Science Exploration Scientific Method Things Automotive Cars Technica Layout Grid View Article View Site Theme Dark light Light dark Explore Ars Reviews Video Staff Blogs Feature Archive Staff Directory Contact Us Featured Disciplines Photography Productivity Cloud Gadgets Tablets Stories 0 New Since Last Visit See news stories Recommend Discussions Log track discussions Forums Subscribe Jobs Ars Consortium Live Google O 2015 Keynote Liveblog Multiverse Explorations meditations sci-fi vault Watching re-watching Mother Demos Ars revisits computing history classic art YouTube William English Megan Geuss - Apr 12 2015 9 00 pm UTC Share Tweet Google Reddit 43 Douglas Engelbart 1968 demonstration SRI International December 1968 engineer inventor Douglas C Engelbart team dozen engineers staff Augmented Human Intellect Research Center AHIRC gave demonstration San Francisco Civic Center Auditorium show called oN-Line System NLS demo lasted hour half became known Mother Demos many 1 000 computer technology professionals audience first time saw personal computers used interactively rather crunching numbers via punch cards Engelbart began work two decades earlier stationed Philippines Navy radar technician WWII read essay Vannevar Bush called May Think proposed furthering human intellect memory use hypothetical machine called Memex war Engelbart joined Stanford Research Institute SRI published 1962 paper called Augmenting Human Intellect Conceptual Framework following year Engelbart research funded Department Defense Advanced Research Projects Agency ARPA known widely DARPA well NASA research first sponsored J C R Licklider Robert Taylor widely credited building early version networked system called ARPAnet helped researchers various labs share work Engelbart Augmentation Research Center SRI second host ARPAnet Mother Demos presented Douglas Engelbart 1968 give idea scope demo Engelbart demonstrated early look word processing windowing hypertext dynamic file linking well using graphics computer program also first time many attendees seen mouse although work mouse began 1963 Furthermore demo made use early form videoconferencing researchers projected video output computer Engelbart manipulated cut video output feed coming research center Menlo Park several members team based night showrunner William Bill English along Engelbart also widely credited developing modern mouse demo AHIRC team received standing ovation read Engelbart contributions modern GUI modern-day take Stanford University's campus last week Ars attended two-night-only showing Demo experimental opera meant pay homage Mother Demos Video Mother Demos shown large screen center stage co-creator composer actor vocalist Mikel Rouse played Engelbart sitting desk one side stage side stage co-creator composer Ben Neill played Bill English modern setting complete computer screen running timer Neill played instrument show program notes told us hybrid electroacoustical mutantrumpet Neill designed collaboration Robert Moog Behind video feed demo group dressed office workers dramatically-lit office provided back-up vocals result reenactment seminal piece computer history abstract sound-drenched 90-minute performance Excerpts Demo beginning original demo Engelbart demonstrates word processing copying word word became theme throughout modern-day Demo actors stage singing word composers wanted highlight humanity Engelbart work machines predictable parts original Demo 1968 Engelbart making shopping list accidentally comes words skinless banana he's manipulating words demonstration actors sang words flashed banana screen Engelbart tells 1968 audience AHIRC pursuing monstrous goal monstrously difficult opera gave words orchestral magnificence Enlarge Ben Neill left Mikel Rouse right Joel Simon video Mother Demos progressed mutantrumpet played larger part becoming increasingly frenetic continued favorite part performance though felt Rouse manic typing prop-version Engelbart five-key chording keyboard took literal reenactment little far trumpet performance conveyed wildness mirrored pace history Mother Demos crazy breakneck unpredictable discussion performance Neill Rouse said goal depict Engelbart dreaming forward backward well pay homage Engelbart died 2013 Retelling history people lived Surprisingly many attendees night people actually worked Engelbart either SRI subsequent projects '70s '80s surprise seemed many around felt Neill Rouse taken many liberties Mother Demos older man seated behind tapped shoulder intermission getting asked offered best guess time think supposed abstract meditation meaning Demo Well worked Doug understand laughed loud meditation Q session creators afterward one man said technologist disappointed artists hadn included technical details supposed non-traditional non-narrative structure Rouse offered adding lot young developers today look code elegant thing almost like poetry point Stanford students hold code poetry slams bring art work Another woman stood Q session told artists wish social vision computing worked long time Doug always thinking collectively collaborate like sort rock band Neill countered team wanted capture essence demo first improvised Engelbart original demo relaxed cool members audience actually Mother Demos left wanting performance might appealed younger audience group people d never heard Mother Demos performance never really expanded beyond confines single event re-creating piece performance art 1968 much abstract performance 2015 understandably felt redundant audience captured first show Inventing mouse performance artists mentioned Bill English wife Roberta English n e Carillon also worked AHIRC team audience Ars contacted Bill talk contributions Mother Demos 1968 Enlarge William English Engelbart's lead engineer testing first mouse SRI International first joined Engelbart small operation English said contract evaluate pointing devices mouse 1968 demonstration three buttons original prototype one button fact English told us SRI team started looking variety pointing devices including light pen joystick basic device informed English's early research planimeter said developed 1800s way determine area flat surface first matter simply putting planimeter box English said team combined potentiometer English recounted prototype built SRI machine shop distance mouse travelled became question big wheel wanted put mouse prototype would define far would move said asked far willing move hand became basis size tracking wheel mouse English also credited person charge logistics made 1968 demo impressive showing audience Engelbart actions computer manipulated also live feeds SRI Menlo Park team gave many audience first look video conferencing English told Ars part reason worked well due enthusiasm single PacBell employee problem getting video signal Menlo Park Civic Center San Francisco English said talked someone PacBell said get video signal SRI San Francisco's Civic Center wish knew guy's name cause deserves lot credit English continued saying employee immediately excited technical feat English proposing night demo PacBell employee went Skyline Drive windy road skirting bigger hills south San Francisco scoped good spot line sight locations Eventually employee sent two trucks one picking signal Menlo Park turn transmitting auditorium English said rest art history Expand full story Reader comments 43 must login create account comment Share - Tweet - Google - Reddit - Megan Geuss Megan staff editor Ars Technica writes breaking news background fact-checking research MeganGeuss Twitter Older Story Newer Story May Also Like Latest Feature Story Feature Story 1 page Witcher 3 Wild Hunt review hunting fiends fun forever absolutely massive open-world RPG rewards time investment Watch Ars Video Hands-on New LG G4 LG goes wild rear design Snapdragon 808 Stay know Latest News Weaving Internet everything Google announces cut-down Android-based Brillo Internet Things Social spinoff Google Photos leaves Google launches standalone service Android M Dev Preview delivers permission controls fingerprint API Developer's delight Play Store add Developer Pages B app listings Android M embraces USB Type-C MIDI devices Android Pay tokenization Google Wallet takes backseat Site Links Us Advertise us Contact Us Reprints Subscriptions Subscribe Ars Reading RSS Feeds Newsletters Conde Nast Sites Reddit Wired Vanity Fair Style Details Visit sister sites - - - - - - - - - - - - - - GQ Concierge Epicurious Men Style com Style com Wired com Lipstick com NutritionData Allure Architectural Digest Bon App tit Brides Cond Nast Portfolio Glamour Golf Digest Golf World Lucky Self Teen Vogue New Yorker Vanity Fair W Subscribe magazine View Titles - - - - - - - - - - - - - - Allure Architectural Digest Bon App tit Brides Cond Nast Portfolio Cond Nast Traveler Details Elegant Bride Glamour Golf Digest Golf World GQ Lucky Modern Bride Self Teen Vogue New Yorker Vanity Fair Vogue W Wired View Mobile Site 2015 Cond Nast rights reserved Use Site constitutes acceptance User Agreement effective 1 2 14 Privacy Policy effective 1 2 14 Ars Technica Addendum effective 5 17 2012 California Privacy Rights material site may reproduced distributed transmitted cached otherwise used except prior written permission Cond Nast Ad Choices"),
('Online Interactive interface for learning R and data science coding online, for free', "DataCamp Create free account BETA VERSION swirl DataCamp Learn R fun familiar environment free DataCamp created fun interactive web version build top open-source swirl project swirl DataCamp want make fun easy learn R programming data science Step-by-step discover power R working way fun interactive coding challenges Everything takes place comfort browser installation worries - Features LEARN-BY-DOING probably learn ride bike reading book watching movie true data science learn-by-doing course focuses solving data science problems via fun coding challenges REAL LIFE ENVIRONMENT Tomorrow need tackle real-life data science problems today need practice real-life environment Therefore lesson takes place online version RStudio IDE R's popular integrated development environment FLIP CARDS Learning shouldn't dull That's best make learning experience engaging interactive possible Get assignments bite-size chunks work way cards learning one fundamental job skills future"),
('Researchers send out an extensive look into email behavior', "Home Technology Computer Sciences April 13 2015 Researchers send extensive look email behavior Apr 13 2015 Nancy Owano weblog Correlation time reply length reply outgoing incoming emails dyadic conversations strong correlation till length 200 words 83 replies Credit arXiv 1504 00704 cs SI large-scale study email habits turned insights use email Researchers Yahoo Labs Sunnyvale California Barcelona well University Southern California SC Information Sciences Institute researchers revealed number mail strategy behaviors first research team examine users processing emails serially answering important messages first example Difficulties research purposes however studies relatively small sample sizes said authors present study studies limited methodology answering qualitative questions email behavior present study mail 2 million participants studied with16 billion messages months Researchers tracked details age identities senders recipients subject lines emails sent length number attachments devices emails checked sent posed numerous paths follow order find patterns behavior many email conversations people long conversations end people respond message conversation adapt replies behavior conversation partner chose random subsample Yahoo Mail users worldwide significant interactions sending least five replies direction privacy policy reasons dataset included messages belonging exclusively users voluntarily opted-in studies minimize effect spam analyses dyadic email exchanges two users exchanged least five emails Developers create better platforms understand email behaviors whether providing designs present user preferences potential functions well received study authors said Understanding patterns shape email use necessary designing next generation interaction tools improve efficiency communication coordination social groups Study findings Users replied faster emails received weekdays working hours replies tended shorter later day weekends Younger users generally sent faster shorter replies Older users generally replied smaller fraction incoming emails reply time length impacted overload much younger users Men sent slightly faster shorter replies women Replies sent mobile devices faster shorter desktops Emails without attachments typically got faster replies Turning synchronization replying behavior within thread found users tended become similar reply time length middle thread behavior became less similar preprint study titled Evolution Conversations Age Email Overload Farshad Kooti Luca Maria Aiello Mihajlo Grbovic Kristina Lerman Amin Mantrach arXiv Explore Google unveils unified email Android users information Evolution Conversations Age Email Overload arXiv 1504 00704 cs SI arxiv org abs 1504 00704 Abstract Email ubiquitous communications tool workplace plays important role social interactions Previous studies email largely based surveys limited relatively small populations email users within organizations paper report results large-scale study 2 million users exchanging 16 billion emails several months quantitatively characterize replying behavior conversations within pairs users particular study time takes user reply received message length reply sent consider variety factors affect reply time length stage conversation user demographics use portable devices addition study increasing load affects emailing behavior find users receive email messages day reply smaller fraction using shorter replies However responsiveness remains intact may even reply emails faster Finally predict time reply length reply whether reply ends conversation demonstrate considerable improvement baseline three prediction tasks showing significant role factors uncover play determining replying behavior rank factors based predictive power findings important implications understanding human behavior designing better email management applications tasks like ranking unread emails Journal reference arXiv 363 shares feedback editors 2015 Tech Xplore Tweet Favorites Email Print PDF Featured Popular shared Petrels tracked across Oceans May 26 2015 0 Cancer waiting time targets simply good enough May 25 2015 0 Engineer develops real-time listeria biosensor prototype May 25 2015 0 NASA image Hubble revisits tangled NGC 6240 May 25 2015 0 Graphene diamonds prove slippery combination May 25 2015 0 Phys org facebook Relevant PhysicsForums posts BIOS UEFI confusion 9 hours ago Best free anti virus 15 hours ago Talking Printers 20 hours ago Windows clock cannot sync May 26 2015 Fast cheap website hosts May 26 2015 slow computer startup May 26 2015 Computing Technology Related Stories Yahoo Mail trouble hits fourth day Dec 12 2013 outage Yahoo Mail hit fourth day Thursday prompting thousands furious users ratchet criticism social media Yahoo chief apologizes 'frustrating week' Dec 14 2013 Yahoo chief Marissa Mayer posted apology late Friday frustrating week experienced millions email service users Google unveils unified email Android users Mar 30 2015 Google said Monday updating mobile Gmail app Android device users allow manage multiple email accounts single program Jeb Bush another email account Florida governor Mar 24 2015 Florida governor Jeb Bush used another previously undisclosed email address records show newest wrinkle evolving debate public officials' use private email accounts AOL wants organize email clutter Alto Update Oct 18 2012 AP Internet icon bought email masses classic You've got mail slogan wants help people organize flood messages Gmail Yahoo mail accounts Yahoo Mail users furious disruptions Nov 14 2014 Yahoo Mail users vented anger Twitter Friday disruptions plaguing free messaging service Recommended Machine-learning breakthrough paves way medical screening prevention treatment 23 hours ago breakthrough machine learning also brought game changer science metabolomics - hasten development diagnostic predictive tests Alzheimer's cancer diabetes numerous Extracting useful scientific information social media May 27 2015 second takes 'like' article 6 000 tweets 5 000 profile updates 4 000 photos 500 blogs posted multiple social media platforms second extends minute Smartphones Twitter help gauge crowd size May 27 2015 Data smartphones Twitter accurately show size crowd helping first responders emergency study Wednesday said 'Deep web search' may help scientists May 25 2015 simple Web search topic results pop aren't whole story Internet contains vast trove information sometimes called Deep Web isn't indexed search computer algorithm mines rap lyrics create song May 22 2015 Phys org team researchers working Aalto University Finland devised algorithm mines database full rap songs picks lines based rhyming produces new song Crowdsourced computational expertise advance social good May 22 2015 William Buddy Christopher problem commissioner Boston's Inspectional Services Department responsible enforcing health regulations city's 3 043 restaurants regularly getting User comments 0 Please sign add comment Registration free takes less minute Read Click reset password Sign get notified via email new comments made phys org PhysicsAll PhysicsGeneral PhysicsCondensed MatterOptics PhotonicsSuperconductivityPlasma PhysicsSoft MatterQuantum PhysicsNanotechnologyAll NanotechnologyBio MedicineNanophysicsNanomaterialsEarthAll EarthEarth SciencesEnvironmentAstronomy SpaceAll Astronomy SpaceAstronomySpace ExplorationChemistryAll ChemistryBiochemistryPolymersAnalytical ChemistryMaterials ScienceOtherBiologyAll BiologyPlants AnimalsEvolutionEcologyCell MicrobiologyBiotechnologyOtherTechnologyAll TechnologyInternetSoftwareConsumer GadgetsHardwareBusinessRoboticsEngineeringSemiconductorsOtherTelecomEnergy Green TechComputer SciencesHi Tech InnovationSecurityOther SciencesAll SciencesMathematicsArchaeology FossilsOtherSocial SciencesEconomics Business Enter Science X account credentials Remember Forget password Sign Sign Facebook Google account member Register Profile Newsletter Favorites Activity PM news Sign Top Home Medical Xpress Search Help FAQ Contact Science X Account Sponsored Account Newsletter RSS feeds Feature Stories Weblog Reports Archive iPhone iPad Apps Blackberry App Android App Widget Amazon Kindle Mobile version Connect Privacy Policy Terms Use Phys org 2003 - 2015 Science X network"),
('Our Computers, Ourselves : Invisibilia : NPR', "Skip Main Content Search Toggle search Stations Donate Shop Sign Register Logout News Arts Life Music Topics News U World Politics Business Technology Science Health Race Culture Education Arts Life Books Movies Pop Culture Food Art Design Performing Arts Photography Music First Listen Songs Love Music Articles Tiny Desk Concerts Videos Programs News Conversations Morning Edition Things Considered Fresh Air Diane Rehm Show Latino USA Media Point Weekend Edition Saturday Weekend Edition Sunday Youth Radio Storytelling Humor Ask Another Best Car Talk Bullseye Invisibilia Radiolab Snap Judgment StoryCorps TED Radio Hour Wait Wait Don't Tell Music Songs Considered Alt Latino First Listen Top Jazz Night America Metropolis Microphone Check Mountain Stage Piano Jazz Song Travels Thistle Shamrock World Cafe Listen Invisibilia Latest Show Program Contact Program Twitter Facebook Older browse past shows Newer February 13 2015 Friday's Show Invisibilia Episode 6 Computers Daniel Horowitz NPR hide caption itoggle caption Daniel Horowitz NPR Computers computers changing human character closeness computers changing us species Alix Lulu look ways technology affects us Listen Full Show Loading 57 49 Playlist Share Share Facebook Twitter Google Email 1 Computer Human Thad Listen Loading 32 47 Playlist Embed Embed Close embed modal iframe src http www npr org player embed 385793862 385847246 width 100 height 290 frameborder 0 scrolling 2 Grow Bully Lullaby Listen Loading 24 01 Playlist Embed Embed Close embed modal iframe src http www npr org player embed 385794689 385847475 width 100 height 290 frameborder 0 scrolling Older browse past shows Newer Meet Hosts Host Lulu Miller lmillernpr Host Alix Spiegel aspiegelnpr Follow Show Twitter Facebook Podcast Subscribe Contact Show Send us comments questions suggestions Contact Us Invisibilia Friday February 6 2015 Invisibilia Episode 5 Power Categories Daniel Horowitz NPR hide caption itoggle caption Daniel Horowitz NPR Power Categories Alix Lulu examine categories define us given chance humans jump one category another People need want show looks categories provide us Listen Full Show Loading 57 52 Playlist Share Share Facebook Twitter Google Email Friday January 30 2015 Invisibilia Episode 4 Entanglement Daniel Horowitz NPR hide caption itoggle caption Daniel Horowitz NPR Entanglement week you'll meet woman physically feel sees others feeling We'll also explore ways us connected literally might realize Listen Full Show Loading 57 51 Playlist Share Share Facebook Twitter Google Email Friday January 23 2015 Invisibilia Episode 3 Become Batman Daniel Horowitz NPR hide caption itoggle caption Daniel Horowitz NPR Become Batman Alix Lulu examine surprising effect expectations people around us Plus story blind man says expectations helped see Yes see Listen Full Show Loading 59 45 Playlist Share Share Facebook Twitter Google Email News U World Politics Business Technology Science Health Race Culture Education Arts Life Books Movies Pop Culture Food Art Design Performing Arts Photography Music First Listen Songs Love Music Articles Tiny Desk Concerts Videos Programs Things Considered Ask Another Best Car Talk Bullseye Diane Rehm Show Fresh Air Invisibilia Latino USA Morning Edition Media Point Radiolab Snap Judgment StoryCorps TED Radio Hour Wait Wait Don't Tell Weekend Edition Saturday Weekend Edition Sunday Youth Radio Listen Hourly News NPR Program Stream Find Station Streams Podcasts Ways Listen NPR Overview NPR Finances People NPR Support NPR Visit NPR Press Room 'This NPR' Blog Careers NPR Corrections NPR Ombudsman Permissions NPR Help Contact Terms Use Privacy Sponsorship Choices Text-Only NPR NPR thanks sponsorsBecome NPR sponsor Viewed Music Kamasi Washington's 'The Epic' Concert Health Delayed Umbilical Cord Clamping May Benefit Children Years Later Search Home News Arts Life Music Topics Programs Donate Stations NPR Shop Sign Register Logout Back News U World Politics Business Technology Science Health Race Culture Education Arts Life Movies Pop Culture Food Art Design Performing Arts Photography Books Book Reviews Author Interviews Music First Listen Songs Love Music Articles Tiny Desk Concerts Videos Blogs Corrections NPR Back news conversations storytelling humor music also heard npr stations Back Morning Edition Things Considered Fresh Air Diane Rehm Show Latino USA Media Point Science Friday Weekend Edition Saturday Weekend Edition Sunday Youth Radio Back Ask Another Best Car Talk Bullseye Invisibilia Radiolab Snap Judgment StoryCorps TED Radio Hour Wait Wait Don't Tell Back Songs Considered Alt Latino First Listen Top Jazz Night America Metropolis Microphone Check Mountain Stage Piano Jazz Song Travels Thistle Shamrock World Cafe Back Prairie Home Companion APM Marketplace APM Science Friday American Life PRX Public Radio Programs Z"),
('MetaScience: An online service to analyze CS research conferences from DBLP', "Home Top Content UML UML tools Best UML cheatsheet reference guides Executable UML Books UML UML resources web MDE MDD MDA MDE book Useful MDE presentations MBE vs MDE vs MDD vs MDA Interviews MDE experts MDE Glossary Modeling Benefits modeling convince project manager list online modeling tools Modeling books Top 10 readings software modeling OCL need learn OCL OCL Tutorial OCL books OCL tools Browse Content meta modeling development methods architecture business processes rules cloud web engineering code generation databases DSLs mobile Model-driven Engineering programming quality requirements reverse engineering security software engineering transformations UML OCL Resource article book business empirical studies event groups humor news opinion project repository standard talk teaching tools website Let work together Write us Hire Advertising Contact Got something say Drop us line news email Long story short Full CV Publications DBLP Publications Google Scholar Free PDFs papers Research Rants team MetaScience tool analyze research conferences Valerio Cosentino 10 04 2015 10 22 0 Posted science tools Conferences key publication venues specially areas computer science Therefore targeting right conference important task difficult one one hand exist many conference Computer Science d say many hand conferences evolve quality change time quality indicators like acceptance rate easy find conference worth time others number new authors every year could give feeling conference endogamic level ususally available unless take time compute information manually browing conference webpage list accepted papers MetaScience new online service developed help critical matter current version relies database provided DBLP derive useful metrics conferences workshops metrics show Conference activity provides overall number authors papers conference edition Conference ratios presents number authors per paper papers per author edition Community turnover Following popular expression publish perish calculates percentage authors survived perished editions conference particular user select unit time spans two consecutive editions three Openness measures much community underlying conference open towards newcomers Thus edition presents ratio papers coming authors never published conference outsiders well papers authors published already community member service still development currently working many visualizations metrics e PC turnover variation conferences locations dates evolution conference topics However would like MetaScience show something mind hesitate comment post open issue GitHub repository Tags conference publishing science Related Posts Lightweight Metamodel Extension Mechanism Using virtual models transparently offer metamodel extensions better adapt always evolving needs pseudo random instance generator EMF models Create random models test modeling tools Make large need uses uniform probability distributions populate Author Valerio Cosentino I'm Valerio Cosentino Inria Postdoctoral Researcher AtlanMod Research Team Nantes France research interests mainly focused source code analysis data extraction Model-Driven Engineering Domain-Specific Languages Reply Cancel reply email address published Required fields marked Name Email Website Comment Notify followup comments via e-mail also subscribe without commenting modeling book GoJS could Find us Facebook could tools services Modeling Languages Copyright 2015 Theme MyThemeShop"),
('Optimise with gradient-based methods', 'Skip content Maker Maker Approach Artificial Intelligence Primary Menu Home GitHub RSS Contact Gradient-based methods April 12 2015 atrilla principles reign local search methods discrete spaces also apply continuous spaces e start random place take little steps toward maximum Taking account real-world problems continuous surprise literature topic vast conventional well-understood problems gradient-based technique may best approach take really worth look work Search objectives continuous spaces broadly described real-valued smooth functions e twice differentiable functions gradient derivative objective function vector gives magnitude direction steepest slope perform steepest-ascent hill climbing updating current state initially random according formula small constant often called step size determines amount contribution gradient update process Little little one step time algorithm get maximum However calculate gradient expression analytically hand pain arse Instead compute empirical gradient e numerically evaluating response small increments dimension variable order see gradient ascent algorithm action use parallel LC resonant band-pass filter see Figure 1 Figure 1 Parallel LC resonant band-pass filter Source Circuits Parallel LC resonant band-pass filter goal find band-pass frequency real number filter Recall done numerically resonance circuit well known 159 15Hz component values L 100mH C 10uF Thus magnitude transfer function filter given follows Note magnitude impedance parallel LC circuit landscape plot function frequency domain shown Figure 2 Note particular problem somewhat tricky gradient ascent derivative increases approaches maximum may easily diverge update process really small step size mandatory objective convex functions like exponential error expected suitable normally smoother around extrema Figure 2 Gradient ascent applied magnitude function parallel LC resonant band-pass filter Gradient ascent applied magnitude function parallel LC resonant band-pass filter Despite high peakedness objective function gradient ascent method able find maximum breeze complete code listing shown Figure 3 Regarding computational complexity space bounded size variables vector time depends specific shape landscape size step etc Figure 3 Gradient ascent algorithm -- Gradient ascent algorithm -- -- PRE -- objfun - objective funciton maximise funciton -- var - variables starting point vector table -- step - step size number -- -- POST -- Updates var max objfun -- -- Loop evaluation increases function gradient_ascent objfun var step local epsilon 1e-4 local feval objfun var local grad 1 var table insert grad 0 end local newvar 1 var table insert newvar 0 end true local preveval feval -- calc grad 1 var local value var var value epsilon local right objfun var var value - epsilon local left objfun var var value grad right - left 2 epsilon end -- new var 1 var newvar var step grad end -- eval feval objfun newvar feval preveval -- update var 1 var var newvar end else break end end end must note though simple optimisation technique works well one single global extremum present refined tweaks need applied objective function gets complex end gradient ascent complete non-optimal typical effective way add robustness speed process take time-dependent function measured number iterations loop settles learning capability pretty much like simulated annealing algorithm strategies take account momentum learning process order speed times addition avoiding local maxima also venerable Newton-Raphson algorithm makes use Hessian matrix involving second derivatives optimise learning path although somewhat tedious run involves matrix inversion rich endless source PhD topics basic knowledge gradient-based methods though opens full range possibilities use Artificial Neural Networks ANN ANN fashion nowadays disruption deep learning know m little ahead time technique appealing tackle many problems resist note ANN part Maker logo next post ll see ANN easily learnt deployed directly applying gradient-based methods complex functions Stay tuned Posted Electronics Optimisation Post navigation closer look problem state encoding genetic algorithms electronicsArtificial Neural Networks point 2 thoughts Gradient-based methods J rgen Tegn r says April 14 2015 15 15 NR preferably used inverting Hessian instead solving linear system Reply Pingback Artificial Neural Networks point Maker Leave Reply Cancel reply email address published Required fields marked Name Email Website Comment may use HTML tags attributes href title abbr title acronym title b blockquote cite cite code del datetime em q cite strike strong Search Recent Posts Artificial Neural Networks point Gradient-based methods closer look problem state encoding genetic algorithms electronics genetic algorithms simulated annealing algorithm Follow ai_maker Facebook AI-Maker LinkedIn SubscribeLeave Blank Change email Categories Electronics Optimisation Search Uncategorized Archives May 2015 April 2015 March 2015 February 2015 January 2015 December 2014 Proudly powered WordPress Theme Plainly Chris Rudzki'),
('PapersWeLove -- meetup about papers worth discussing', 'Skip navigation UploadSign inSearch PapersWeLove Videos Playlists Channels Discussion Watch Best YouTube Popular YouTube Music Sports Gaming Movies TV Shows News Live 360 Video Spotlight Browse channels Sign see channels recommendations Sign Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ SubscribeSubscribedUnsubscribe728 Subscription preferences Loading Loading Working PapersWeLove Home Videos Playlists Channels Discussion GridList Date added newest - oldest popularDate added oldest - newest UploadsAll videosEventsLiked videosPosted videos 49 41 Play nextPlay Ryan Nichols Axiomatic Basis Computer Programming - Duration 49 minutes 110 views2 weeks ago 47 13 Play nextPlay Neha Narula Scalable Commutativity Rule - Duration 47 minutes 601 views1 month ago 1 15 05 Play nextPlay PWLSF 13 - Armon Dadgar Bloom Filters HyperLogLog - Duration 1 hour 15 minutes 551 views1 month ago 1 16 39 Play nextPlay John Myles White Fundamental Concepts Programming Languages - Duration 1 hour 16 minutes 549 views2 months ago 1 33 01 Play nextPlay PWSF 12 - Caitie McCaffrey Orleans Framework Cloud Computing - Duration 1 hour 33 minutes 133 views2 months ago 1 22 30 Play nextPlay Andrew Turley Incremental Mature Garbage Collection Using Train Algorithm - Duration 1 hour 22 minutes 333 views2 months ago 56 20 Play nextPlay PWLTO 4 Chris Saunders Teaching Garbage Collection - Duration 56 minutes 72 views2 months ago 54 49 Play nextPlay Sam Tobin-Hochstadt Composable Compilable Macros - Duration 54 minutes 424 views3 months ago 1 30 42 Play nextPlay PWLSF 10 - Peter Bailis Managing Update Conflicts Bayou - Duration 1 hour 30 minutes 263 views4 months ago 1 37 45 Play nextPlay PWLTO 3 Dann Toliver Fast Functional Lists - Duration 1 hour 37 minutes 197 views4 months ago 45 19 Play nextPlay Camille Fournier Chubby lock service loosely-coupled distributed systems - Duration 45 minutes 393 views5 months ago 1 04 32 Play nextPlay Jean Yang Axiomatic Basis Computer Programming - Duration 1 hour 4 minutes 940 views5 months ago 53 42 Play nextPlay Jeff Larson - resemblance containment documents - Duration 53 minutes 341 views5 months ago 1 46 06 Play nextPlay PWLTO 2 James MacAulay Elm Concurrent FRP Functional GUIs - Duration 1 hour 46 minutes 719 views5 months ago 36 30 Play nextPlay PWLSF 9 - Leif Walsh Level Ancestor Simplified - Duration 36 minutes 54 views6 months ago 1 14 25 Play nextPlay PWLTO 1 John-Alan Simmons Chord Scalable P2P Lookup Service Internet Applications - Duration 1 hour 14 minutes 303 views6 months ago 54 28 Play nextPlay PWLSF 8 - Kyle Kingsbury attraction two perfectly conducting plates - Duration 54 minutes 153 views6 months ago 51 46 Play nextPlay Peter Burka Crossing Gap Imperative Functional Programming Refactoring - Duration 51 minutes 138 views6 months ago 1 10 49 Play nextPlay Leif Walsh LCA Problem Revisited - Duration 1 hour 10 minutes 106 views6 months ago 1 09 46 Play nextPlay PWLSF 7 - Armon Dadgar SWIM - Duration 1 hour 9 minutes 243 views7 months ago 1 24 44 Play nextPlay PWLSF 6 - Peter Alvaro Using Reasoning Knowledge Analyze Distrtibuted Systems - Duration 1 hour 24 minutes 156 views7 months ago 1 06 26 Play nextPlay Erik Hinton Derivative Regular Type Type One-Hole Contexts - Duration 1 hour 6 minutes 146 views8 months ago 1 15 01 Play nextPlay Aysylu Greenberg One VM Rule - Duration 1 hour 15 minutes 308 views8 months ago 1 26 06 Play nextPlay PWL SF 5 - Henry Robinson FLP Impossibility Distributed Consensus One Faulty Process - Duration 1 hour 26 minutes 295 views10 months ago 56 22 Play nextPlay David Greenberg Sparrow Distributed Low Latency Scheduling - Duration 56 minutes 149 views11 months ago 50 57 Play nextPlay PWLSF 4 - Joel VanderWerf Calvin - Duration 50 minutes 135 views11 months ago 49 36 Play nextPlay PWLSF 3 - Bruce Spang Bimodal Multicast - Duration 49 minutes 139 views1 year ago 41 03 Play nextPlay PWLSF 1 Ryan Kennedy Anjali Shenoy Dapper - Duration 41 minutes 304 views1 year ago 1 01 55 Play nextPlay PWLSF 2 Andy Gross Akamai Network - Duration 1 hour 192 views1 year ago 50 12 Play nextPlay Michael Bernstein Uni ed Theory Garbage Collection - Duration 50 minutes 2 042 views1 year ago Loading Load Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists'),
('Graph Theory for Third Graders', "Joel David Hamkins mathematics philosophy infinite Search Main menu Skip primary content Home Contact Comment Board Publications Publication list Recent publications Publications topic Automorphism towers Infinitary computability Infinitary utilitarianism Large cardinals set-theoretic multiverse research collaborators Talks Talks list Recent upcoming talks Academic Appointments Grants Awards Teaching courses Students graduate students List graduate students Math Kids Post navigation Previous Next Math eight-year-olds graph theory kids Posted April 6 2015 Joel David Hamkins morning pleasure mathematical guest daughter third-grade class full inquisitive eight- nine-year-old girls wonderful interaction Following visit last year math seven-year-olds wanted explore elementary ideas graph theory view mathematically rich yet accessible children specific aim discover delightful surprise Euler characteristic connected planar graphs began simple example counting together number vertices edges regions counting regions emphasized count outside region one regions injected little mystery mentioning Euler discovered something peculiar calculating V-E R Could find noticed student booklet calculated Euler characteristic various small graphs moved room helping Eventually girls noticed peculiar thing kept getting number two outcome heard exclaim keep getting two found Euler delightful surprise teachers also curious one said amazement really want know always get two students suggested try somewhat unusual cases see robust always-two situation really cases still got two result girls made graphs tested hypothesis Eventually course managed suggest examples fact test always-two phenomenon first looking disconnected graphs considering graphs drawn crossing edges way led refine V-E R 2 hypothesis case connected planar graphs time proof initially unsure whether actually give proof since third-graders thought might difficult students teachers expressed desire know specifically encouraged give argument saying even students didn follow still value merely seeing one mount argument like Excellent teachers idea proof V-E R 2 true start case graph consisting one vertex edges Furthermore remains true one adds one new vertex connected one new edge since new vertex new edge cancel Also remains true one carves new region part old region addition single new edge since case one new edge one new region also balance Since connected planar graph built way gradually adding new vertices edges argument shows V-E R 2 connected planar graph proof mathematical induction size graph Next moved consider three-dimensional solids surfaces various polyhedra girls able verify instances V-E R 2 girls drew solids calculated Euler characteristic taught draw cube several solids pictured shape simple cube challenge child children made lovely solids end child nice little booklet take home images taken one students class great day find kit booklet Math eight-year-olds graph theory kids See also account previous visit Math seven-year-olds graph coloring Eulerian paths new book Share Click share Google Opens new window Click share Twitter Opens new window Click share Reddit Opens new window Share Facebook Opens new window Click email friend Opens new window Click print Opens new window entry posted Math Kids tagged Euler characteristic graph theory kids Joel David Hamkins Bookmark permalink 35 thoughts Math eight-year-olds graph theory kids Asaf Karagila April 7 2015 5 15 said Maybe time collect Math children adults enjoy surely next year ll post math nine year olds topics could cover basic graph theory perhaps rudimentary explanation Hilbert grand hotel basic Ramsey theory combinatorics use font looks like crayons nice colors could really stick Reply Joel David Hamkins April 7 2015 7 15 said Thanks vote confidence fact ve plans let see whether complete kids teenagers Reply Allen Knutson April 8 2015 12 07 pm said fact already great kid book Hilbert grand hotel Cat Numberland Look Inside http www amazon com The-Cat-Numberland-Ivar-Ekeland dp 081262744X Reply Asaf Karagila April 8 2015 7 48 pm said pretty awesome drawings great Reply Jon Smith April 10 2015 9 24 said Brilliant Reply Joel David Hamkins April 11 2015 7 40 said Thanks much m glad enjoyed Reply dark dot April 10 2015 11 00 said Ok diff eq kids m adult really struggling graph theory even harder get brain around Reply Quazi Irfan April 10 2015 1 49 pm said wish every concept math available format easy grasp http math stackexchange com questions 733754 visually-stunning-math-concepts-which-are-easy-to-explain Reply Andrew April 10 2015 3 59 pm said Something might want keep around High School-Level Course Feedback Control Matlab-Based Introduction Requiring Algebra Trigonometry JORGE CORT WILLIAM B DUNBAR https classes soe ucsc edu cmpe008 Spring09 LectureNotes CSM_paper pdf Reply Pingback Bookmarks April 10th Chris's Digital Detritus Joel David Hamkins April 10 2015 9 20 pm said post made front Hacker News See discussion https news ycombinator com item id 9354597 also made front Reddit See several discussions http www reddit com search q url 3Ahamkins org 2Fmath-for-eight-year-olds Reply Arun Augustine April 10 2015 9 21 pm said question 2D case outside counted one regions 3D case wasn outside considered Reply Joel David Hamkins April 10 2015 9 35 pm said think case cube say imagine puncturing one faces stretching cube lays flat plane face punctured becomes outside region upon true polyhedra considered open one faces lay whole thing completely flat region opened becomes outside region plane One also imagine cube drawn surface sphere case one faces viewed outside region interesting consider Euler characteristic polyhedra form torus like donut complicated shapes longer always get 2 general cases Reply Duncan Lock April 10 2015 9 39 pm said Fantastic Reply Joel David Hamkins April 10 2015 9 54 pm said Thanks m glad liked Reply Lok April 11 2015 5 55 said 28 year old find equally interesting Reply Joel David Hamkins April 11 2015 7 39 said Yes think kind mathematics appealing age Reply Johannes April 11 2015 6 40 pm said make happy thanks Reply Thomas Baudel April 11 2015 8 01 pm said like much spent last 2 hours creating version booklet French use kids class ASAP http thomas baudel name Mathematiques graphes-planaires odt Reply Joel David Hamkins April 11 2015 8 16 pm said Great Bonne chance Reply Pingback Les liens de la semaine dition 127 French Coding maybevienna April 13 2015 12 52 pm said Thx print right two doughters Reply bediger4000 April 13 2015 1 52 pm said PDF available like chromatic numbers class Reply Joel David Hamkins April 13 2015 3 49 pm said Yes mention end post find https plus google com u 0 JoelDavidHamkins1 posts 46ZctASr5US Reply vijay April 14 2015 8 25 said 31 y o found absolutely fascinating Please time permits Reply Joel David Hamkins April 14 2015 8 50 said m glad hear enjoyed think good age called Math eight-year-olds heart eight-to-eighty-year-olds Reply vijay April 14 2015 9 25 said great title wouldn change one bit guess parent comment tangentially hinting deficient schooling much appreciate filling gaps Reply vijay April 14 2015 9 18 said Let link guys similarly awesome piece making Probability accessible everyone Raccoon Princess Fox Prince Bayesian Parable http cassandraxia com projs raccoon Reply Pingback Three Short Links April 15 2015 - Apprenda aofradkin April 20 2015 9 50 pm said absolutely wonderful convinced time graph theory accessible kids starting young age shame kids get encounter post introducing basic graph theory concept daughter 4 https aofradkin wordpress com 2013 08 07 graph-theory-with-dolls 6 haven done much follow-up graph theory post might inspired come back Reply Pingback Math Teachers Play 85 Let's Play Math Pingback Going Joel David Hamkins Graph Theory Kids mjlawler April 28 2015 8 41 pm said went activity kids tonight loved write time going https mikesmathpage wordpress com 2015 04 29 going-through-joel-david-hamkinss-graph-theory-for-kids Reply Joel David Hamkins April 28 2015 8 56 pm said Wow Reply Joel David Hamkins May 17 2015 1 11 pm said translation Italian see Annarita Ruberto blog http www lanostra-matematica org 2015 05 la-teoria-dei-grafi-per-i-piccolie-non html Reply Leave Reply Cancel reply Tagsabsoluteness approximation-and-cover Arthur Apter automorphism towers Barbara Gail Montero CH chess computability constructible universe countable models countable random digraph definability descriptive set theory diamond elementary embeddings equivalence relations forcing forcing axioms games geology ground axiom groups Gunter Fuchs HOD hypnagogic digraph indestructibility infinitary computability infinite chess infinite games ITTMs Jonas Reitz kids large cardinals mathoverflow modal logic multiverse NYC PSC-CUNY satisfaction supercompact Thomas Johnstone truth unfoldable cardinals Victoria Gitman weakly compact Proudly powered WordPress Send Email Address Name Email Address Cancel Post sent - check email addresses Email check failed please try Sorry blog cannot share posts email"),
('Description Logic Man', "CTP200 Comic Transfer Protocol - 200 OK - Wow shrunk list suspects help pf ontologies came using description logic find save kidnappers think I'm love DL Man heart belongs - belongsto properties maps includes things belongsto properties mapping heart - Oh thats great DL Man Listen gotta go home mom must worried sick let go RANDOM Share Share Share Share Description Logic Man Upload 10th April 2015 1 months ago Permalink http ctp200 com comic 17 Image URL http ctp200 com comics comic_55287cca6b32c png Share Share Share Share Follow CTP200 Subscribe CTP200 Newsletter Follow ctp200_comic RSS Atom Comments Please enable JavaScript view comments powered Disqus RSS Atom CTP200 http ctp200 com licensed Creative Commons Attribution-NonCommercial 4 0 International License"),
('The Tangled History of Soviet Computer Science', "Nautilus Issues Blog Store Thanks Joining Newsletter Prime SELECT NEWSLETTERS SUBMIT CONTACT DETAILS New chapters Thursdays Nautilus publishes new chapter feature stories monthly theme every Thursday Sign list stay date latest greatest Editor's picks SundaysRead Nautilus stories blogs we've thinking past week Issue 024 Error Issue 023 Dominoes Issue 022 Slow Issue 021 Information Issue 020 Creativity Special Issue Nature Issue 019 Illusions Issue 018 Genius Issue 017 Big Bangs Issue 016 Nothingness Issue 015 Turbulence Issue 014 Mutation Issue 013 Symmetry Issue 012 Feedback Issue 011 Light Issue 010 Mergers Acquisitions Issue 009 Time Issue 008 Home Issue 007 Waste Issue 006 Secret Codes Issue 005 Fame Issue 004 Unlikely Issue 003 Transit Issue 002 Uncertainty Issue 001 Makes Special PREVIEW ISSUE Story Nautilus See Issue Library Enter Search Search Resume Reading Computer Got Revenge Soviet Union Close Purchase Artwork Numbers Computer Science Computer Got Revenge Soviet Union Condemned capitalist tool computer would help expose USSR weakness Slava Gerovitch Illustration Roman Muradov April 9 2015 Add comment Facebook Twitter Email Sharing Reddit Stumbleupon Tumblr Linkedin 1950 Cold War full swing Soviet journalists looking desperately something help fill anti-American propaganda quota January year Time Magazine cover appeared seemed provide thing showed early electromechanical computer called Harvard Mark III boasted cover line Man Build Superman target checked ideological boxes May 1950 Boris Agapov science editor Soviet Literary Gazette penned scornful critique American public fascination thinking machines scoffed capitalist sweet dream replacing class-conscious workers human soldiers could choose fight bourgeoisie obedient robots mocked idea using computers processing economic information lampooned American businessmen love information like American patients love patented pills poured contempt Western prophets information age especially prominent cybernetics creator Norbert Wiener mathematics professor Massachusetts Institute Technology Cybernetics couple years old declared control communication mechanisms biology technology society fundamentally course Agapov actually read Wiener famous book topic called Cybernetics content article makes clear knew cybernetics borrowed January 23 issue Time possibly largely cover image paranoia-filled environment Soviet media Agapov article perceived signal psychologist Mikhail Iaroshevskii took hint published two scathing attacks cybernetics one Literary Gazette another 1951 collection papers titled Philosophizing Henchmen American English Imperialism accused Wiener reducing human thought formal operations signs labeled cybernetics modish pseudo-theory fabricated philosophizing ignoramuses utterly hostile people science went cite Wiener well-known remark computer revolution bound devalue human brain way industrial revolution devalued human arm Wiener meant comment liberal critique capitalism called society based human values buying selling Iaroshevskii apparently interpreted misanthropic escapade fantastic idea wrote semanticists-cannibals derive conclusion larger part humanity must exterminated Like Agapov Iaroshevskii hadn bothered read Wiener writing Actually wouldn easy Wiener Cybernetics withdrawn Soviet libraries Agapov attack Instead Iaroshevskii drew arguments critique largely Agapov earlier article Soviet Union began secretly pursue military computing condemning West one critic echoed another repeating older accusations making new ones anti-cybernetics campaign coalesced Critics didn let ignorance actual content cybernetics stop fact helped unleash imagination Skillfully manipulating handful quotations Wiener taken context stretched clothing cybernetics ideological straw man Wiener passing remark information information matter energy exaggerated become claim information nothing matter consciousness critics concluded cybernetics marching along straight road toward open idealism religion course pejorative terms Soviet Union Philosophers chimed bashing cybernetics clinging decrepit remnants idealistic philosophy well mechanistic reducing activity human brain mechanical connection signaling Cybernetics claimed doubly guilty deviated dialectical materialism official Soviet philosophy science two opposite directions toward idealism toward mechanicism time media portrayed idealistic mechanistic utopian dystopian technocratic pessimistic pseudo-science dangerous weapon Western military aggression Soviet critics ignored possibly unaware Wiener openly pacifist stand taken Hiroshima refusal participate military research evil robots capitalism 1952 cartoon published popular technology magazine Tekhnika Molodezhi mocks American cybernetic dystopia Iulii Ganf N Smolianinov trouble public attacks use computers course country desperately needed computers military particular recognized value nascent technology risks left behind classic example doublespeak Soviet Union began secretly pursue military computing condemning West press ridiculed American fantasies robots giving military orders Sergei Sobolev chief mathematician Soviet nuclear weapons program tirelessly promoted development new computers included Soviet Union first computer MESM first small computer M-1 Soviets even launched capitalist-style competition two competing programs January 1950 month Time Magazine ran famous cover top-secret program tasked building large high-speed electronic computers military calculations One called BESM developed Soviet Academy Sciences Strela Ministry Machine-Building Instrument Construction agencies poured enormous resources flagship projects 1954 Strela declared winner Seven copies gigantic room-sized machine produced put military service helping design hydrogen bomb nuclear strike efficiency simulations missile defense system design various navy air force projects improved version BESM became fastest computer Europe soon went production well Computer specialists paid lip service anti-cybernetics campaign political education sessions went work developing new military control communication systems based cybernetic principles Working computers required special care One avoid using suspicious cybernetic terms Even phrase logical operations risky might interpreted implying machines could think Instead computer memory researchers used neutral technical term storage Information replaced data information theory convoluted expression statistical theory electrical signal transmission noise joke Stalin henchman Beria responsible nuclear weapons program became popular Beria comes boss asks permission use notorious field cybernetics military purposes Stalin puffs pipe says Okay please make sure Politburo members find Larger life BESM computer developed Soviets 1950s could easily fill room even auditorium Courtesy Boris Malinovsky 1953 Soviet cybernetics spent three years doghouse fortunes finally began turn March year Stalin died Soviet Union tested first thermonuclear device five months later United States tested two years Scientists engineers emboldened reputation earned military work began push back ideologues Party hacks supported Stalin Disciplines suppressed Stalin genetics mathematical economics began come back universities research labs Scientists computer specialists began arguing similar rehabilitation cybernetics August 1955 journal Problems Philosophy published scathing critiques cybernetics suddenly reversed position like weathervane sensing winds change published landmark article support discipline called Main Features Cybernetics article signed three heavyweights world military computing dismissed ideological accusations cybernetics Instead trying reconcile dialectical materialism authors simply stated works therefore must ideologically correct read Wiener work classified sections military research libraries synthesized Soviet version cybernetics drew legitimacy practical value computer technology article spurred cybernetics enthusiasts promote introduction computers various sectors civilian economy transportation industrial automation weather forecasting economic planning ideological clich regime brought bear time support burgeoning field Researchers began publishing annual series called Cybernetics Service Communism stressing bright prospect computers helping build new society Big Brother wanted see everything know everything became overwhelmed information Party leaders soon convinced 1961 Communist Party Program singled cybernetics crucial construction communism government issued string resolutions authorizing construction new computer factories popular press began touting computers machines communism word cybernetics abandoned spot blacklist became trendy moniker Genetics biological cybernetics non-Pavlovian physiology physiological cybernetics mathematical economics economic cybernetics Cybernetics adopted new language organization biological systems physiology helped replace simplistic Pavlovian scheme conditional reflexes based telephone switchboard metaphor sophisticated models compared brain information processor Even law turned attention judicial cybernetics legal scholars dreamt making concepts exact mathematics physics chemistry Soviet computer rebooted cybernetics agenda economics management especially daring remarkable pre-Internet vision researchers proposed link together Soviet enterprises unified national computer network would process economic information real time optimize entire economy proposal caused serious alarm among CIA analysts began suspect cybernetics becoming powerful tool hands Soviet government raised concern Kennedy administration October 1962 Arthur Schlesinger Jr President Kennedy special assistant wrote memo gloomily predicted all-out Soviet commitment cybernetics would give Soviets tremendous advantage Schlesinger warned 1970 USSR may radically new production technology involving total enterprises complexes industries managed closed-loop feedback control employing self-teaching computers special expert panel set investigate Soviet cybernetic threat Schlesinger may appreciated degree Soviet establishment appropriating cybernetics purpose maintaining administrative hierarchies resisting reform Soviet government launched mammoth effort introduce computerized management systems economy production control planning 1970s without fundamentally changing management structures balance power Machines communism serve people Leonid Brezhnev General Secretary Communist Party watches demo specialized Soviet computer engineering applications exhibit Moscow Courtesy Boris Malinovsky proved grave mistake centrally planned Soviet economy poorly prepared computerization cumbersome bureaucracy slow implement rapid changes production distribution ruled industrial ministries like separate fiefdoms want share information decision-making power ministry therefore created information management system disconnected incompatible others Instead transforming top-down economy self-regulating system bureaucrats used new cybernetic models computers protect power Expensive largely useless information management systems strewn across country results top-down computerization devastating New computer systems accumulated ever-increasing amounts raw data generated terrifying heaps paperwork early 1970s roughly 4 billion documents per year circulated Soviet economy mid-1980s Herculean efforts computerize bureaucratic apparatus figure rose factor 200 800 billion documents 3 000 documents every Soviet citizen information still pass narrow channels centralized hierarchical distribution squeezed institutional barriers secrecy restrictions Management became totally unwieldy get approval production ordinary flat iron example factory manager collect 60 signatures Technological innovation became bureaucratic nightmare Big Brother wanted see everything know everything became overwhelmed information often distorted lower-level officials trying present rosy picture Vast clogs inaccurate information paralyzed decision-making mechanism accurate information exchanged locally like black-market goods forbidden books samizdat Computers vilified championed constant one thing amplified virtues deficits system implemented key idea behind cybernetics control via feedback hands self-motivated free agents powerful economic engine hands single controlling agency brought stagnation computer scientists like say garbage garbage Called prove superiority socialism information technology eventually proved ineffectiveness Soviet regime irony situation lost Soviet humor one joke tells Brezhnev gifted latest artificial intelligence asks built communism computer responds 17 miles Brezhnev thinks must something wrong repeats question computer replies 17 miles Angered incomprehensible reply Brezhnev orders technician investigate machine Everything correct replies technician time said Every five-year plan one step toward communism Slava Gerovitch lecturer history mathematics director research programs Mathematics Department MIT expert history Russian science technology author Newspeak Cyberspeak History Soviet Cybernetics two books Soviet space exploration Issue 023 Dominoes Explore Issue Chapter one Falling Criticality Amazing Autotuning Sandpile Chemistry Executioner Live Without Internet Culture Meme Meme Engineering Snowflake Turns Avalanche Chapter two Crashing Computer Science Computer Got Revenge Soviet Union Psychology Fear Cockpit Fiction Best Little Bar Manhattan Wildlife Deer Telling Us Chapter three Breaking Health Yes Catch Insanity Climatology Hidden Ocean Patch Broke Climate Records Mortality Die Broken Heart Psychology PTSD Wound Never Heals Chapter four Modeling Economics Flash Crash Really Matters Health Man Drank Cholera Launched Yogurt Craze Neurology Entomology Ants Swarm Like Brains Think Systems Theory Ingenious David Krakauer Chapter five Fixing Health Man Beat HIV Game 30 Years Engineering Meet 17-Year-Old Award-Winning Rube Goldberg Parts Manufacturer Psychology Want Get Alive Follow Ants Systems Theory Five Short Stories Life Times Ideas Join Discussion Next Article Biology Fear Cockpit Jeff Wise Related Articles Numbers Man Invented Modern Probability Slava Gerovitch Numbers Meet Father Digital Life Robert Hackett Numbers Taught Computer Write Music John Supko Nautilus Privacy Policy Prime Subscribe Terms Service Contact Work Us Awards Press RSS Media Kit NAUTILUS SCIENCE CONNECTED Nautilus different kind science magazine deliver big-picture science reporting single monthly topic multiple perspectives Read new chapter story every Thursday 2015 Nautilus rights reserved Matter Biology Numbers Ideas Culture Connected Site Code Theory"),
('The Stellar Consensus Protocol: A Federated Model for Internet-level Consensus', "Account name Password OpenID Forgot Remember MeYou're viewing graydon2's journalCreate Dreamwidth Account Learn Interest Region Site Account FAQ Email IM Info Reload page style site light Recent Entries Archive Reading Network Tags Memories Profile frog hopstellar consensus recent programming stellar consensus recent programmingApr 8th 2015 09 25 graydon2 edit post recent work stellar cold light next-day's caught-up sleep didn't like tone -- unstructured rambly little critical people's work -- even personal blog I've removed Sorry Current Mood tired Crossposts http graydon livejournal com 204390 html Previous Memory Share Next Profile graydon2 Website May 2015 M W F 12 3456789 101112 13141516 17181920212223 242526 27282930 31 Popular Tags acceptance - 1 use book - 1 use death - 2 uses film - 2 uses health - 1 use history - 1 use liberalism - 1 use life - 2 uses meta - 1 use net - 1 use politics - 2 uses quote - 1 use religion - 1 use sadness - 1 use tech - 5 uses vices - 1 use violence - 1 use writing - 1 use Style Credit Base style Crossroads branchandroot Theme Green Light rising Expand Cut Tags cut tags Page generated May 28th 2015 05 58 pm Powered Dreamwidth Studios Top page"),
('Kenneth E. Iverson: Notation as a Tool of Thought', ''),
('cppOpt - a C++ library for n-parametric numerical optimisation which I wrote. Hope you guys like it', "Skip content Sign Sign repository Explore Features Enterprise Blog Watch 2 Star 25 Fork 1 I3ck cppOpt Code Issues Pull requests Pulse Graphs HTTPS clone URL Subversion checkout URL clone HTTPS Subversion Download ZIP C library allows numerical optimisation given problem function program you-name-it 214 commits 1 branch 0 releases Fetching contributors C 97 4 C 1 3 CMake 1 3 C C CMake branch master Switch branches tags Branches Tags master Nothing show Nothing show cppOpt fixed bug resulted logfiles wrong header names comp ared value columns since one ordered alphabetically whilst sorted way values added Fixed solely using maps boundaries calculations instead mixture vector map latest commit bad9dfea6d I3ck authored May 7 2015 Permalink Failed load latest commit information dependencies initial commit Mar 23 2015 examples added boundary split example incremented version Apr 28 2015 inc fixed bug resulted logfiles wrong header names comp May 7 2015 tests fixed bug resulted logfiles wrong header names comp May 7 2015 gitignore got rid cmakelist backup file Apr 1 2015 CMakeLists txt added boundary split example incremented version Apr 28 2015 LICENSE added MIT license Apr 1 2015 README md fixed bug resulted logfiles wrong header names comp May 7 2015 TODO md added boundary split example incremented version Apr 28 2015 README md cppOpt header-only C library allows numerical optimisation given problem function program you-name-it without knowing function problem simply smartly testing certain values include single header file cppOpt h using heuristic algorithms http en wikipedia org wiki Heuristic using Catch testing framework https github com philsquared Catch version 0 2 10 optimise anything optimise given problem defining Solver class template typename class MySolver public OptSolverBase public void calculate OptCalculation optCalculation const optCalculation result YOUR_CODE_COMES_HERE optimising x 2 could write void calculate OptCalculation optCalculation const defined x 2 function optimised optCalculation result pow optCalculation get_parameter X 2 even run programs void calculate OptCalculation optCalculation const std string parameter1 optCalculation get_parameter X to_string std string parameter2 optCalculation get_parameter Y to_string system someExecuteable -p1 parameter1 -p2 parameter2 c_str optCalculation result parse_generated_output_file define parameters boundaries OptBoundaries optBoundaries optBoundaries add_boundary -5 0 5 0 X optBoundaries add_boundary -50 0 55 0 Y optBoundaries add_boundary 33 0 3 0 potatoe minimize maximize approach diverge OptTarget optTarget MINIMIZE OptTarget optTarget MAXIMIZE OptTarget optTarget APPROACH OptTarget optTarget DIVERGE templated use float double long double choose algorithm OptSimulatedAnnealing double opt1 optBoundaries maxCalculations mySolver optTarget targetValue coolingFactor startChance OptThresholdAccepting double opt2 optBoundaries maxCalculations mySolver optTarget targetValue coolingFactor threshold thresholdFactor OptGreatDeluge double opt3 optBoundaries maxCalculations mySolver optTarget targetValue coolingFactor waterLevel rain OptEvolutionary double opt4 optBoundaries maxCalculations mySolver optTarget targetValue coolingFactor nIndividualsStart nIndividualsSelection nIndividualsOffspring mutation multithreading spawn number objects different algorithms boundaries configurations goals go OptBase double run_optimisations NUMBER_OF_WORKER_THREADS logging outputting results enable thread-safe logging simple OptBase double enable_logging logfile log optBoundaries X RESULT 1 083865 1 174763 3 901791 15 223976 3 862659 14 920135 also define custom delimiters line endings e g csv OptBase enable_logging logfile log optBoundaries n retrieve best values optimisers specific ones OptCalculation double best1 opt1 get_best_calculation OptCalculation double best2 opt2 get_best_calculation OptCalculation double bestAll OptBase double get_best_calculation optTarget targetValue examples optimising x x -5 0 5 0 simulated annealing note optimiser doesn't know function actually x x minimizing maximizing approaching 3 0 diverging 3 0 check https github com I3ck cppOptImages images examples code examples optimising rastrigrin function simulated annealing http en wikipedia org wiki Rastrigin_function one-dimensional two-dimensional usage configuration open inc config h enable disable DEBUG output define DEBUG building examples tests cmake make including directly include cppOpt h includes required headers choose header files want use testing using cmake make check bin test_xyz executeables since tests check whether algorithms reach wanted values it's possible tests might fail cases due random nature algorithms restart test case test fails often there's actual bug algorithms explained referenced simulated annealing http en wikipedia org wiki Simulated_annealing threshold accepting http comisef wikidot com concept thresholdaccepting great deluge http en wikipedia org wiki Great_Deluge_algorithm evolutionary https en wikipedia org wiki Evolutionary_algorithm contribute feel free open issues you'd like new algorithms added would like new feature found bug Status API Training Shop Blog 2015 GitHub Inc Terms Privacy Security Contact Something went wrong request Please try"),
('How to build a parser with Ruby', "Black Bytes Menu Skip content HomeAbout build parser Ruby admin April 7 2015 Programming 1 Comment Parsing art making sense bunch strings converting something understand could use regular expressions always suitable job example common knowledge parsing HTML regular expressions probably good idea Ruby nokogiri work us learn lot building parser Let get started Parsing ruby core parser StringScanner class class holds copy string position pointer pointer allow us traverse string search certain tokens methods using peek scan_until getch Another useful method scan without wrote two test documentation understand class supposed work 123456789101112 describe StringScanner let buff StringScanner new testing peek one step ahead expect buff peek 1 eq end read one char return expect buff getch eq expect buff getch eq e endend One important thing notice class methods advance position pointer getch scan others peek point inspect scanner using inspect p see parser class parser class work happens initialize snippet text want parse create StringScanner call parse method 12345 def initialize str buffer StringScanner new str tags parseend test define like 1 let parser Parser new body testing body title parsing ruby title dive class job bit first let take look last piece program Tag class class simple mainly servers container data class parsing results 12345678 class Tag attr_reader name attr_accessor content def initialize name name name endend Let parse parse something need look input text find patterns example know HTML code following form 1 tag contents tag clearly two different components identify tag names text inside tags define formal grammar using BNF notation would look something like 123 tag opening_tag contents closing_tag opening_tag tag_name closing_tag tag_name going use StringScanners peek see next symbol input buffer opening tag case call find_tag find_content methods Parser class 123456 def parse_element buffer peek 1 ' ' tags find_tag last_tag content find_content endend find_tag method Consume opening tag character Scan closing symbol found Create return new Tag object tag name code notice chop last character scan_until includes results want 12345 def find_tag buffer getch tag buffer scan_until Tag new tag chop end next step finding content inside tag shouldn hard since scan_until method advances position pointer right spot going use scan_until find closing tag return tag contents 12345 def find_content tag last_tag name content buffer scan_until tag content sub tag end need call parse_element loop find tags input buffer 123456 def parse buffer eos skip_spaces parse_element endend find complete code https github com matugm simple-parser also look nested_tags branch extended version deal tags inside another tag might also like Rubocop personal code reviewer Subscribe receive free content become smarter Email Share TwitterFacebookGoogleMoreRedditTumblrLinkedInPinterestStumbleUponEmail parsingruby write Caesar cipher encoder Jquery tips tricks One Response build parser Ruby Patrick Mulder mulpat says April 12 2015 10 42 nice overview Reply Leave Reply Cancel reply Hello Thanks visiting name Jesus Castello I'm Ruby developer find contact info page Subscribe updates Email Categories Linux 18 Networking 12 Programming 23 Security 11 Uncategorized 2 2015 Black Bytes Theme Elmax Free Themes Send Email Address Name Email Address Cancel Post sent - check email addresses Email check failed please try Sorry blog cannot share posts email"),
('Web Based Finite State Machine Designer', "Finite State Machine Designer browser supportthe HTML5 canvas element Export PNG SVG LaTeX big white box FSM designer Here's use Add state double-click canvas Add arrow shift-drag canvas Move something drag around Delete something click press delete key backspace key Make accept state double-click existing state Type numeric subscript put underscore number like S_0 Type greek letter put backslash like beta made HTML5 JavaScript using canvas element Created Evan Wallace 2010"),
('As Sherlock moves, the building behind him moves with him. Interesting video compression artifact.', 'GIF89a w 2ALBQ RY fcj'),
('Certified Programming with Dependent Types -- 2014 Draft', "Certified Programming Dependent Types Adam Chlipala web site textbook practical engineering Coq proof assistant focus building programs proofs correctness using dependent types scripted proof automation I'm following unusual philosophy book may interest even long-time Coq users time hope provides easier introduction newcomers since short automated proofs starting point rather advanced topic Interested using book course you're teaching Please drop line traditional hardcopy version available MIT Press graciously agreed allow distribution free versions online indefinitely minus benefits Press' copy editing Buy Copy Print Amazon com MIT Press page book ISBN 9780262026659 Distribution Formats free version Latest draft PDF Online version latest draft hyperlinked HTML note author focuses PDF version doesn't make effort keep HTML version particularly pleasant use Tarball Coq source latest draft Tarball generally useful library modules book released open-source license book generally isn't Public read-only Mercurial repository RSS feed updates Online Collection Exercises Book Use classes Classes CPDT primary text CS691PL U Mass Amherst Spring 2014 CSE 506 U Washington Winter 2014 EECS 395 Northwestern Fall 2013 CIS 670 Penn Fall 2012 6 892 MIT Fall 2011 CS252 Harvard Fall 2008 Classes CPDT supplementary text CS250 Harvard Fall 2014 CS 565 Purdue Spring 2014 Formal Methods UST China Spring 2014 185 A60 TU Vienna Spring 2014 CMPS203 UC Santa Cruz Winter 2014 CS 430 Yale Fall 2013 CS410 Portland State Spring 2013 IFT 6172 U Montreal Spring 2013 TIES341 U Jyv skyl Spring 2013 CMPT 340 U Saskatchewan Spring 2012 CS252r Harvard Fall 2011 G54DTP Nottingham Spring 2011 Formal Methods U Zagreb Spring 2011 CMPT 863 U Saskatchewan Spring 2010 Reading groups CS 7190 Cornell Summer 2013 Radboud University Nijmegen 2010 U Wisconsin 2008-2009 Old versions Previous versions included final Part programming language semantics particular decided separate part plan put supplementary resource eventually simply removed remains present Mercurial history"),
('So in this Stackoverflow question the OP got downvoted and told it is impossible to do what he asked for by everyone, and not one person mentioned intreval trees', "current community chat blog Stack Overflow Meta Stack Overflow Stack Overflow Careers communities Sign log customize list stack exchange communities Stack Exchange sign log tour help Tour Start quick overview site Help Center Detailed answers questions might Meta Discuss workings policies site stack overflow careers Stack Overflow Questions Tags Users Badges Unanswered Ask Question Take 2-minute tour Stack Overflow question answer site professional enthusiast programmers It's 100 free registration required find maximum value range array log n time closed vote 0 vote favorite E g Array 1 5 2 3 2 10 Range 0-1 Answer 5 Range 2-4 Answer 3 Range 0-5 Answer 10 etc c algorithm binary-search-tree indexed share improve question edited Dec 10 '13 6 01 thesquaregroot 637619 asked Feb 27 '12 15 05 Daniel Talamas 3815 closed constructive casperOne Feb 27 '12 16 23 currently stands question good fit Q format expect answers supported facts references expertise question likely solicit debate arguments polling extended discussion feel question improved possibly reopened visit help center guidance question reworded fit rules help center please edit question 4 can't order find maximum unsorted sequence look value least makes algorithm O n sbi Feb 27 '12 15 08 sbi Unless preprocess array build search tree table whatever give maximum subrange quickly searching subrange Presumably that's question asking although it's bit terse Mike Seymour Feb 27 '12 15 11 1 Mike true wouldn't call beast unsorted sequence leave loophole intentionally know sbi Feb 27 '12 15 14 1 considered building quantum computer PlasmaHH Feb 27 '12 15 23 take look comment ddacot Feb 27 '12 15 34 show 1 comment 4 Answers 4 active oldest votes vote 10 vote array sorted way you're asking find maximum least need inspect elements range takes O n allow form preprocessing data it's easy could build n2 lookup table answers could find maximum range constant time share improve answer answered Feb 27 '12 15 07 aioobe 195k32424543 add comment vote 4 vote impossible You'd visit every element array sorted a-priori it's O 1 operation share improve answer answered Feb 27 '12 15 07 GregC 5 08912847 add comment vote 1 vote See also best way get minimum maximum value Array numbers others pointed it's impossible share improve answer answered Feb 27 '12 15 12 Azrael3000 1 145414 add comment vote 0 vote Daniel Talamas understood correctly wanted include iostream include algorithm include vector using namespace std int maxlement int range1 int range2 std vector int v 1 5 2 3 2 10 std vector int iterator result result std max_element v begin range1 v begin range2 1 int dist std distance v begin result return v dist int main int range1 range2 cout cin range1 cout cin range2 cout Max Element maxlement range1 range2 return 0 share improve answer edited Feb 27 '12 15 30 answered Feb 27 '12 15 23 ddacot 497623 1 logarithmic linear time Mike Seymour Feb 27 '12 15 36 add comment answer you're looking Browse questions tagged c algorithm binary-search-tree indexed ask question asked 3 years ago viewed 3264 times active 1 year ago Blog Stack Overflow Andela partner provide education beyond borders Visit Chat Linked 16 best way get minimum maximum value Array numbers 2 O log n algorithm finding max array Related 30 Given array find O n longest range whose endpoints greatest values range 90 Finding duplicates O n time O 1 space 0 Finding whether 2 BST represented arrays isomorphic 0 Update O log n time -1 Find maximum element per level BST 2391 Pair socks pile efficiently 1 find sum values stored binary tree integers weighted depth value 7 efficiently find contiguous range used free slots Fenwick tree 2 What's time complexity algorithm finding Unique Binary Search Trees 0 Find maximum element range update Hot Network Questions common practice reviewers recommend papers review worth - chest nickels half chest dimes Generate list symbols planets use use Tetris puzzle solvable researcher share scientific ideas temporary position entitled recognition roll Insight person telling truth Alynn Scientific Mage Career Choice source multiple files output one file Help determining whether transformation linear quickly sum numbers file handle undeservedly positive feedback Rock Paper Scissors - Alter Egos What's point conferences CV Single word describes boat stop drop point photon energies conserved general relativity evaluate normative requirements new device design 13-year-old son made foolish wasteful donation teach wrong Decomposition partial fractions compute integral Creating complex diagrams broken window electric sparks appear blue purple get Lead ID already converted variability faculty salaries STEM fields high hot questions lang-cpp tour help blog chat data legal privacy policy work advertising info mobile contact us feedback Technology Life Arts Culture Recreation Science Stack Overflow Server Fault Super User Web Applications Ask Ubuntu Webmasters Game Development TeX - LaTeX Programmers Unix Linux Ask Different Apple WordPress Development Geographic Information Systems Electrical Engineering Android Enthusiasts Information Security Database Administrators Drupal Answers SharePoint User Experience Mathematica Salesforce 14 Photography Science Fiction Fantasy Graphic Design Seasoned Advice cooking Home Improvement Personal Finance Money Academia 10 English Language Usage Skeptics Mi Yodeya Judaism Travel Christianity Arqade gaming Bicycles Role-playing Games 21 Mathematics Cross Validated stats Theoretical Computer Science Physics MathOverflow 7 Stack Apps Meta Stack Exchange Area 51 Stack Overflow Careers site design logo 2015 stack exchange inc user contributions licensed cc by-sa 3 0 attribution required rev 2015 5 28 2614 Stack Overflow works best JavaScript enabled"),
('The view from the left - Conor McBride, James McKinna -- 2004', "PDF-1 2 6 0 obj stream x X X EH X h -0 su n Z R GYW Z tS n un W g r - Ww j l ' KWdf Z Y 2 7k 3 XUx y dY J Ks W ' Z W 5C L f _d 9Pa p J rZ U U Q q U AZv m u5 KK R O X nj O mG V y_ cN k U uE 5e Z F V F y _S Ur z ICwn C P q pb M 5 l r m H 5 U 9w Ly uQ uW - y9 y L lt nW rW p m 7n j m v xl lY QA r3 _ u N V G q U 7O YA 3 8 6 Z L g p W o Bd p Er- Md XG aV9 L M _ lB PxHT 1MtL C pd DV SF J 73 L ' e 9 f G P8qh 0 E u e _ID b GX C X e9T G gx yO b p J D y g q PBI j iP LA 7 D af 5 J D o eK Zj FM 8 w H 9 P Q L - lG Dd D J Gr nK J 3 O m 2 Bp5 R 9 gEm Q 5E qfw l 9 6u 5I 8v M x ee 0kf 9 P zUiB t- g GS H md c G SE q dj qt 9 D LV 2a 8 lG 7j yA 8 5S e ' K 0p O RuFi q H mFHb 9 P 3bB 3 D5 W TT h Ev U pX 5DMC U D xG NM 9 0 3 ' y C RF1o d w j7W 1n Q lr H H o rO N 3J J Az q 0C v MH Q y q p E G Q K1 Y -eV p m 6 h 4 '9 k X k 2c F P EV h e hn U z 2 FH0 w l L pz J DM 66 0 j 6 B 3 D v8 qR aa' f C ' P TM5 PaL 1BTVUWZ Fk1 l L j Q q Jl g XQ k Os hj O 6 f O TQV n h m R J h x u ' w exT u ED2 k 8 Aia rbC Q 1 h NDA Tw l-K 8 xC zD m 6 f b g f H n M W nj j U J 7 O J 7 F w Qp HK c c 4 J Q 7 7 oS c 3 2 Q c p b4gBd x P H h7 Nbz Q Mv w q lZG f 7 H G 0 Je3w 93 H j Bv D Qjp Sf H L 2 H aYB rZ JE v xCQ fK vEF 9VZ R3ut Q 2 3 F hF Dy owM X W m b LXS wg X f u Riw 5 Pm h C - w - _ Jow z m Z Z m 7 o m g y o - V Vs 7 - Ij0 E 7 w V L jX _ U u- 1 4 Wy E o In8 n o ' 4c 9 V K-3 k 2 k m sS z Y 5n nj n pr M k - fxI o0 T9 2 - 7D endstream endobj 7 0 obj 3451 endobj 277 0 obj stream x Z w d 5 2F6 4n XA 3q K BNKoi 4mZ d9 Z b 33 k ku bKs H X O k H v Q e 1 F 5 g G vv IX u Zc7I P7g9 6 y 3q Gi QIU X 1 eMbC CHl v y e h s7 w c j W6V E YUek _ Bu5 3 y m B sf r U D5 5N v 3 O 2v F w w j H p r3 6Q 8 D j Q V r 5 D 5 n h Z h M g 5 L H 3 dN Kh G F C 8 4 - wg C 2 db ha KLe A9 57 OMcf 1 C c r N O M p n Y rSh aUm Fz lB l 6 9 e 5 U 9 W V y3 g DE V k J 9 U U o G' z nF3 R 0 lu F YDj M _ 3QL l 8 4T P F u Y o_ q F J zrG fPT r E g K KM K bQQK XCMbZ Yn xaU0 j6 y q 0 b 4 j 0b Z J P d C B j A1 J O n v Kn Fm k n F Dl- ' B zL- w d 5 k f K m v' z GKJsSZ bd u x 8 Q R- 40 6 R y x V' fa f V h r_ KT A4 P c H H g F q m L J 7 y d m 0 L Hr K K R 7w 8 nq X cT o 8 3M J q9 Dn4 GAw D q BURC v fM m V C l iC r Ss r 4 jl pry l Y 0 8 _ Aw X 9 y 8 b4o 9u 5o h tw S4 b1 1 M O r -Y mqD C 0 KsG z e w Vrl Ms nL r x Y 3 W e vX MP 5 C f MX 1A N F c 5S 4 x 0 hY v g 3 x ' z o j 8Qk r c z cj B YKr 1W y H - R4 8 r 2 0 F -X W oT C p - H IR g RUgGl f c C r 7 U J TQ U 8 Y RA 2 G gF Kh d9H K h h hN5 pr e W K e h j c OK9 D - Nt Qj r1 p W5 j G Z M UN O MA OW - z '4'5 r L u M r o 4u Y Rn l 0 m L 9B k v dx 9 7 Ry 9 US oZy Hd K K wk H x yx p U w Yh 3 R j Z N U 5T- cX c Z j V J 9 E H 7 w 4 p H T6OsEP Np h d 2dh x - Y 9 EY 0 p -W n qN V F y D Rq h K N e n c GQ 8 J E V N L 6 p_aK q q EH l - R r M x 4 fz ck b9Q G 5w Gy Y r Y 3 I4 D S7rY c E C _ K Y 9y' z - q j Y r O k1 Rs z df ZL 'qBQ D 4' L YKN W F 7 Z F L -o h Cy P PArH u e Y vJ 3 j 0 _ u F U Xw p 5 kA J P Fk eg w m 5k Wb g E R m eKN PO e 0 q G x G3 o M _E cP g J8 h V2 _ d ifY 7 p 6 - f F U o 1 n f x O- z c r jyO l X _ d endstream endobj 278 0 obj 3907 endobj 382 0 obj stream x oWvw 6 V ey Sd GI 3iP Q ' aW X oM V d 5sF3 Hlr Gyc wu zw5 W 5t L'_ z 3 8' O W o - gs M E Rx _ v C y L u v B gd K 03 2 e p Nt f C Q-s Ys c 2 3 K 9 5 RZ9' 2 j K Nf7 DGO v 7 5 12 LKO 1 J M ' 0 E X r J 7Q X xrQE leS5 5 c D O l W W E p z R Z bl h 7 U k vKLtwk 4 l 8 G qyd p c u N W N c v3 65 1 _m6K J 6 R G8 kJ 7l 5a Y H Jpwd Z z d O N X Z r l 7 fA u wpcI M uD R R jZ C 2 u 7 G V X QpleY l 2 K F dZM p Y qO X ws J Kh U q 9 RsM D _l wG _ 6 ev o 6 R p c4 w 3 If8szz F C EX qV P Jh i' VxJ J d7 vz M ' o3 Y H D 2 dm p IP s2D ped ' P z H' P hh 4 DWp oB x 4Z pa d f wa B k J E 7Efd 4 p 1 Z 8 9Fn 9 K ipv r0 J Y z 1 1e 9 l 0 R x z c mM va j e r q f Jn E G G Hv 8 7 u 0_J hp h 7 _ K C M 5 _ Kd L r R y Itn e m e n nK 7 9 Fh C ' TH u SE0 q 7 h z 0 f E Z 7 _ o 4m PLS _ G N C z pK 4K E ZI 6 y c SM 0 j y H 7 M h Zd L y W K R Pm G Z- 6T h o y Y v O 1 8SfN 80s z C rK o Z wf 6 6- e n GJ Kw J r g '5g j c d V u v b 6 v kJ7i j M d wmBX o XGN u 1L j u 5 UJdv 2 8Q 1 9u5G Q4 hf E k 7 5 U Ob QK M e Qt X E TV sz x y x 9 C OK R6 j e 7 ncz 8 V D C o F 32 0 dn5 4 -t 2 nt r Y0 IZb 2 1 z W3 - K HT E _ EE Dgu p 8 7czV _ H E Z y Vj6wN QC0 D Nl O j Mj DM 1 XX t8M D 2 z RKx E 4 b c N kU F J u Gx1 z_ 4 e X K Q 0I M- O f 2 F Bo P yTA e r dL q qe R m 4 k nr r Xr-iU g bP ' c e bVs 0 fG P m_ _e aY gTin u4 ct 7P' H U8 ' di h p Ma H p OJ9 0 1 K j M r n q 1 i1MH m Q b e ' rfe c Ma E M Z El e L 8 e X- pWy Y I5 R d 8 6 1 CU h qi1 B X R Df8 e W g A3 SW 2 c 5 xt Gx7t5 f0 L g b 1b b 6 h2 7 b 7 k p V M gy1 Z M nJ Xt UU E3Kje x Ub4 B X o - 2 8 bi w ' 7 J8 4V PBx 5 8 X 9 O S0c 1jg v K E G 3W - O lq O j 5bH J 7Z m 4 M 4 Y G u Md ci 3 i-Yw U V MK oRa W J Z r F 0 O R 4V O B' D kil N Up-tD R YS w 8 L5 U Nr ' m 2x A0 K ELK m M -P p z t8 N A6 4 y o 7w C X zm aY7 'G cBR D 2 _K M 'A H Y 3 ' R Ta 6E o H P Z D Y qD '9l FrS X L R8 4E q u k 1 n 2 w B J TKw IC cR g A' w X l mcu RZY6 68J5 ' l X GJ K KA z x ' q 0h m 49 2 wd -e x 7 c B V SV Z X j6 JJ W X ey8dV q V W h 5 K lYaS 9 o d 2B W - O Ih QP M YP U 5 n k nA 8J k j - E 1 e h4 tn u X pG V w8 n 1 zsc rB _ G MS 3 uwq V h G N h X F 7 pJ q C _a 0 z r d SV X K B Ps F w 2 'H fUy' _ b endstream endobj 383 0 obj 5136 endobj 430 0 obj stream x o uo 5 bYk J V NL9Xz U _w 8n y z _ m J w 9 0 ig Y 6N l ' g ol y ' m'_4 K dN u E tqD M z pCf Tx yMM g - q z OQ l- _ 2 f 5 1 _ f j w v AZ NW H F j u O W f b 4 b 3 L 7 Y X 3 L f R k 70xcu C0 z Zkh v u v Zg c f L j C Ji n N Cc d 3 -e V l 3 Mi g v 4 Q Y n V 2m v Z F k - y z l 5 Cw Q4L V N f mH v w j ut 6p n - v 0 WK 7 P -N O ln 6 o Oe J z x3 n Uo jeS p q vu ROa Zlo 0 Q 7Z 8 w j 3 7 Y W p 45 e Z - J 9 L g F ' 0 _ zs e 0 Y9 F B b 9 4 G ZO z C 3 xt r zo N L ie 6 m Z qI B Ai O L K y q lO 1 4 GC N n 9 d kt k e k o H 3F 3 3 yS _4Z J y 'cb y IB L D H3 z J E h l R q D W W 4E Ek j n P X Y- 5 QK z u Ro - lI FmY jM 1t 1 V V q 'PD2 q yy q O OO v 6l f pZ 19 L X dYI y vr4 O Mb 3C L O _x9 o Z 2 m - x c d Eo u x sBe fN wJ tP vH yy 'u1f nl j w Y x P d v j6t jt Ry Hw xC xKR 9 p sS 4 v FSx j B Qc j R 6 - wt L 9 ED 4s F 9 u v 6 hvl9 B 8Y H 2 e 0B gP7 MK _x epq M Ny D K 8 pzN oIr 0 H 6 z rt R daob NUc K 1M K S5 q7 u SY W- 6 D c1 3XTn v -E ' j 9 r Lt p 4r Vt b4 5 yZA XR 3 ' - zB 9 Yv Wa ts u H Qh 1 phk eZ g X J N B 'F u wv 7 g R W H Q W n N E 2 R U l2'N xo M J g D 9 D 9 3 y P6kR8J6 9 ' Yk b o F l9 y- xK m vt ub cWO CF XT Z W 9 fx1 5 xZ mL 0 7' 2x rL h - 9 q z sTMN P z fpZ d g u Lmz0 q j1 P pw 6 y 3 Xh q2Rf n HT o U du JZ r C56f 9 d h f k Z D d 8 8XJ GB UM Un 3 X v S3 UT SLS _ R -n sR5 -K q Y rt6A D x f' R _ k y m g y q g E bu z sy ' 2Q R c gj dc9 9 p WS 5 ww Ij z C892 sx Qg 5 y HZ 3 M K l C vh U f n y6r Z d Xy 4 B O o p WD v X K B H 0 p xEC P 5_P O R b B y X p lW - K L Y O 3 3dZ CV U u K O DWZO UW 7A x 5 94I ' d J 0 k p ' _W -t Q Pf q J fJt Fx c W E x 4 0 h h gX y x q NG-S n BGpn 1 r UyB u83 W r rno 6' Gx xiU 5 2 D7V Fu 'A 1x F E r qI - W UbX u Z f 3 6 XoQ K o e fK u Y C oq 1 m K P 3 y 5 5 V E3 Gx O _ _ c9 V O e f Z L D y 8 Gn pE xuO Z o KE v 9 l _q id S6X ' c6_D Z b 5K 2 wxoo 'n aFN gZK8 1 y 3 F endstream endobj 431 0 obj 4825 endobj 466 0 obj stream x o o UbOB Q l V P 8- C v v 1 C P - k Y O d ' 2 L d j dY y Z 1 -v q r Q m F Vc w h n d K 'r 6 fX cV N M YV b 0 e3 0 j 3Bn c K n L n j F H P 3 z od R -Ln Y O Ykmw K OYt w_M WX P U R v 8 7L 7 vs - h e 5 g f j O7 eo l M K mm 83 j n N j zI f JX l E2 n L i2 p Ds FkY x - kejG05 D g W u tE 5 Ff St 9 V 8 D g h1 h q_ C p V2 l D Vb 7N GO r b Otf 8K Yr 3 wE5 nN hV z J 47 y - O4 f Nx b r QF0 8 q W j N ZOC8 6 OtD dM OU LN8 3F O O h OQ SI l O wl l h U D_J 1l y P C X'5 6F 2 F e r 2 v e Q H m o 4 m h E F _ P h ZX B 4 sb 4 3 N vu ' W V V 'Cj tB 3 L 9 mnE Y R 2 H b E k4 z o 1 VechL u L 0Te C m U QA 5 z2 g 7 D o_ p P Bn f O N Y o fqqh Cx l k Aw B C o u f f z P cE 5 b z V7 Y Z 9 Y r J 1A Wg 2 4 r 5e 1 v B g N 1 6 f bU J C 9 SHf Ry e PH e K E Iy b gR y Q 1r z M e n R P w W G Jr9 9 U Q ' v 2 o 3 6l' FHde 'O NR LL l F q Cw Wt' 2 xL ' e nx 8 J UOO B Q 4 9 BR f O 7u' TaK Gu K F1 ' K 4b 9 O m 3 Z l U 4 sm l7 YT o q D2h r z w 0 h F e d k HaG C v' 8 4 2c 2z6 6Mu R m1ejH Lta V m A1 r2 - P cV 6 YJ Fh C q gE J m 3 V yg c Yn fff 0 f 2 mm 3 rl F l 4 L z kW U r Bs 7Hg Cd e _S o - L P y l kR'a E 7 ' HQdT CMc 6 EO P o Pm K 1S J o O72 F - gn F wyui m L pL 6da xe Oo CxS z Bk bh 9 Rg L q jT 6 p 8 z F ZO6 Z Z Z o r _ e b 'A E ubf z 2p d D n K M4 x L R0h 4 0TD 6 k C Yg 4 mO p C E XL 5 ax k Y Ye B 3o k hp w 27 W9Aj Y 7w 3 I2 Ji IH 2 q o tU b lb p IcX g 3 m rR zi h 3 6 h _d jd x TF 4 pe m h Y l h P V XA b 4 sm u Q o D r 4X n H x Z 1 Tc V D F p M vLa Q ' 5B i7 6 m R NL Z r E3K tD z l zzOD 8T N vb ' d 5 C UE Z c O l K1 J g 59 m d e 4N 9 1 o K J R 9 3 o _ -i - 7 sA dr f J yD 1u 1r B m ds q7 v J 05 g F8 H q R N 6 Qs f v d 3 q Z L q5 zM x N q 6m H8 U se 8 1 uYz g 8 F c p 9 8 Z L 8 H f8 3 Y4 lb M R aW Q c qH 9 t3H JG h 'T e O BEN c D - sf OA 3 1r 2 Z 5 Uu U 0 X G f 2oF endstream endobj 467 0 obj 4564 endobj 488 0 obj stream x o Y Pj1 e E r f k y _u G ViIM f 4 aK u O _ 2 g r u _ 9 7 r w f Zvn v U0k G N I2 K f o M - i9 XOw r P g BnA V1X E 4 ' 19Q YYn v q X K v Q v L F6 NmWu N nek zf- 3 dmt n M X2U V Z9f H 5 k G y ' j AL cFfk V YOW G 'u8 u J n F k U WW k O3 K o q q X l d x -8 p vk G C r lx n r Z1f Z ' n b K n z n n 3 E n 6 - e Q tYeh P r tvQ- r H _ X r Y Y D6 L 9 X 7 8 k 4 NyI g h C biD L e P k L W 1 V V ' m u _BJ 7 q g te 1 u Q2hkxB Mm 4 p kUa rf yC Jy hk WAK _s Ds7O Y y0 f yZ 4 kJn X zNe W pm Kr m f 4 Gk N 3 G 0 X 8 3 R Zm f g C o H f6 K 8E h L zNS 0 Qa Dq A0 Fy O h BI P n y md uB f Ls D ADb_iTbp aZG 8t C b' ZsM k v Q 9A x 9 g 1 X XD 2W Z 2 um C H keEK RT 3 4 K EV 4Z uslP 2Y Q O3 6 1 h6 q q J Ff N r D m 2B 3 8 ZDAr N c -lM i9 f U r X 7 q E x d Y w mq mpnSW 3 -lb K 1 c B N 9 zk D7eN GtmHk 1 v W 2 9 A8 z0 Pq nh MN 9 N VC -Z _x M g z GS VrH 4 c uC EE B p V 7K d v 2EVI iI j C7X F 6aQA d 3mq B L K2I R Kd s2 Es d eU K p m mp b Qu ' L 4 B 3O m U UW 6 q u Q uU 5 ANxb Z K- P 4 b '_ r W V6 2S c B B j 0 O 6Hju F GU z lYT SdL tI 1l r j M d d - SH X9t Xm8 Eg 1 yH MR 5 V ' 2 q IH 3 m e L y vt v dQ 3t v aZ0 P 2J z 0u cA p aPxQ 4 y Iv M cX p7h V 8 9 oa c bp P L Z 3 Cj Cv D q E 1 x o 1 h pC m 2my z q N K l G7d Ha 2g e B khpa ta5 tF J m f v f x N f F1l 7 rS 6 UR 'D F U k R p e 7 y Q 6 9 3t F7 j F Y _ h X p Xu o B G Q Ag F K kS _ y' m 'z v- 1 2 O g ii hF3O C NZB 6y J u d 1 5 W R q IA 8 4 j vb KG 9 D 3 p N u Pq O l jl i4o P K k R _ T4 u uQ Ab Ca 2g QG F g K z8 E B 9 6 V Q g 4 6U O wc c z M P VX mWH F E qpRn EJ 6 C ' w J0 9 SD3 1bq j m Y b F 'A9 Lm gb 6_ mHtv 5B qa P H P o G 2U r rjU J8 3 7 5e t1 b E H yi9pqs B b U5 _ Rw FQF Pe 8 R B m N y9r btTW 7 nC r 2 M c x ' nA c eZ - Cg u 'B W -V V j c 7 M l wa L-U z RLI co 6 o M o- 6 J c djK 6 Gd5 k b 1 g 8 k C 6 y H Y dla9 q E f uN - R f1- W j G Q x JhB37 m YH Y 5 dg y C 5F GVM n wS Y kG Z zw n l YY Ul nH Af d w 6 V1ix 'QQQ F U wy 8 u e X 9K stream x oWvO D 62Z YIs 3 w 0 u l a' P y1 lwWi 8 q h - q E 6 g O f 7 mM '2 b K x f gc W2 7 R x - u L vV F X 4 c x ot h g c B 5S v 3 J 9 _ 7 b 2 W PJ 5 m _6 'k y z 5- rp6 W R Y l B O ai d 9C _ 1 ggX Vq o J j x G W F L v 43 u O c _ Zi m f 9 F l 9 U d m 19G dhl wq 8 m f 2G7 C Z 54 j 5 X ki Z lhO xw G k 3 R y f 8 D5 k q v Y F sZ m _ B Dg U gmqQ 5S n e _ Q 5 -k 3 Qz yp h k o y O C C5 C'D S3cd t1 d b b1l ' Y q ' Z7vy c BP Ab E b z 0 X C B g 5 Q N 2kkC u f3 F r g K h z E4 l 4 r L m g B FK _ - 7u Gk vz U - W u p J X j TYj -3e 9 hr N 2 Yab D d unQ 1F Y Z fv j j b u6 xc r H1LW D 1C u d X h _v O u B jB 0 Hs q R o Y Jk Y 9Q 7 DZ 4 H ui w N7 5 fxv - F ppj V 0 h z z sx R L v4 1'7 VM 9 f h 2L9q K 9 O hX o L R c R G 5 M B d Z VG l e JE g B 7 4 J NT - w Jt o yy 2U AZ D r B 2U X aQ p gh x 1y e zk 03 G IPW 9 9 v 0q gw 9 kG _ B M X - 0 wL k Y 4 Y z N l 0z 5 G N 0 e Ad6t L Ai v0b ' h L L L h00 xy fy lyV h tL q P nDb Ex P Z y F 7 R _ CF y h b V t428i 8a Q d 7' W X 0cZ _ ' d- W 1 _ C ua F J v N gd3 O 9 P J f 9d 81 j K_ U W n G Z _ e8C3 l H V 6 Yu5' u P7 n E P uO E B L0 ij 9 9o r92 P xaL k 0 B66 B X N SP k - M 0iDxK u g c Q U l E Y u2p X bl B E 7t6 k d l L pj 0 Q J C La- OT ArA4 Y n iWX e h L q Y8UHe ' z Sy m -X hx 6 '4rn e n 5 x D 8uO F eaa 0 J y3T b 96z5 Ag R F G ai x5 f W Ah e 9v XN z C _- c 8f th j m 2 u U b 3 o V g 0 y c h B X _9 o n fJ lN U 8 D Hj e h v 5 O B B X f Z P Y K y hO 4 _ -8H oAC6x 2e u 7- W v y a9 B KSoH - h f 0 9Y PS D fX Cb e d0d '8 S0 V p 6 aL Q 7l zT M3 u -8 d Bv- 2 _ D 2 J9d 6 p qXxX eX v _ h2 X0SA hLB N 0 c' u h u xW q 9W 2U3RL ds v fw _ r M p K5 w N qm o - 6 e d g R X 7f B q O j w r2 d m R g U 21C eS wyv m ur Id k J - e p 2 32 uf 0 3Rg ' X 5 _c o fGc H e v K 3 b x g GZ 7 N m_ C B Q gFWV Mr h r W5 rm Xkp s2 FQ H R W GO RB 2 X Q - 7 cH vN 72 u r g g o K' 5a II h 38 D F_ E d qyY B n U q C B 5 N c G 5 3 x k 4_ 1qM d n M j iM8I IY YK LEi u 1 r hxxks r n ' J 5 _L 3q j D j eY 6 y CF iXi SN GN H 7 -8 z e o m d 1yb k hG n f u N g X 6 G W VP W 6 K ee5 25 k W J J e R 9s c h 5 l Mx lg 9 W p E Bsu 1N H w 2 m JQ L' 2 J - v C 3 U U 0 9 d 05 8G 'nD xFRL E 2 Q v SE l6 _ M H 1 _' ' 9 c W o p N v _ Ui h 6z D b X J x K ' U 9 xH - k 3 Xk f W Z ' 5 q 3 q 1 4 x n PI K D R n N o Riendstream endobj 503 0 obj 5581 endobj 522 0 obj stream x Z oT c 6 Ij RP VM HM 7 w W 0 9s d D OFU_J DG 2 R8 R g SL oC M v Siv3K xb_v b y e oY o C g _ C M YZ TT 9 K v 67l l V3 ZH _ n ' C j N 6N C F tJ z K N vq g V xZ Z x Uq V l g 3o L 6 XA hk j eame N si x h 4 D - 74Q0 Z _ q_ 65 V 5 V x W V zbmoY f hHle h nfC 2G t5 RM KGF7 j z U e D zB SB Te1 z 5 J 4s 8 B 5 4 Oz8 qE M e 0 9 g o D 26 fk _ 8 R F b 6 d d R c 5_ c U Nc j u5xFI w ' wOd j r C W P'9 h K JD G 2 sl w 4C r O 8 8I O Pu 7 b 4ln X w 7 C 8Z8 7JX n Z gJ sJ6 N 6 8e Q x k 5 ob 2 j zqf o R 9 J Co IW L k0 0 K Z kFR x Q hPn Jh pD 8 XhQ bWty j r 6 mD 7 G 0 X P m V z- R lbj g Y 5 5 g 2 0 sZE Y 9 JJW M 1 6A 6 3 b H k Mt z M ' V g hP 3 X 1 w g 1 0x 0M f x J ui aR P VIW bf O rj j H v Od L HU Zu MbW u Q 8 8s V ' G h v d zt h o Aup m g- K _ 3 4 26 8 du Y 5 8 m ENdhm q b u F 'gN 3 de o XJ l PYsj G e Q W J E U 9 9 wW o' H 8 7o 9 2 M h f 5K d 0 v C u V U w pg 9 F _ 8 i_ p G g n G CI 5 l Xl n g - 0 1 5 L Lgb y Q o C 5 l v 16qe P n Pbm V MK o E 5C 0 H 3 b R u - z NS5 70T nN 82 m3 Q z 4c g u p g 3f O l x r FO m C mb 4t-k k Q O v V b _ zm w D n z W oyk f k 2y 8 o o n jt w _ XX co C tJ d Z W5nendstream endobj 523 0 obj 2800 endobj 586 0 obj stream x oWvwh e HqV C h fR Vvc v q 5 K 8g4C 0 Gc e 2 13 8 u n 3 Lu o f y r _ X Z2 H P _ M y_ Od G 3mW F 33 2 1 E6O g bz n 8J4 3 W 6 8aK f Vf j' gD c Vn Z j J CN c u g d PO 66 j v1 2 z 1f n5o Np X 5 ifW Z g5 3 W d MOp Hk izqj2 b 2 0m x K O J Ow f 0 O Z VP V m Lr KT VFj N u b3 -w W g5 KB Z Tr kd p j Uhl M gS0 f h6 y7 5 l ' pPj 6 g Yf N Z g V kW V 4 X e 1 D l y E4 f N j G 2y E w r 6 v 2 'a hK O O 4 O h 2 PYT je X- VC q y hO QeK G g r 3 w g w Gb 7 K Z z u F c X Zm AfN ' Y h k Apf L MAO l j K3 3 - Gbk 8T k 4 E6 Vj X 7P h 6 r B JB E 5OP l K p z g Y 44HsoO cM ' G l j ' b l Z 5 OE Q 9 ZQ c AEp H r DG9 1r1nYB nR _ R jw g v R 4 kl 5m d YL dH 3 0 9 p R m6 sA f n J - V C zT G 3 9x y 6C cT iL _ b hv 3mP Z 4_ GI wT d S_ k SJ fvk oYi G E Af q c 0 F ' 8N 2v d TN U 1 5 O N' 2 E' X Fu E W H R r8 2 0 Q f LHv8f h G B h0 2 C r o 4 h Wd x St B F 5 W u3 K za M C 5vxe HEjJ 3 g Zz H Z8 bH tx z Z fh7L 4 b fSNYD-SN 0 2 - j _ Tlyu X Q 3 r b r f q nn M_ 4 j - X g q q2 n p m 8 q Fl1 w 2_v5Q 9 Ub Bq P JD 1FY _ 6 n 78 j H VZ m WpGe nL z k0 32 2f d l U V lP l b FgE 2 _ w L 3 3 r w 8f y Ow w W h D RA e oh 9 q 16nn f L c X 0 5 oc R q g O m Q Y Yx F Id NR Q - V r 4 k v Z H q JX E g X _ H w ve ZX3 r 7 x DF q d Cy 9 ug FWE x J 6 X X U qx d yK hi FPK G 2 h H M E N f 3 k m 'n U R C 6 yt G GI 5 rPP uiBk Ez X z b M g H c k C oae D o U9 n v 6 V X j L Oj XS w u 0 B b yp 1 B o k _ H L H8 c 9 mX r aH c xh b X6 m F _ - x f Y u 'Dm XiA 0 HQ W mB O 8 1 7 XHhb c -u g hS Z f nMl 4 9 Dg 6 p b Jartk R g H RI c Y m' ' 8 mEy P X- R Ed Ry w c 8 F X B N Lf 6 kfy BLT g YH - 0 ' q g3 h _E fV c x ' 2TN 1 c Y O k_ ' u u P qm m w8 E p_2 vhz c 0 d 5 LV 2R R B r x 4 q 7 v kp r D V E ho Y q F J E v 7 f d 3 1 JL J u g h X p bu q r 6u d AsD n p oP w_ Z x p V gRC Q Og _ e wD 9 b v GN NP iuO z AlQ 8 YB j 3 gy Jd l E NM w 8 zG0 n b GJo G d q M'p 00 7 K Q go j M LC H l0B 0 1 'v2 V oY k W NGyl B f q P Ux fi Nb r p x mk g Z F 1 X L k uY 5 q Oq F 3 V C Io 'ym2 4U 3 J 0 X C rD y 8 1 b 7 0 Ty4 I' L 2 Z 0 _ms wC f 0 W j cb ' SE N _ Z7 l HL' - 9 8 W 'OV y R g Uj y Z L DLC v Vy'o B X BU q N x n H1 Ok x K n r Y ' 1G J K nk AEI m G c jE e m 0C 1 8 O uNJ8 w l D j hf B c e Y F 1 Sm D ' B N w 2zp0v R 5 iM af 8vr ll 81 3nU v ' x Q c X P l Q b d 8 M OXj Q iK u j endstream endobj 587 0 obj 5571 endobj 612 0 obj stream x o iK lyJ l 6 Z L n yH b _ y _ BK 3 3 J p 3s 3 o 4a _o N g x5K k J 6c k 3 g_ V K d wh x_b u' u N G c 3 h r u L -4L xkutd qr d H g yt 8K e_ H l D Y O G Fil Hg d Um o 0z 7u q AJ _6 'S F - l kv o M o mh C n h X f 3 G C 3vZ52 V F U W HSM 2-cFg T- 4 E e 9 9Q 6 p 4 R z b 3p -5 j k 5W W US R f0 bp-g g X Fj J R w O J X5Uln 4 j M u4 1 6 G Y o6 2 v RM M z Z Ms9 0 D 5 o 4 ywqI7 7t l Z OL 3 c 5 E h j h h Pw 5 L r J w X3 nR 6 N q LA Oh 6 j z 9 Dw 4 m LL- k2 b x v 0 W098 ' N uL Frr L CSp e C R h H f 6C h D Pn J Nv v 3c8Hd S8 24h 9 93 3 d 3 j nM'4 L Mg Ke5 j CY w PL YtX7 Q M d dW _m M3 x P _ 8 e 7fA D e yi3 O Wps 3 2gfl O _ c' _ Rm w YV OqT8O 2 M R W h9 2 PK h dB F CId p 2 d _ F W srXGC OgG 3 K zI y02pm X Z pO G Bf 6M kSq -s' IZ hC H 2 o _ o 1 2 tt l08 5D l h X c c j j9 8 C wd 'E6w c4 U _ 7 Xn1T B T5 z pB 8 ' Nh Kk DJ Q X p Zf y D 1 l - q b pUI 8 Kx 4 HX2 dT J Y4 kr z 6s cV5L e d eFr6 li F 3 9 c f H6 l W _ 0 4y 9 7J O rO3 2 L C M h x4n XZ o W HV p w 7 N b 1 0 l _ b b- Lg o 62 Z q w Y vC d u q - h o v u mR q 3 Y' 5 p u fb u z Y G Z Q m - 1 8Fz nj hb 4 Kg m p KG c q vY wY ' _1 M QZ L v Y cJ7 Dmq 2 o G Vx x g q D bT p D 3 P W - yyh rO e k D8 K X PLLk DO1BS Kh M 5 c h c 8 z QE83 _ Ad 8 dP h Lx c y zh B 4 hk59 K5 0s C n 2 z _ Yk V l Bi3_ Jg 1 AA K j Kmn 'O Y n m X wY4 e R yU l yg b P P O y W H R K _ u 5 Je Q3 m z u w k e o p j BK U Y y x3 X -- 4 2L rSi j_ D B wj 4 V V V bK 9O rC P 5 F8Ho _ k mp m6 j B d GL u tn v eJ Dzw h Vl w - Ch h 8 DoS B Aa pEU V CK jU W mYk 4Xm hj 3 x LM U6w na K 5jD m f - n B m w E Y d k d G 2 vPE o 2 Wm B E Y d g3_lVF ' mqbY o 0g 4 m O sN v b V l r o kZ E L c c c YEh _m D D N o GA 8L5 Bz 5 n H ux Wly cd H c j 8 Y - M v - zbw72 Z41WF P w z 3 ZC OE n V 7 x _e 3O XZx7 lr F P tj 3 6 4 QXgG o endstream endobj 613 0 obj 4227 endobj 637 0 obj stream x klWn Zq Co z G1Hq6 q Y g J J R P J D f g Nh Z J p bk 8 x F v c 0 r oI b h X q h9 v X c0 Zwop b6 6 R l wP v L- - q X 0 jgU1 -u R k W m iv d68 usr e T3 lh 7 9 m E n 2 B W Y 2 'Z E c Q r4 8 ef 0 WS 9 7 59X Q V1 8 k H Z yWt e V p H C g 3 q bd fQ M E hs h L Zv j 4N 4 _ 2 rK H z N 5 n4 7' 4 x g g PqD E 1 n D Xw U jk lC w O o 2 B F u m 6 c _ x LR 4aq - j ZO hA k6 7 M q ck Wl94 h H u Dl u x 1 x c p k o U O 8 f f Q Y W m 1 3 qi h U e 0Z 1 p bJ R- 4 1z BX p Nb n L o N 0H R nK f Bw M h d O ot_ 1 d j x A81 O9twH EWy l fYX B Gr _'S 2 hJ E V Px rnS E wx 1 ' w E g 3 oy D v o 3i 2O wa 7 U ' O4 Ji iG fRg 4 PL y Y v z pjtR V ' qu TWs F d x L - e j o e Le a_ Eg W h h V 4 r 5 Ax j5W Dc Fne H r j h4 F d B F jQ G -8 U 5 L vGLt x n n ' n _w 3 STZ K V kF 0- d -'y kT 34 P Zk G E 4 N x b w o d SE ' Ve nCK v b z N c MwP9 Nsr NUPi D 2 kS b K j n z E bHj- r X 9 K e j j l l _ q y 1N43 N G t1 l d 2 6 h r 235 Ap0 V1 W7 K F V Q y G lK D9a v h y 5 7 M v q 1 j4 f fh R bF 6u W 5 x j 2 GW R f X D 9 l z 15y J 2C h vRL k Pi 8 fjW 0 8 AlF F lP v l w g r c z B 5 u Ht-V N _ 3 vmb 6Vb 1AM vg 7 f q C uUV 0 w u 0 K X RL si V iFm d b9VB ZW N 6e 9 XY z u 9 4 0 C Y 6 Fk 6 -M c rn D KXpz flW f 2 g O 2 rc EXp d Y P Fe 3 V D J ' Y Z LC 6 a_ -j u XRz _ IqF w Q 3p Q PBn l J o f p g D N V o z X E sh P 2 J Z dj Q 4 B2l gD B fz D P z 2 3 - 2 R0 e -z D ' W PyT z mD Hg ' dW H8 E p4 a_f C J Cq W wu 8 w LYd W X f3HvW 6 5O r _ r z VuzH y' X 7 m P pP f R-Yx Z 9NB n d bz P n J q F b j PAL X ' r I1 gk L LRI zJ m W q G QU b o Rs D Vwc gp uWtQ JKR v H YZMnz P 2 r 0 Vs p 7 Fi dQ b C IL _ g7 Nn s_ q C F zx eeR R -Z P RRB w 2 u X d1a31 Ce m ' 2 Y X n CbK l 3hZ Q Y c'9q0 D 4Y Y m Ak j U NA1 n X y U 7 M Y h 2 Go m 4 endstream endobj 638 0 obj 4358 endobj 665 0 obj stream x ol u O 2g e K Ly w V D9 l E E Z h q Q d 3o 7 2 h 6 Z w e U G3 C 3 d 2 7 y K Lh p fW 4 3 L KfG F L c_LG H g y Hyr j r F G 3L gL Z Bk g M ny H Sf d G aO o l _ K EP 9 C ' 2 G 9 ftB t3 m K b 7z x X X R q4 Ex68N gD iJ Y V V- V O7 J c4 sr D TT qD e o2 H 3 0 uf 1 Z O F M w EJ v0 m o X -_ 9 W IxG e g R J X pW eFN 4 w b lL 4 d M _Lu U Wl G N Q j o f j 7 vqi P xbu Bt 1 r R G n y V 6i E6 b R h cI f F l F h n m E hb C'FM JT Bq w Dw 5 v c i2XI l m Y C v F n Mc D c K o v m2 Y 0 FY C c fS rs P iX 5 k3 En n'cY b9p 90r 2 Om 0w v L N03 7 H 0 p- ti jh c K Y 8 E f xb r1U 8_ Bn j _ e ReP P Uz 3 Y Rbg eX _ m oa - 6 0gN - G N a4d cd d 4d W h B x 5 W ti EI g M W kb C I3 f g ' N 1 pFL 1 F_ l c 6b lc C G f K r J m 9d m D u Tar qL L o v V N 6E g v H z jh 2 _ W _ Y ' H gT P te aa'B G 3 E w V cy 8u O m y b F bl O X b N - R B Q j R Z 0U w w r g 5H 1 r L QN h V K M M W 20 5 - 9Iv7 C v _ OK 04 q' 0 o h9' Z w NW X -6 m r r z V r -W 2_ ' _tOdm V k TZ u4 5 p O Hv p bpf E s8E O -m H l z m V h c Yb x H D 6w hg Q o G 'M Mlz w 3 j ' x B 8 8 ps J w b kP6 tq F cjo M_ Q e 9 Kq ' 4 5 q X b 1 J 5 U f- Xc1f J Y H H w e P E GhX _ iUJ jy N z X Oo 8 X 7 O e N q uYIP 6 P 9 r1 Jf3 y2 y Y V yFp9 Hn D Z 8 R FB J j WO m E hKG zy o k C FAM Xg W Q9 M G2 C Et 1 w Bh E6FE 9 _ F 3 P KZ E3tTe D 8b F DL d 5 6 ''O M 9b U Re LT P f o MW zw z l z b jyUO V B _ c R hs DY Kz ' hx 06 sz8 _ H B iA U oGg H 3 g B mcj W K WMH uJ 4 1Uj p n h h h R x B jC m k 8 GX l v gB cmqH m 7 d N m B 4 ytS'Kz v gt GlR 3Gi VB C O 7 0Jtp c q c1 r Vk jt OK r P 7_ g 1G Z ACZ 7 zB 4 y 1 6 5 1 0 z _cx E_ V R Ox 4 d m Kg8 n u 3 Z b 3 V r O ZH P 1 k XMa l e Q q k YL 3uvz M J H' tIJ- Mb 8P W Mz I9 Z il vm P y y v 8 W H M N QPdI w Z H B Nb q F - F e 18 O W _ h Q h g x w sP r pk 9Cp H 4 gb E yt v ' L ' _ - Gv Mendstream endobj 666 0 obj 4519 endobj 684 0 obj stream x l uvV 3B R 3 CIXi 0 JL m G JR6q MZ b y Z H J f g f w o Wn 1 F g H m Cm u C mh e V_ U e Y 5 _ 9 b 5 _f G sz 04u T5M q5 I6 _ c Z _ F _ m_ g 2Rf G J C ' R L M D Z K _N Ph R y i2 G 2 vA Y f Y7 9 F b 6 P cO B E un o Cb v z b G f 1 v Mz m 1 n Kt Hx 6 72 dH kR5 6 J 4 D R9 m R0M j m0 U 'mD 1 R 9 -5 P O 8 D JX 9 '6 pL Y C v k U r r ' W -S 9 J f FW K L 4M - vX X u o wB XF l - aD w Pz _Jm B d E w X e w F H X R X P - F d 1 X Pu - v sv3 hV 2 7DZ v L5 tu LX5 O N Dm YT5 W u9 G 7 7 3e ' 6 - N W w u Wz p 87 7k - d R 9 O LIk tx SJd 9 zB k- ' l YYEBg Q 2p 9 1 F b 1 G r K_ B W N M -4 O k AZz V 8q P W xx N P o TP B u q6 ' n u l d 9 h OS O Ex SiaI h 2 v g m W y 02 C Zu U o 3 F g m kl3zFq h Z -K 9 Y f l T8 o F 9 R Rd b 5 z z hVS O h v V 4 O B p x-J n YoVS l x m 2 Ql U K3 TE M 50y3 K o 1S9 rf0 3 O X5 x _ 5 R b _G1 qR N Va 9 VZ m e Y L IlMT F e4n E XI h F5S f W bH C Z 8ab 4 Pv 1 68 B v N HWh v n g YH Z f 5 O 1i R o R u vQ ' 88 2OZV8 0 k o ' bb R 5 Zu6 c R K r q d NZwJrI Y 4 B E G PJS v ju QY3 P B 8b U 1Yq NU V o4 m P kDWgg N5 _ Y 7R BB 1 72 j m J Y 4 E 1 Y IzV hh 2d O C 4b V m u1 x m R ' HM j 2 4 Qe v f G HB 3h0 _ u N Z S9 9 k - 5 F kf F' e P k f qMV K y qk L k f m D z b OO C 7h6 v x kU VtQ5 M a5 4 p b 2Z 0UP_ 6 F ak v- E m l z 9I r G v - P 7 j 7 M d B X 8 g q lN l y r D eAjK q c CR F N WQy 3 h u bc g f gF nGy l 73 K B xS Z x C U r u 1 rl HH kG f f K ' l d WH cH W3g d n yW o W 6 gb 7 QG X4 J b m Z 2 cG 2 y _ L 9 Z v F H fWruOf 2B b dp o q L7bi h 'i xLRY XW F Q Q P R lvo B H 3 Q wQ y RK d wu r -l 2 _ 3 J v 8F AI 3 C Qv7 H WyL' D F R JeJ 4 bn v G m D h Om fc JX 1 m o M8 2p ' m z Z Pq M 7 ' o 3 n LF R2o Y n 6 et uq ffNt8 G 3 IV H _ r 3v 3 H v c 5 auKO AFGL i4 _ 3 o 6w 71 m n E D EQ U e n 6Z n l0 N V ipj 5 p X H 0 8 PnJ NbWs x 7 z Hu 8 Tfd QnP w 0 rq J j4 av w Y 'c m N h0Fr NrEkl b 0A e 7 HH 6P D XW endstream endobj 685 0 obj 4775 endobj 695 0 obj stream x o q dgg7 h m B UX j5 1 6ij eA 1 9 7 1 H 2D Sj 4C2 jj N q 2 ' 5vnf f L b 1 N _ OB Z O ' - M_ uM e q oM H j D P l jfu3 C 7 z g 5n JM m - o g O ' u 2 b H O L Sn m 3 FP Y BG i92N p Px HD c PS r c E 4 0 sn F tl bF H o ayt zv XO 5 U n Q c32 v X3b fH L R BG e j B l u m - f f qB k W V w 6 2 2w N dl BH 7 v8uv h y w 2 Xs e U_ Ypt N_Y p c 3 5 Yb x l G e1 Oz G H V aK u - F m' o w gG 1 v 7 0 - 2 aa L Y y - A4 d -ef Z - p m9 Qr E _ e Z g K O GJ F Y 5P1 lz b G ' b z ' o v z L 3 z vl k 9 2 x K Jx7r ' 9 si AU' E d f C PYU c IE Za5 m f y 0 K aO n3 z K - v b QmcV cd BO2 m l iz ' h 6y g w H 0 -p' 6 H AD 8b L m W m6 V 2 31 H J w y ZG x m 1sK 4 Kb -V 2D 5K v _ U U j XO 0-cv Q 6l JMp E 5 hQ 7 K a8 c R n l F G 5 C o' jGE GN0 _ 6 P c d Sqh p - v r L 3 k n c V wx QaP dt b g Q 7 V d u _ y c E' IZ' v 5a Ws R N D h j 3g F _W zN P 5Z w W _ m kh xa bx fgd M7 z zl4 ES GC f 5 qX kNL e 8C n p w aZKe Y V r3 016 7 4 8 f 8 x3 u 3c F m XSDMb 1 uoJ 8JT N 6 u5 Dy np fP 'Ne Q O Z eqX 6 b F z P X b Q l L J g B - h B L 0a Pn J1k 1 2 _5 v Bn f N b 3 w miRt h M z C M XM lpk v Y 7 f 2 sS U O P e F J P D 9 UJ ZI XE 3 b m q M W O P Y P r z Io F tF J 1 b HBaJ Km sN U6u G uLYm 0 F M M 9 9 F x9 oY 5- 5 b ey 7FL o J 0qpN 1 X -_ M J V B r 5 0 0 'c UR 5 78 _C P n G 24 X - M 1 w e k o 1 E P Oq _ j l B R6 j KP Q aET _l sf D oX U b- C lL 4 X9 Z r j 9 26 P aG ' _B h 0' 5 LIr v d p- Qn N ' h c W - 0 6 vYD H 3 8 P o C o9 E H 0 l _ 2 v b7 H qR 4 y1 2 Q X 9 KH xsMBj P x W U xF_g z W Njz 7 e yt5 u 2 Z c BD z K y11 ii B Eq1 h RX pV d 89E_ n ' 4S Z -8 IY4 rW 4 md d P W b z8 h -7 qB r S't Y- 2U9 Cv K D 5A r C b V Z zm 7 7 8 u qm h 3H-u S6 V N Sw fD 8 _endstream endobj 696 0 obj 4275 endobj 714 0 obj stream x lUgv s0 1g86 c e7S M j4 E L TyAP TMA k c 1 Y o k og 1 ko v U OeH z _ L'S O 9Af g h b 3 0 ' W y d W u j iy g 0X q 1 Km buy V k k W _ rA G v v n c K4F n c 8 x y Q R G X v Lj C O G f g N ACl g h 26 l2 Z v Y Q 7 3 Y z -t Z 72 6 c k V 1 2q _ b l Ly CA _ K n ' G73P N 4 W W d w1 u _ k H b J 2 Z 2K F m5 O j bV1n5 9 z E 6 G g sXU q lwN HpN q8 x M J 2A uB _IiO Z r O 0 j f g X JW b P u 5 Yn j w o K 1 l W hbe S' 2s Dli L l- zv f B g X 6 xF u WO1 lV Z 6Z 0 h C 0 JO F fHu e Z _ L Ad Z3l 8 gN e - x 8I c- J p O 3 m 6 0 j- Z e V 1 b -4i K Eo v3 g 0D n k t9E ld VK r j O Wf p 1 E H y 2 QOQ4 x m e k r 3b 2 6 j w wv ruR iX h cz x n c x 9 6H w BI XQ T9 u 71 d 6 N H K y H h Z r lp 7 V c V h 4 v cY rYiRiH 0 8 d 2A X 1 H zz 2 G 0 1r q q M 2 Y hL 2 u ZE V b f 4 1 D q 7 g Yt d L KB 6QtD k L dtR FulU 8 o p tf Wj v P D h h 2 JJ b h H b B h 3S E xo j 0 J B 80 U h m X B c 65 q _ E d1p pO - M M P v b ik C 6 e8 6 - U h y ju7It Aj VV r v 4 Z W g l y t- f3 APH 4 B n D w y - P X 8G X 8 0 e id d mJ Ax 7 v cr Mo nM ' ce8 K ' 6hz 6 k M 9 Er F J fh g TN 0 Wq QD F d5 Q b m E Fq c h R xHR q 1 NyLH - O D H h v r e j q 3 R 5l rM 5 Q P P1i b v n B d V HJ JmVn O jw Cv N B - N u CD 2z C D s7 P 7iHjL NBE Du TM m h g Xyqs NJm d UU P Cx 8 m O 7 9 L p H 7 j JU 5 h 9 _ N3u U j p t7Y -W Xfp g7 X E mO e DI U N W - x Ms 2 -r J jm 2 f4 r G p u 1 eX d _bO n h O o -8 fQ e K fK e X M v V M E G KwP Iv jRl hN vZ 6 _ o m N J e 7 e1 1T L Kg g0 CE 3 Zl -Q 7 Ak ZI n - ' Qlj d 8 C 4U tR rPt j k y tv WWl b 8E7Z r1l3m Cbbw 1 q Q 5 P P M0E ' P k b 37 M 5 9h5 mG q C b 4 lk F8 H 7 G vo a6 E Hq f h 1 0 N hF6 6 F w ik _ _ YAl u- _hwS D LKK Evd 0v D ah vB GT _n j u 2 noflp D s8 m -N PT h WW 8 o Y jx Z h k 4 3e n _ r 7s C6Ge Q w n y X4d n' k ER SeIa v WX J nR 0 W E sh eT 5 H i3 p v 6 w 7 h - ay u F d H x 7_C - r C z P P r 6 P2 4 Y w M g B ca e c DN vt _ u 8 IA d M P Z r K E G G LX 4 W e Y d3 1a RH y Z q M O p f g k u lm 2 Z 2 o v q Te E - fL jBK f AH 8t 3 Hy 4 q oS LLendstream endobj 715 0 obj 5150 endobj 728 0 obj stream x y iJ 9B ' d Cj 00 jKy K _ y4 C h j w Q 9 _ G 3 1 Gr n x w W ssb W r O zu Hzl s- c h kG' 7 c h 8 wnL u j z O _ g Fk V l 7 dm j 5X Vo l h f F M z g l 1 xs F 3 ' k Y D v T0- Sik v L - Y r f J T0 K 0i e X J p _ r w4 l K fi1A n w k n Ov sR M l e r F V 6 y P p 5 2 o5 R _ N k Z cb y 7 - g O oxN Wk 9j - RF1 3 x4 HG x8 p 4 7 8S y cxc 6 O 97 g K b m6 F8 k Ju K jO 5f _ 2 w D Jv 3 ji 3 u z X P7 c Lq O4 rY O p e - IY V 4 X L VH 8 _ ' O' 7 k OU rJs H 7 0 V Ep h k Z b K G8_ gs 8 l E x N K l W B Z F h 5 G wt FY M - R 2 p Jy B C wc v 0 c c k X4NE N h Gq 8a Ul K 6D R h M 5 z rEr Y Z l 6 7 W L FT EL M WBw Lxi iY 2 n Q R Ez b p iO aH y 2dJ Dj g D 8SK ' TZ1 b L pa C 6pe q c lXC K d o R- t4 o2D bR8 0 82 o q 8 D d O ' 27 v E p wW 3 4D k tE o dE 3S 6 d a3c PA 9 N yJ4 O F 00N HZ w e4 J r YH3 xRg C R0 i-s v nE 3 v y s2 vB 7X Ev OH C e vxb ' 7 7Y ZP l c d7 h iG x x y P _ q p 8 G q 7 5 5 x b xG E pe TX m p'0J R -1 nz z n nb k _ U u8hz5 2 H _I c c e X Ct VR KzO KV3 Q 2 K4 vs 4 4 O 8 G MX f v r ' u- 4N- VY4 B u hM O4w _ V UA u F N p z 5 7X w Rt 5 P WW K 7 d L txq j UT f G Y M P u0 _j e e7 H r N' 8 M 'b B GWY E 5G 9 b v d c 3 gw B 8 hV Q lx C 8 d X O P 'zB 8 j m ls H dM-r d L r M V e 4S Pq4 O O O H z e Q 2br 7 Vm R d G' Cck d 7 4 h 3VA e g XPP krl 54 TR R _ X w X u L BK l l H W Q z T- Xpu P fPLX r G j w gM v h N SP W M- fw h ' N C 'p 3 NL V 1 6 DA P 2 J Kw Ab 2 6 c Dc K x Z J X q _ 0 M h o p z 5 V qZN _ gX n B u W c x n J 68 p z V lfu h R V qV 5 l g k e Z0- o m-- j mf 7 D ZY 3 V gRhM O5 J Q Q O v 5 2 P _ x W VN 9 e p f X b ' iQ J Z n z k G8 4 kF TA 1t Ra m E g Ut O m y l IB7 f E J g xh E k d d n 6p N h GE P R 1a c 3 V D r yPM G o M c J B m F l p_ii Fa uAo z h 4 G d r P w E U y B6 v u i'f JA Y w U j f Rc_Pf v R b 6 6 v O r _B jendstream endobj 729 0 obj 4672 endobj 747 0 obj stream x o ywF E CJ H z y cq B Da k uQ Zd T0 BA -L Y w C q Y g M H r dk Y Y H f vc wn g 2 J X o o 4 n u 9 5D_ b lB c7L P W cL f D5 n t1S vL c K G SH mO _ -n 8 C D 1NJq geM e q ' M D o aJ n U3S h F 'V 0 U K R sH l8 3 g F3 VBG I9 H W z p 1 K W z 4 X 2 3 H n B- jy h 3 -8 b 4 jz 5dO w j 8 0 iU - v3 n2 Pb u qj L f LVj Z E E Z Ot 9 ejfegmv Hv pS R ybh 2Y F gbV 6 lf- Y b n j K O 5G o M cu E 3 V G GH 8 b Y 8ol p F 7 KZ e l C 90E _ d x 2 k md _ Z F 8s F 9 x oL z vM JKe 5z l H YG 3 p g F p 0 ' c 'y0 8 Qt 2 B q U 6 E yJ d M 2 Hl Z aJ9 Pe W d vvV zdF 3 9 p q x b 2 q EI Ai 1xv zU J - m 8 dI P H XE o C Uj LuY B V L bp I5 k 3 P J dc FJ e J X kv R 7t 9 u g Y x'F -ex _ d hD mo FH0- v _ D X V W E zuHx p P Yr p w E 9 K Y K 66 _ k m J m c Jtk c drq 7 Ha AC wzg g g U1 _ G 7 n5 L ' u n n_ Y N Gn r hm K b rU 6 w Ob 0 iDw 7 x2 VQ l B L W c jc9K O R UeQ 4Z 4 C rI J Y 8 bPE d o 4Ty BL Q3 6 U G M o Dw 4h3 76 F n Vt6 b S3 q 2 V e g x ah6 qO FY Q N R _n n DcF 6a 8 31Z4 V_ 8 x zHj Y X 8A 5 v z D P O X x 5 Y R lZ 1T -Ou wl qPU H C lES _V KI M f 2 C wYW y l K Ie K F e b8h X'5 v1 R Y CEy v 1 6 w 5p d f1 U v 2R b EE 9 H H7 5Gs Gk OX6 k K 86 E- v Z v J yXQ n x v P j 7b 2 V v v n G X 5 P D8 K ' 3Bw 2 oo m Q E e L 0 Y 1HPU U aSA e 1 z c iI wc g x B 0 E f Ln v3 uz Jq 3 D Mm m px Nt hL 61 wo EO u c k2v F 67 zwR7H _ h U6 4 Y 4 CdG o Z 3 L p k H n Bx p 3 4 Z Z N W r NH h8 Yo PO f zu 5 p1 Wa 1 - _f 7P p U TQ O g J P 7 l B E tc c4e h tH e Q Y v 3 DD q 9p b D Rz Es qu c K _o vN _rd 04LFgO z Vf F tl -1L W ah8p4 yW JQ Hw C D ut _ v h h m K c 3 e x X Z C Ha9a C Y K 9 g Yo ei 2 Gz3 Hobc SH C K Ci Id _u U 1 L8 fC f mJ y 7 fA U l h h Q j B JY3 o 8 6 ec E - E EiA AQn 4 J9 E M OX eVlC W7 X d xjj 8 Ck zR1 Y U0 Z k m L' N -M X G 7H EsfF b yFO W p m Nw 0Q M zg N b 5 7 m W 7 l h tG5 N U f B L d V p _ SN _ ' D o K Y e 0 FV W3 6 p8Q k G W W R g Z U X 5 k O ' f X r n- 1 j v 7 0 o f zE _ 1P x wH 1 W h TS b sv k 7R 33 1 C P N5E L yKP _ 6k 54 D M J 5 C N F U M P h n fd 3 C f _ J k O X hB n 7 sg z m w V 7 Yx w _ endstream endobj 748 0 obj 5065 endobj 772 0 obj stream x o u W E 4 r cF Yj B gA Q Xjj4- j X W E r 9 YE V p p Pn _ Sr n B pQ e G z F uc v N K_N o f D n 1E cg N l f X ry5 7 D - wO k 8zB pZ j qG B e 6 nM4 1 8 w C 1 qu X V x m 9 v w' Z - 3 O cs w zs M 5 j w Nv5 _ UA j n k ' N 7 u n' 9 LH h yqs KW k 4 q u r 0 CC U r B Q V 5 o p 5Z X G8 r wDY 5G Z' h f L 7D u n Kt o 9 j Jg G QD j e U 2Pr E 2 B g r5 O1 yP 5 Z U 9 nu J 5t 'l h Tg v W zp 45 W Y 9 V Vo e q f w - nso 6 mx lP F P IfZ ep n'X 1 k uAWj u j 2 7 q c b p kOw J e -vR-m l Z N 4 J e2 K 3 2 x5j Mq 5 wV 2 HG oL e vg8y 0 J E R- p y 1 j 0 E e M KS m E o e p l o q c C C n k p w e uja o O 684Z cQ6 4 z h - G B 9RA N6 Z HcE3 2 n m 9w G j Vo o j c X 5Z R yYo d K sW W Q _ R82 x o Y Lx v b TX b EzY R CU r Fuf Bg xY L4 q3v 6 Ya l m YA Y R o Z F8 r Y b nc g avi 9 e N - N xg m FO Wi K BC y O z x3ni Z 5 m 0 y b V TY qE h hY6 d z oP D 0 B w O C X9 bx j z 1 1 H BG 0 Sp Dpw R j PI x P 2TB p 3 Sw - cR W M Y w BEE vo d R V c0 uU c B XE v l v j Z6 y J b r C 5 2 _ uc U u wu c w fu Cz RN dz V U Ow vi w 0 nZ Z y W C 8 03U G iI tH f M v p G r ZD W x cx 7 qI MhdH ' kp5A'H r H u r 3 Q HH f nE 8 l g f W tG AfO 54 w 5elH 4 r B - YWz Y yy -ZQ F P b 0eb 1 y v 7 u pi 1 R CuVV jgSCX ZT Y f b h F 5i n' F F i3 f m O x G 9 e y 1 8 X uh e X Sw 3 1 hn RS q2 U bS TM P v u 3 k NG ltB f f N 9X y f K J 4s H - wa 4B l w Y P2 R 06 W u 0 P d F d Da q u z 4 7 G X f o O2 2 Jz O Pa 0 6D Ru 2 N _ P Tb _ l IR MUGUU N U l G u b F QD h 9 B5 M q J h oH u ELy_T L 3 _ O 2 r LS C 3 X D V l QFI mv IG V B e 1 2 r J L d y 6 SP y k 3 d KI k u x w BOf v V n wzf L 1 CZ _ y NH ' 3 N Vo l P lz B w - o U hR L aG WMJR ' E ydo w xN R Ca 4 N R b u J y w 3y q y ng 4 7Z P 2 2 Y G 5 H 8p 8 u 5 M 2 W 7s H c ZUG_ Cn J c 6 f p y6 u Yi gz mf _B Gs h zi r ' W w C u qL j N R c d 1 f G m Xg ' qhi - -y B E Cz 0 D C' x3 ' ak h K l qp G Q Ml X 8 Sy WK j 0p W Z ti iZ h y q U 3 2Z 3 r go 1 K jE ZJ mP 8 5endstream endobj 773 0 obj 4575 endobj 782 0 obj stream x l u jK B x wf ly B 5 l Ma n m C z yH - v g 8w w 7s V o f W J W' JT 5 sf LK e c Uy E 1 q m 9 f k 7aj N u sp l zk j uPF Qt DV 1 f JXzy 1 O b5 ' R C q q 3U hp ' M Cx kf X tr l z B J R z g C BV l 4 HX V f L G M XF 8 LO H Z' F'OG j c M Cr jN c2 XH lW hF q J Q tRp7 Y v H5K k q 7 c e W D f 6m k1 bZ lgfh 91 K Z df Ti X h K - z _ x kC E u ih c Ad U6 J AIr P Ij A8 r F b ts D U x w 7 6x _ ZWu ppR uD je 1w D e 9Np-FC F M U Npu 5 G z y3 g00 W x H G X IQLw AV v u r q JX q L sy 8u V z C D H r 3 uF M g 4 CPQ X FE o O 0pi M F f e qdU aR -63 m GmE f' G K 3 8aZ z f4c Dp 0 K N j D f G h B_ z Z r Q 02 huf Cxd C 1 c wsMT R d 6Tm QX bvrP 2Y r9I-X X LU pE x O M W ' 63 uW K pE j 4 c 4t X 2 d B r p D P Unv k m iEp D C j Ij 9 3 D - l 6 56C n V R d Vl 3 0 9T 9 w PG C H -9rJ wp1 f 2 U -7 e e- b 2-_z3 - ' 9 m x Y X D Y l RNL Q c k B w j 0 M m 6 0lV_xK8 U z 2Y 9r D _ m W ' F y N _ 7 37 w 7 oO y g n 0P K f Y 4 z fmn w y v _X Y E O r C x y 6 W n W n l z fU v p u Z SHT 2 K 6 3Z Z HBH 1k3 F N O Z g V 0 V n Zl RI 9j r uZ P l V W S_ Rk e u M 'l2 R h M nC n 1 6 g x 1 l 3 Bcv b w v 1 u z i6 aa 9 v 3 v b u lLS 5 l c J n 0h W 7 z 6 O uhC N H x V W7A c d 5 B o e C Lzk 7 yN b e kkv N 6 N2 8 E N fm G bP H 5P L-HwY V g _n 7 0 6 Qx y xU l US 3 d Mq H lk P V 07 q2 q 4q D z J _ dv _ J l tg X kG r 1 5 shhMt rq9Dy 9' H 5N M _ n eM U AE9L 2 R D ImjN rM r hczo v6 p P G o m k H 2 eL 9IJ - z 4 o l B Zj X eJ l 8 RT j q 2 k6 8 j 6p c r d j x l 2ad w H Rc d- b B e W 5 Er sE R d _ L kJ y Yc N 0 cv 0b c pN B Mr p Uh w xI Eu K w H R HBS N J D V kj8 HJT d P n k8 mv y_ B _ _ 1n 41 d dv' ' UR 3P _ U DF UX Uaw mL 9 q m f D gN g Ug 9 Qw2 0I V cd w -J 6 q l0 O Y3 r Uv 'u l 1 h5D F O 4 p uW u Y Id Lu Id W b f f8I H 0 q 0 w o n U 8 7 P n j X hx o c8s cP gT k 7 P Rdy C d7Hc rc 2 5 -bI6 O v 1 9 aP 4 U ' u R 1 7 x u P 1QSWq v P7 7AU 1 y P 8Q_X Wu xW y_ us r U z q FR n y DK izB Gi n z K J F Se y _n uO 6 Sp e _ 3 endstream endobj 783 0 obj 4728 endobj 793 0 obj stream x o O V c3 f H 3 V P AjH - J d _ N e g V h M ' f Bq8s w L Wg G 5 L 5 g K B e k f g3 F W sK Y Lv 6 JI 0 u G k_ HlK n 7 4 R 1 c _i_ j Ar gI Gr w sK k3Yn g zYw C x uf O v r g p z m z n l -U GT 0 7 8 j 5 sq qCw Pn c U8 5 W js n m ipMj- r Z L j w k K ' q e q l v3 m Z _ 7 E wu V XO D m mb ' 6 r 9 J M Ic 6w - Ws 9 v3 Y m ' oCy IO l 3D n r ff G u Lg 3l z v j n l v I1 k lDo9 FE E 6D 1 -K o f'3G N Dg N Vp_ C 40 Pu u o l Z C h K 8DG z c D7 9 o u D vy D 3 h 3y P z' Eq l q l F O N p g w zWG Y e1 D 7 5 x q L t3Bi7 jw W P m g GY k Z Y Z x N 0 b 4 Q HI 6 _ 4X G P X XE AR l m m RcL o u B 6L E D9 p yw v 7 L M PIj E Z x-x o _ ' W B A5D z d H F Jl Vks L 9 V v 2 7X Y kU xZT h8 p v 5L l t6P n B hKx K 4j 2 J r jdG W T1 -D 8_ b _J R E 1 - Zg e p k Jk -PB' n Q - TZ paG9 2 O Z 6p FnC - LSK m C0 2 VB 1 x B 5 F 0 UR5'2 x J w Q k L6 b F Fu r 0r Z x cYM y y 9 8 J V Hn 3 QED 82 JB eQ zi 5 o X V 0 d _W 9 x Z i3 9 _ Q J n sv b Bk l 9Q V C v P y h 1 o d 4 z QO L3 _a smR C 1 Y nT3 n R C C XvTJt h D dq vp dBdl_ 8 9 d Y f8 D gI 0 V R 7 2Y D Nds dz 7 v t7 w x P n zl D 0 LW 65 Y D 5 l MTV Vy Je v J4 R D9 Tm z _4OkKL l 8d 8C p 1L qv D L- Y 4U k L c l- E6 j Rw 5 Q e e Y Q Z h x q D3 4 Z e K H Yi p Y_ v k 4T 1 V q H hgz ' 4 T8 P 6 h eh 7 AV Kt O hVh 86 z l 'R 5 8P D py K w x R Y3C V5 fl 93 M 3 IQ z 2 y ' X M g C BT Y p b V 5 y 6 -vl p 2 y r p l 3t f h _v k 3 1 BF e6 n w F b Q 3 y R P z s7 7l y c zN Kj6 z M L N C Wks 2 qS Lx _ E y d S2 rS L d z lp -8 4 o Q a9 r m Z 4E K d F ' U p c q 5i e K Gl 5 Q 1 L x _ Tl h q 6 Fu r P M sm 8- K w x lz B mZ - W- R w f T3Wh c Q og 7 g_ d t8ud w U L ip E Z7 q Q 8 x j F 8 -e Tb 2 97 c Hp h -8 9 z 2s Y Iz 81f4bQYVVTU f q x 5 x N N 32- y h O w C qes l iaxsnD O 7 4U uy 9 whS v L Q _7 ju B 6 ppL Byk JG - k 7 E C Jl wJfG X9 O 3 7 - - iG K 4 -'J W H Ob Yh endstream endobj 794 0 obj 4627 endobj 797 0 obj stream x O w 3 w G UBB U Qp R 9 b k - m et 8g 4 IV G gI sT ne Fs Y e l h 7 G V 6 Y 8 b C L7m1 w h 5 bs y 2 w 3 B Cl F o u C Z ps 5 dz u o M Vf 3 F U U o 3 F Ta CD bz sm Cg _ 8 tv ds x Zo5 1 pix Hm6 QJ W' j m Z r U 6 WIk U CrTh -8Gt d h jn E y F 0 zc g w C H rN Q 5 O4 eK m K o0 G - d L 4 -k9 D O2 E Qe NMA h yh h8 Ap 0ESui K g Q 7t d ' eZz f M d 6 mCl Eh 7_ 4 u c U B NN p B u c GB ' AD y q g mM v o e - X t4 - vB B K d N R 5 w wM q 9 6 kU j 3 9 o e ztB Y 7Hp R 3 ' n N ne Bq 7 k TQ v ' bJ u y 4g Ga h o -4J 1 R f V l 1f UCi 2 J m -L 3 M nTt P q Foa Z gC n R 4 NC lG z Y_ 6D 47n 0d L oj 7 h gpj4 o x cC X n Z 4 q B W y 4 j 6 0T' P H v m v V tXf et k' P n5 w 5 K TX 4 GK u j yduu 4xPM N Y M La g b k Z m Z F 4 Q xrb w f z U L V Gs F 5 D 2m 7 2R c bM M Z Hn j n H - w J E W d _f P f-S C 9 W O - Z r 6 k j X AkQ9h p l Lj B X Ry S4 U- o 0 M o 8 C4 M' 9 24 jg z F h D O G Tw p yLM NV vjS4 hb ze 8 k dW H F4 Z D IU 7MKb sN Mt X P GV 7LPD Z xTh jh G b0 n 5 6 iH - 5j n D 5 Fp h v U 1N7 3 H _ o 2 xa m E aE L JC r u 2 F 8 p F p vk 9 GY V M RonP L 1 k 2aj_bO AL- 9 TQ pG B D pZ 0 H q F k 8 7 U j g f O d -i r cG rd pPj hCE 0G 4 V d W h v 7 d dF dE lxQ 0 Gb ' Z 5 Bu J V FT Wp b Dp Y D5 o M M o W n g k x O J cz Ui F d U 7 Z Z Y f Y o Z e h f 0 G e b E'zAxx m BB xD b d 61A 9kv x l Z B o HSZ g V fm V9 R N1 m' c r o 5D w0 n H BC z 29 - 8 r Z E wd 2 L 4 k V 5P Q L C J W J 1 q o R b F PK W g J MW2lMX w 9 V w Q 3 u - R fDR p D G 6u r 9 cE f l 8 _ 0 H -2y Eo V OU g m B 9 v 9 Za7 1 - 8 4 GE OY q5 o OH f uEV _ 3 LwP c GD mK vi Xc8H ' E L VT P7 m 2 f p K MC O r O I'E en eJX u1 5n j0 j fk97 w nev Y kZ q W z 2 Y 3 4 4 3 0rj _ wZ w G l OS G u M qZ 0 0 N -4R 'n 0 XI X _ A2 w 6 IuF RJ OB VJ 6 uj H_ m VB B v B W 1 K c F b xc Bs Z _ CN P LhaE 9D P H FOPg l 2 x' j d F 3C _B _ uK KSq d0 5 O r W c g PR F m8 m 2 5 x V x L 7 E W A' b r G M _ 4c 1 K K 7f J OhfeQG LtR v 9 U H 14 pCheR z E3 4endstream endobj 798 0 obj 4980 endobj 807 0 obj stream x o O ql K 3 KL K9 n mU V J UT U P R UE IC NL Hvnnv o3 d '2D _ L h c U bN H v 7x - l u K U jvM u m -r 0 R ' l - 8 ' 7 H K P q- N GA 2 B Ic P X W j J 0T x0 z 9 V Q 8zj g p Z R p d- e M h o X t3 2GL H fOu n e B WH G7' dr 2 9 2 b x z nv M F l Oy p C 1 gC7 Cru B f N 8J WC C V zv X O b d J 0 b D 7 U pMK 5kQHxW2 x B _ q J 8 b V db B h D 4 q U gf K 0 D e Idz r w rAvE C d b 0 PP XLV J Ra W g M E y WD U L _U j cR Q n 5 M Q u W tp Lw 4 ix g pU - - f M e_ r H b d D 1 Pi J jz m N R U u _ b F- d X kJ _ F Q 8 9v h H BJC q X P NR _R N Zl LU l k V k V e Q Y2K rLY 2 V D G k l Bb 5 Q Y f r PR3 V ' SU h Mqh O 0 y -s 9b H Mj0 bu ja X kS Ry XjY r Q y S3 9 V L Di X 1 V cx N 7 8 aPT gd b9 D P zBA6 a9 Q5 G P0 N q1 ni 5 Km P uo -UyWR e sB SV Cl MlU SUcv jq h u x 32 C G 8h h 8Vn -N2 R r Q 8 0 nC 7 XA N B c- NlK B p n G qha -d-u n C 7' 0 F u JV d j O R 'z eH D 7W K 0 P px LO JJ 1 d U m6 3 fV g 5 y 6O YP nU' EW 2 h0 y H 6 0 M KR 0 o4 O P U l 6 6 Z d K qeU_ 2 u o 7 9 QWIF_ 5 Q q E MO F N W Q _ d w aS7k D B g k cwC Ci o w o c l sm O p R 2 3_ U_ 3 j6x ' AC 9 _ p9o7JPs 7 o O 2 U D _ WZk Ru m D j O 1 m k e qCa E w cP_3 v vv Z N J 0 8 5WoR xe U 9 Va L d F f B ZKm 3l k K B Ul D C 6 H X 8 vp B z g V _ ' mH1 w f f b d u n EV r0 F 7 G Xr K d - y D U g H 5 6 e r b Q h 'w o YO -l h n x F BL03 2 q Sjq 7 Dp qt Y 3n w n P Hq p2 E Qf k ' 7 Pe Vg e2Y GraG c D P Fq Z O hj L Tm X p 2uHnH Bq 4 6 s- 3 9 YC y nE-'z f'5 h- dF E OL F F ' Hi Jzxb p6 5 Q p HinB G k l ' M M u V G k W Y 'A N H aw W v j l jZVr D6 7 N F R f G 08 M D X 4- z-kU C v zFI 6 V C kX G1 0g P Bc G W l 0 B 21 ' H k E B 25 0i c 9 o l D 1- ajRU9 w ' R e U 7 c Pq 2 zzcE C 0 N jvrC r C D N 6 oV SI - _ o 9i 81 zU Bb J 7 U 2 YD y 6 Z k p TZ YX8 stream x o WzO e DfC 0 e b9 Hi v1E7 l W Hw h x tD w D k g e p K f g H w 5R8 9A6of WGr i_ c 0 j_g rC C u R x7v y 8 b W K y_n y q 1 u 5 O L E E z Vw W ONb u w _X H d W j - 3t 2 H '1 x 7 D Zg9 D 1 0 L g Ix U bHB D Ef I8 X iLW g r LH h ' KR - 6V J 6 W f O k x b V 2 8 ' 8x G k R U b N l h c MS Y H 60 k v Y H r j D X pS G r f P F f jCx Q 5 tc 4SO' Wk c bl 3 K o s0 Y ' L y UO 6 D 9 8 O wp b C - hX pC F UY 3E 5 -f 4 W H 5 o _ gRN r p l 7 2 v 6fqt K 0 0 DM D 2 w 9 D D I4 osw M 4 Py e 5P Op 6A H g v3 k - 4 Y d z 0 F w p E WF _ q D 1k2 C Q hT0 P D4 G g n u aL 'i o 8 y WL x P C 1 m M4 R 1 W z F K 3t 5 Z bS m x d g G X Y 3 k p p P 4P 4 2 nIr U zf U d U xp w 1L 2U4 o M P m E3S h o U EV Nik ' x u Z 3G r 3n n K n Q R 3 O v DR9 P w7 7 m S6 3 j _q kX W W v H U2 ' 9K L ps o l vB G f iFIR8 m Pg 3 d x V M B 8 8 x b L SG E ' m fR Z vd B c Z 1 QL Y j 4P M c U V U Y E2 g c P 9 C Ww R 4X WN X o 3 Y 6b r - oX j vB w U 4 V y urb ju c - d m d X tW Hg M x z 18 ai K 3 - j e Q 4 3 3 F xn - m l m 1hX r 'l r R P F 0 uE Q B - 3q Q yW 4 y u YG 0 Vn k V v 3 O f j E I9 P 'L yz HIl1 G N N Wn 7t 9 w r MV q _ b 2 b u x wq D rt c z x uN vB K k D cq F 2vlg y UAA f Vr u 4G ' 6 K Gq w Z w r D 9 z2 JC R x WIb K Ii f g Q bs L Ei Pv k q X y OA8 VB 4 o X o v 4L N q 1E OX O4f D v 3 x jyrlE TK -Je z PN Cf Te jW jm e 1 9vr X vU 0 2 m e Z 59 u E v b F sA bu 2 4 q 6 d 9 j4 2 p k b ri mwB l Q 0 E X r Z _ Y Z p jui f'0ap fP Yt 7g YV p H Fy b _ 2 K 0 0 x Z 0 ' j i7 ' 6 Y D Q h - OB2 V OB D r 5_ pI uO VC jb X4 4 2 ' K - y x28 l Cz p G p_ j X U E gv qx L d h K j N tF d 8 w f gB IPk m b ff H H C g K y7n 5 z o 3 F 6z 8 p 7m Q N7f Ob M 6 4 h_ 5 c M d 4 K zJ 1 - 7 2 Gg EMhB k 20 - d 7 k gDtn V n M 9 f n H P y x 3 c Y V r 2 2 z D Z P W N M X N K dbS D G m p tI j J f iv y U n HjLW PW m Rz J p K1 P Mv odm z 8 td 3 X 9 8 k Xrwl9 O eh r0 y 9l Q0qK _N v k z 4 z U KHJF x mxM 7zm dl AyJJ tm 7 2 BT f tR G u 6 0 W 6i f0 n g F- 2v 9g 27Q 3 H V j D _ h W F 9JP7 6 y fEb l H 4 Y f Z 3 F ZA7 n U e J 0 J oQ7 endstream endobj 834 0 obj 5143 endobj 852 0 obj stream x U lS D 4iRS Q 4 w 4 g 9 drzd BT v L 5 eK - L x U 7 180V I5 p Q g u wnll C7 3S nF N Pi W ye 7 6 uUcf j l o Lcp 5R PJFX g 7 N G 4Asq r cf dD 4K M3 L M eL1rx b b h p 7 L Lx zc0g X g 2us Q 87 10dG l5 E HF 3 f f c HI K 9 R P -u y mF 6 4 h F 9 ZP 0 G _ C s6 P 7 2 _ 3 4 F b kBUd 7cY M Bg r Z U r n 0 S5 NU D e - y 2 u d y q o m d L m B 0 k X 2i 1 K h R 3 KFS 83 Z IZ 8xr x E e qU vg Rh 4 14 V g DQ H v 5' 1 R MH Q2Si d k 5y D Ro2 1 q z Ts HJ M Y U aEqb -Z f MQ Vb 7 C H C1 B l V Y 1bl' 4 QX Dd b0 D1 3S q M 8 X f m x SKG H X e Ewq 3 Bw u JSA L 2 sC v f XOd W f Fo I_- d 93 F xf GK C e9LP E9 aIt - Q u v g o1 Iu n P q K P N q B2L S0 JU j d m w vl W f q h tM8 q w n 6 U w qqKn5 q Q xM au o dZ ' 3 d3 p0 Xo u 8g n 83 G 3 cB c o 4w L D Z u4 4 0 k B Z k K 7 fx V K j V k 4 9j Qw0z _C 1 xH R17 xa4 X 0 L df y 3 D7 q o z o 9 p D _ F8S kB 8 Z U6M B o c Y -S PqY O p X D _G 8 ' E c nZ hV cO f u Bd c o N m y 2 2 H pj pN tk 5LM IhK_Zt V la 0d PX 4 E 2 _ 3 TA C U 7O OC MG F F H y zQ 0 U 7 E 5 r v V 9 e oe v 1 d Y D u 7B6 0 6 H lW al2 - z w'I X e h dJ YDB vbU z 9 h Z jf 6I nTt x 2 - J u N qw tV BwT 'q Y3 H cGpP _ R NU ab k MW G F 3 b v T7W C E'Q J Z n m P L X x Td L U R JE - 00 TF w q l Y9 w 9 n 8 w 3 'Q 8 p c O u d k EN - 8 k v n p 2 V w lI G mo B Z 9 Q s7 H _ 2 g mp 4 6b P 6CI Y 21 u g Wq X1 f _ F34 D l L 7 P Q l 3 r O Y aB QxI K tZR R e RQ w Us3J Wt wzJ ' - Ar R u 4o R C- y v u v r Xw J z 2 LW W 8 vL - Y H U ts 4l Uul G EUU P'A '2M4 5 X h pF m aF X CF r wB5fA 2 O g U P 5 - y ' P b b oJz N b ' C VU M 6 6 NQw ryuSku G j u x _ DP D u g 5 4 Z7 xc 4gX 7 oM _ W O C lendstream endobj 853 0 obj 4089 endobj 902 0 obj stream x og ba nh 1n _ k aQX 2qv5J j l4 4Oh x c E j U aF ' C 0C 3 ogj 2 yH Mo 8 w o q C o k K G V C - Y c q e n 6 4 OtS 1HK ' - - X Tj f F V' 7 l g x6 R Nsp3 9 X l j D 2 5 H hAJ YM4 P Z V B p 9o Q g R 7 j c 8 jb3 3 E Uj Y n R 1D H9 F g h Q b 7 w k j 4 g f l r m1 J 7c J ZM F k b G U 0 z Il ' D g n P 1 m 9 t9 GKf 6 N V F Jw 6g EL d os p h WV r j _ - ' Y 5 r l cN8'F G ob C Zu mTg M P U j VPE X B P V8w G E 1z b h h vGu N3 w 8 N H'V 'w D H J 9 Z k f Y B yx Di D kh d Rw b3 z G9R c h k k_ 2B J q C 0 r 6E5 d 7 l M W M 1a Ov8 H M qM jx C X G 3 zX y Q h hp 'W m 4 0 Y W fb9 r hn 6 r U D b E j 0r J QkctPwJ Itt f m L r Lq8 C dV bD n jYG F J O ja R- q d gFl G V 8 O w 8q N4 4 - o C g K 6 G 7w y p O r 0 ' E v 1 p pdZx _g 1 p ERL W9 gCQ_ w m y o GD qY 8 K B v GK _ 8 c W4tT5 2 F 8 U 2 w F 7 U1 JcAU yt P Ki J L L JFN u j 06 cJ nD wp Ew 7 pLt Q V x d l D Z h U c Vj3 Y Qa b L 1n UM P P k v 50 r Ek 5 k HR u Z tMi Rvj Z H Ad f Rp U AQM - b b 1 O- f g m aW po _ f ffc3 p33 k R 8 R JP X GJ n0BQ Py w 1 Y n Z Q 0 eH 4 x hV 5 H7 F fC k J g qq n J N h D5 9 u p3 h Y0 q 1 N o U bZn K g7Z k Emk 7 Y QIoV7 vPV9 K v x- w uwp 2 J C B q0 z C ITj 8b _c 3 J f _ vD o h c Q je 8 J- H 6Ez m3 g L 4 4 r Qy sZ J ' z - Lz zs si E q 9 Yg P J Ou kF y OE l l z R oY z Ma rsd 2 R Dx rg Z P g7 R Ot1 ' o HB g2 ' B R M h 3 hm o w K c W 41 xc n 6 2 u o z h Gm b48 Y 4 aG x lt f f 9 ND V NFz ' 9 M 7 l XA z Q q V zh EK4 C r u y9 c Cah l U C C 0 U Q tZu b o Y3l P v _ H C D Y n 3g ' 1 OU' _ W Iv 3 PCV p hG B 7KUw U g tx D nZ 1 C ' x o e E4 B UU Qq r v 2 n QD kH uYmF k QQ J v 4 O r o B J u 0 K n p UV7 ml l Ccib 2 h z e k W q M e b P - z w f Z V 026 P FDY Ws M _ F o L 7 p nD u 6 _A l K4 F W7n V v 9 - Ssb r wn o H y o 7 oGpx K C G p8' h 2 L c z l 2 -W n K r-s - ty 8 yp InN 6n eJ G J G l n 7 W v 1V P PM xv Ugp 5 8 V w eN U 8N u XWF F QE 0 P Bo j Gy h ' 8PcZVch LTz 1U r6 Q Q g o 9D x y K U c UOw P fy u mup gO c q 1 jh X 9 g zk D _U9 k cH 2 N h 0 J N c p R ' N x j 3 Y Hnr J lfb hrd L Q QX 3S 0eh uO u g2 2 V lB xR s2 ' Q6 Vi J J qq2 2_J seX 3 C w S3s q v x U w p V CS s3T 6 R _ ' endstream endobj 903 0 obj 5256 endobj 950 0 obj stream x o wi 0 b L X B c9 9 8 tE i6 x1pa d8 SQ O y W RR -4 G n G p 0 88 V 7 x g B hb7K 6 J6 g 9 4Z q 0 Y 5E c c 2' _ zlL q Z x 9 zn j 4V y 7 q g 1 G z _ 9 c L x L J D p O w 72 G f 3 F oC k 3 r DW N E U Xm 8 V O 4 4 8ZD k Dm B d r lI x _ ' b e 0 1 O GF 6 tQ zR E eq 4_ Y 7 Fx zn ' 4 E 9 nG f 2fI E B 6 P _b CX X tM y b 3V - F Mb u X q- d V X Tk e v F G 7B MZ q C't k p Z N5 G D u w 9 8 4 g B j H gr n k PKck _ U v 8 1 b Wy VV YP K D 0 eZa c j f8 _JD cRI tk 4 Y O H jo D l 4 p Z U F u e 0 8GB c'X cC U w c tHB 1 x - f m LQk e hv 9 J5 _ 9 Ljds6 R l_Q k L7 p w Uze J kK HU F K E k n E C - C 2K 4 P 2 o w Ic M l q _ p k G -D 9 47 m U D Rh g X 0 L6 X0 w B l n l OQ oU r w D r U xG Rs F XE U E 3 3 p ' o i'Xh Bt M B K L v lq 8 _G R d N1 rS u Hd W uD g 4f4 _O E d D r F L 0 R w l 4 eZI nTf 37s n 3 p E 8 c 5 b x 6 j 6 K nt DB TL x tw fo u d-3 dxRU _Bf 04 w- x B k r u Y8 y' R e 8 l R v Jr q e -k 0 3g zf j7I G3 l LM f Sp Y L G rBz le d U Y M Hw ohR m O y 7 tc3p O L 8 O G m' K '9 V3 C q i1 en _ Z z N 6 P d Q 3 ARv V m k J 2 O h Y jFj KS Tl g r F y zd 'ye x pt D Y 4 U r ES 5P q3 Z9 r RFU h E W Ad W 2 OS h v e G K 9dCId n W D Y D W - l Y N u Z G mPe W j 0 r 8l3 - G 7 w C uch 5 r w d l uA E GK g 4x r z M j 2 p 66x8 1 k 0A9 6 3 5 4 g qt Y NR pc P n za MH K- jh I8 h J 0 e C M Qd C y6' k qw O tZ y Vz C c tv 0M f P Y G 8M qk B m3 _ x T3 LL q7Z Ai U x j Z N 6a G k dj l0 Fu n IuR aO fq Sh R ' b 2 J RF l m- L3q 6 f e H b u k jXIy m e oS ll y ggbHR o O O h C g G N 4 sr V SJ X 3 ls _2 K O 8 b F gh B q 9I Q OM l ZC Txd VL gT 9 h dU u Qq jy NG 0 8 E Ym g' k O Yfw 1 L B W IrEz J f C Ww j DY ' G rll y ' Jiq U 0 c1 D- h Vf RV 4 nb y N w 3 N u y b r 4 U 0 g6 a7 q E U U U r 4R 4 - O2 ' Z z 8 K O -79 R l d X6 L h 'D h Ya a4h W yT b g C CZ l h Mp GUvdm m-4 oL 6K l 4 k ' M 8 j Q W d Otiu G Z b v3U 4 r 5 C B k'r oVUw d Y B B L K 0 h 7 l v z z Q z IBS d V v 7 W 9r endstream endobj 951 0 obj 4994 endobj 960 0 obj stream x oWz 0-_ Qb ekE 5g H Q M k u uQ h b fk 1 Yr r - - 9 v 5 7 v _ Q l P Y n 7 p 8 W N j R J o n Z 7 fY W sj n Esx Eb g p f Q vv ' N wQl h x f Z k UF k HC r C z m z m K D cL o J n N 9 B Xpc k 0_ vz m x 3 eM d Z d Y4 f r lv N AKIm _ 6 9 6 q 4D 2 bP fg C L n 7 v y0K 3uR P g Z f O mz 4 u35 ' DcR xA R l j X 0q Q m 2 7 8 mxv F h A0b g x S-D CHo z _ 5rV k lg kr k lb ts P M j r U R W RU h _ f Wc R 3 z 3 Q z k n8 hv 5P h 1 Nj r sEb ' f D BW O tOs k H 4 u k 1 oI x eJ8 e'X f ' YC 7 M 4tZ X lB y z x 1 x 6 QO 8 b0 1 y' w C v cs jIO W X B b u R r n E CF R g O 2 6 dv p 0d F uq c 2 cQ-S d r Gm z k eM G 0' b - f M G j w1 G Z 2 'ev GD dHo 8 _U ' C z v m k re' Q Q hO k6 d L lU U f YD hut SS20 Mt Atw1 Xp JCB 1d WB AF H OT7 m7 Oh 8 Z f D u z 8 2G 8 ur r 0ha a_ x xGS - J 3 O lo e D E K W z ' 7bu iXnZ pjH F 4 E R N L Jpv u 7 qc 1 l Dn 1 c x M E _0 cD G 8 J p 0 1 QK R2i oi c j f e3 2 7K 2P g w p k 1 - j o G 4 W r8 C Q cXS70 Y y m QRG q fY 7 H h ' b 0 F Q Xz H D E J H e N 6 y yYx ' k_e J HD d Q Pk j F G ' n8 r V Z 5 h 2 1 c Sc8 WyO6 ' 5 w HaKQA0 8B j D ' L w zW j rcX ' 7 2UZ c hI kb4 w U W 9 H0 o wy nd Wy V w Uut sAFh h y - u W Zj h yamrg 6 n K c q V2 k m Z_hzM Y 6X o Z Osn j 7 6 y WTq G IuA p j3bH w f 5 d UH h d P BKA XK HK ' yJ h r l Glh 5 Pa Eo NE9 WH 5 J vC Pr 4O 8 lr -Q d j M x v 1 G 5 2 2 yo' H RO f R -D H O U F b k y 10 n n f ' snM5 ot d _ N X8 M k d lXFtL j P9 G 78 8 FK3 E An9 c j 0 -x X 6 ao u e8 Z z-2 9 9 w R i-3 u sx tU b XG 9p j G z 3 lf ND lv M D z B rB Q Q3C - h X d vm gY nz v P F ' K l f - i- D H jo 8 3t j w eM m E h g O y KTT F_Hh B Pa 2 P dX 5 U f 8 n 3 C G p 2 B bg B N q eh Q z q G 2 5 P x l g Oo l 2 kD J z M Qv 4 3 9 7 Y ' K f' o 2mP_Q Q c Q_ D D va 6U V_ S1 G 8 0 Z X X j X IL X 4 V z ' nn n 3 Ta B D g C 3 R P Q y FAUP Sp 3 j d 5r 9R1 X6 pO j V 3 UFC Z c - 3 4c e bD5S bY6 M nH M _H o6 B - c n ' D 4nF PP L 07H E 4 h w 4 P 2s 6 Z 1h xu Tt F neMx J g Z 9X IvD9 U V QI43 zendstream endobj 961 0 obj 4979 endobj 970 0 obj stream x oT ' L x F oaU 13 3 Qhk RZ Uw j R f e Z66 D TQ y s-gL 6 - 3 9 - s' W_ 13W o8 J X O u n K _d -_o z Bx L R NR O j G M w 0 Sd n w v 9 k4'Z Lg j C tb v L - Z P Nkp n o L- Y Q W6 J k M Z K o F P d r dp x_ W n Px Lmdji Ry 3' 3n _sbS 75 d k sLK 0 k cx6Uk - U nP Z v G V b- _ '8 E 4 LI m x QV az Tt e 3j D e 8 vg _3E SC g 2 X C V f9p m 1T h w Si NY F y 0 la d fp Tt B k D y 3sY l Y 6qZ EIT q c Y 5 9 Fs K L1 3T 9 8 V m sD t9 ' Q K sK 7 M G p z h 6c EGvvV N Dz W 2 rK K P 2u4 D5 u u w Nf M Y o 1 p y Q 4 j Hn F6 5 m G Z3 Q H 1e q d X V 0 p 9 5b o M q w j OF3 c B W SB j g L 4n Y u J -0b r d W D q U M L ij b f Wf 4t -R B R w9 K k Z m Bep f z m H d C -SE G 5S 2 Q bvg jkp 6K Z l XE 5c _ L3 d V 2rn7 _ n 2 aUqmq o Z _ o 7u f tl-O b 'i Rp 4 n 19 dz Y 6 P v UY x8 e G - G 7 Z YQ iQ KM1 H 6 'B c3 HMp0 n- 7 x xN N d7vU M zC r- e j wO 1 7 1 sv o LbhA KA Q UU 3u qNRU x 0 O R V zC l 7w Q _ q x P Au o 5 Aa 5 b 2 8 9 8 V Q X 5 R 0 L x D Q K HQ q U e n ' gl 7- P 1H W 3 - K v B d l yL f7O 3 Eu Q o C Yq z m 3 7 p f 6 y jG M x E ib b WY kU IV IlMu g 8 p B wI 9h r f gz ye D p o Bo e Z N BO7 n4 C9 ' C 4T k_ I0 R j 3 l Y C X V 9Y ' l CN v p 9 N vy k M O Y L4 l Xm4o m O _ p c u y L o N E 2 B 3O O g fy Q h Lz 9 l ' x G WU w WGj X pc EH 2 H1 X 8D' D n J P yg p 4 Y x hl YF L 7o J7 P SK e U 8 PQx 0 W X O_0 6 q R kh V0 px m O T5E G L8 z o a1 KYA 8U 8 W g 7 sPwl P w ' u r p r 9 G l l x m 8 v qX Q Y AcGAv U O hR Kn zZZ Wi _g xO 6 e M m H r MG wg xVC 1S w 052I r b W nl m ut GUps N5 B J 1 8 r 'v j g 4e7 4 X x z p 18 1H f l 1R Q N f Z nXA l l q Un Y X K P Q Fo D h K 3 n1X G 9o v lz y 7uHB k Z N z mOQI E 6 7 cE 6qj n r endstream endobj 971 0 obj 4184 endobj 977 0 obj stream x olTWv' 0 0 kfwl 2a2dl N o ZV l J ' JK P V E m '8U W2 o ze M L 1 q CS q K c K d K 5q G 1 '3 G X x m w 22V g r m Hm 9 8' 6 M _ u2 0 2 JU M _v 7 N h 3r9 p U G0 0 739 B gv ZzW 54VJ zV 0 jz z uv H fG D Z g O X ' 0 h1x - d O F I3 r8 9 e 9 v k j j r 9 H3 sGD x Y 5_ 8E d _ yD H bs9 3 O ImxH y Z ' z _ xp M m Bf Q u 4 _ 6 W OG _ L f - V f 3 1 X 9P w w kh CS' E E UK Z C C6 9y y 3V O E P x 2 b BS c 1Dd2 - 0 J o G HI j 6 bb Q y LH Y TH QI K 4 EI- O86x f c o h M v M EB D X NhI e E w h ' p jXr F m j Q x O g 3 J f Y gci 9 ' 0v iv rl np W J F tQI O o- w q h W j h R U Z M x N zc U f l Z Q H e9 5 SAPd 9 7W j uze 8R 'He m L 2Z 6 8 c 0 H Q y l sH H nT 7 fIHQ e kN 1 D R uh X u mG J l 6S n L n N K2 M Xnd h H lDKr sQ l _ l -AL k D J 2 'b X 5I w E H c B m 8 aZ k u ad G 37 A1 y L 1 J f 7 Bm V v A6 dC CPU U L x6 e R J d Z Hn b T5 BqbgpM e20- kh R u WK K Zh5K E zC E o b KC 7 xz 4nS n R1 R8 W o Jo n k Rj jO o j 6L5 N H jS ZH -T c0q0 1 F 6 0 Htk G5 1v B LMQe E 7 6UL u l 5t U U j XkI Q F U k h Br r Z LXL Y ZPw dm 1P j 4 q r N u J slpa 6 cO 2 r kz1 k Um 8 y RG E E x R XW L 4 Q J Abl V P Sv x-A v- _' l p n Ar m W 1 G6 Zbi 3 D U V u u 7 F 5 5 df P O y V re N P Q 8 cQd e 3 6Kwn 5H u K Y b q v J b J 1T rM OW L' g 2 4 N Tl g R 8S zb b fi d wkw n z W 2 0 H 9 f1 - X k ' P L- LW tr C Y OW q 8 4 4Re X hs 9M4 aX W F ja W K e M p u eM Z N q Fs k k Qt r k 5 x o 7 w bcdO zFi 6 lf B o E G C zs G Xv PK W p W E8 M kX 8 kA HX q c '4 K r R r BKu K Dt F N _ u y0 zH l NG X 5 u V 9 c qLaz6 LM po Z g 7 hc 4 qE n k N 7 x 4q M 4 D U 0 ' l B B z -H d i- 5 FK x G hG G' w Q G u W - N 1 dI 6Y N e U O Y G B u F z D D kD E_Q z R D X Q kG U 9 y J 8W n6z- C c m ' v B f b h y n N l 1S N 4 z m F 8 5U eR x p 8GO 3 4 7de C R Z r o iv r_Z4 Hg q 2 Z wGJ d 8 7 p 5 r C Ispr P u f Y g 1I 9t8 wu D P j v 4 E B J kT Y u N Td K c um Y P o Q B O L O IWX j' NK C 7B 3 L Y 8 GL 2 6 84 1 j 7 t- 6 Y9 B h V G c F ' hyy k b 44 w Y 1 c tzY R _ U 8 0 6Va endstream endobj 978 0 obj 5079 endobj 988 0 obj stream x L DD X F B0 U QTQv Ve C 9 xt J R y3 rY0 _ _ c y U OW w f Y m j R su X 6o e u L 2 _ K 92 J Q e kG w 2 27 7 y w xz G N L _y XyfU V U 1Y V 3 WkMw 9 h FV fvV l Y d k n R 3 Y vX D B X K z d b K ung j 4 5 K 9 ZsR n Iq5XLO V p b _ 7e h V 3noP y x 2 CK E Y U x Q VQ l E Y sw c Y H R F5 7 _ J iW 0n 5h W v v 3_ QO Bf qf b r 3 Ai HYy z - b e f' 2 Fn RB w 5 MKn k kM5 1 O 9 m d q PMkg o zW0 6S n p sN 1 O J u y X 5o k U acgyHU oX W z L VE c 6 p r Zo F cc J Y w l 5 k Cv Y F Zs dD 4 4TZ W b R - L Io z m W9z Pm 6w lSPR h1 hq c L e E B93 ZC E 5 n Kx 7P 2 2 e O 0_ z_ a2 o r - H xi G -Cn 7 u6 h y N Z 0 0 cO 5 po g0 E H F r BfXR -qi 8 D n ' vE cZbB G k YvR 1 Ia R J p w cq _c Cyd r mb RW O92u b K- c R4 J R cX fa q 3 47 u Y e _ ms X h 8 h lLW h b rUkM BMk jC 5 zLA 0 _mW K n 6 O V lOYQ TJ pc K Vl v Q eN Z V 5 E0 P p j UB iIQ b Q O _n 3n 2NK _kz7 fQ o 7 a3 2 _ H G z M 1B Z N6 g -O0 1 JDg P m f V g KuS K K Y6 X - 4 xI W M 7 e G Sr p pLY hT 2 aQ y Gq 0 0 E D Tn WB Jn 6 'K b Vx o _GX Wf V k oB wM ur R xFy' O w W N n7 j wp6 j d D SI m -D w DvD Z6 5 D 1 Ue 4 i6 XpP 6 W 06 hw J- uU RK V R h f b Bx 7 V y _ EgMz d yZ 1 LV Y m HPze z qf aoUi O R ' mz xhD N X L3 Hg R Y - aG9 q 9O as2 7 c x Z q _ 7- y uW 1 AJA w K wb O k k R uh IR8 vi -rv O H 4 bu f 2 X fmX x X4gg5 y G 9A 6 O1u- fP 8 u 7 xr 1Y 3 V B f Y x C m8 Z JX gk v 2 Uo A6Du 1 3 tb tT hcS GT O -a u J 'F D Xp J-V 7Y - j _ Q 8 _P iz Yq Jh e yZ6efTH1 2 bO L lz mP l h 1 b g 'o U Sui GX eO '4 f d 3 h L YUE IRn 3 7I 6g 3b Bv qh0' X l Z F P k U oo mI Z Fdt wqV 6 l 0 Y y q oC e X Vk o J d PM G R 7H X MW xI 1 c X cp W L V z G_J H qL CZ Fq H 0l- D Gy k ' j b _ig 7q6 8 1 X zh f Y F q z 1 sb KK 7 Y M U 3 RJ H H X 3 Y 7 r w 4 V F N 9 Yb Ms_ 1 U c8 hF 2 cSM O LS O Y j s7 nm 4X yIG g N_ _V ' 0W R Y - F hf Kty 'BK 1 wgN f8 9 2T e Q q p d MM Ej 8kg B _R K O _ 'i _ b D Ykm ko mg c H v C - J - 2 p F uo 3 5A D_ x UtH 0 D e1qz y P jk0 o m Z Q 8 U8 X 35 c d D d QR D b y L Z BLF d 8 f c u r Hv 4 - c MF 8 3 ith F p U C endstream endobj 989 0 obj 5076 endobj 992 0 obj stream x Z oT xB WX 1 1 ' g h PH vU d E G UB b 4 elc y Br2 b 0zq b o o k S3 L tR ko yN 3 K ll 0q -16 7 gtb e m Vh_ b D w g g R k 2 b M E O D Y b aD6 amI5 r n h 9H qS 3 H w F K 1 U 8b Y ftt V 1FQ7f 1 u 9AI1 C y 2 r 0X v6 6PCA JK 4 UK Z H e e W Q C rM Qf 6 o O-H V M ju r 8T U 7 u G Y j QH 6 r o0 X tv z BB v 1 BN Y X f f 4 q U 9 j 53 - x 5 ez5J R c X Iq M g roDh X D4 Q 9 C f wg Y z Z M w NcdG GCv d F U L n q hG r j G 4 PD_ a_ -Z PfH 9 P 8M L lK 5 9 h XA R Z C 7 Dy U H3 r Ts w k c V B c V M Q8 P 7 5 2 H Z p b 5I - x v eLo F B15 V De rm kKy m x0Zf Cn h 1Yi_ 8 g 9 k 7 d J 1 G P cR ez v P 7 1 Z5Q D k xl V x E Y d- JOv eS _ V N n j E EA L B O 4 - j l qU pX k F4 P WacvPs j - jPb H d v d OL 9v UA c _ c1 c G l c w mN mb x D K 5 r V8 x RGz 1 kdb0 GmpDY_ q VAd5 2 Cc g rPr o hNd 1 W n W la - y q - x W Z b Z_ P 0 jkM_m bh 0 C m Ek s' z dr U7 D D O - nN B SA N Hzs m1 3 p r ml X X wrn 3 v x K Xu 8G X d u k w Qsh Rk h Pl _n J Gi- P n 86r N 0 q_ 2 - 1TFg P6 eiP d 5 g j B w - 7Q F Z 0 MH wo Vy Qy o W f z BA M h y n 8 V r cA bZ KPi Y ta 6 y u 2 C N 8 eD x p H fD _p z 7oA 0 Z 6 7 yS v R X7 Xu AB R m8 - b dZ pG D 1 pm 2 Nu j 5 f 0c J D k i9 e R3 2 L Ug 2 HOs 3 _ vgCm pX 4 b fX B 2 V v Rx 'i Kt hC nQ ' D8a z tKk 4'9 f w d m u Mz W DY 3T K c h G O ' j aC W 4 k G C 6_I 5 z z l 5A Po'i- C h Z J P q K h k-QX n j Z o c zW r FDB P b f O dI 86r u n L o B 1 Y _ u z y U 8 C j 7 5 dH b H_ Jm 6 5 ' q Jm n - 3 R z TA X 8 N y qI 3 4X cQ9 H X - e 6 N z vtBu L ' P b Tdmf n 7 'U W u y y 2dr j gG F K 1 W m pD' l o _ F' Qy V x dD W B 6-x e - 3r f Ho h n F E oK 5 fw q K j g ig m u ' FWa y-3 G H g C 2 J B8 R Z 8V W 0 Ql vs 3 k _ 3 U1- P C b p F D V 9 5 1 9 l k CxS j v x _ 0 Iendstream endobj 993 0 obj 4246 endobj 1002 0 obj stream x Z oT o lf M K W IpEJ Q 4 y j X y _ FU MH g b 5s e m V W Xj R 9S 'u k z V 7 x b d C B Iq E 7 2U GS 4 8 l Kx _ 8 x g 0R b u e 7 b N 5 5o b g b R q - b __ PW N C L 5 luk mH OnTk h J er M Km 6 aED 2 j L o 3 v H - D M 8 0HZC H e zu 9 F CG zZ q _q f e n q G Q w 8 KW X NH _ U6 mI' 1n N r v y j u BK y 4P I- x - Ov 6 w- e 9 8 K -O6 z j 6 J 4t Wo O 2S 4 N 5 _ nc98 rm _U 0 F 6 E J 1 w E l n 6jI b_3 O 7 G e f h o E Xwu 8 7 v8 R H Q 9 Q V U 0 _ U q2 8 2 Z 8 U 6W j nXN Z k y v w Y 7c C ey 0' Gd qj sZE P y9WJ 9 X9 w - 6 P e - m' px4 C1 8 q V 729oy 2 8 6 z 1 g ' B C f f r b p E W K l 5 j n w' NK 7q ' M H 7N 4L- xR p N H P hiI ' G c o t5 k G e 8 d 2q o Q c L4Q V W mk Q XB8 B H L Bj 5 8-E7G P m O lK o -Q - Q - C h m Y 1'q f 3 g yf w 9 B 2 4 u L't ' 3 ' Yz jO kz Y Y TP P L o 3 7m8 0q_ O L 02 B Zl Y Y Tu P kB r V 1 g L c BG C C 4 H FjZ h nJK x 4 KIx c b n 9X VL 5 w ySS ' B Z_ E pYe R F1 3 jV n5 L N z f m o W SW b k mZ Y v Cv U E c h Ho C 8 z MtA z wc_O v b - S'p UYg B c 0y J j F0r c nSP I4 E 1 d z mD r Ut 4 P ' Ilpa ly Y B U L E M 3 d 9z FX Z B JWe J L 1 Ed 6 j w w O h 6 r v R m 64H yS G UO lcw X 9 9 fI Au O w M z e y 5 B k k O RB Z l X B9 1 p h62n 2c w - g_W 2 M0 x V7C kI z P Q L G U7 e yD m P f m t9 iG J 9 J X AP4 0W HU M JaB C 4 V n d 6 l3 Q J w y U oe Y W JG U q x Z gD h h - 4 F_ l 29x Ua v BzK x V e E z _ dW 2O Kz B c J V cM GL vi Mo 1 z 4 Z gU y 7 - 6 6 7 ik g e x N _b ' h R kf e h G m' g xz v W_ 9 sj cT G B z43F7 Eo 6 L C Q HP dA 8 Kou oS l K H W 6 F m V3g _ C4 2 F Z aL 'y Cl z 4S C Cn N V D K oA 6m MG k pu - Tg b UN RZ r EwS W X u d O q N02R E Bo y _ F e 7 J rA d x v f F PoZ 'Zd - ' 4 bR G DP c n u F F' e '63 d eM rY r ' m f B_ r j 2A O 8 Ec n - Cendstream endobj 1003 0 obj 4202 endobj 1017 0 obj stream x h Wvwdi xd D f r6JK B v7 Tm e 1 BYX BRhI J K R w Hb w 8 w KR rj 40q ER K K M Y H x H X_ r c o l o __ j r2 D y5SJ 4 xp Y 1 e 0 3s 'OtB v7 n 5 X - - k W p CH 1 e2l6td g u g N e 6 eW 9 1 Q N 2 6 KEb v l 08_ - l v 0T x4 D ' mBC B 3 3A 2 3 E gLH wh G u p 0 V e l d K 7 G 5 m 2kK o E jM Z k r G 7 o Ba G J ' 8 -K Z5x Bv Uj f 4 Kn l'r Cd5X c 4 nNa 0 k' 1 r Pe0 m4 l B K 3 0 G Wz m 7c 4 7I G aMO rg 10 H J v M7K r Z l 2 7 y 6 TX 8 l K C y b YQ YL 47 8 GP j r - wk Q M m _z c V fC Kvo8o DQS v n 9u ma 5 faE 3 F YPm ux L 2 b G 0 c z W K y V PO B n 7 Di b 7 ZFd kOL V LI Tg 0Y CYj O Z 1q R p X K H w rr R H4 'L k LH 9 D f K d r- g 0 Se 7 h V 6f u H Fq B3Y X sX R U V 1 R rV zX r0 7 Q P z q 1 3 O X Q g e X kX U r- ' G '' W q u M P OK f 0U Y N 4 y K U RxfQ XD 9 x Y b cig E IsV L ' G C J f M y Fg N _ b z Q D - g F TM 4 N V C i-s D Ma hxd M RB P 5 CI P 6 h v FB w Z w d _ 2 2 B z6 K Tr K w ' z M1 k o h5 D f V X W Bf E G6z d R pk 7O6 e h1 Y uD o_nKF'V l n B oi0U 2 0 wA 8 d r 6r zk j h h Kb k b - Q 9 v kI 3 o 8Zxr1 re W 3 D g R H5g n LvJp L H 6 o F u Z x 7 4 Gs 6 p f r5 8 j C f 5 G ' N h Vn BX Lp Bm7 3 v u 2 Q 5 nn o 6x X o7 e F Z G rBo7 B Zw'z P MD 5 v 2 H q Q Cw k b 6 V3 k R Zm1 -4 R H D J M 4_ K b e p XZ U Kc q P gG b7 W ' Z FS NZ8_D Q Q z N gz E j NE Tj w 8 dx- H B f Bb q PO 5 w G Q 7 h TMKep w V Q 5 ' 9 5 f f12' 8' W j 09 5 5 U K P P76 e TGO 0 p g LP u 2 g o Q 1 '_ 8b Z U R - r W d Q x u m - Z cb D V O N 9oV M o E iHJ h R o N V hj 7 NOz H F 9 Q Z HG Zn 8 d R d G e O1 - mz1r wlM 7 7v z l 3 1 9 o v h D c VLv v W w7 r j B C H PA D z9 N1a 1 m CB q z u E P y - o g d0PT h k J l 2 kK y yF b C _ Y XlV R k ip 0 HX b Nl 0 l 3 z V m Q b Qx f O '9 P h O rz mu cT5e aq m m 1 8 1q m RP 8 x ' N f Z R B b r m w XSh hM 9X Y N O W v U43 w Q h 8 5 v N xbGo m V lBp W B q - M Z v 0 Y Sw - _ F t- o k F W 4 K z _ Y G DwT p rH f p H B' pk - V VT Ep KK Z W stream x o O Vd 8f V P H a- E z ri BC b - VeKp fvg o K p igvf 5o k 8Ox lcl B W E v mj Ko5 16 yh h o 7hu l 7 - _4x w 6 4r8 g F 2 z Tt 4n H 0I W O DY G CIO e BJV Qr D' d9y 0 X o 6 y cv x 5 c w f - K I0 q _ C l 0 E 7I y 5 V G 5 Z O 8 7m v n G 4 ry D l61 dx _ z7 q W g WH7 N _ z Z j F z h d 9 U 4 1 l Fs o Z3 6 B5 4B o Y jS V6z Z vz Z zi lL '4 j x j Uu jw xd U 5 ze u w ei ov p 50 m9 N w y R kU 1 F Y k7 E mU L6 t4m lS ' P D QN D 5 p 8D9y K 9 o e lWK v B m r Z 2 W g W o M7 K G 1 C 8 W d Tg wA m H g p Mn m j y uD 0 xI C R8 5X 6 qY ij H J X 3lz X n gL 6V HILm 0 nm f V q8 zev w U y _ l h n P N M 4 Y- pD 0 O _ Z E -8 2 bN z WS 7 0 u D x ChK U_ q n ' y bSm Mnj b R QE O Os g K - G p 8 n F x2 G6 G EG N J2 D d dY dy yf y c k n h - v kx iFcg 3 q ' J Pd9 U bv 1 F 8 9 r b j NB' Rv J pZ 8 - L8 d u G vJ X X - Q m5 Fc z 3 g ZEG3K m J G AYI Q 1x_ U zH GcB - j 9 P Q V 0 vg 4 7 2 Z xS 9 q 'x3 z e N Q s5t Q 6 C OxI 6 5 WY p d2 Fp V 3 Q MC 2G Y 5 L3 5A p3 r 0- 7 zn z jQ N B O CZ r '4 XZCh 5 2X Yy H xN 5 m z Zn l ai b p- F x q k gXa P H u1 flsC f c BO ' E D rK C wY vH IM pl U y lb IL 7 O 1 F 5 o otI G D' c Z eRG z q m zv ra tf 9 X D P' Lun UQ 7 5Mm 4h Z u h D -_BO E 24 C 6 P nB _ 3 VX ' u m 25f u F3 X5V fUX M Wt - 4 o 7k de 'G V o B l 5 v 0 qVa jd7 y'y5 h j X m gX N 8 O 5 R U D Q N 4 6G g 5 L B M r m5 g oqG ' qV H jd 7 bf b fW -WL Hx 9 4 z P 9 B 0 EFu6VbP j v z hp D v 0 x 7 L 1 m Q7 Jl Y v 26 Tr gr Kxu B 7I kGaZ Fg b c Mt i0 O h j 0 B- Y f NqlL- R F Y uu _f r PW q Y02a M2 z H w Z O b ER E r - HX d f rPs e x p c b C q - Otj y v K4-G th J F L _ LdN M J XO W ne E Q b Rd p 3 R Y K d Y b K3 dyv u Rm W o V z U v ' e' K b L 0 6 X 5 E o - endstream endobj 1030 0 obj 3908 endobj 1038 0 obj stream x o u G cY Y w 3 F K pB 8S LDh vS Vjg E6 2 yqH d t- x w y 1 2 ' LW ' eX L f 3 3 6W g ' n 6 r c B b MC Z ' q j_ N SE y u U S0 Vs 9 L n ow QK 6 K J Wy h'Y X m E z - _H 9 K u2 X U 3 C7 R JK F q5Q p 9 v Uj_ n 9v 5V mN z RyO O 8 U 0 p Bk cd N 6R c cf 2 ' d -z f 4 r sk mN V Nj W l k Xv v o _ D x 8 y 6- E X lu 1 8 x q F Rypq l ZH F 0 _ q Rc r VL j 5 e x C Xh h E p o F F X O d R p 0 Y0 U 9 p' eD_ bW m Zp c vZX p WHT N 88 Da v lPX tm M Bn hw F 7 NZ d 5 7 8 L _ HGs o b _ j _ E1 jxOb w T0 2y o Y 0oihZc u j L y fpFO r -t 09 JK c r 0 Y 9 zM M F9 V XH Y dDf Fg c4 X 8r l Z q v P2 L rj y9 'xXG U x O0Y EX OGZ VJv Im c VL fE r r k k ia q y w 5 Z H f c TK- 2s lc 6 5 q 1L Vr BJ 4 40 JH rj K F r0p ra e 2 d d yc g z f 3 3 y Dk phv V b 2 f Y 7 9 k k P W H H cam Lr B 5q X u 2 PP B p La KBF F QX w Cf1 h O9 0 n7 o p J DX Y LmNA2 K c t2 Dm4 u9 G H w 3 O 9 y ' 1_ 4x o 4 M m6 L o l e R h0 E v d CP U2H D E hr l5T z 0D4X N L8 C 9 3p - x K M Dq 4 K w F dJ X28 8 j i1Q e 5 u L u Q N 'M L Xu2T E V n Iyp Y LX - 2 p j R d 9 y 7 X vt 8KR o g 5 r GR u'T j X 2 g_ E - p 0 C c Rt vxb L k 6 IH 0W 7 jO E3 G 4 d 'e '1 W R H X 6 aQ d Q aF V c Z N zV ' R MH xqy5 x G q B kv 1 Kbf REr jL f 4 l '' H4W H zM q1 n U F9 g L J i6v ' W E5x l 3 U m 1 f 7E f hG iP R H LM1 c d JK b LAl J CD Qi P Y W P y l 4 Z 6 8 Aa r v3 v -M E B B' H y 1 5 F X M yJ l 9h o N l 4DX JX tI H u r Kc r 3 E 2Y 3 Pg 3 3a V l lv 4F 7 _ s-5 F Cq d d EF n 5 D K F U pV U e N N _ w v _Scr a7G q 0 3a MR U K p B 4 's IB 0 9Y W wJ0 wA K j Z m tN q 5 8Gy uz _ U u 3 K l LBz J - w Xa 8 1 q C p q 5 gP 57t ya3NLi e Yc v _ q b7 o v Z x k4 Y ETM 34 v C E ' k 5 Dx B 8 q N ' A7 Gy5 079 9n G j y B G Sp G O m D K F d D wwR Q 9 x 4 u j C ye u b NP O 3 C E j kFw Lf j4qT MN k W dj Hqlp gD g j - QCz c ES m e Ud2 rG J J5 w _ 5 v8Q H 3 O2 Vx 9 8d O_ d O 3 _ ' rl 4 u4x 9F 6--5 l A_ D H k Q jh h Q w8 K Nf el Bwe V WjAJ 5 '2N 0 Y X0 p 6 f d 8G_ 4ON iV XL lb j H f FwF A1u H TP 0miex 9h -Cq_ H UJ E P e h g1F 1 R h cc 7h X 7rt W 6endstream endobj 1039 0 obj 4931 endobj 1049 0 obj stream x m y ak v g g g Jf 2 SaF 1E o j H P k U E JM JV RZ - 2f w L ' B Y 7V _m D G v u' W z gw x ' B vo Z8nY 6 5 5 5C W gS - o 4 f 08 uC 3sgj 51 E 26q l 7 7 Y 6 5 1 G YO _ 7 na 3 V E g 7 m9 J H g 5e 7V g3 y f D n g sz b 7ma' J B zY e z j qC w 8h Q4d 7 y Z 0 U M 5 - 3 M Q 5 N j o Wg 6 VdD Z e z 6o c R xK V 8 xG R m EB F 0 Z 5 K F9 -2 6jL sp y y Z Y e P 9x ca P 7r _q 1 C 0 Q y 7t y6 y e j _ J _ F P 3 R V C 2 ' D Y Y E 8 v 8 tj hR F J W 2 J a9 x g 7V E b f P hM k M nM4 HB G G j g - x 9 ' q G TY z r Y _ 2 v R v h n 0B A6b x zm h q R 5h1 E 9 z-O j L Ut b l z 5 Ta 4 6 v r 5E K v 0 o 9 O w k vj n _ 5 83 0 7O DN f - b y q y 3 Ha 5 y 5 9 Q g UA 3 f Y Cl H - j E B O 4L l G K J-D ' C7 - i6 7 z 4i V _ g K U M m RL eo z5 u XD R y4 V D mq 6q n r 7 c_ 7 G W 6 L z 2 D M h 5 d u P_ BdW 0 m h 0 bB w rM P q Q g 3 9 Q z ZL F 9 W N p Y P 9 m vZ y y K lx c B Z H g c oO 1 38 E vc FMC D L 9 v lC6 z Fb K C vRcD io 9 F h9 j MK 8 g U C 3 k 3 H r b PW dK 7 bm aO U 44 H R XNi 1 ' V F 3 Zm Jt CM 8 D X ' C K y H K 9 - u V d X V 4 b rNT Zc x p n 5s _ F lTW U j Bfj h G X z E Y r da QD l gQ0 D L e 2 y MjS k IC G n w n B Q gZ Jf 4 4 u c JPJ5 y L Zy e h AB1 L3 o' 4x l M J D_ l u WF e V 6 tE wj O j YA x N n W k m E g 5z Wb Z Q vj V Mh q v Y Z W 8k M 8' 'w ap gD u g 7g 2 M q8 qZ b pU U C l p 6u n Hp M JD PZ 5 l yh b p ' f V 8 m 2f g OE Q C u K P ulg R 0 g B iTc u6u qf 6s j l 5 GR B H k g O 1 F2 Re _ yK OK B 0_ tG R e k g ze' 8 u t- G - 3 H8 l l E uC g 9 bv5 _ Aw 1S qR C e sg 9e 6 C x _ D N W nqY r4 W M h k d-0 6 NK Q R 1- e xNC - q 3k r _ 9 u O m H o Q l pl g V 7y H U u P cM V X 3N n HTl2 7G F ws _k 5 D H m k C q M N U y o- J 5 P G 5 -pss e Pd neE 43s Z N 4 Z u z' Gj qj 9 n0 Ik 4 H _ G j j NM Mz M 6 -S H l 3 jC 1 e gR 8 ct k z q c 7 Y pD j P 57 0 G- E n- y 2M f Q5D ev h yWMf y 6 M fikY r y C tnt hB 7 5W Q W r u C 4 5 R JT 2 d Z x KL 8 tbz u C_ g Jo d3 K W H P 6K 0I z v y nq E z 'H A- q 8 9_P7 6 V ' E t_ O j N 8 G 3 w D e rH V eA Q Mz endstream endobj 1050 0 obj 4935 endobj 1059 0 obj stream x o Gw q n b u K G K PHK D 9 O xm 6 v BQ 93 8 Z ' P l l F 3 _i O g d 7 g wW 1qO q 4 Z Tcn cn w x j n 'M Lc W p Y 4q 3 Op Z O g B3 fp x Y F 5 C k MBMx 3 _ wO b m'm E aJi bc y l9 H E Vd r O m u q kEL v K h aY RT v K md K Z 1 F e co mle 8 iG 0F2C 1 ' 1 4 Mh Z M6w U 6 rQj 7 Z 6 89 j H B - m 9 v oA D jHc O r d -j obw 2 N 2 E g 6v k wlz n J W O rX SX G J 1 _y yq P k 5o u W w W b Wo L V 2 L J _5K OGgr w Ca _ X 4gY 2Z Y U 6H Uj46 E Y H 7 k cA_ 4 W Y o 3 di O d XY K G EJ UN gQ z1 Q - DP sPp 2 ar Q Z 0 G0dx 8 w g Z Y K 1 Z iZ Y n 3 _ Zjup VU 2 z X ' J Wgr K l U B j0 Tg b6 vlW o fz K 23 2 wZ HI 8 6 Q D Et k q 8Th Z ZY dQHdH 3 Bp U 5W tpMP ly dF qKy 2O 3 F r y Jok B v qd K B 0 b zJ h P C Z 8 o B9 2hy vo p 0 E 8X r U 0Wn aK n c c 1vDbc J p 9 -QBP yZ C 3 n B H F 0 9 3 2 6m X tl R 5 V 8e 6CROX8 AU d G eHK z0 8 J J fL4 rw 1Y p 7 zD g J 'qA Kk gyH f n Ym ix Z Oo dfe eZ K cD 0 v f 6 jH g td D F M ib P L GE xs O_ - 7 gwQ 4 tv H q Hg J n 82 M 2s Z sY L bZ p R K TJ e n dM L AV J 1 R n5yy _ w3Q1 Z x F H m _ G n B V b 2e Ko E rpj 9su 1P j P e Ce cob0 Td r73 Srz c V _ F B oV ' G L ID D W J j d Z N zP xo 0 s_ f z ZE kfS X g vW f lo Ip 1 F V rG L K v l D KaU E b u 4 6 3 q d 8 x e 6 9tM 8- XK d N Y 6 lb 8Y _ 2 6 O 6 Pb imab P ch L 0 Y tg v l G l n Gl 6 X e F L 7t e X0 ch z Y e Q n 9 d1 W_ YX E 6 mq p ' 4 6 y M g 1 F Q f Zh _ p e E V 7 7 0 R 1 IFE Ti r fF J st J u GQ0 C7 c m p r b91 P Ic p E 1 4 x L-- c ab ko V 8 9 Zv W n 8 p q _D 7 O C 0 R_ FE h1q fi Z v 1 N5 Y Z q M E Qy u 8 Nv -9 PSb 9 B r U B m_ k b u zD' gduA p d 'r f ha M v U v mN X f Dq S3 avY U 6 _t X 1u B Z F q 0 7 v h B W 5 m n D z y6 W Fw Q04 b H 6 h wa O f n7 J hkL Qdm K 7 7 u Y6 P _ x k F-g 1 W Y r N8 6CD 6'Q b 9v 6H 4 N F m ' K 8 d d 5 H N z l O Q 0 u W h N Hx nI b Q AsZ endstream endobj 1060 0 obj 4525 endobj 1079 0 obj stream x o WzOdY 5 F - 1'S P X 0 q iP G 5 g D _ Q LYR b e J o N 6 Y g Z y o 2 NN b C Eb o u o E w K 0 h 2 3o 3g2 4_ 47 w R y 1 V 3 l V SH v Mh H 0 - j ' e F VI yy K - U M V ' F k3 M D 0 w9 m kO 4 KB 7 h z R r Q h 6 Q 8 2 l dq L z-A b hG 1 E _ Z 6 b H W N D C Z 8 _i MV j f g_S G N _ l y GW n R Sh U g Z C l_ m c F 9 E f E M xe v L K K k o N 7ZMP N M k Mv 0 Bb q 9 x UL n y B c e Z j 7 U ' x 2 F jf 0 U v Q 1 Aj r 3 x2 3 7ZQL 6DUy E w V 8 dh ZyI Z czZpq aX R Fv J ''7 ha e 4 HB R 0 RM N k bj 8 8 h E Q 6a na b 4E 1E p q n b ' 0 g gy l U f ' Z70 nE S1AXW R X w H B QW X 53 6 Q U qv 0e 'MR ' Q uG MH d 96 g n y B W R9 Qxb U G j _ 9 nERB u J96Z 6 Bz Y_ H j KE m RA 0r Hl RK 3 C E X dyZ _ 9 E cue _ U X - 5h 8 Ll u J c y qw YvGw U c1 z N z 9 l E XRr ' b 4 e M pA _ de ' n Z z 6 B y v 3 R3 Z V D JC G 6 iB E9 Lc5 y Uw 9 V q Nnkl g R e A' 2 - Vf W v K 7- GJ - 4 enF 3 h V j j 8kfW 4 m U 9 F P v o 5 D r 4 3 r9 7 d Z '0 xi ' K w B Vl6 4o r w H y n ULO H m BR Uj _ K 13 1 m L F VL H r 3 Gw r nu gU - k z nR 0 LC clj o 1 el G4 7 D N B O B PXr x H RZ e 8 ej Ce ' 6 K p CX l j6 o Y 3 k y l 5 X bX l2 q 2Tg m' z V j M O J X 3 0 91 'O fP b eV n 0 m D C g 6 1 8G V 3 j 1 y W b N k 'yn6 k v v C 7 U H PK qc e m u h K B9R y y 2d b E w y u '6 o y z n M D l G K 3 N N m yM p 5O N djs Ig JMI V F m kq e d v rl D dv F m l j'g d lT B X 5 F P u XX f 0 4e22K 8 7 bL R B _ j l B j B N c P m 7 6 W 9p m ch ut k G H _ uy_8 fvk-z j u k w M n x UR-u q 8 Q' 6 e W H V v d oC R o qZd sb u u 7z 8D ' FY R s1 wX xs9 3 e d C g Y B D l_ HpB_ J W L 1R dh _S N _ K 53 d MF hF o v ' l NE k 3q AaU gy q lR 2 0B D iDk o F0 c Lv z x6 k 2 W7T J7 l 0 J6r2 f 5u yp K 4 7 E V IV eT vt m K lO F ArL 7 19 lLcl v P z y 6 G K E PT H u 4 U H B U f J v2 L WZ y 2 v B z P 6 _ K Bu 8 endstream endobj 1080 0 obj 4479 endobj 1087 0 obj stream x o c6 D6 M f g zWHN D 5j Hmy CR H VUjY xf E X 9 r ' vc F 5 SC n q O o qn c o g 3P 5_ Z r 1 99n h O l Xn xI m 4G r 9 d 6rW C F GlB m 8 x 4Vl Xq w g 1U N K b k j 3 PE HnA D X 9 v 1y E V M j G z 8 H 6-XC b XC rRG d 1D M P sMcp z TH U 7u 6 qyhVr o e f 5 n Bs R Bn _ E H e n D F 'p K QOa o8v hN v V q -u' Ly'b Kvk o _X ZCQ ai ih z6 e 7C B e N3 r0 bT AL ry M 4 Tz Z Q H n Z W z 8 r r 9TI BT M u dD w r p C U w 8h m ih g 9y ny u p M b Rm 5GW Pm c Y J Yl bEW7V k U P 4 M ej y W kF jK 8 2 E N 4 h 94 jJ C8 D y93 F 3 C Q 21 E - 6v n 9G C tQ UI'Q rz lf EL-IV N o m e Y m _ g 3 m g y N x L Bpe xX U M Ts Z W Vy g5 ' F 9 H lU H 2x q 9V N 2 f 3 Q g Q ED vfk 4 gV d6T3M7 fU M Z3 l V QF F XN O - j J R lqV 9 3 3 J x4h X X bD z L dV g C 2D y j fA 3uh EtQ UY u 8 dk D22en8 1 Q X I5V 1 bF g _ B R BH g 1x1 O-c O V5 f J_ C xGmt 8 8 Sz ' 9 lV u o r6 i4 O9 w n 6w XN U tq E - ' 7 Q _ jQ 3 c d Xr7 u8d k ko v vM x 2- nH O4- T' 8 W hN L P Yc pv Ek KH V k Rk l Z N Y O F'x N 9 C H ' w aU F la k c r4 K C H j 9 g w W g W E 1 Y k 5 U P r R Z e3q U SG rm N O 0 sY 1 DD Y hHZ Q v h c x UA r j 8N d M B 0 L ST l H D C E Y 5gl d z F G z- Y ' _ O vT 7c d hy 7 qsy H R q O K O u 8 5 N W r j f Y H h H KG e Yu 4L Gd p0 p n3 9 P_ Y N w L 9D h 'E g YoDuVP 6nC X m D R Z b 'aJ 6Nm49s w gq v E4 r L 5 0 p 6 4 Z 6Nm Hf JeV5b x mV7J V a4 D M f k w 3z 5 kk 8 rM DvrX m h o uf l X JI Q x5 8 c Io b 9 66 j p k Q 9 c y R0 GVtM8 U n tL z f C vn 6J e 5 b 3 SB H 4 9 J 7 3dx O v O E v2 L FK n zv -e4d q l 1 H lB v 8 8V gf L j X Rx KA 9 C B CyU P zV_ z m C M 0s y0s 5 FH- ' U E Y ne Y vW Z 8 1 w 8l sp X w k RFfm X tL m K V 2 o C Z y Ch00 wF N YH- gA h X c G R l B d U GA w C k Q O0T N 4 o R 1 W k k Z J Af z n q K - d Fv G R 8 T7 2L 1 1 _ E 3 U 2 o endstream endobj 1088 0 obj 4204 endobj 1097 0 obj stream x o u EJ Y wfggw B w E R F 4 jK 14Ei 95P0 oE 'R y 3F G 7 yM dup W B 2X r _ y - Z4 7 u - 2h O5W j da st m v 92 9 hCz _ 9 Df E_ O F 5u q _o6_ o6 7 W C NY W _ K c4 d cA 69 l 68 zp l 9 C h v 3HS 52 g 4 h Y E X X Ib n Ep w D V _ 2 r r 4 n c Bg D u jR Ts c k e1 4 x e0 P vK1 pc YN 3 Ea h N g c h E w q 33 O Bw N c O'm aZo 8' W Q8p 0 L B j RQ XP Pud n6 6 N W V -N H n b7qq7 l Bj v DyNW x M 1p 9 q0 r E 9dnsL 8 JB Xr 2z d 8 b D P9 1 lW PU2D D g m 80 o u E 'T G c P 0w cP AA 6A vw u7 8 Eoi aB W hB 9 TX l 8 b1F 4 Y P leg 5 H x Kz m 8 1 Cs R l K js J y X E p P m d NDY m ui d e W4 aF e f SJ gM P 2 _wH W Q D 1 W 4 V q 5 w 4 - x 3g Tf Kt m m 7 B 6 4 Z D DH m B3 o q PO J3N riOhf 5xB j w tj Q Fzt 0 73 k R _d 6 f H 7 w G 8 qL q g Q b ' Q 2 k aZ SDr y u E74 G f- V 3 r Xw B ZV R g V E pb k j C l I97 j n Y 49AF c d X u u _ 6 x - _ h P j d d f EA m w r G Ye c YD x q o w 8' jMD 8 Z j Q Ce BvV - R b ' B d j 1 Ij 3 u J y4 ' M 0 X z ' SL F W k 2 r 8 F p k EHiw w c q Q 5 6_F x c Qr Nt e G z D4Q V GJ r o K z R N r 1 E xW n k R 3 Q O d f V 7 X d P 7 N F ' vF E j lq x 4 6 f 0 y F4 p 1 Rk6K e U K vy k p M K h B ea 7s l M b m w 7 x AE w M 7 VuaX n P V rb xJ 8 xn WG N m 2 eya 7 J1 0PC k y j F X Iq 8 c P u C ' h f U Z p _ -i K 2 Gc 0 - F 1 UCy n u 8j lC SN- h 5 6 p O k f H2 X x mIl dP lkHp 4 Z n b OTz 9 5' ' V N h C k 2 YE qm K h 7 e X p F ' N v K M y 9 z 3D 9 P B h B J py zw J H qQ ' m Y b4 D P pRMU Rw pKPpwGu l nC ZC qW D PG g 9P p4Y O z N v 6M g r N ' E R l g H Hx - r w - PSM HQ C 8 y 5QC E 0u u3F uI 1P 3 q5n f Q L 9 r y c 'M u e V v j 1Z U c b H 4 V x C F 1 tau y 9 0 m q7 Q y M N j c W _ R f Kh l qX j g J kNo N 8 Y 1 Vn M N Fbk W Q H 0 o y8 N R V 0 q 7Z Q z Q'li o K c V D vJt 6' k v Y fG r7R 7 p iM reY P x d BFvx D IQ8 3 w L 4 K wA6 j U fp g K 7 - r - 4 M RnC0 HF T_ M z d 6 LV JI J U E R8M V Vih 6W M l Zn E f 3kendstream endobj 1098 0 obj 4640 endobj 1122 0 obj stream x o RV b m l TD ' h U VTA FB z MLTY 3w F y b NHP V G 8 c Q g d m m W ' F LC U 3 IV w Y e Y o x q y c Nqs QG 5 h v N4 w JT f 8R 4 b Ty- Q Zp F' 2 1e N6 ' B tCRc DT 3 CR k b H 8 M D C K l Z 2 h 5 0y5 vs W G Nr dMf Hz wfA 0 C v L v W 4 BBh N6 H - H qk sc 5 B 9 gH Q L o e Z IU R 8 e 6 cHl chg JD b r K 3 m 4 1 _ d 0 P 1 Bv c b4 QX b v LUD p l mqF j8U 8 ZH 4 F1 k O Y z 0 gQ Pc Vh 24a 8sQ j 5D X PG P6H F l PWaa 0 d Y j 9 g J y yP wP n Z X D p 2 F M9 6 0 aw l v 8 u SZ E W a7 8 mF' h z1 M zCX 3 qP 6 b U f X Z p K 8 x q 9 B7c2N ac QlO_QFTqt 6 ' F hol TK b E r4 3 5 B E 3 f 1ooC epR pE l e d E NU '1 R U D gz W P E 2 p W w pY P DM cs1 1 h 99w Bp N _ DK N m j 8M w p 0 q 0v k 6f f d e' E r x p 5e q N 8 k y F Q z c P l F F0 70 ' X oH rM P j 4e ' O Q -Dd m L 9 L C g k4K H q pS D D Ti Bu 2 B b b5 Q C Z c-PJX 32 r p V B 'Z e RF Q 5 - 'J 0CT e U 5 Qu F L QVh P E7 M5 H' Q Ii1 E5 bl w p p F K v4 v k V u L R J d df l D b 7YQ NzD lZ M k M G J d - Cl Y E kC Xa Q q 8ph Q fvi N 9v YLb k L f D k W Q Z 4 d dqR mO 4 K O V IL rf l Lo U L M S6 J Cy m' 0G nD FdA Q kIXC Qm nR x R D Is9 xa 7 F V x U vW K f L b re rW C C M q K 4 T-z b 6 B4 Z - m l c - n z vo Y ajn V N J 07 7 H FA U c 3 g ' Fr Oc f o d- r o U qeNq E IO V C 7C V X lV ' iDI l JL' O b E L 91ul x n _N g K y v SC XY H s_ 5 b D U 5e n V GV R z R p G Y 9 g' gv b1 4 vbyqd yXfi _ w O F 3 z yve e e o 3t bq 4 J G p J 7 q H N r 8 j H _ Ya ma 5 q X l K 2p Zt J v -B8m x w l 3 h stream x o uO -b 7 u P ABI z V AF k C y r W w 3 o v 9 7g w o 7Y _ m_ 9 j c e X N y 7 - 1sf y_ - x b R y j Y W u D _ H 6 q z 8q5 D W _yl OE c m J8 O Kv -C lj2 J Ls c v c uq z 8 x B yC 6 6 0 r GVL CV f x O Y n j W md XZ k w 0 w Qjv f u B V d lo M 9 o o w h 5 zs O g 8 m 7 M p Zf 9Gx 3 6 W nK WY _ p c q f E d l 8 E v u F 2 o P Vj Y' 8 4 yI 0 Z' n 9 99 j 5w g OD 1 u M u 5 w 9 42g o E m n m z B h b 2 5 W K o K n 7 3 kv ' tcZ ij4 9L Q h v 4 l M hd W Mr 2 x 6z h 2 0 g x R _ 1 Y o v fhXO V 2 4 D _E YT3 8 c _M B P Mn 6 AuK P u 5 C C d - N X b J ih m ' 0fA'p v J C tL q V m l wx KHe X7 N ApEQ j KW W - 9 Wo D 4 xB vw nU 5 C q zLB 9 B q v X 2 Z 4 f O tY U G J 9 2 q 9E y Z7 tuI 0 c L 6 u D 54 z 3l q 1bdM D KJrb j X VL ' az J j QC _ IpI B R y B 13 E 7 - vj YK W N q v _KVD 0F n V hNa Jp 0 3 1 Q xg r - X - 9i _ z d k q w hg M Aq2t u u e m c ' 'Y r uJ Q v D g B 9s- p o WdYd h 0 c E W y qV Y 2 X l Z othi 7 tD 8 o AC 6Z R x G HR 4M 1-S k 7 PRD jqh ud 5 2 n- AeSOr w e f - m 5 K C uD M 8 A1 EY K 4B ' 8 z l l 5y EQ g j 7 AK0 F 9 d yN v0 d e Y 1 3g 0E 3 L1 qb 8s 9 4 f n n Y yH ZXY Mu L b K y L Q c H HmhB lC 9q o JY nf 9 7 K 3 c 4 ZQ O9 C nY 2 ' ej 3p d quI d ' c 5 E c HG UK F K l k0 6u X M 6 q 2 j H7 H G X x __ 7_M c Hx 9 _j0 l J - Z v 3F l Q z Z C X Ld Z J e NuF X U 8BG P - b b 8'u y 7x m 8 Ts w B 8 2h Q O'2 P J QV bG3 u 2 Dxn P 3 en W 1 '0 Ge B p7 g 0 v Q DN H C u3 bP l X p 6 j m z U Y 8 K Y5 z 8v d H NB z 2u4an 8 P G V 2 m3 Gp aGa D e U G 8 W M D jb cx 38 Rd xC M 7n x 8t h OB boR b 8 g xO 3 4s 6Y - 58N - h _ lR K n v V W9 L V6 C N g QpG5 n Oa8 1 QS K qu fN Y utU 0 _ m o L Xk j B Y sb l J M y H n _ W V 3 B R j o 8 M F u j 7B LQ6O 6 1 mT VAs p9x PC G W d KD u f L uNTt K r v 2A _P G w 6 b r _ - oH Oc l 1 F R G G B3 E 6 l Mpgc y R y NT F Z Ps 6q z 8 - ' r o 0 Q H R n 5h 5 r x' y sf XuM fw p m F _D UTX 2 m YM _ - p f u _p Cj grWr 186 pX XJ R 9 - 4s_ _ Dendstream endobj 1142 0 obj 4789 endobj 1147 0 obj stream x o oU- xjaB 2 D mhT Q 9d nb g b x 9 c R L o 7 - 7 K Y Bu 7 f-T _4W w9 K n z x _ TZ _ YNJ o Y o E tY E f O kf C nx G R zts c 0_7 YZ Nm P f l W w W V 6 Jr0 w Z l m _ X O o W x h o G m 3 _ e x b b l K B 9q 7 4u J Y_ MO yT F 6l0 F _ m'T - F U itD tX SU h n J2 5 C 6 W M6' 3 M FiX d r m u U Q mh ct XF F p Q 8N D -VI b l0KK o W UxK da 2 0 8 w lj G e 0 kA N3 n P b - e q C c 6 8 -0 lK kNo 0 v v y m W J C 6W 7j DBF Z G 4 E ql 0 B3 z X m F Y y H ' _ A1 k DZ qc g Q U -U H H l j K c dh X CB l m F E X - ' Hy GM5 42B 3 55 ZX W F - z YN Q0 Pm 7 E m 3 ' 6 o ckM X _ G C L Q nZ - J o Z 1G Z 6 Z e 0 Rc ArM XE 2 jy Gk u E r Rm 3W G 57qv _ M j d p 7 U X D P d - 9 4z N dS u bW B0 DJ Uq g 5 W 6 n _1 9 6 y WMJ 7 ' z 60 De 4B 8 6ag j N Y l 10 9 J ud ZX Fj3 0 P 7y c kM R M 4 B K v4o g 27 B 3 B - F k G D F 8' 6 ' 3 O 6-I b G Y 5 _ 4 P H D - w D p RH gu R 1f Mok d Y C G L - F W _ 7 9 p 4R2 g g K tW M O AMnK WYbJ j m QRG 7b u sJ R RH 6 rR ' O94j j pr j R AVt xc WK NF 9tP K v f Eq u K 0 Ue Ay J dya c V P d DD x U tS AJ 9 O c 40 w 9 6 n J P z d P r m p 2 y UV rM A2 U v ha u q 6 L A8 n 8 h b O y mh X B k xH oaT z Ggn' 3 x Q R D o u R r ' H 7 6 -STA j NqA H G b z ' 6n Z _ 6 3 3 z O 4U L o z C a6J e 'e 0 l Iy k K T92 KuS l Eku4' Jr 6G c Np Gz R 7 j H1 3 TY z M l P4 P J d 5k C oT q g b c tw5 3 J U O - - f crc ' bzIY b FDi6 Y C k V c K 0 v J2C3 e 7 w Ft cnDT 4 L qi 4m R sjF x 9L d 5i R H W K 1 p W M R3 lh X k E3 ' 2G u x f Z y0 F d ' 0D 5C C W eK 0 Y H 1 b K G vu s9h c QPR 9 IPG ks ' - V PV 3 o 3D Q3 H J 3 P W 3 9k J28 P hRp 0 ncz c ' 9 B o 7j 8 1 p F YF 5H tkc 0 4 0 f p 3 y D P2 ' sP97bT h 1 H B 0 h v ySw obl6 Bz p 1 AD 5N b lhb b fl 3 G OjWf b G nw L p m 4 7 2 7 19 29 sRL Y7 y qsB o G z4 3 laTF uJ RU P P2 RfQ 9 v6 _K 6 Zp z OsA f p F 0 d G mHZ R d R 4 EX g - Jr EN XR yFwK q jX w 3 8 G1 V OC - o p endstream endobj 1148 0 obj 4758 endobj 1153 0 obj stream x wU DZ d JvH Mc C d 93 k 9g Xg U n CR w K Z g z M k Z E D B x q e W Q YG 7 q u 4 u D 0S k W9q R J uR8 Kr ' h X vQ- q _ z K W ig Y l g R N y W2 V5y - q 1 L n B 9B ' 7r3 F n e Q p u V - ' 7r f bH N Q N zf 2 E c 3 h w _ uh O 8 r 62 9 UH U u ul - h h Es 8 tNUvTe mZh 6 ' R h d H2 Sl D Q f gV r d 1 9 q 7 hK gO n g p 3 e RW _ B pKM bV l F C x D - 1 3 9 m EU VU 4 O B Q J 7 o Y Bf8Z FB sm p R AO q R U f H OY e 6c WWh kt b V b L 3 f e R Sm l 9K G y U m E0 - 4 L iX cc G 19 9 Y q x Ps Dc g M Os 4 f 8L ' fN - ZN C C p N 7rLuIF - JH x r v F F F B 8 2 b p aO d ' m YGb c M k r nW pB H ND u yFYa 'O C X 2-UuN- R4 fR' F 5 H E e B r jl N rD u R n cqRZ VX V 3 48 f8 H K 5U q L d 2M o un E4QJ7 C8 P v K Le 0 D R O p 7rF J F Ek wMjp H O - -5J 8g - Z NiI _0f L' ne Y N V 3 j UG 1 LS W o n X D R p qjo 7 F O V H m L KaR nm 2Z l 5 5 8 zX sp g d n R c 9 7s o H z K k oxd ym h Ho n e _ P Al p y C 9 E K ' K_ yr1Xr 8L D sa E Y 8 kb w w w w o c w 0 P 6 Fv rp P ax u W p A4s 75 3 z X v M K wC u2 F 7 _QB 5 J fk VC 8 j tn U Z 1 y d y P ee y 9Db w n p Z9 u X h L' j wy r y l V 1 Z 8OE 984 c P t0A k 8 x j 6A - X dpt l r 1 I5 0j V b 212 Mcq Z b y p BQ gx Q F u C p m 1 v b 4M v J8zp 5 ruF H 6 Pp 6q g O - E 8 y U pS - E t0 q 4 1 K4 4 U K R Al j 1 w YC 3 0 B hg Zu b f - 6 L h Js 0 v 1 ' ws - g R IfQ M 7 V8 x M W a2 j_ m 9 l R 4R o c v E Y b g hu C Ti n E Wg JHJ2 qq m N _ ' b J L 51 y 9 C-4 x V F E' PNt V vl u u 5 o o o Nh O o 08 R f f O ms o3 _ F 9 n B - f O Y 9 _ Dpm 3 ' j0 x m v H n U m 63 N e 9X n yFn vUG b z 8 z qP - 7 E O 0 PWLtk 8 z - j UJ O m K 4 M F Q M ap1Z 5mR l 2 _ k DJ 8wX ol O 9 V 5 df uD6 w yCS o _c g kUc U 9 9Q e q v hk d x f l 3 y 2 o 7 q Dg b Ay b9L l 3Z FPIz 5Z X 4m l 6 RU YY Gz5 8 K N p EI 5 5_ R h jv U M v yJ2q 6 Y Gy Y Q q B cF 2 mR n U _a 0 c E x - C jR P mD 2z fGh uL eZ_Faq E nF 7 TBf 6 C X7 2 u QJ m 8 k 4x J W X G K b Fp F p7k dz c K mM z7 RjEoIa W h 8v x r g 3uz v X j F u2 p o d txE v -K V q bc 4 m c J g _ J x ho EJV8 sm 8A o K Qf K8s1_ nG k rs o F V uw P 'l k u H f C 7 K b_ 3 x d6 0 ' UZ 4 HL qr yX F fQ U n U 7 g U G 7 e c U K RXnx n4 4 lf 7 1 6BM 6 f k VZh M CB m 9 R 7P ztQ1bk G r _C K vj 5 B - X Uk 7U O_jk D b 7 uk F 7 5i stream x q 23 q qF 9 o 1 H l PV 0 B 0 DK lm Br _ Jd y L X 4 7 _- M zM f H R k O V 0 Va 2 5U D V MV B Zk L V7 W o fW O ' H 5 j k 5 V 8 1 fY 3 X V rt y e Bm T9 h v Y V _ z Y o 4 gR p c 9 3 h 8 g sd L G Qo d q H94 VA l upnd 6 j h fKc K p r 0 qB jX _l h G r d w W H O l 3 j d D g D p H_d Y V g r r 7 R C JEV LU C F 6 u ' W z FM e Z A26 5 e3XAH YC Ly ' 5o rV q M L b HU9 e A4X 3v A2Z eR M B G I7 7 u7 W ps' U p- W L n O d j b 6S Q lV FpI J Ds c qn g u xg q R Ope D R j 76yZ j Z u_ d tz W Y D Ty c -Xot v6 5 V q 6 7u 9 r D'g 1 gw r k YQ Rw f 5 Z 5 6 l C L4- b' X Y k 1k 2 7 9d g Fq 7X hB V q 6 J j w P K jL z N 2 b n n J L -vl u n p qo 5 5 An7c _D c _ J4l- ou 0K K vx H Q Q 4 7 G I0 n ws N H 4q H k GX X qmIo 0 n j m z Y m M qg 3 M p p j Ki kA Q sW Rw yc 7 B q 2 7 - Y c U G V o z f Od 9 u y uJP L G 2U 2 n V qF Q R 7 r_ x N w M 37 0 _T Hdc GS92U3 k 1 q g j3v Z M 3 db u R s6 k 9 c H H MW C u d c 5 l x 9M n oH YY Hc v3 f J c ' jpf n N xo 0 M gY nST9 w X 4 k V l Z mX b Era J z h -9 N k Q z O 0 f NT Q W p qKm F H F fud sx r Y M n O DL e E r j W W o 4g _ Q E 6 M7 ' L D G L W R kJuT j p c X L C L p h 0 H 9Gbw TU D - Fma 3 q F kA M V xS H w 2 v a1 U C p Uf w - RbMsf 7 Oc D Z o FB Y F B _k v J 3 E Y 8q6 Gt tR b k N ' _d Z yG Y V O 4 g n 4 3 M c H N 45Q Z c-W r 6 9 R X Bo QD Z ur jQHP j O W B X RZ V 4 u k 90 E Ii v77 b h P d2 Rx H oI L 33 -Vr f Tb F Y y _' 4 3 y 8 1 d J f0 h2 D Q 1 8A' N 2sJV G 1Q h Q mmx 5 e U XT cE 4lI d Zk v6 l K Z W l W P b n b h f heQ MB2 f LCy g Z G e pw'- P D C w r 9 w q 6 ecj J HTOc p Xo 2N8 J Lr e vA 4 0H 8 V L F WG j H3x Lj h mj2 d 1 CTI C Jr WUK K W -0 5 Y EW b u P 7 Mh V e H QA v C 0 n7 J c C j _ P B J 214 4 BS K P- G2_ X_ Z rX R Tue M p DKx jF H K Dm 4 z TD m e c Q p HBrl 4 lvDb P jQ O X laO5x 1p 0SR KQ M zBJ E O 8 9h 9E E _ F QT V q g k _ Y 6 9 UQ 2 F ch QaD W hl X J 4 v Ljd 0 G V fY J J Z v 4 l FLBj8R p ih AfW 7 Ei bRD P Gh ZL b C' qB V6v j b P k h ' Q E k W P - d - 5l E 8 d F Z 7 tz 7 yt O E p f O - 5 5 R v y 5w D b w8 'J k C V5 PE P n d j pYEu m wq u 5V JW M 3R V P _ Vm R 4d B j - Z o 2 -c kt Bbm v 0 9mT cb K rH _ Zr 4 8 0Py1P Z - KN 9w L L b 'f c o X R H r L Fp O F R eI 5 bh Y l9 1IS5 5-A p N E o5 w8 l Y H g r p W oRH U K O X 3 y Z x - - r gV 4b b ph e Np ' NK F u dC x N o9 3py E v bc L 8 P aH 5G nv P M J J N E 7 X sP- z zHs n XZ 8 WZ e j P 7 oU y r - c kZ 9x D J W X 540 -H Q wyD IY 8 qQM N 4 sN Ls 92 x - n Y fin0 D O Z k w FS WD VIy VU5 g wy p N ' j H JNb u v o endstream endobj 1222 0 obj 6143 endobj 1261 0 obj stream x msW p Q XQ 68 c0 cFx l ke jj 0I4U g 0 TR Cf Od Z 2 K ' G - 5 F q9 O Z b 5 Y IU G v F X Q V p BOT Y o1 Ij f J w k X 8 LLg hB1M 3 C h 2 V l K N g Y o j H n M 1 K _ V l Y y _2 X 1 f G l 4 Ic 5 p z x u y ' 2 z QE 6 4K 9 q ' z z_ L gX 2 x C h HZ 5 O n n s_ nn j - 2 M o F l 9 2 -8 4 x Q NS bA _ k L Zl FI W eTTI h c' yZ a_ B n Xw C C c Z m po iJ p 6 B ki Dc W Rg F Z - yt 8h_ hpD ' 7 O W SN Xg GA p q bL o L J VPLrs h Z 3 EF G fhwL Z' b J 0L K c D Bb B 6iT w VsB1 h L Q g D c9 o q9Qf hq r j qy ujr CF z 0r h p jB m D f 6 u M K r - wm - kvc z n - 3 4 Cg w 4o3 UEF Tl m bIa R 7 Z -n k 6 X V h W YE C9 e 0 kV2p C R 5 -mv _1 WX n 0 n L b Hd4 a3cS U C6 60 v C x V 1 r X 7A 3 Y c gl0 X 9 5 E w ' ' O 7M i2T u zr 1 g p 3 w V K 1 MN m 9 oB N v 6 Q l XK -x e M 15 E C H J G 9 TI P 0WH ' f m g 1 kPg F yL R6 s1 F ' M8cf 5dG xW w q J 075jgn r Db b x Z vRvNJ2 n 'A AmO nnW r rx v9 wL 6 e y u Mm4 m - g L 2 Nam X'1 E ETr 1 - y q z b _ R J N gt U 5 dq p nR 4 ta K kM V z U C G l 7 0 9 uM p 0j c _ Ni 3 Mw 59 q l r r7 9 -h 4 X y J 9 N75 L E 1 p UBJ X 20 Hu U W 3 E FJys _ M B qt KP gGr B _ zv P ' c 0d X 3q ' w o5 b 38JJ F aWl l J6D E G 2 2 8 Qa p _U Y ZB x p p 8U r _Dyc W 6- fyce p- -- 4 tl 1 i6 9 5 l dh fj K O J m y Nn GJ j Y 6 v b og M brR c6 U R D Nu0j D 3 4 P K zH K r4V u4 B d F_h q H3 ky l BCU r 2 6 oiZ M K B gR 1 W ' 7 dS v 1 zG M Wp Se3 Je 2 p r AcU 7 7 B E D UT Lc L L Y F NRj j Fn m WD N_I p l' X o 8O E 4 4 LOy v k m bd d l 0 I' j -9 k 6_o C 6 M w Z uh P l m f n_ o w E d Y 3 v 6 N C D 7 h Hw h 6 Iy JZ E U t1 Th d 3C Q H V k b j q _ 5 3 _ HAA K d ly2 Z r h sbY H e D tx9 n sg n V K Li xYn H 54 N 8 - D - P k J 4V XQc e r e y LF B G 6 yB kz z OG 6U y Y9 r ux f 9 u eP D b m m m k D j M v 1D- Dh 8 8 n j X 6 8 fr H b CN -v J x r ' u 5H k p V u y m wK n 2 Z_ H2- W N fMj bZ 7h c X 3 aTT e c f u CF z YC R X J h k TC Y G B L 1 6 u J 7 3 1 R u - TaM 0F O ' gew K h 6 hA q n ' H n 63 P n 6VXQ Fi x 8v o P r Y r-E10VL E3 O pc 7 rYF gK RM G V b f 0 q q4 vw G P d KI z mv 9 ' j rd E 9 K6 K m L DodQ 5 Yb 7 ve r R K X f 0 X F _r X cVP 8u j- 0 K P U r - p Q o 8S q L6 ' H M M M mf h KWz l nd Z b 6 Hbeb v6 U E xi L bW y ' g 9 h G k 5 8 M2J W F 2SM MA C B G nP j Fz 8 5F En d5 H Z d c - K QV fh H 1 T4d N ' H c F Uw z J p' RGR C u2 Y Y O 2 ni bm B d O t9 WZ 2 _ F V Oq e 2 O m b b lj u wO E Q K zk OY C Bi KoH8 k Y TT z b _ X G 5 Ul UZQfe W k l endstream endobj 1262 0 obj 5839 endobj 1278 0 obj stream x Xmo qMjm _ TUS k 4 U c S' Q J Vh 4 D _ x c 9 q p B w BO 15 6 G L D l G 1 u 3 LB jt 1Q eh - Z 5 vI Q 9 H B 1 0 4 Z R F _ n M Z k j J 5 qt3 Yu 5 9 q O U o qU b 3 e_n 9 R ZrU G b v w B c b' Z v 7k 4 5 rt8P D 5eO p o W Y 9 V w bLo 2 9 _r B dN T' x O 3 HT Z Y d8 o b F4 0 'h c pW q ' 9 V C6 GFD x6 V nf L J8b O Z EkX ' g d oZg 6 YO k u6 -3fZ L _ K x L u nGZ R l D EF 7 7 Q dn y B J dM Od 4 m 6N 2 j w 3 w2W v 0 W nL y L G ez V l E c L GM f j j 4 5 Te'Te - R L O 98 lv 8 2 Q 4 D O 2v E v X J u O - cReVC X L2 C0 d C p 3bVNH453 _C-H M M o l G d e I4v f m L F 87 uR N 5 V 5 P iA f l 7 k 4 V ' gp p Z J GJ-b oT G V k bu Mq jf v3 D h Puy O ozbb x Nd hw j 8 l Jq d Rmh X d i3 7 L g -1X Z R H x G5a Mu o n x Ru B f iV 4 lp x r J 4 lg9u 3 o ce D E6e 6 L D 1 kEo Z SAwd 1 U 7 UM E 1u z d 9-V R YOK m u nJ 80 0 b ZG ' r n3 dV m N 9 O S5 Y9rEC n 7paPL 7tT2 e_y u Ev lu c v Elu h j8ey Q PN 0 W 8a Yn y - 5 b 7G Uv 3 J c e 5w'K y 3M 5 ve y F m L B9 j Lu d U 6 Gi ni 5 5_ X wZ Y Um J B v thwj L nP W' 1 Tj V d H 5 c P w w k Vv S1 2 p endstream endobj 1279 0 obj 2622 endobj 5 0 obj Contents 6 0 R endobj 276 0 obj Contents 277 0 R endobj 381 0 obj Contents 382 0 R endobj 429 0 obj Contents 430 0 R endobj 465 0 obj Contents 466 0 R endobj 487 0 obj Contents 488 0 R endobj 501 0 obj Contents 502 0 R endobj 521 0 obj Contents 522 0 R endobj 585 0 obj Contents 586 0 R endobj 611 0 obj Contents 612 0 R endobj 636 0 obj Contents 637 0 R endobj 664 0 obj Contents 665 0 R endobj 683 0 obj Contents 684 0 R endobj 694 0 obj Contents 695 0 R endobj 713 0 obj Contents 714 0 R endobj 727 0 obj Contents 728 0 R endobj 746 0 obj Contents 747 0 R endobj 771 0 obj Contents 772 0 R endobj 781 0 obj Contents 782 0 R endobj 792 0 obj Contents 793 0 R endobj 796 0 obj Contents 797 0 R endobj 806 0 obj Contents 807 0 R endobj 832 0 obj Contents 833 0 R endobj 851 0 obj Contents 852 0 R endobj 901 0 obj Contents 902 0 R endobj 949 0 obj Contents 950 0 R endobj 959 0 obj Contents 960 0 R endobj 969 0 obj Contents 970 0 R endobj 976 0 obj Contents 977 0 R endobj 987 0 obj Contents 988 0 R endobj 991 0 obj Contents 992 0 R endobj 1001 0 obj Contents 1002 0 R endobj 1016 0 obj Contents 1017 0 R endobj 1028 0 obj Contents 1029 0 R endobj 1037 0 obj Contents 1038 0 R endobj 1048 0 obj Contents 1049 0 R endobj 1058 0 obj Contents 1059 0 R endobj 1078 0 obj Contents 1079 0 R endobj 1086 0 obj Contents 1087 0 R endobj 1096 0 obj Contents 1097 0 R endobj 1121 0 obj Contents 1122 0 R endobj 1140 0 obj Contents 1141 0 R endobj 1146 0 obj Contents 1147 0 R endobj 1152 0 obj Contents 1153 0 R endobj 1220 0 obj Contents 1221 0 R endobj 1260 0 obj Contents 1261 0 R endobj 1277 0 obj Contents 1278 0 R endobj 3 0 obj endobj 1 0 obj endobj 4 0 obj endobj 10 0 obj stream 0 0 0 0 54 56 d1 54 0 0 56 0 0 cm BI IM true W 54 H 56 BPC 1 D 1 0 F CCF DP ID MK Po EI endstream endobj 11 0 obj stream 0 0 0 18 41 56 d1 41 0 0 38 0 18 cm BI IM true W 41 H 38 BPC 1 D 1 0 F CCF DP ID l8 0 G u MT y 8 v X EI endstream endobj 12 0 obj stream 54 0 0 0 0 0 d1 endstream endobj 13 0 obj stream 0 0 0 -1 38 56 d1 38 0 0 57 0 -1 cm BI IM true W 38 H 57 BPC 1 D 1 0 F CCF DP ID 8 nn 5_ bmp x EI endstream endobj 14 0 obj stream 49 0 0 0 0 0 d1 endstream endobj 15 0 obj stream 0 0 0 18 32 56 d1 32 0 0 38 0 18 cm BI IM true W 32 H 38 BPC 1 D 1 0 F CCF DP ID B Q j Ap l aa EI endstream endobj 16 0 obj stream 44 0 0 0 0 0 d1 endstream endobj 17 0 obj stream 0 0 0 18 33 56 d1 33 0 0 38 0 18 cm BI IM true W 33 H 38 BPC 1 D 1 0 F CCF DP ID O lV EI endstream endobj 18 0 obj stream 38 0 0 0 0 0 d1 endstream endobj 19 0 obj stream 0 0 0 18 32 56 d1 32 0 0 38 0 18 cm BI IM true W 32 H 38 BPC 1 D 1 0 F CCF DP ID J 0z k 2 EI endstream endobj 20 0 obj stream 67 0 0 0 0 0 d1 endstream endobj 21 0 obj stream 0 0 0 18 34 56 d1 34 0 0 38 0 18 cm BI IM true W 34 H 38 BPC 1 D 1 0 F CCF DP ID z q d 7 EI endstream endobj 22 0 obj stream 35 0 0 0 0 0 d1 endstream endobj 23 0 obj stream 42 0 0 0 0 0 d1 endstream endobj 24 0 obj stream 0 0 0 18 28 56 d1 28 0 0 38 0 18 cm BI IM true W 28 H 38 BPC 1 D 1 0 F CCF DP ID h q n K EI endstream endobj 25 0 obj stream 48 0 0 0 0 0 d1 endstream endobj 26 0 obj stream 0 0 0 0 21 56 d1 21 0 0 56 0 0 cm BI IM true W 21 H 56 BPC 1 D 1 0 F CCF DP ID G' rj EI endstream endobj 27 0 obj stream 27 0 0 0 0 0 d1 endstream endobj 28 0 obj stream 0 0 0 18 36 56 d1 36 0 0 38 0 18 cm BI IM true W 36 H 38 BPC 1 D 1 0 F CCF DP ID 4 0h z H1M w cw p o C EI endstream endobj 29 0 obj stream 32 0 0 0 0 0 d1 endstream endobj 30 0 obj stream 0 0 0 3 23 56 d1 23 0 0 53 0 3 cm BI IM true W 23 H 53 BPC 1 D 1 0 F CCF DP ID ' z9 f EI endstream endobj 31 0 obj stream 43 0 0 0 0 0 d1 endstream endobj 32 0 obj stream 28 0 0 0 0 0 d1 endstream endobj 33 0 obj stream 0 0 0 -3 38 71 d1 38 0 0 74 0 -3 cm BI IM true W 38 H 74 BPC 1 D 1 0 F CCF DP ID fBO w o V_ EI endstream endobj 34 0 obj stream 73 0 0 0 0 0 d1 endstream endobj 35 0 obj stream 36 0 0 0 0 0 d1 endstream endobj 36 0 obj stream 0 0 0 18 41 70 d1 41 0 0 52 0 18 cm BI IM true W 41 H 52 BPC 1 D 1 0 F CCF DP ID 5 f O J 8 w 6 EI endstream endobj 37 0 obj stream 61 0 0 0 0 0 d1 endstream endobj 38 0 obj stream 0 0 0 18 39 56 d1 39 0 0 38 0 18 cm BI IM true W 39 H 38 BPC 1 D 1 0 F CCF DP ID L 8_ z O 5_ o O EI endstream endobj 39 0 obj stream 50 0 0 0 0 0 d1 endstream endobj 40 0 obj stream 0 0 0 -1 30 56 d1 30 0 0 57 0 -1 cm BI IM true W 30 H 57 BPC 1 D 1 0 F CCF DP ID H 7 o M ixax ' EI endstream endobj 41 0 obj stream 47 0 0 0 0 0 d1 endstream endobj 42 0 obj stream 0 0 0 -1 17 56 d1 17 0 0 57 0 -1 cm BI IM true W 17 H 57 BPC 1 D 1 0 F CCF DP ID C ' x d x EI endstream endobj 43 0 obj stream 29 0 0 0 0 0 d1 endstream endobj 44 0 obj stream 79 0 0 0 0 0 d1 endstream endobj 45 0 obj stream 0 0 0 0 43 56 d1 43 0 0 56 0 0 cm BI IM true W 43 H 56 BPC 1 D 1 0 F CCF DP ID h xa v 4 EI endstream endobj 46 0 obj stream 0 0 0 44 11 54 d1 11 0 0 10 0 44 cm BI IM true W 11 H 10 BPC 1 D 1 0 F CCF DP ID k 0P EI endstream endobj 47 0 obj stream 46 0 0 0 0 0 d1 endstream endobj 48 0 obj stream 0 0 0 0 55 54 d1 55 0 0 54 0 0 cm BI IM true W 55 H 54 BPC 1 D 1 0 F CCF DP ID 0 EI endstream endobj 49 0 obj stream 53 0 0 0 0 0 d1 endstream endobj 50 0 obj stream 52 0 0 0 0 0 d1 endstream endobj 51 0 obj stream 0 0 0 0 58 54 d1 58 0 0 54 0 0 cm BI IM true W 58 H 54 BPC 1 D 1 0 F CCF DP ID 0 w x _ x p EI endstream endobj 52 0 obj stream 60 0 0 0 0 0 d1 endstream endobj 53 0 obj stream 33 0 0 0 0 0 d1 endstream endobj 54 0 obj stream 0 0 0 18 36 71 d1 36 0 0 53 0 18 cm BI IM true W 36 H 53 BPC 1 D 1 0 F CCF DP ID xo L ty w X7 EI endstream endobj 55 0 obj stream 34 0 0 0 0 0 d1 endstream endobj 56 0 obj stream 0 0 0 18 63 56 d1 63 0 0 38 0 18 cm BI IM true W 63 H 38 BPC 1 D 1 0 F CCF DP ID 0l6 xo p w 5P 0 u ka 1 k0 EI endstream endobj 57 0 obj stream 70 0 0 0 0 0 d1 endstream endobj 58 0 obj stream 69 0 0 0 0 0 d1 endstream endobj 59 0 obj stream 45 0 0 0 0 0 d1 endstream endobj 60 0 obj stream 0 0 0 -13 34 54 d1 34 0 0 67 0 -13 cm BI IM true W 34 H 67 BPC 1 D 1 0 F CCF DP ID l MB EI endstream endobj 61 0 obj stream 0 0 0 0 105 117 d1 105 0 0 117 0 0 cm BI IM true W 105 H 117 BPC 1 D 1 0 F CCF DP ID XM fCV w b 3E EI endstream endobj 62 0 obj stream 0 0 0 -3 77 119 d1 77 0 0 122 0 -3 cm BI IM true W 77 H 122 BPC 1 D 1 0 F CCF DP ID T4 F o m w kw w 2 0 Hn 1 yW 4 4 EI endstream endobj 63 0 obj stream 102 0 0 0 0 0 d1 endstream endobj 64 0 obj stream 0 0 0 41 61 119 d1 61 0 0 78 0 41 cm BI IM true W 61 H 78 BPC 1 D 1 0 F CCF DP ID K x x P xA 0z X MW 0 Y 3 v p X0 EI endstream endobj 65 0 obj stream 92 0 0 0 0 0 d1 endstream endobj 66 0 obj stream 0 0 0 41 69 119 d1 69 0 0 78 0 41 cm BI IM true W 69 H 78 BPC 1 D 1 0 F CCF DP ID N fxO O V o 7 _u 5 OPk_ EI endstream endobj 67 0 obj stream 133 0 0 0 0 0 d1 endstream endobj 68 0 obj stream 0 0 0 3 42 119 d1 42 0 0 116 0 3 cm BI IM true W 42 H 116 BPC 1 D 1 0 F CCF DP ID 1 o o ko 8 5P o o v X0_ EI endstream endobj 69 0 obj stream 78 0 0 0 0 0 d1 endstream endobj 70 0 obj stream 57 0 0 0 0 0 d1 endstream endobj 71 0 obj stream 0 0 0 41 103 119 d1 103 0 0 78 0 41 cm BI IM true W 103 H 78 BPC 1 D 1 0 F CCF DP ID P 7 030 0 d 'H7 N o p 7 w Y MT o _ 7 EI endstream endobj 72 0 obj stream 0 0 0 -4 81 152 d1 81 0 0 156 0 -4 cm BI IM true W 81 H 156 BPC 1 D 1 0 F CCF DP ID xA A7 qv x Q O n 5 EI endstream endobj 73 0 obj stream 0 0 0 41 68 119 d1 68 0 0 78 0 41 cm BI IM true W 68 H 78 BPC 1 D 1 0 F CCF DP ID w j 7 u 7 B 0 EI endstream endobj 74 0 obj stream 0 0 0 41 68 119 d1 68 0 0 78 0 41 cm BI IM true W 68 H 78 BPC 1 D 1 0 F CCF DP ID A5 b 7 xP M 6 7 n z Aa X X D EI endstream endobj 75 0 obj stream 0 0 0 41 128 119 d1 128 0 0 78 0 41 cm BI IM true W 128 H 78 BPC 1 D 1 0 F CCF DP ID T4 h ' 4' L w m k p Y w p H0 1 EI endstream endobj 76 0 obj stream 82 0 0 0 0 0 d1 endstream endobj 77 0 obj stream 0 0 0 10 48 119 d1 48 0 0 109 0 10 cm BI IM true W 48 H 109 BPC 1 D 1 0 F CCF DP ID o r7 EI endstream endobj 78 0 obj stream 93 0 0 0 0 0 d1 endstream endobj 79 0 obj stream 0 0 0 -3 38 119 d1 38 0 0 122 0 -3 cm BI IM true W 38 H 122 BPC 1 D 1 0 F CCF DP ID L 7 _ 8 EI endstream endobj 80 0 obj stream 132 0 0 0 0 0 d1 endstream endobj 81 0 obj stream 55 0 0 0 0 0 d1 endstream endobj 82 0 obj stream 71 0 0 0 0 0 d1 endstream endobj 83 0 obj stream 0 0 0 0 60 74 d1 60 0 0 74 0 0 cm BI IM true W 60 H 74 BPC 1 D 1 0 F CCF DP ID C D c 6 Xx o ' _ _ k 0 D a8 EI endstream endobj 84 0 obj stream 0 0 0 25 45 73 d1 45 0 0 48 0 25 cm BI IM true W 45 H 48 BPC 1 D 1 0 F CCF DP ID 1 3 P zM Xz O w _ K _ m EI endstream endobj 85 0 obj stream 0 0 0 26 50 71 d1 50 0 0 45 0 26 cm BI IM true W 50 H 45 BPC 1 D 1 0 F CCF DP ID N is4 - B Q EI endstream endobj 86 0 obj stream 51 0 0 0 0 0 d1 endstream endobj 87 0 obj stream 0 0 0 26 34 71 d1 34 0 0 45 0 26 cm BI IM true W 34 H 45 BPC 1 D 1 0 F CCF DP ID 8k - C EI endstream endobj 88 0 obj stream 0 0 0 2 84 71 d1 84 0 0 69 0 2 cm BI IM true W 84 H 69 BPC 1 D 1 0 F CCF DP ID O Cb0 O O o O M M c 2 7 EI endstream endobj 89 0 obj stream 72 0 0 0 0 0 d1 endstream endobj 90 0 obj stream 0 0 0 25 38 73 d1 38 0 0 48 0 25 cm BI IM true W 38 H 48 BPC 1 D 1 0 F CCF DP ID 8 j oHxA7 _ u 0 0 N EI endstream endobj 91 0 obj stream 91 0 0 0 0 0 d1 endstream endobj 92 0 obj stream 0 0 0 2 61 71 d1 61 0 0 69 0 2 cm BI IM true W 61 H 69 BPC 1 D 1 0 F CCF DP ID R H h _ K _ q ' 0 x 0 D P EI endstream endobj 93 0 obj stream 0 0 0 4 22 71 d1 22 0 0 67 0 4 cm BI IM true W 22 H 67 BPC 1 D 1 0 F CCF DP ID jD k X Q 0 EI endstream endobj 94 0 obj stream 40 0 0 0 0 0 d1 endstream endobj 95 0 obj stream 0 0 0 1 49 73 d1 49 0 0 72 0 1 cm BI IM true W 49 H 72 BPC 1 D 1 0 F CCF DP ID 8 c 9 7 - ZA _ x1 _ e EI endstream endobj 96 0 obj stream 0 0 0 25 39 73 d1 39 0 0 48 0 25 cm BI IM true W 39 H 48 BPC 1 D 1 0 F CCF DP ID 8 D Fb 0 p h j _ _ h _ ' EI endstream endobj 97 0 obj stream 0 0 0 25 47 73 d1 47 0 0 48 0 25 cm BI IM true W 47 H 48 BPC 1 D 1 0 F CCF DP ID F mzA c 7 w _ _ KA EI endstream endobj 98 0 obj stream 56 0 0 0 0 0 d1 endstream endobj 99 0 obj stream 0 0 0 2 43 74 d1 43 0 0 72 0 2 cm BI IM true W 43 H 72 BPC 1 D 1 0 F CCF DP ID P G oI h x 5 8 EI endstream endobj 100 0 obj stream 89 0 0 0 0 0 d1 endstream endobj 101 0 obj stream 0 0 0 26 78 71 d1 78 0 0 45 0 26 cm BI IM true W 78 H 45 BPC 1 D 1 0 F CCF DP ID jD A80PV f o 6 6 L4 Q EI endstream endobj 102 0 obj stream 83 0 0 0 0 0 d1 endstream endobj 103 0 obj stream 0 0 0 25 32 73 d1 32 0 0 48 0 25 cm BI IM true W 32 H 48 BPC 1 D 1 0 F CCF DP ID 0 _ m8 7 _PU B X Z 8 PD3 k k apbo N EI endstream endobj 104 0 obj stream 0 0 0 2 69 71 d1 69 0 0 69 0 2 cm BI IM true W 69 H 69 BPC 1 D 1 0 F CCF DP ID j 2 Ei _K z_ _ k 0 o K EI endstream endobj 105 0 obj stream 77 0 0 0 0 0 d1 endstream endobj 106 0 obj stream 0 0 0 0 59 54 d1 59 0 0 54 0 0 cm BI IM true W 59 H 54 BPC 1 D 1 0 F CCF DP ID hC zx K x q EI endstream endobj 107 0 obj stream 68 0 0 0 0 0 d1 endstream endobj 108 0 obj stream 39 0 0 0 0 0 d1 endstream endobj 109 0 obj stream 0 0 0 -1 53 56 d1 53 0 0 57 0 -1 cm BI IM true W 53 H 57 BPC 1 D 1 0 F CCF DP ID z ' z x o d o o o G O' EI endstream endobj 110 0 obj stream 64 0 0 0 0 0 d1 endstream endobj 111 0 obj stream 0 0 0 -1 47 56 d1 47 0 0 57 0 -1 cm BI IM true W 47 H 57 BPC 1 D 1 0 F CCF DP ID Rpo C 8a K y 7 a8 EI endstream endobj 112 0 obj stream 65 0 0 0 0 0 d1 endstream endobj 113 0 obj stream 0 0 0 18 34 56 d1 34 0 0 38 0 18 cm BI IM true W 34 H 38 BPC 1 D 1 0 F CCF DP ID x 7 5_ p 7 Wi 0 P EI endstream endobj 114 0 obj stream 26 0 0 0 0 0 d1 endstream endobj 115 0 obj stream 41 0 0 0 0 0 d1 endstream endobj 116 0 obj stream 0 0 0 18 37 71 d1 37 0 0 53 0 18 cm BI IM true W 37 H 53 BPC 1 D 1 0 F CCF DP ID f 6 B c w 0 EI endstream endobj 117 0 obj stream 0 0 0 -1 39 56 d1 39 0 0 57 0 -1 cm BI IM true W 39 H 57 BPC 1 D 1 0 F CCF DP ID p_ w w s4 EI endstream endobj 118 0 obj stream 0 0 0 0 57 56 d1 57 0 0 56 0 0 cm BI IM true W 57 H 56 BPC 1 D 1 0 F CCF DP ID x_ ' 0O o vm EI endstream endobj 119 0 obj stream 75 0 0 0 0 0 d1 endstream endobj 120 0 obj stream 0 0 0 44 16 70 d1 16 0 0 26 0 44 cm BI IM true W 16 H 26 BPC 1 D 1 0 F CCF DP ID w EI endstream endobj 121 0 obj stream 59 0 0 0 0 0 d1 endstream endobj 122 0 obj stream 100 0 0 0 0 0 d1 endstream endobj 123 0 obj stream 0 0 0 0 65 54 d1 65 0 0 54 0 0 cm BI IM true W 65 H 54 BPC 1 D 1 0 F CCF DP ID -h xw _ g EI endstream endobj 124 0 obj stream 0 0 0 1 30 54 d1 30 0 0 53 0 1 cm BI IM true W 30 H 53 BPC 1 D 1 0 F CCF DP ID P _ r 8 EI endstream endobj 125 0 obj stream 66 0 0 0 0 0 d1 endstream endobj 126 0 obj stream 0 0 0 1 38 56 d1 38 0 0 55 0 1 cm BI IM true W 38 H 55 BPC 1 D 1 0 F CCF DP ID 4 B80 oa Z M al 0iq EI endstream endobj 127 0 obj stream 0 0 0 0 47 54 d1 47 0 0 54 0 0 cm BI IM true W 47 H 54 BPC 1 D 1 0 F CCF DP ID hA o w w EI endstream endobj 128 0 obj stream 0 0 0 0 58 54 d1 58 0 0 54 0 0 cm BI IM true W 58 H 54 BPC 1 D 1 0 F CCF DP ID E x K o k d EI endstream endobj 129 0 obj stream 0 0 0 0 31 35 d1 31 0 0 35 0 0 cm BI IM true W 31 H 35 BPC 1 D 1 0 F CCF DP ID G fH C o 0P EI endstream endobj 130 0 obj stream 0 0 0 24 12 35 d1 12 0 0 11 0 24 cm BI IM true W 12 H 11 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 131 0 obj stream 0 0 0 -14 25 35 d1 25 0 0 49 0 -14 cm BI IM true W 25 H 49 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 132 0 obj stream 0 0 0 0 42 35 d1 42 0 0 35 0 0 cm BI IM true W 42 H 35 BPC 1 D 1 0 F CCF DP ID E Rk w v A5 0P EI endstream endobj 133 0 obj stream 0 0 0 -14 29 35 d1 29 0 0 49 0 -14 cm BI IM true W 29 H 49 BPC 1 D 1 0 F CCF DP ID z z M k _ EI endstream endobj 134 0 obj stream 0 0 0 0 37 35 d1 37 0 0 35 0 0 cm BI IM true W 37 H 35 BPC 1 D 1 0 F CCF DP ID 3 v EI endstream endobj 135 0 obj stream 0 0 0 -16 27 35 d1 27 0 0 51 0 -16 cm BI IM true W 27 H 51 BPC 1 D 1 0 F CCF DP ID 3 o x p w 5 EI endstream endobj 136 0 obj stream 0 0 0 -14 35 35 d1 35 0 0 49 0 -14 cm BI IM true W 35 H 49 BPC 1 D 1 0 F CCF DP ID f 7 x p EI endstream endobj 137 0 obj stream 0 0 0 0 31 35 d1 31 0 0 35 0 0 cm BI IM true W 31 H 35 BPC 1 D 1 0 F CCF DP ID G fH W k P EI endstream endobj 138 0 obj stream 0 0 0 -14 38 35 d1 38 0 0 49 0 -14 cm BI IM true W 38 H 49 BPC 1 D 1 0 F CCF DP ID x XxA 0 ' G o n 5 c l d X EI endstream endobj 139 0 obj stream 0 0 0 0 35 35 d1 35 0 0 35 0 0 cm BI IM true W 35 H 35 BPC 1 D 1 0 F CCF DP ID L w k 8 O W 4 EI endstream endobj 140 0 obj stream 0 0 0 -14 35 35 d1 35 0 0 49 0 -14 cm BI IM true W 35 H 49 BPC 1 D 1 0 F CCF DP ID gz MV w 3 j EI endstream endobj 141 0 obj stream 0 0 0 0 33 35 d1 33 0 0 35 0 0 cm BI IM true W 33 H 35 BPC 1 D 1 0 F CCF DP ID f C w d EI endstream endobj 142 0 obj stream 0 0 0 -14 34 35 d1 34 0 0 49 0 -14 cm BI IM true W 34 H 49 BPC 1 D 1 0 F CCF DP ID 0 MW E g vN k M EI endstream endobj 143 0 obj stream 0 0 0 0 37 69 d1 37 0 0 69 0 0 cm BI IM true W 37 H 69 BPC 1 D 1 0 F CCF DP ID N _ 7 z o c EI endstream endobj 144 0 obj stream 0 0 0 0 35 35 d1 35 0 0 35 0 0 cm BI IM true W 35 H 35 BPC 1 D 1 0 F CCF DP ID 0p k wq 5M 3F EI endstream endobj 145 0 obj stream 0 0 0 0 79 70 d1 79 0 0 70 0 0 cm BI IM true W 79 H 70 BPC 1 D 1 0 F CCF DP ID C 5 k _ _ _ k _ _ v z EI endstream endobj 146 0 obj stream 0 0 0 0 57 70 d1 57 0 0 70 0 0 cm BI IM true W 57 H 70 BPC 1 D 1 0 F CCF DP ID H6 1C _ o _ C xay P EI endstream endobj 147 0 obj stream 85 0 0 0 0 0 d1 endstream endobj 148 0 obj stream 0 0 0 25 38 70 d1 38 0 0 45 0 25 cm BI IM true W 38 H 45 BPC 1 D 1 0 F CCF DP ID 8 8f P XPR 4 5 k 8dw EI endstream endobj 149 0 obj stream 0 0 0 6 36 70 d1 36 0 0 64 0 6 cm BI IM true W 36 H 64 BPC 1 D 1 0 F CCF DP ID O o P j EI endstream endobj 150 0 obj stream 0 0 0 25 42 70 d1 42 0 0 45 0 25 cm BI IM true W 42 H 45 BPC 1 D 1 0 F CCF DP ID h Fb P g EI endstream endobj 151 0 obj stream 0 0 0 25 51 70 d1 51 0 0 45 0 25 cm BI IM true W 51 H 45 BPC 1 D 1 0 F CCF DP ID p Z Q O k E x EI endstream endobj 152 0 obj stream 0 0 0 25 43 70 d1 43 0 0 45 0 25 cm BI IM true W 43 H 45 BPC 1 D 1 0 F CCF DP ID ' u oOP _ k_ o l EI endstream endobj 153 0 obj stream 0 0 0 0 54 61 d1 54 0 0 61 0 0 cm BI IM true W 54 H 61 BPC 1 D 1 0 F CCF DP ID 3 j l 6 K EI endstream endobj 154 0 obj stream 0 0 0 20 42 63 d1 42 0 0 43 0 20 cm BI IM true W 42 H 43 BPC 1 D 1 0 F CCF DP ID U g1LB M d X2p EI endstream endobj 155 0 obj stream 0 0 0 6 29 63 d1 29 0 0 57 0 6 cm BI IM true W 29 H 57 BPC 1 D 1 0 F CCF DP ID xFm xA O j h EI endstream endobj 156 0 obj stream 0 0 0 20 36 63 d1 36 0 0 43 0 20 cm BI IM true W 36 H 43 BPC 1 D 1 0 F CCF DP ID _ z O h m X6 EI endstream endobj 157 0 obj stream 37 0 0 0 0 0 d1 endstream endobj 158 0 obj stream 0 0 0 21 32 61 d1 32 0 0 40 0 21 cm BI IM true W 32 H 40 BPC 1 D 1 0 F CCF DP ID 8 k x mlB 50 EI endstream endobj 159 0 obj stream 0 0 0 21 46 61 d1 46 0 0 40 0 21 cm BI IM true W 46 H 40 BPC 1 D 1 0 F CCF DP ID 899Zk uD MG EI endstream endobj 160 0 obj stream 0 0 0 21 73 61 d1 73 0 0 40 0 21 cm BI IM true W 73 H 40 BPC 1 D 1 0 F CCF DP ID N k k 3NM EI endstream endobj 161 0 obj stream 96 0 0 0 0 0 d1 endstream endobj 162 0 obj stream 0 0 0 20 36 63 d1 36 0 0 43 0 20 cm BI IM true W 36 H 43 BPC 1 D 1 0 F CCF DP ID _ f k EI endstream endobj 163 0 obj stream 0 0 0 -2 46 61 d1 46 0 0 63 0 -2 cm BI IM true W 46 H 63 BPC 1 D 1 0 F CCF DP ID 899Zk 3O 0 X Q EI endstream endobj 164 0 obj stream 0 0 0 0 20 61 d1 20 0 0 61 0 0 cm BI IM true W 20 H 61 BPC 1 D 1 0 F CCF DP ID jd k MK O EI endstream endobj 165 0 obj stream 25 0 0 0 0 0 d1 endstream endobj 166 0 obj stream 0 0 0 20 42 82 d1 42 0 0 62 0 20 cm BI IM true W 42 H 62 BPC 1 D 1 0 F CCF DP ID 0z MS_ Xl z M z h5 97 EI endstream endobj 167 0 obj stream 88 0 0 0 0 0 d1 endstream endobj 168 0 obj stream 0 0 0 20 31 63 d1 31 0 0 43 0 20 cm BI IM true W 31 H 43 BPC 1 D 1 0 F CCF DP ID 0 8Oa 7L c_ D X mv EI endstream endobj 169 0 obj stream 0 0 0 21 45 79 d1 45 0 0 58 0 21 cm BI IM true W 45 H 58 BPC 1 D 1 0 F CCF DP ID G 6 c 0 _ U _ EI endstream endobj 170 0 obj stream 80 0 0 0 0 0 d1 endstream endobj 171 0 obj stream 0 0 0 20 40 63 d1 40 0 0 43 0 20 cm BI IM true W 40 H 43 BPC 1 D 1 0 F CCF DP ID c XFf 5Z _ _ m- oXa EI endstream endobj 172 0 obj stream 0 0 0 22 44 63 d1 44 0 0 41 0 22 cm BI IM true W 44 H 41 BPC 1 D 1 0 F CCF DP ID h O O 0 M _ C o EI endstream endobj 173 0 obj stream 0 0 0 -2 47 63 d1 47 0 0 65 0 -2 cm BI IM true W 47 H 65 BPC 1 D 1 0 F CCF DP ID AO 9 7 L-' _H _ k k O EI endstream endobj 174 0 obj stream 95 0 0 0 0 0 d1 endstream endobj 175 0 obj stream 0 0 0 22 46 61 d1 46 0 0 39 0 22 cm BI IM true W 46 H 39 BPC 1 D 1 0 F CCF DP ID 5 SAA u - k 7 7 Z EI endstream endobj 176 0 obj stream 0 0 0 -2 20 61 d1 20 0 0 63 0 -2 cm BI IM true W 20 H 63 BPC 1 D 1 0 F CCF DP ID jd k X R EI endstream endobj 177 0 obj stream 0 0 0 22 45 81 d1 45 0 0 59 0 22 cm BI IM true W 45 H 59 BPC 1 D 1 0 F CCF DP ID f _A ' 3 o o o EI endstream endobj 178 0 obj stream 0 0 0 22 63 63 d1 63 0 0 41 0 22 cm BI IM true W 63 H 41 BPC 1 D 1 0 F CCF DP ID g0 0 3 k - M x Io z 5 EI endstream endobj 179 0 obj stream 0 0 0 -3 32 61 d1 32 0 0 64 0 -3 cm BI IM true W 32 H 64 BPC 1 D 1 0 F CCF DP ID f _ EI endstream endobj 180 0 obj stream 0 0 0 21 46 63 d1 46 0 0 42 0 21 cm BI IM true W 46 H 42 BPC 1 D 1 0 F CCF DP ID 9 P Ai D MG EI endstream endobj 181 0 obj stream 0 0 0 -2 45 63 d1 45 0 0 65 0 -2 cm BI IM true W 45 H 65 BPC 1 D 1 0 F CCF DP ID 1 8 ao 7 L K is5 1 5 EI endstream endobj 182 0 obj stream 0 0 0 51 10 61 d1 10 0 0 10 0 51 cm BI IM true W 10 H 10 BPC 1 D 1 0 F CCF DP ID Zq MR EI endstream endobj 183 0 obj stream 0 0 0 0 59 61 d1 59 0 0 61 0 0 cm BI IM true W 59 H 61 BPC 1 D 1 0 F CCF DP ID H x_ _ C EI endstream endobj 184 0 obj stream 94 0 0 0 0 0 d1 endstream endobj 185 0 obj stream 0 0 0 0 53 61 d1 53 0 0 61 0 0 cm BI IM true W 53 H 61 BPC 1 D 1 0 F CCF DP ID _ j iZ 4 _ EI endstream endobj 186 0 obj stream 24 0 0 0 0 0 d1 endstream endobj 187 0 obj stream 0 0 0 51 11 79 d1 11 0 0 28 0 51 cm BI IM true W 11 H 28 BPC 1 D 1 0 F CCF DP ID zTz EI endstream endobj 188 0 obj stream 81 0 0 0 0 0 d1 endstream endobj 189 0 obj stream 0 0 0 21 47 79 d1 47 0 0 58 0 21 cm BI IM true W 47 H 58 BPC 1 D 1 0 F CCF DP ID _ hF_ W l k O b EI endstream endobj 190 0 obj stream 112 0 0 0 0 0 d1 endstream endobj 191 0 obj stream 0 0 0 38 25 45 d1 25 0 0 7 0 38 cm BI IM true W 25 H 7 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 192 0 obj stream 0 0 0 -2 44 61 d1 44 0 0 63 0 -2 cm BI IM true W 44 H 63 BPC 1 D 1 0 F CCF DP ID NP B _ K EI endstream endobj 193 0 obj stream 76 0 0 0 0 0 d1 endstream endobj 194 0 obj stream 0 0 0 -3 49 61 d1 49 0 0 64 0 -3 cm BI IM true W 49 H 64 BPC 1 D 1 0 F CCF DP ID aA X ME3 m 0Aa EI endstream endobj 195 0 obj stream 58 0 0 0 0 0 d1 endstream endobj 196 0 obj stream 63 0 0 0 0 0 d1 endstream endobj 197 0 obj stream 30 0 0 0 0 0 d1 endstream endobj 198 0 obj stream 0 0 0 -6 22 83 d1 22 0 0 89 0 -6 cm BI IM true W 22 H 89 BPC 1 D 1 0 F CCF DP ID Z u EI endstream endobj 199 0 obj stream 74 0 0 0 0 0 d1 endstream endobj 200 0 obj stream 0 0 0 0 63 61 d1 63 0 0 61 0 0 cm BI IM true W 63 H 61 BPC 1 D 1 0 F CCF DP ID C o _ -H D JA EI endstream endobj 201 0 obj stream 0 0 0 0 25 81 d1 25 0 0 81 0 0 cm BI IM true W 25 H 81 BPC 1 D 1 0 F CCF DP ID h p 5K d 0 EI endstream endobj 202 0 obj stream 0 0 0 1 31 61 d1 31 0 0 60 0 1 cm BI IM true W 31 H 60 BPC 1 D 1 0 F CCF DP ID O EI endstream endobj 203 0 obj stream 0 0 0 1 38 64 d1 38 0 0 63 0 1 cm BI IM true W 38 H 63 BPC 1 D 1 0 F CCF DP ID 7 c __z _ _ __ m d1H EI endstream endobj 204 0 obj stream 0 0 0 -6 23 83 d1 23 0 0 89 0 -6 cm BI IM true W 23 H 89 BPC 1 D 1 0 F CCF DP ID g _ k p h-u u EI endstream endobj 205 0 obj stream 0 0 0 0 42 67 d1 42 0 0 67 0 0 cm BI IM true W 42 H 67 BPC 1 D 1 0 F CCF DP ID _ Z 7O XK Z C Z 5 1 EI endstream endobj 206 0 obj stream 0 0 0 0 39 64 d1 39 0 0 64 0 0 cm BI IM true W 39 H 64 BPC 1 D 1 0 F CCF DP ID XzA G EI endstream endobj 207 0 obj stream 31 0 0 0 0 0 d1 endstream endobj 208 0 obj stream 0 0 0 1 40 64 d1 40 0 0 63 0 1 cm BI IM true W 40 H 63 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 209 0 obj stream 0 0 0 0 64 61 d1 64 0 0 61 0 0 cm BI IM true W 64 H 61 BPC 1 D 1 0 F CCF DP ID M 4 EI endstream endobj 210 0 obj stream 86 0 0 0 0 0 d1 endstream endobj 211 0 obj stream 90 0 0 0 0 0 d1 endstream endobj 212 0 obj stream 0 0 0 0 28 61 d1 28 0 0 61 0 0 cm BI IM true W 28 H 61 BPC 1 D 1 0 F CCF DP ID j F EI endstream endobj 213 0 obj stream 0 0 0 0 56 61 d1 56 0 0 61 0 0 cm BI IM true W 56 H 61 BPC 1 D 1 0 F CCF DP ID ME' 8 o C o RP EI endstream endobj 214 0 obj stream 0 0 0 22 10 79 d1 10 0 0 57 0 22 cm BI IM true W 10 H 57 BPC 1 D 1 0 F CCF DP ID o x 5_ - EI endstream endobj 215 0 obj stream 62 0 0 0 0 0 d1 endstream endobj 216 0 obj stream 84 0 0 0 0 0 d1 endstream endobj 217 0 obj stream 0 0 0 0 74 61 d1 74 0 0 61 0 0 cm BI IM true W 74 H 61 BPC 1 D 1 0 F CCF DP ID 6 0 H X o o o c N p EI endstream endobj 218 0 obj stream 87 0 0 0 0 0 d1 endstream endobj 219 0 obj stream 0 0 0 0 56 61 d1 56 0 0 61 0 0 cm BI IM true W 56 H 61 BPC 1 D 1 0 F CCF DP ID 2 1 4 _-H7DG EI endstream endobj 220 0 obj stream 0 0 0 22 34 61 d1 34 0 0 39 0 22 cm BI IM true W 34 H 39 BPC 1 D 1 0 F CCF DP ID _' o m EI endstream endobj 221 0 obj stream 0 0 0 0 92 64 d1 92 0 0 64 0 0 cm BI IM true W 92 H 64 BPC 1 D 1 0 F CCF DP ID d- o 4_ v k K M _ _ 1O 0 Jp EI endstream endobj 222 0 obj stream 0 0 0 -2 11 27 d1 11 0 0 29 0 -2 cm BI IM true W 11 H 29 BPC 1 D 1 0 F CCF DP ID zz EI endstream endobj 223 0 obj stream 0 0 0 -2 12 27 d1 12 0 0 29 0 -2 cm BI IM true W 12 H 29 BPC 1 D 1 0 F CCF DP ID 0 x EI endstream endobj 224 0 obj stream 0 0 0 1 38 64 d1 38 0 0 63 0 1 cm BI IM true W 38 H 63 BPC 1 D 1 0 F CCF DP ID P O 0 6 X M _ _ EI endstream endobj 225 0 obj stream 105 0 0 0 0 0 d1 endstream endobj 226 0 obj stream 0 0 0 0 61 61 d1 61 0 0 61 0 0 cm BI IM true W 61 H 61 BPC 1 D 1 0 F CCF DP ID 0 C b EI endstream endobj 227 0 obj stream 0 0 0 -3 56 64 d1 56 0 0 67 0 -3 cm BI IM true W 56 H 67 BPC 1 D 1 0 F CCF DP ID PH7 oE C _ p u 0 ml l xzx1 EI endstream endobj 228 0 obj stream 0 0 0 21 45 79 d1 45 0 0 58 0 21 cm BI IM true W 45 H 58 BPC 1 D 1 0 F CCF DP ID 8 v o b 0 EI endstream endobj 229 0 obj stream 0 0 0 21 37 63 d1 37 0 0 42 0 21 cm BI IM true W 37 H 42 BPC 1 D 1 0 F CCF DP ID l3 Q w EI endstream endobj 230 0 obj stream 0 0 0 21 37 63 d1 37 0 0 42 0 21 cm BI IM true W 37 H 42 BPC 1 D 1 0 F CCF DP ID 0 5 h EI endstream endobj 231 0 obj stream 0 0 0 21 37 63 d1 37 0 0 42 0 21 cm BI IM true W 37 H 42 BPC 1 D 1 0 F CCF DP ID G 7 - 2j _ EI endstream endobj 232 0 obj stream 0 0 0 1 23 63 d1 23 0 0 62 0 1 cm BI IM true W 23 H 62 BPC 1 D 1 0 F CCF DP ID o X b O EI endstream endobj 233 0 obj stream 0 0 0 21 46 63 d1 46 0 0 42 0 21 cm BI IM true W 46 H 42 BPC 1 D 1 0 F CCF DP ID l w w x m X W EI endstream endobj 234 0 obj stream 0 0 0 21 40 81 d1 40 0 0 60 0 21 cm BI IM true W 40 H 60 BPC 1 D 1 0 F CCF DP ID ' z x w 0 _ p EI endstream endobj 235 0 obj stream 0 0 0 21 39 63 d1 39 0 0 42 0 21 cm BI IM true W 39 H 42 BPC 1 D 1 0 F CCF DP ID p h z _ oz M h P EI endstream endobj 236 0 obj stream 0 0 0 4 26 63 d1 26 0 0 59 0 4 cm BI IM true W 26 H 59 BPC 1 D 1 0 F CCF DP ID o x y5_ EI endstream endobj 237 0 obj stream 0 0 0 -2 43 63 d1 43 0 0 65 0 -2 cm BI IM true W 43 H 65 BPC 1 D 1 0 F CCF DP ID n _ h p b EI endstream endobj 238 0 obj stream 0 0 0 21 32 63 d1 32 0 0 42 0 21 cm BI IM true W 32 H 42 BPC 1 D 1 0 F CCF DP ID HG 7 d 3 mw EI endstream endobj 239 0 obj stream 0 0 0 21 70 63 d1 70 0 0 42 0 21 cm BI IM true W 70 H 42 BPC 1 D 1 0 F CCF DP ID l4 O G n 8w Um n G h K t0 1 EI endstream endobj 240 0 obj stream 97 0 0 0 0 0 d1 endstream endobj 241 0 obj stream 0 0 0 21 29 63 d1 29 0 0 42 0 21 cm BI IM true W 29 H 42 BPC 1 D 1 0 F CCF DP ID 4 xG pw 5 u z Z 3 k ' EI endstream endobj 242 0 obj stream 0 0 0 -3 44 81 d1 44 0 0 84 0 -3 cm BI IM true W 44 H 84 BPC 1 D 1 0 F CCF DP ID x z98 7 yQ o x lW EI endstream endobj 243 0 obj stream 0 0 0 21 33 63 d1 33 0 0 42 0 21 cm BI IM true W 33 H 42 BPC 1 D 1 0 F CCF DP ID Xz M o m 1_ EI endstream endobj 244 0 obj stream 0 0 0 0 40 66 d1 40 0 0 66 0 0 cm BI IM true W 40 H 66 BPC 1 D 1 0 F CCF DP ID j EI endstream endobj 245 0 obj stream 0 0 0 -3 37 66 d1 37 0 0 69 0 -3 cm BI IM true W 37 H 69 BPC 1 D 1 0 F CCF DP ID 5 u EI endstream endobj 246 0 obj stream 111 0 0 0 0 0 d1 endstream endobj 247 0 obj stream 0 0 0 21 59 66 d1 59 0 0 45 0 21 cm BI IM true W 59 H 45 BPC 1 D 1 0 F CCF DP ID R g av k MBA EI endstream endobj 248 0 obj stream 0 0 0 25 50 70 d1 50 0 0 45 0 25 cm BI IM true W 50 H 45 BPC 1 D 1 0 F CCF DP ID p o 5 k 3 EI endstream endobj 249 0 obj stream 0 0 0 0 57 70 d1 57 0 0 70 0 0 cm BI IM true W 57 H 70 BPC 1 D 1 0 F CCF DP ID CxD kI _ l xeZ d1 EI endstream endobj 250 0 obj stream 0 0 0 25 59 70 d1 59 0 0 45 0 25 cm BI IM true W 59 H 45 BPC 1 D 1 0 F CCF DP ID W c EI endstream endobj 251 0 obj stream 0 0 0 -1 26 70 d1 26 0 0 71 0 -1 cm BI IM true W 26 H 71 BPC 1 D 1 0 F CCF DP ID 5 _ B ' EI endstream endobj 252 0 obj stream 0 0 0 0 65 69 d1 65 0 0 69 0 0 cm BI IM true W 65 H 69 BPC 1 D 1 0 F CCF DP ID ek _ k _ 'd G EI endstream endobj 253 0 obj stream 0 0 0 -1 50 69 d1 50 0 0 70 0 -1 cm BI IM true W 50 H 70 BPC 1 D 1 0 F CCF DP ID N is4 _ EI endstream endobj 254 0 obj stream 0 0 0 26 49 91 d1 49 0 0 65 0 26 cm BI IM true W 49 H 65 BPC 1 D 1 0 F CCF DP ID 85 G O x_ K v X xX1 MG EI endstream endobj 255 0 obj stream 0 0 0 10 32 73 d1 32 0 0 63 0 10 cm BI IM true W 32 H 63 BPC 1 D 1 0 F CCF DP ID fo_ EI endstream endobj 256 0 obj stream 0 0 0 1 49 73 d1 49 0 0 72 0 1 cm BI IM true W 49 H 72 BPC 1 D 1 0 F CCF DP ID ao 7 u y EI endstream endobj 257 0 obj stream 0 0 0 26 50 73 d1 50 0 0 47 0 26 cm BI IM true W 50 H 47 BPC 1 D 1 0 F CCF DP ID 8 c 9 d_ Q h EI endstream endobj 258 0 obj stream 0 0 0 1 22 71 d1 22 0 0 70 0 1 cm BI IM true W 22 H 70 BPC 1 D 1 0 F CCF DP ID jD k EI endstream endobj 259 0 obj stream 0 0 0 28 48 73 d1 48 0 0 45 0 28 cm BI IM true W 48 H 45 BPC 1 D 1 0 F CCF DP ID 7 5 o X o O zi EI endstream endobj 260 0 obj stream 0 0 0 25 46 93 d1 46 0 0 68 0 25 cm BI IM true W 46 H 68 BPC 1 D 1 0 F CCF DP ID 0 0 ' M 5L 2 Z 0z3 _ v EI endstream endobj 261 0 obj stream 0 0 0 60 13 91 d1 13 0 0 31 0 60 cm BI IM true W 13 H 31 BPC 1 D 1 0 F CCF DP ID c EI endstream endobj 262 0 obj stream 0 0 0 28 67 73 d1 67 0 0 45 0 28 cm BI IM true W 67 H 45 BPC 1 D 1 0 F CCF DP ID g0 _At M x P T' q EI endstream endobj 263 0 obj stream 0 0 0 44 27 50 d1 27 0 0 6 0 44 cm BI IM true W 27 H 6 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 264 0 obj stream 0 0 0 26 50 73 d1 50 0 0 47 0 26 cm BI IM true W 50 H 47 BPC 1 D 1 0 F CCF DP ID l G B 6 _ EI endstream endobj 265 0 obj stream 0 0 0 26 40 73 d1 40 0 0 47 0 26 cm BI IM true W 40 H 47 BPC 1 D 1 0 F CCF DP ID g G oH oX EI endstream endobj 267 0 obj stream 0 0 0 8 30 73 d1 30 0 0 65 0 8 cm BI IM true W 30 H 65 BPC 1 D 1 0 F CCF DP ID 0 y5_ g EI endstream endobj 268 0 obj stream 0 0 0 26 42 73 d1 42 0 0 47 0 26 cm BI IM true W 42 H 47 BPC 1 D 1 0 F CCF DP ID P w k v 0k CG EI endstream endobj 269 0 obj stream 0 0 0 5 25 73 d1 25 0 0 68 0 5 cm BI IM true W 25 H 68 BPC 1 D 1 0 F CCF DP ID MV X0_ EI endstream endobj 270 0 obj stream 0 0 0 0 34 71 d1 34 0 0 71 0 0 cm BI IM true W 34 H 71 BPC 1 D 1 0 F CCF DP ID g f EI endstream endobj 271 0 obj stream 0 0 0 28 50 71 d1 50 0 0 43 0 28 cm BI IM true W 50 H 43 BPC 1 D 1 0 F CCF DP ID C m 0 Kt k y O V oI EI endstream endobj 272 0 obj endobj 273 0 obj endobj 275 0 obj stream 0 0 0 0 41 67 d1 41 0 0 67 0 0 cm BI IM true W 41 H 67 BPC 1 D 1 0 F CCF DP ID Q 7 7 v v K 0 EI endstream endobj 279 0 obj stream 0 0 0 -4 67 70 d1 67 0 0 74 0 -4 cm BI IM true W 67 H 74 BPC 1 D 1 0 F CCF DP ID 5d0 EX4Q8 O xA7 p U 6 k mp 0 O 5 EI endstream endobj 280 0 obj stream 0 0 0 26 40 73 d1 40 0 0 47 0 26 cm BI IM true W 40 H 47 BPC 1 D 1 0 F CCF DP ID l 6_ d p p n O EI endstream endobj 281 0 obj stream 0 0 0 2 92 71 d1 92 0 0 69 0 2 cm BI IM true W 92 H 69 BPC 1 D 1 0 F CCF DP ID 8 E0 w o n o l b Aq _ EI endstream endobj 282 0 obj stream 0 0 0 26 36 73 d1 36 0 0 47 0 26 cm BI IM true W 36 H 47 BPC 1 D 1 0 F CCF DP ID j ol EI endstream endobj 283 0 obj stream 0 0 0 2 67 71 d1 67 0 0 69 0 2 cm BI IM true W 67 H 69 BPC 1 D 1 0 F CCF DP ID 7 6 0 4 8 o Ap EI endstream endobj 284 0 obj stream 0 0 0 1 46 73 d1 46 0 0 72 0 1 cm BI IM true W 46 H 72 BPC 1 D 1 0 F CCF DP ID sz _ 5 W w n5 mp CG x f EI endstream endobj 285 0 obj stream 0 0 0 26 36 73 d1 36 0 0 47 0 26 cm BI IM true W 36 H 47 BPC 1 D 1 0 F CCF DP ID jGHz 8 o Xz EI endstream endobj 286 0 obj stream 0 0 0 2 54 74 d1 54 0 0 72 0 2 cm BI IM true W 54 H 72 BPC 1 D 1 0 F CCF DP ID q pm k y EI endstream endobj 287 0 obj stream 0 0 0 26 75 73 d1 75 0 0 47 0 26 cm BI IM true W 75 H 47 BPC 1 D 1 0 F CCF DP ID l6 L r w U O 4 4 EI endstream endobj 288 0 obj stream 0 0 0 26 34 73 d1 34 0 0 47 0 26 cm BI IM true W 34 H 47 BPC 1 D 1 0 F CCF DP ID z7 s0 -xXK tA p 0KXb EI endstream endobj 289 0 obj stream 0 0 0 2 82 71 d1 82 0 0 69 0 2 cm BI IM true W 82 H 69 BPC 1 D 1 0 F CCF DP ID U p ra w K K p k kv 7 o 2 EI endstream endobj 290 0 obj stream 0 0 0 28 48 92 d1 48 0 0 64 0 28 cm BI IM true W 48 H 64 BPC 1 D 1 0 F CCF DP ID ft wa 0 M _ M EI endstream endobj 291 0 obj stream 0 0 0 60 12 71 d1 12 0 0 11 0 60 cm BI IM true W 12 H 11 BPC 1 D 1 0 F CCF DP ID MPX0 EI endstream endobj 292 0 obj stream 0 0 0 2 32 71 d1 32 0 0 69 0 2 cm BI IM true W 32 H 69 BPC 1 D 1 0 F CCF DP ID j EI endstream endobj 293 0 obj stream 0 0 0 0 62 71 d1 62 0 0 71 0 0 cm BI IM true W 62 H 71 BPC 1 D 1 0 F CCF DP ID O Fri 0 0 8 EI endstream endobj 294 0 obj stream 0 0 0 0 50 65 d1 50 0 0 65 0 0 cm BI IM true W 50 H 65 BPC 1 D 1 0 F CCF DP ID 3 L - w o 5 n z EI endstream endobj 295 0 obj stream 0 0 0 1 47 73 d1 47 0 0 72 0 1 cm BI IM true W 47 H 72 BPC 1 D 1 0 F CCF DP ID 0p' w r Xg x1 J EI endstream endobj 296 0 obj stream 0 0 0 26 44 92 d1 44 0 0 66 0 26 cm BI IM true W 44 H 66 BPC 1 D 1 0 F CCF DP ID 1 o 8 w w o P 2 EI endstream endobj 297 0 obj stream 0 0 0 2 69 74 d1 69 0 0 72 0 2 cm BI IM true W 69 H 72 BPC 1 D 1 0 F CCF DP ID phP BzO P x 7 3 o _ _ z b AB pi EI endstream endobj 298 0 obj stream 0 0 0 -4 24 95 d1 24 0 0 99 0 -4 cm BI IM true W 24 H 99 BPC 1 D 1 0 F CCF DP ID XZZ -p z Z _ Mw EI endstream endobj 299 0 obj stream 0 0 0 -13 43 57 d1 43 0 0 70 0 -13 cm BI IM true W 43 H 70 BPC 1 D 1 0 F CCF DP ID D G o k _ 2t c _ k iv b 0 EI endstream endobj 300 0 obj stream 0 0 0 -13 43 57 d1 43 0 0 70 0 -13 cm BI IM true W 43 H 70 BPC 1 D 1 0 F CCF DP ID 8 4 oA o V k 5 h 0 0 EI endstream endobj 301 0 obj stream 0 0 0 -21 24 78 d1 24 0 0 99 0 -21 cm BI IM true W 24 H 99 BPC 1 D 1 0 F CCF DP ID h Z X_ Ak Z iu EI endstream endobj 302 0 obj stream 0 0 0 1 49 71 d1 49 0 0 70 0 1 cm BI IM true W 49 H 70 BPC 1 D 1 0 F CCF DP ID R' axA z z z Az_ v o O EI endstream endobj 303 0 obj stream 0 0 0 0 51 71 d1 51 0 0 71 0 0 cm BI IM true W 51 H 71 BPC 1 D 1 0 F CCF DP ID G f O K EI endstream endobj 304 0 obj stream 0 0 0 2 57 71 d1 57 0 0 69 0 2 cm BI IM true W 57 H 69 BPC 1 D 1 0 F CCF DP ID c j 4 N l EI endstream endobj 305 0 obj stream 0 0 0 1 13 32 d1 13 0 0 31 0 1 cm BI IM true W 13 H 31 BPC 1 D 1 0 F CCF DP ID o 1 EI endstream endobj 306 0 obj stream 0 0 0 2 58 71 d1 58 0 0 69 0 2 cm BI IM true W 58 H 69 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 307 0 obj stream 0 0 0 2 32 71 d1 32 0 0 69 0 2 cm BI IM true W 32 H 69 BPC 1 D 1 0 F CCF DP ID P EI endstream endobj 308 0 obj stream 0 0 0 0 46 74 d1 46 0 0 74 0 0 cm BI IM true W 46 H 74 BPC 1 D 1 0 F CCF DP ID 0 p Xq 8A u M C Z b P 4Eu _ 5 k Q b k w EI endstream endobj 309 0 obj stream 0 0 0 2 63 71 d1 63 0 0 69 0 2 cm BI IM true W 63 H 69 BPC 1 D 1 0 F CCF DP ID 5C d J 90 EI endstream endobj 310 0 obj stream 0 0 0 -15 43 57 d1 43 0 0 72 0 -15 cm BI IM true W 43 H 72 BPC 1 D 1 0 F CCF DP ID o v EI endstream endobj 311 0 obj stream 0 0 0 -13 43 57 d1 43 0 0 70 0 -13 cm BI IM true W 43 H 70 BPC 1 D 1 0 F CCF DP ID 1j 3Az M L w __ k vz - 4 EI endstream endobj 312 0 obj stream 0 0 0 26 40 73 d1 40 0 0 47 0 26 cm BI IM true W 40 H 47 BPC 1 D 1 0 F CCF DP ID G tx 6O w o k EI endstream endobj 313 0 obj stream 0 0 0 1 22 73 d1 22 0 0 72 0 1 cm BI IM true W 22 H 72 BPC 1 D 1 0 F CCF DP ID ' x w y5_ C EI endstream endobj 314 0 obj stream 0 0 0 26 48 73 d1 48 0 0 47 0 26 cm BI IM true W 48 H 47 BPC 1 D 1 0 F CCF DP ID 0 h v MV o z k EI endstream endobj 315 0 obj stream 0 0 0 26 49 91 d1 49 0 0 65 0 26 cm BI IM true W 49 H 65 BPC 1 D 1 0 F CCF DP ID Fc L _ 5 _ 0h z ' EI endstream endobj 316 0 obj stream 0 0 0 0 46 74 d1 46 0 0 74 0 0 cm BI IM true W 46 H 74 BPC 1 D 1 0 F CCF DP ID 3 l O _ Ak Arx D h GP D2 x_ k ' EI endstream endobj 317 0 obj stream 0 0 0 2 55 71 d1 55 0 0 69 0 2 cm BI IM true W 55 H 69 BPC 1 D 1 0 F CCF DP ID 5 v 7 J o EI endstream endobj 318 0 obj stream 101 0 0 0 0 0 d1 endstream endobj 319 0 obj stream 0 0 0 60 12 71 d1 12 0 0 11 0 60 cm BI IM true W 12 H 11 BPC 1 D 1 0 F CCF DP ID 0 EI endstream endobj 320 0 obj stream 0 0 0 28 12 71 d1 12 0 0 43 0 28 cm BI IM true W 12 H 43 BPC 1 D 1 0 F CCF DP ID MPX0 q j EI endstream endobj 321 0 obj stream 0 0 0 0 41 61 d1 41 0 0 61 0 0 cm BI IM true W 41 H 61 BPC 1 D 1 0 F CCF DP ID b D c EI endstream endobj 322 0 obj stream 0 0 0 18 50 61 d1 50 0 0 43 0 18 cm BI IM true W 50 H 43 BPC 1 D 1 0 F CCF DP ID A'C u uD HMc_ EI endstream endobj 323 0 obj stream 0 0 0 18 50 61 d1 50 0 0 43 0 18 cm BI IM true W 50 H 43 BPC 1 D 1 0 F CCF DP ID TYd x Rj 2p EI endstream endobj 324 0 obj stream 0 0 0 18 43 61 d1 43 0 0 43 0 18 cm BI IM true W 43 H 43 BPC 1 D 1 0 F CCF DP ID C0 5 Z _ u Xa EI endstream endobj 325 0 obj stream 0 0 0 0 42 61 d1 42 0 0 61 0 0 cm BI IM true W 42 H 61 BPC 1 D 1 0 F CCF DP ID k P EI endstream endobj 326 0 obj stream 0 0 0 18 55 61 d1 55 0 0 43 0 18 cm BI IM true W 55 H 43 BPC 1 D 1 0 F CCF DP ID g a0 g HG Mt EI endstream endobj 327 0 obj stream 0 0 0 0 48 61 d1 48 0 0 61 0 0 cm BI IM true W 48 H 61 BPC 1 D 1 0 F CCF DP ID Q D Av iq o _ EI endstream endobj 328 0 obj stream 107 0 0 0 0 0 d1 endstream endobj 329 0 obj stream 0 0 0 -9 28 70 d1 28 0 0 79 0 -9 cm BI IM true W 28 H 79 BPC 1 D 1 0 F CCF DP ID E EI endstream endobj 330 0 obj stream 0 0 0 -9 29 70 d1 29 0 0 79 0 -9 cm BI IM true W 29 H 79 BPC 1 D 1 0 F CCF DP ID Q EI endstream endobj 331 0 obj stream 0 0 0 19 45 43 d1 45 0 0 24 0 19 cm BI IM true W 45 H 24 BPC 1 D 1 0 F CCF DP ID k _ EI endstream endobj 332 0 obj stream 104 0 0 0 0 0 d1 endstream endobj 333 0 obj stream 0 0 0 18 48 61 d1 48 0 0 43 0 18 cm BI IM true W 48 H 43 BPC 1 D 1 0 F CCF DP ID P 'c G 4' 4 GpA ix_ k j EI endstream endobj 334 0 obj stream 0 0 0 18 39 61 d1 39 0 0 43 0 18 cm BI IM true W 39 H 43 BPC 1 D 1 0 F CCF DP ID Q u Az d fB q4 B EI endstream endobj 335 0 obj stream 0 0 0 0 8 79 d1 8 0 0 79 0 0 cm BI IM true W 8 H 79 BPC 1 D 1 0 F CCF DP ID P EI endstream endobj 336 0 obj stream 0 0 0 -9 28 71 d1 28 0 0 80 0 -9 cm BI IM true W 28 H 80 BPC 1 D 1 0 F CCF DP ID h-t XAik Z k EI endstream endobj 337 0 obj stream 119 0 0 0 0 0 d1 endstream endobj 338 0 obj stream 0 0 0 18 14 61 d1 14 0 0 43 0 18 cm BI IM true W 14 H 43 BPC 1 D 1 0 F CCF DP ID _ - ' l 5 EI endstream endobj 339 0 obj stream 118 0 0 0 0 0 d1 endstream endobj 340 0 obj stream 0 0 0 -9 27 71 d1 27 0 0 80 0 -9 cm BI IM true W 27 H 80 BPC 1 D 1 0 F CCF DP ID l 5A xa _ _ k iiap MPP EI endstream endobj 341 0 obj stream 99 0 0 0 0 0 d1 endstream endobj 342 0 obj stream 0 0 0 -2 38 61 d1 38 0 0 63 0 -2 cm BI IM true W 38 H 63 BPC 1 D 1 0 F CCF DP ID E j Ay 5 EI endstream endobj 343 0 obj stream 109 0 0 0 0 0 d1 endstream endobj 344 0 obj stream 0 0 0 6 43 61 d1 43 0 0 55 0 6 cm BI IM true W 43 H 55 BPC 1 D 1 0 F CCF DP ID 5K EI endstream endobj 345 0 obj stream 0 0 0 0 50 61 d1 50 0 0 61 0 0 cm BI IM true W 50 H 61 BPC 1 D 1 0 F CCF DP ID TYd d EI endstream endobj 346 0 obj stream 0 0 0 18 46 61 d1 46 0 0 43 0 18 cm BI IM true W 46 H 43 BPC 1 D 1 0 F CCF DP ID MR y h c X5 EI endstream endobj 347 0 obj stream 103 0 0 0 0 0 d1 endstream endobj 348 0 obj stream 108 0 0 0 0 0 d1 endstream endobj 349 0 obj stream 0 0 0 0 79 71 d1 79 0 0 71 0 0 cm BI IM true W 79 H 71 BPC 1 D 1 0 F CCF DP ID 6 b ME3 9 7 0H xa D EI endstream endobj 350 0 obj stream 0 0 0 28 12 91 d1 12 0 0 63 0 28 cm BI IM true W 12 H 63 BPC 1 D 1 0 F CCF DP ID o U EI endstream endobj 351 0 obj stream 0 0 0 -1 67 71 d1 67 0 0 72 0 -1 cm BI IM true W 67 H 72 BPC 1 D 1 0 F CCF DP ID z o o _ z _ v v _ k EI endstream endobj 352 0 obj stream 0 0 0 -13 43 57 d1 43 0 0 70 0 -13 cm BI IM true W 43 H 70 BPC 1 D 1 0 F CCF DP ID xF oA _ - 4 mvAa _ XKOA 0 O 7 _M Kl X3 EI endstream endobj 353 0 obj stream 0 0 0 -13 41 57 d1 41 0 0 70 0 -13 cm BI IM true W 41 H 70 BPC 1 D 1 0 F CCF DP ID W W C q K W EI endstream endobj 354 0 obj stream 0 0 0 28 40 71 d1 40 0 0 43 0 28 cm BI IM true W 40 H 43 BPC 1 D 1 0 F CCF DP ID 7 p O 5 Q Cdp 'c EI endstream endobj 355 0 obj stream 0 0 0 0 43 43 d1 43 0 0 43 0 0 cm BI IM true W 43 H 43 BPC 1 D 1 0 F CCF DP ID 1x E z o o O iv 0K _ P EI endstream endobj 356 0 obj stream 0 0 0 6 41 57 d1 41 0 0 51 0 6 cm BI IM true W 41 H 51 BPC 1 D 1 0 F CCF DP ID 0 - K X u P EI endstream endobj 357 0 obj stream 0 0 0 0 17 33 d1 17 0 0 33 0 0 cm BI IM true W 17 H 33 BPC 1 D 1 0 F CCF DP ID O _ l 5 EI endstream endobj 358 0 obj stream 115 0 0 0 0 0 d1 endstream endobj 359 0 obj stream 0 0 0 0 59 69 d1 59 0 0 69 0 0 cm BI IM true W 59 H 69 BPC 1 D 1 0 F CCF DP ID 5 0 K 0ADT EI endstream endobj 360 0 obj stream 98 0 0 0 0 0 d1 endstream endobj 361 0 obj stream 0 0 0 -1 69 74 d1 69 0 0 75 0 -1 cm BI IM true W 69 H 75 BPC 1 D 1 0 F CCF DP ID q 5 ' M W O J o c O z d o x 5 k EI endstream endobj 362 0 obj stream 0 0 0 0 62 69 d1 62 0 0 69 0 0 cm BI IM true W 62 H 69 BPC 1 D 1 0 F CCF DP ID H h _ D EI endstream endobj 363 0 obj stream 0 0 0 0 47 92 d1 47 0 0 92 0 0 cm BI IM true W 47 H 92 BPC 1 D 1 0 F CCF DP ID 4 8 p y5 N EI endstream endobj 364 0 obj stream 0 0 0 1 32 32 d1 32 0 0 31 0 1 cm BI IM true W 32 H 31 BPC 1 D 1 0 F CCF DP ID l0m _ m EI endstream endobj 365 0 obj stream 0 0 0 1 32 32 d1 32 0 0 31 0 1 cm BI IM true W 32 H 31 BPC 1 D 1 0 F CCF DP ID o K _ k 0A EI endstream endobj 366 0 obj stream 0 0 0 1 35 73 d1 35 0 0 72 0 1 cm BI IM true W 35 H 72 BPC 1 D 1 0 F CCF DP ID ' 0z o g K _ EI endstream endobj 367 0 obj stream 122 0 0 0 0 0 d1 endstream endobj 368 0 obj stream 0 0 0 0 46 61 d1 46 0 0 61 0 0 cm BI IM true W 46 H 61 BPC 1 D 1 0 F CCF DP ID r9 0O EI endstream endobj 369 0 obj stream 0 0 0 9 48 70 d1 48 0 0 61 0 9 cm BI IM true W 48 H 61 BPC 1 D 1 0 F CCF DP ID O MPP EI endstream endobj 370 0 obj stream 0 0 0 6 41 57 d1 41 0 0 51 0 6 cm BI IM true W 41 H 51 BPC 1 D 1 0 F CCF DP ID Aa-p XAa 0 j EI endstream endobj 371 0 obj stream 0 0 0 27 41 35 d1 41 0 0 8 0 27 cm BI IM true W 41 H 8 BPC 1 D 1 0 F CCF DP ID j EI endstream endobj 372 0 obj stream 106 0 0 0 0 0 d1 endstream endobj 373 0 obj stream 0 0 0 0 66 74 d1 66 0 0 74 0 0 cm BI IM true W 66 H 74 BPC 1 D 1 0 F CCF DP ID C B 0 o o o _ p _ _ Av ia q EI endstream endobj 374 0 obj stream 0 0 0 2 67 71 d1 67 0 0 69 0 2 cm BI IM true W 67 H 69 BPC 1 D 1 0 F CCF DP ID b B ' h8 EI endstream endobj 375 0 obj stream 0 0 0 28 50 71 d1 50 0 0 43 0 28 cm BI IM true W 50 H 43 BPC 1 D 1 0 F CCF DP ID k k EI endstream endobj 376 0 obj stream 0 0 0 1 45 73 d1 45 0 0 72 0 1 cm BI IM true W 45 H 72 BPC 1 D 1 0 F CCF DP ID x 0 lW5 Z ov h J EI endstream endobj 377 0 obj stream 0 0 0 32 66 59 d1 66 0 0 27 0 32 cm BI IM true W 66 H 27 BPC 1 D 1 0 F CCF DP ID 4 EI endstream endobj 378 0 obj endobj 380 0 obj stream 0 0 0 0 63 69 d1 63 0 0 69 0 0 cm BI IM true W 63 H 69 BPC 1 D 1 0 F CCF DP ID _ F EI endstream endobj 384 0 obj stream 0 0 0 26 61 73 d1 61 0 0 47 0 26 cm BI IM true W 61 H 47 BPC 1 D 1 0 F CCF DP ID B3l LPo C w x Y5 X a5 EI endstream endobj 385 0 obj stream 0 0 0 4 43 74 d1 43 0 0 70 0 4 cm BI IM true W 43 H 70 BPC 1 D 1 0 F CCF DP ID bB F z p 0 EI endstream endobj 386 0 obj stream 0 0 0 0 45 45 d1 45 0 0 45 0 0 cm BI IM true W 45 H 45 BPC 1 D 1 0 F CCF DP ID 1 z D z ' kK 6 o b EI endstream endobj 387 0 obj stream 0 0 0 -25 27 45 d1 27 0 0 70 0 -25 cm BI IM true W 27 H 70 BPC 1 D 1 0 F CCF DP ID 5 X 5 EI endstream endobj 388 0 obj stream 0 0 0 0 92 45 d1 92 0 0 45 0 0 cm BI IM true W 92 H 45 BPC 1 D 1 0 F CCF DP ID QI c oa 4 0 aI Hd0 H EI endstream endobj 389 0 obj stream 0 0 0 -4 17 97 d1 17 0 0 101 0 -4 cm BI IM true W 17 H 101 BPC 1 D 1 0 F CCF DP ID _ Xo EI endstream endobj 390 0 obj stream 0 0 0 -4 16 97 d1 16 0 0 101 0 -4 cm BI IM true W 16 H 101 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 391 0 obj stream 0 0 0 26 9 65 d1 9 0 0 39 0 26 cm BI IM true W 9 H 39 BPC 1 D 1 0 F CCF DP ID O EI endstream endobj 392 0 obj stream 0 0 0 19 88 73 d1 88 0 0 54 0 19 cm BI IM true W 88 H 54 BPC 1 D 1 0 F CCF DP ID p6 u Z EI endstream endobj 393 0 obj stream 0 0 0 0 32 71 d1 32 0 0 71 0 0 cm BI IM true W 32 H 71 BPC 1 D 1 0 F CCF DP ID 4 H j3 _ o - EI endstream endobj 394 0 obj stream 0 0 0 24 37 73 d1 37 0 0 49 0 24 cm BI IM true W 37 H 49 BPC 1 D 1 0 F CCF DP ID 8 y5 d3 z 0 0YD EI endstream endobj 395 0 obj stream 0 0 0 1 9 71 d1 9 0 0 70 0 1 cm BI IM true W 9 H 70 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 396 0 obj stream 0 0 0 24 33 73 d1 33 0 0 49 0 24 cm BI IM true W 33 H 49 BPC 1 D 1 0 F CCF DP ID J fq h x' O -- _ 2 EI endstream endobj 397 0 obj stream 0 0 0 24 39 73 d1 39 0 0 49 0 24 cm BI IM true W 39 H 49 BPC 1 D 1 0 F CCF DP ID _ k k B Xk EI endstream endobj 398 0 obj stream 0 0 0 -21 6 80 d1 6 0 0 101 0 -21 cm BI IM true W 6 H 101 BPC 1 D 1 0 F CCF DP ID _ EI endstream endobj 399 0 obj stream 124 0 0 0 0 0 d1 endstream endobj 400 0 obj stream 0 0 0 -3 32 56 d1 32 0 0 59 0 -3 cm BI IM true W 32 H 59 BPC 1 D 1 0 F CCF DP ID N 5 1 EI endstream endobj 401 0 obj stream 0 0 0 8 25 54 d1 25 0 0 46 0 8 cm BI IM true W 25 H 46 BPC 1 D 1 0 F CCF DP ID 4 pr 73 EI endstream endobj 402 0 obj stream 0 0 0 9 37 56 d1 37 0 0 47 0 9 cm BI IM true W 37 H 47 BPC 1 D 1 0 F CCF DP ID ' X EI endstream endobj 403 0 obj stream 143 0 0 0 0 0 d1 endstream endobj 404 0 obj stream 0 0 0 0 66 69 d1 66 0 0 69 0 0 cm BI IM true W 66 H 69 BPC 1 D 1 0 F CCF DP ID MD 7 o _ L EI endstream endobj 405 0 obj stream 0 0 0 2 67 71 d1 67 0 0 69 0 2 cm BI IM true W 67 H 69 BPC 1 D 1 0 F CCF DP ID J jd0k _ B K K _ _ _ K AA EI endstream endobj 406 0 obj stream 0 0 0 4 31 15 d1 31 0 0 11 0 4 cm BI IM true W 31 H 11 BPC 1 D 1 0 F CCF DP ID qi Ma EI endstream endobj 407 0 obj stream 0 0 0 0 51 71 d1 51 0 0 71 0 0 cm BI IM true W 51 H 71 BPC 1 D 1 0 F CCF DP ID QL G o EI endstream endobj 408 0 obj stream 0 0 0 43 99 46 d1 99 0 0 3 0 43 cm BI IM true W 99 H 3 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 409 0 obj stream 0 0 0 1 13 32 d1 13 0 0 31 0 1 cm BI IM true W 13 H 31 BPC 1 D 1 0 F CCF DP ID m 1 EI endstream endobj 410 0 obj stream 0 0 0 26 43 92 d1 43 0 0 66 0 26 cm BI IM true W 43 H 66 BPC 1 D 1 0 F CCF DP ID 3 G xX 0 6 l z EI endstream endobj 411 0 obj stream 0 0 0 25 55 70 d1 55 0 0 45 0 25 cm BI IM true W 55 H 45 BPC 1 D 1 0 F CCF DP ID o O A7 O q EI endstream endobj 412 0 obj stream 0 0 0 -25 42 45 d1 42 0 0 70 0 -25 cm BI IM true W 42 H 70 BPC 1 D 1 0 F CCF DP ID R 7 R 7 x ma B EI endstream endobj 413 0 obj stream 0 0 0 4 26 92 d1 26 0 0 88 0 4 cm BI IM true W 26 H 88 BPC 1 D 1 0 F CCF DP ID 4 0 d d _ ' 2 k EI endstream endobj 414 0 obj stream 0 0 0 -1 46 74 d1 46 0 0 75 0 -1 cm BI IM true W 46 H 75 BPC 1 D 1 0 F CCF DP ID LkA _ Y 2 ih-p h EC3 _ C EI endstream endobj 415 0 obj stream 0 0 0 24 45 73 d1 45 0 0 49 0 24 cm BI IM true W 45 H 49 BPC 1 D 1 0 F CCF DP ID 1 3 O MSK _ l 0P EI endstream endobj 416 0 obj stream 0 0 0 1 52 71 d1 52 0 0 70 0 1 cm BI IM true W 52 H 70 BPC 1 D 1 0 F CCF DP ID xo o o _ Ad6i - F EI endstream endobj 417 0 obj stream 0 0 0 22 51 70 d1 51 0 0 48 0 22 cm BI IM true W 51 H 48 BPC 1 D 1 0 F CCF DP ID 6 5 p l L R MCd s_ k k EI endstream endobj 418 0 obj stream 0 0 0 1 37 71 d1 37 0 0 70 0 1 cm BI IM true W 37 H 70 BPC 1 D 1 0 F CCF DP ID 4 8V 4Kk m D EI endstream endobj 419 0 obj stream 0 0 0 -1 12 71 d1 12 0 0 72 0 -1 cm BI IM true W 12 H 72 BPC 1 D 1 0 F CCF DP ID MPX0 ' MPX0 EI endstream endobj 420 0 obj stream 0 0 0 0 97 72 d1 97 0 0 72 0 0 cm BI IM true W 97 H 72 BPC 1 D 1 0 F CCF DP ID n o o O i_ _ 0 P k 7 OO 0 _ o 8 o EI endstream endobj 421 0 obj stream 0 0 0 40 27 86 d1 27 0 0 46 0 40 cm BI IM true W 27 H 46 BPC 1 D 1 0 F CCF DP ID M EI endstream endobj 422 0 obj stream 0 0 0 40 31 86 d1 31 0 0 46 0 40 cm BI IM true W 31 H 46 BPC 1 D 1 0 F CCF DP ID 7v b II m l0K EI endstream endobj 423 0 obj stream 0 0 0 0 37 71 d1 37 0 0 71 0 0 cm BI IM true W 37 H 71 BPC 1 D 1 0 F CCF DP ID D xO U _ EI endstream endobj 424 0 obj stream 0 0 0 25 57 90 d1 57 0 0 65 0 25 cm BI IM true W 57 H 65 BPC 1 D 1 0 F CCF DP ID 2 D M p MBH EI endstream endobj 425 0 obj stream 0 0 0 2 69 74 d1 69 0 0 72 0 2 cm BI IM true W 69 H 72 BPC 1 D 1 0 F CCF DP ID l o o B D8H n EI endstream endobj 426 0 obj endobj 428 0 obj stream 0 0 0 0 45 69 d1 45 0 0 69 0 0 cm BI IM true W 45 H 69 BPC 1 D 1 0 F CCF DP ID 5 7 0 EI endstream endobj 432 0 obj stream 0 0 0 0 39 66 d1 39 0 0 66 0 0 cm BI IM true W 39 H 66 BPC 1 D 1 0 F CCF DP ID hO x EI endstream endobj 433 0 obj stream 0 0 0 51 17 66 d1 17 0 0 15 0 51 cm BI IM true W 17 H 15 BPC 1 D 1 0 F CCF DP ID B EI endstream endobj 434 0 obj stream 0 0 0 -3 75 66 d1 75 0 0 69 0 -3 cm BI IM true W 75 H 69 BPC 1 D 1 0 F CCF DP ID IC p Kt x k w EI endstream endobj 435 0 obj stream 0 0 0 20 52 68 d1 52 0 0 48 0 20 cm BI IM true W 52 H 48 BPC 1 D 1 0 F CCF DP ID J 0 O mpa EI endstream endobj 436 0 obj stream 0 0 0 20 43 68 d1 43 0 0 48 0 20 cm BI IM true W 43 H 48 BPC 1 D 1 0 F CCF DP ID x xF o m EI endstream endobj 437 0 obj stream 0 0 0 -4 49 68 d1 49 0 0 72 0 -4 cm BI IM true W 49 H 72 BPC 1 D 1 0 F CCF DP ID nf o 5 xw _ q l j p d rB p o m 2 H c EI endstream endobj 438 0 obj stream 0 0 0 20 51 87 d1 51 0 0 67 0 20 cm BI IM true W 51 H 67 BPC 1 D 1 0 F CCF DP ID 2XO xD 7 k 5 b C 3 EI endstream endobj 439 0 obj stream 0 0 0 20 49 68 d1 49 0 0 48 0 20 cm BI IM true W 49 H 48 BPC 1 D 1 0 F CCF DP ID 9g o EI endstream endobj 440 0 obj stream 0 0 0 20 49 68 d1 49 0 0 48 0 20 cm BI IM true W 49 H 48 BPC 1 D 1 0 F CCF DP ID _ C z k EI endstream endobj 441 0 obj stream 0 0 0 20 57 68 d1 57 0 0 48 0 20 cm BI IM true W 57 H 48 BPC 1 D 1 0 F CCF DP ID OA L w l o _ b C EI endstream endobj 442 0 obj stream 0 0 0 20 60 68 d1 60 0 0 48 0 20 cm BI IM true W 60 H 48 BPC 1 D 1 0 F CCF DP ID h D r _ bi 0D EI endstream endobj 443 0 obj stream 0 0 0 -4 54 68 d1 54 0 0 72 0 -4 cm BI IM true W 54 H 72 BPC 1 D 1 0 F CCF DP ID J z 7 5 O j x0 3 EI endstream endobj 444 0 obj stream 0 0 0 2 67 74 d1 67 0 0 72 0 2 cm BI IM true W 67 H 72 BPC 1 D 1 0 F CCF DP ID PRU xA h xW W 8 7 EI endstream endobj 445 0 obj stream 0 0 0 0 69 74 d1 69 0 0 74 0 0 cm BI IM true W 69 H 74 BPC 1 D 1 0 F CCF DP ID C h 4 M 7 O 7 iv il l0 EI endstream endobj 446 0 obj stream 0 0 0 19 43 71 d1 43 0 0 52 0 19 cm BI IM true W 43 H 52 BPC 1 D 1 0 F CCF DP ID 9D EI endstream endobj 447 0 obj stream 0 0 0 19 48 71 d1 48 0 0 52 0 19 cm BI IM true W 48 H 52 BPC 1 D 1 0 F CCF DP ID F x O c _ W EI endstream endobj 448 0 obj stream 0 0 0 18 55 73 d1 55 0 0 55 0 18 cm BI IM true W 55 H 55 BPC 1 D 1 0 F CCF DP ID 3 mp aA O K _ v mp 0A x EI endstream endobj 449 0 obj stream 0 0 0 18 53 73 d1 53 0 0 55 0 18 cm BI IM true W 53 H 55 BPC 1 D 1 0 F CCF DP ID PxXz7 O xA7 _ z k EI endstream endobj 450 0 obj stream 0 0 0 28 38 71 d1 38 0 0 43 0 28 cm BI IM true W 38 H 43 BPC 1 D 1 0 F CCF DP ID _'2j EI endstream endobj 451 0 obj stream 0 0 0 0 68 74 d1 68 0 0 74 0 0 cm BI IM true W 68 H 74 BPC 1 D 1 0 F CCF DP ID H k _ __ _ dc k 5 k xA y EI endstream endobj 452 0 obj stream 0 0 0 2 69 71 d1 69 0 0 69 0 2 cm BI IM true W 69 H 69 BPC 1 D 1 0 F CCF DP ID J z v k _X m m n w xZ_ zP O W M C D EI endstream endobj 453 0 obj stream 0 0 0 1 50 73 d1 50 0 0 72 0 1 cm BI IM true W 50 H 72 BPC 1 D 1 0 F CCF DP ID mw o o K K EI endstream endobj 454 0 obj stream 0 0 0 0 67 72 d1 67 0 0 72 0 0 cm BI IM true W 67 H 72 BPC 1 D 1 0 F CCF DP ID u 5 _ _ K 6 _ K _ _ _ U W O h EI endstream endobj 455 0 obj stream 0 0 0 41 31 51 d1 31 0 0 10 0 41 cm BI IM true W 31 H 10 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 456 0 obj stream 0 0 0 0 68 69 d1 68 0 0 69 0 0 cm BI IM true W 68 H 69 BPC 1 D 1 0 F CCF DP ID j o C k ' w _ _ EI endstream endobj 457 0 obj stream 0 0 0 1 56 74 d1 56 0 0 73 0 1 cm BI IM true W 56 H 73 BPC 1 D 1 0 F CCF DP ID 2 ' A0 M o - g L j EI endstream endobj 458 0 obj stream 0 0 0 2 67 71 d1 67 0 0 69 0 2 cm BI IM true W 67 H 69 BPC 1 D 1 0 F CCF DP ID F h w z Y EI endstream endobj 459 0 obj stream 0 0 0 60 12 71 d1 12 0 0 11 0 60 cm BI IM true W 12 H 11 BPC 1 D 1 0 F CCF DP ID MPX0 EI endstream endobj 460 0 obj stream 0 0 0 4 43 74 d1 43 0 0 70 0 4 cm BI IM true W 43 H 70 BPC 1 D 1 0 F CCF DP ID 1j A7 O _ ip z X0 f EI endstream endobj 461 0 obj stream 150 0 0 0 0 0 d1 endstream endobj 462 0 obj stream 0 0 0 0 68 69 d1 68 0 0 69 0 0 cm BI IM true W 68 H 69 BPC 1 D 1 0 F CCF DP ID MB Ck V u UAAJ g EI endstream endobj 463 0 obj stream 0 0 0 -24 83 47 d1 83 0 0 71 0 -24 cm BI IM true W 83 H 71 BPC 1 D 1 0 F CCF DP ID C h zz5 O N b 4k o PPR EI endstream endobj 464 0 obj endobj 469 0 obj stream 0 0 0 0 59 70 d1 59 0 0 70 0 0 cm BI IM true W 59 H 70 BPC 1 D 1 0 F CCF DP ID R g EI endstream endobj 470 0 obj stream 0 0 0 -1 71 71 d1 71 0 0 72 0 -1 cm BI IM true W 71 H 72 BPC 1 D 1 0 F CCF DP ID j OC xD p 8 z o 7 XzO P _ k d 1' EI endstream endobj 471 0 obj stream 0 0 0 26 48 73 d1 48 0 0 47 0 26 cm BI IM true W 48 H 47 BPC 1 D 1 0 F CCF DP ID K b g EI endstream endobj 472 0 obj stream 0 0 0 60 13 91 d1 13 0 0 31 0 60 cm BI IM true W 13 H 31 BPC 1 D 1 0 F CCF DP ID c EI endstream endobj 473 0 obj stream 0 0 0 13 66 79 d1 66 0 0 66 0 13 cm BI IM true W 66 H 66 BPC 1 D 1 0 F CCF DP ID 4 ds j EI endstream endobj 474 0 obj stream 0 0 0 0 53 68 d1 53 0 0 68 0 0 cm BI IM true W 53 H 68 BPC 1 D 1 0 F CCF DP ID p _m l m zw O l7 p z io X2pp EI endstream endobj 475 0 obj stream 0 0 0 -4 70 68 d1 70 0 0 72 0 -4 cm BI IM true W 70 H 72 BPC 1 D 1 0 F CCF DP ID D3 X 0z z 6m p Kf EI endstream endobj 476 0 obj stream 125 0 0 0 0 0 d1 endstream endobj 477 0 obj stream 0 0 0 1 32 68 d1 32 0 0 67 0 1 cm BI IM true W 32 H 67 BPC 1 D 1 0 F CCF DP ID x z p K MB EI endstream endobj 478 0 obj stream 0 0 0 -4 26 68 d1 26 0 0 72 0 -4 cm BI IM true W 26 H 72 BPC 1 D 1 0 F CCF DP ID z' y5 EO EI endstream endobj 479 0 obj stream 0 0 0 -5 31 68 d1 31 0 0 73 0 -5 cm BI IM true W 31 H 73 BPC 1 D 1 0 F CCF DP ID S_ y5_ z _ EI endstream endobj 480 0 obj stream 0 0 0 20 43 68 d1 43 0 0 48 0 20 cm BI IM true W 43 H 48 BPC 1 D 1 0 F CCF DP ID x OP m 0 b EI endstream endobj 481 0 obj stream 0 0 0 -5 55 87 d1 55 0 0 92 0 -5 cm BI IM true W 55 H 92 BPC 1 D 1 0 F CCF DP ID 7 C W Q y Xb EI endstream endobj 482 0 obj stream 0 0 0 -4 54 68 d1 54 0 0 72 0 -4 cm BI IM true W 54 H 72 BPC 1 D 1 0 F CCF DP ID 3 4 U p w xaw 0 EI endstream endobj 483 0 obj stream 0 0 0 20 39 68 d1 39 0 0 48 0 20 cm BI IM true W 39 H 48 BPC 1 D 1 0 F CCF DP ID H f 5 k3 xA w EI endstream endobj 484 0 obj stream 0 0 0 20 57 86 d1 57 0 0 66 0 20 cm BI IM true W 57 H 66 BPC 1 D 1 0 F CCF DP ID d n 0 k l 8P EI endstream endobj 485 0 obj stream 0 0 0 17 88 75 d1 88 0 0 58 0 17 cm BI IM true W 88 H 58 BPC 1 D 1 0 F CCF DP ID p u XK Z f XK 7 7 EI endstream endobj 486 0 obj endobj 491 0 obj stream 0 0 0 0 78 45 d1 78 0 0 45 0 0 cm BI IM true W 78 H 45 BPC 1 D 1 0 F CCF DP ID 8 D5 7 0 - mX X N Xq N EI endstream endobj 492 0 obj stream 0 0 0 0 52 68 d1 52 0 0 68 0 0 cm BI IM true W 52 H 68 BPC 1 D 1 0 F CCF DP ID M k _ K f F 6 o 5 X5 EI endstream endobj 493 0 obj stream 0 0 0 -4 61 68 d1 61 0 0 72 0 -4 cm BI IM true W 61 H 72 BPC 1 D 1 0 F CCF DP ID 8 o 0 F 7 h7 O u r 2I r d 4 u - O5 O Q EI endstream endobj 494 0 obj stream 116 0 0 0 0 0 d1 endstream endobj 495 0 obj stream 0 0 0 20 88 68 d1 88 0 0 48 0 20 cm BI IM true W 88 H 48 BPC 1 D 1 0 F CCF DP ID Y O L k p xw Bk 4 b P EI endstream endobj 496 0 obj stream 0 0 0 20 51 87 d1 51 0 0 67 0 20 cm BI IM true W 51 H 67 BPC 1 D 1 0 F CCF DP ID o o W w U 6 o x EI endstream endobj 497 0 obj stream 0 0 0 21 26 86 d1 26 0 0 65 0 21 cm BI IM true W 26 H 65 BPC 1 D 1 0 F CCF DP ID 0 0 0 X0 EI endstream endobj 498 0 obj stream 0 0 0 -4 40 97 d1 40 0 0 101 0 -4 cm BI IM true W 40 H 101 BPC 1 D 1 0 F CCF DP ID jx EI endstream endobj 499 0 obj stream 0 0 0 0 66 91 d1 66 0 0 91 0 0 cm BI IM true W 66 H 91 BPC 1 D 1 0 F CCF DP ID f C 4 zT LS xQ O h z EI endstream endobj 500 0 obj endobj 505 0 obj stream 0 0 0 0 55 70 d1 55 0 0 70 0 0 cm BI IM true W 55 H 70 BPC 1 D 1 0 F CCF DP ID d z z z _ 0 MB EI endstream endobj 506 0 obj stream 0 0 0 24 53 91 d1 53 0 0 67 0 24 cm BI IM true W 53 H 67 BPC 1 D 1 0 F CCF DP ID HS C hz x d 5 h c 5 0 E A7 O F z - d d EI endstream endobj 507 0 obj stream 0 0 0 2 67 71 d1 67 0 0 69 0 2 cm BI IM true W 67 H 69 BPC 1 D 1 0 F CCF DP ID j C N 3 G 2 EI endstream endobj 508 0 obj stream 0 0 0 2 73 74 d1 73 0 0 72 0 2 cm BI IM true W 73 H 72 BPC 1 D 1 0 F CCF DP ID h9 v D _ _ z Az ' o z K e p _ EI endstream endobj 509 0 obj stream 0 0 0 0 63 74 d1 63 0 0 74 0 0 cm BI IM true W 63 H 74 BPC 1 D 1 0 F CCF DP ID C O o_ 7 ' zA _ k av ' B EI endstream endobj 510 0 obj stream 0 0 0 -4 39 97 d1 39 0 0 101 0 -4 cm BI IM true W 39 H 101 BPC 1 D 1 0 F CCF DP ID 7 EI endstream endobj 511 0 obj stream 0 0 0 0 46 66 d1 46 0 0 66 0 0 cm BI IM true W 46 H 66 BPC 1 D 1 0 F CCF DP ID 7 C9 rY Xd X2 EI endstream endobj 512 0 obj stream 0 0 0 -3 78 66 d1 78 0 0 69 0 -3 cm BI IM true W 78 H 69 BPC 1 D 1 0 F CCF DP ID VA 8p 3 z 7 o o q B PT 3 EI endstream endobj 513 0 obj stream 113 0 0 0 0 0 d1 endstream endobj 514 0 obj stream 0 0 0 25 55 90 d1 55 0 0 65 0 25 cm BI IM true W 55 H 65 BPC 1 D 1 0 F CCF DP ID h 8 O W O O C o J o EI endstream endobj 515 0 obj stream 0 0 0 0 57 74 d1 57 0 0 74 0 0 cm BI IM true W 57 H 74 BPC 1 D 1 0 F CCF DP ID 0N 5A O o O p p h F 0 8iR U 4 EI endstream endobj 516 0 obj stream 0 0 0 28 47 93 d1 47 0 0 65 0 28 cm BI IM true W 47 H 65 BPC 1 D 1 0 F CCF DP ID j 7 O EI endstream endobj 517 0 obj stream 0 0 0 0 55 91 d1 55 0 0 91 0 0 cm BI IM true W 55 H 91 BPC 1 D 1 0 F CCF DP ID 0 5_ GxP X M w u o h EI endstream endobj 518 0 obj stream 0 0 0 -1 42 73 d1 42 0 0 74 0 -1 cm BI IM true W 42 H 74 BPC 1 D 1 0 F CCF DP ID z 7 O _ 7 v aa _ u _ 2 EI endstream endobj 519 0 obj stream 0 0 0 26 53 93 d1 53 0 0 67 0 26 cm BI IM true W 53 H 67 BPC 1 D 1 0 F CCF DP ID _ W k h 7 a7k EI endstream endobj 520 0 obj endobj 525 0 obj stream 0 0 0 0 35 40 d1 35 0 0 40 0 0 cm BI IM true W 35 H 40 BPC 1 D 1 0 F CCF DP ID 82 P 8O7O _ d0 B p Q z Bh EI endstream endobj 526 0 obj stream 0 0 0 0 51 58 d1 51 0 0 58 0 0 cm BI IM true W 51 H 58 BPC 1 D 1 0 F CCF DP ID f M O O B o - 2 W EI endstream endobj 527 0 obj stream 0 0 0 0 54 40 d1 54 0 0 40 0 0 cm BI IM true W 54 H 40 BPC 1 D 1 0 F CCF DP ID b k V_ EI endstream endobj 528 0 obj stream 0 0 0 -17 32 40 d1 32 0 0 57 0 -17 cm BI IM true W 32 H 57 BPC 1 D 1 0 F CCF DP ID q _ Z H EI endstream endobj 529 0 obj stream 0 0 0 0 49 40 d1 49 0 0 40 0 0 cm BI IM true W 49 H 40 BPC 1 D 1 0 F CCF DP ID Har1 f Q u 0 O B EI endstream endobj 530 0 obj stream 0 0 0 0 51 40 d1 51 0 0 40 0 0 cm BI IM true W 51 H 40 BPC 1 D 1 0 F CCF DP ID x 4 5 KO O xVX 1 EI endstream endobj 531 0 obj stream 0 0 0 -2 42 63 d1 42 0 0 65 0 -2 cm BI IM true W 42 H 65 BPC 1 D 1 0 F CCF DP ID p' c k w n CJ EI endstream endobj 532 0 obj stream 0 0 0 22 10 61 d1 10 0 0 39 0 22 cm BI IM true W 10 H 39 BPC 1 D 1 0 F CCF DP ID Zq MR q MR EI endstream endobj 533 0 obj stream 0 0 0 26 62 51 d1 62 0 0 25 0 26 cm BI IM true W 62 H 25 BPC 1 D 1 0 F CCF DP ID c J EI endstream endobj 534 0 obj stream 0 0 0 21 42 63 d1 42 0 0 42 0 21 cm BI IM true W 42 H 42 BPC 1 D 1 0 F CCF DP ID C0O z6 z m q 7 g 7 m W 0 EI endstream endobj 535 0 obj stream 0 0 0 -26 6 64 d1 6 0 0 90 0 -26 cm BI IM true W 6 H 90 BPC 1 D 1 0 F CCF DP ID Mu EI endstream endobj 536 0 obj stream 0 0 0 11 10 21 d1 10 0 0 10 0 11 cm BI IM true W 10 H 10 BPC 1 D 1 0 F CCF DP ID Zq MR EI endstream endobj 537 0 obj stream 130 0 0 0 0 0 d1 endstream endobj 538 0 obj stream 0 0 0 -24 46 20 d1 46 0 0 44 0 -24 cm BI IM true W 46 H 44 BPC 1 D 1 0 F CCF DP ID k k m _ fxq XnP bCMCD _ EI endstream endobj 539 0 obj stream 0 0 0 -10 30 32 d1 30 0 0 42 0 -10 cm BI IM true W 30 H 42 BPC 1 D 1 0 F CCF DP ID xG zA O k 4 EI endstream endobj 540 0 obj stream 0 0 0 -10 22 30 d1 22 0 0 40 0 -10 cm BI IM true W 22 H 40 BPC 1 D 1 0 F CCF DP ID fc j EI endstream endobj 541 0 obj stream 0 0 0 5 35 30 d1 35 0 0 25 0 5 cm BI IM true W 35 H 25 BPC 1 D 1 0 F CCF DP ID 0p 0O 7 qh5 EI endstream endobj 542 0 obj stream 0 0 0 -41 51 25 d1 51 0 0 66 0 -41 cm BI IM true W 51 H 66 BPC 1 D 1 0 F CCF DP ID O O o 8 o o _ EI endstream endobj 543 0 obj stream 0 0 0 -41 47 24 d1 47 0 0 65 0 -41 cm BI IM true W 47 H 65 BPC 1 D 1 0 F CCF DP ID 5 0 K mvo z _ 3 EI endstream endobj 544 0 obj stream 0 0 0 21 8 55 d1 8 0 0 34 0 21 cm BI IM true W 8 H 34 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 545 0 obj stream 0 0 0 14 83 63 d1 83 0 0 49 0 14 cm BI IM true W 83 H 49 BPC 1 D 1 0 F CCF DP ID Vp3 o Mt iu _ _ EI endstream endobj 546 0 obj stream 110 0 0 0 0 0 d1 endstream endobj 547 0 obj stream 0 0 0 33 10 43 d1 10 0 0 10 0 33 cm BI IM true W 10 H 10 BPC 1 D 1 0 F CCF DP ID Zq MR EI endstream endobj 548 0 obj stream 0 0 0 0 51 40 d1 51 0 0 40 0 0 cm BI IM true W 51 H 40 BPC 1 D 1 0 F CCF DP ID O ' qA EI endstream endobj 549 0 obj stream 0 0 0 -23 24 40 d1 24 0 0 63 0 -23 cm BI IM true W 24 H 63 BPC 1 D 1 0 F CCF DP ID 5 c Q EI endstream endobj 550 0 obj stream 0 0 0 -24 23 40 d1 23 0 0 64 0 -24 cm BI IM true W 23 H 64 BPC 1 D 1 0 F CCF DP ID 5 MD 0 EI endstream endobj 551 0 obj stream 0 0 0 -23 53 40 d1 53 0 0 63 0 -23 cm BI IM true W 53 H 63 BPC 1 D 1 0 F CCF DP ID 3 p b _ k mxk 3 O EI endstream endobj 552 0 obj stream 0 0 0 -2 47 61 d1 47 0 0 63 0 -2 cm BI IM true W 47 H 63 BPC 1 D 1 0 F CCF DP ID p EI endstream endobj 553 0 obj stream 0 0 0 -90 50 -29 d1 50 0 0 61 0 -90 cm BI IM true W 50 H 61 BPC 1 D 1 0 F CCF DP ID j 4 _ KP EI endstream endobj 554 0 obj stream 0 0 0 -3 50 64 d1 50 0 0 67 0 -3 cm BI IM true W 50 H 67 BPC 1 D 1 0 F CCF DP ID 0 0 5 L o X z u Ah5 2 o bz 3 EI endstream endobj 555 0 obj stream 114 0 0 0 0 0 d1 endstream endobj 556 0 obj stream 0 0 0 -10 19 33 d1 19 0 0 43 0 -10 cm BI IM true W 19 H 43 BPC 1 D 1 0 F CCF DP ID x w Xk EI endstream endobj 557 0 obj stream 0 0 0 0 52 58 d1 52 0 0 58 0 0 cm BI IM true W 52 H 58 BPC 1 D 1 0 F CCF DP ID 3 4 F L K 4 _ H EI endstream endobj 558 0 obj stream 0 0 0 -1 49 60 d1 49 0 0 61 0 -1 cm BI IM true W 49 H 61 BPC 1 D 1 0 F CCF DP ID c d o K Ar 55 dnP o O 1_ 0 H EI endstream endobj 559 0 obj stream 134 0 0 0 0 0 d1 endstream endobj 560 0 obj stream 0 0 0 4 38 33 d1 38 0 0 29 0 4 cm BI IM true W 38 H 29 BPC 1 D 1 0 F CCF DP ID 8 k o o EI endstream endobj 561 0 obj stream 0 0 0 -8 48 40 d1 48 0 0 48 0 -8 cm BI IM true W 48 H 48 BPC 1 D 1 0 F CCF DP ID 7 A_ EI endstream endobj 562 0 obj stream 121 0 0 0 0 0 d1 endstream endobj 563 0 obj stream 0 0 0 -12 57 63 d1 57 0 0 75 0 -12 cm BI IM true W 57 H 75 BPC 1 D 1 0 F CCF DP ID E u _ _ 0n 95D y H EI endstream endobj 564 0 obj stream 0 0 0 0 38 40 d1 38 0 0 40 0 0 cm BI IM true W 38 H 40 BPC 1 D 1 0 F CCF DP ID G _ C EI endstream endobj 565 0 obj stream 0 0 0 0 44 40 d1 44 0 0 40 0 0 cm BI IM true W 44 H 40 BPC 1 D 1 0 F CCF DP ID C u _ k Z 7 b EI endstream endobj 566 0 obj stream 0 0 0 0 54 40 d1 54 0 0 40 0 0 cm BI IM true W 54 H 40 BPC 1 D 1 0 F CCF DP ID y N k X Hl EI endstream endobj 567 0 obj stream 0 0 0 0 41 40 d1 41 0 0 40 0 0 cm BI IM true W 41 H 40 BPC 1 D 1 0 F CCF DP ID E OK 2 Q Xb EI endstream endobj 568 0 obj stream 0 0 0 0 48 40 d1 48 0 0 40 0 0 cm BI IM true W 48 H 40 BPC 1 D 1 0 F CCF DP ID 0 v X p cH EI endstream endobj 569 0 obj stream 0 0 0 22 90 54 d1 90 0 0 32 0 22 cm BI IM true W 90 H 32 BPC 1 D 1 0 F CCF DP ID x AR L w rm oA7 8 - Z l0 Xb_ K EI endstream endobj 570 0 obj stream 0 0 0 19 62 60 d1 62 0 0 41 0 19 cm BI IM true W 62 H 41 BPC 1 D 1 0 F CCF DP ID r L 0_ M Oa EI endstream endobj 571 0 obj stream 0 0 0 0 15 90 d1 15 0 0 90 0 0 cm BI IM true W 15 H 90 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 572 0 obj stream 0 0 0 3 51 85 d1 51 0 0 82 0 3 cm BI IM true W 51 H 82 BPC 1 D 1 0 F CCF DP ID 6 MW Jo ot l 8 lC 1 il5 iR EI endstream endobj 573 0 obj stream 0 0 0 0 15 90 d1 15 0 0 90 0 0 cm BI IM true W 15 H 90 BPC 1 D 1 0 F CCF DP ID 5 EI endstream endobj 574 0 obj stream 0 0 0 3 38 69 d1 38 0 0 66 0 3 cm BI IM true W 38 H 66 BPC 1 D 1 0 F CCF DP ID L zM _ - iu u p - EI endstream endobj 575 0 obj stream 0 0 0 -101 15 -69 d1 15 0 0 32 0 -101 cm BI IM true W 15 H 32 BPC 1 D 1 0 F CCF DP ID Q 5 EI endstream endobj 576 0 obj stream 0 0 0 27 49 88 d1 49 0 0 61 0 27 cm BI IM true W 49 H 61 BPC 1 D 1 0 F CCF DP ID h nMPa _ EI endstream endobj 577 0 obj stream 0 0 0 -4 45 81 d1 45 0 0 85 0 -4 cm BI IM true W 45 H 85 BPC 1 D 1 0 F CCF DP ID 6 x j EI endstream endobj 578 0 obj stream 0 0 0 0 46 56 d1 46 0 0 56 0 0 cm BI IM true W 46 H 56 BPC 1 D 1 0 F CCF DP ID d1 D X ip _ Q OS xdI 7 EI endstream endobj 579 0 obj stream 0 0 0 0 82 40 d1 82 0 0 40 0 0 cm BI IM true W 82 H 40 BPC 1 D 1 0 F CCF DP ID 2 r j D4 1 Z B EI endstream endobj 580 0 obj stream 0 0 0 0 61 64 d1 61 0 0 64 0 0 cm BI IM true W 61 H 64 BPC 1 D 1 0 F CCF DP ID f 6 o y5 xg O v O - EI endstream endobj 581 0 obj stream 0 0 0 30 28 70 d1 28 0 0 40 0 30 cm BI IM true W 28 H 40 BPC 1 D 1 0 F CCF DP ID 0 0 o 7 o f EI endstream endobj 582 0 obj stream 0 0 0 0 50 61 d1 50 0 0 61 0 0 cm BI IM true W 50 H 61 BPC 1 D 1 0 F CCF DP ID 5 Ce q g EI endstream endobj 583 0 obj stream 0 0 0 0 64 64 d1 64 0 0 64 0 0 cm BI IM true W 64 H 64 BPC 1 D 1 0 F CCF DP ID P E M _ 0 EI endstream endobj 584 0 obj endobj 589 0 obj stream 0 0 0 54 43 87 d1 43 0 0 33 0 54 cm BI IM true W 43 H 33 BPC 1 D 1 0 F CCF DP ID l4 p w l k EI endstream endobj 590 0 obj stream 0 0 0 25 55 70 d1 55 0 0 45 0 25 cm BI IM true W 55 H 45 BPC 1 D 1 0 F CCF DP ID 3 _Xm- p k h O _ EI endstream endobj 591 0 obj stream 0 0 0 55 36 88 d1 36 0 0 33 0 55 cm BI IM true W 36 H 33 BPC 1 D 1 0 F CCF DP ID X M 8 v p p 0P EI endstream endobj 592 0 obj stream 0 0 0 56 10 86 d1 10 0 0 30 0 56 cm BI IM true W 10 H 30 BPC 1 D 1 0 F CCF DP ID - EI endstream endobj 593 0 obj stream 0 0 0 37 43 88 d1 43 0 0 51 0 37 cm BI IM true W 43 H 51 BPC 1 D 1 0 F CCF DP ID Bp 2 h 4f 5 EI endstream endobj 594 0 obj stream 0 0 0 55 28 88 d1 28 0 0 33 0 55 cm BI IM true W 28 H 33 BPC 1 D 1 0 F CCF DP ID 4 x o m Mp u 9pH kb EI endstream endobj 595 0 obj stream 0 0 0 26 37 73 d1 37 0 0 47 0 26 cm BI IM true W 37 H 47 BPC 1 D 1 0 F CCF DP ID x z oH m p 4 b ip F L 3 1 EI endstream endobj 596 0 obj stream 0 0 0 0 35 91 d1 35 0 0 91 0 0 cm BI IM true W 35 H 91 BPC 1 D 1 0 F CCF DP ID LF P G 5 z O EI endstream endobj 597 0 obj stream 0 0 0 0 55 69 d1 55 0 0 69 0 0 cm BI IM true W 55 H 69 BPC 1 D 1 0 F CCF DP ID j D EI endstream endobj 598 0 obj stream 0 0 0 -1 49 69 d1 49 0 0 70 0 -1 cm BI IM true W 49 H 70 BPC 1 D 1 0 F CCF DP ID R o EI endstream endobj 599 0 obj stream 0 0 0 24 66 70 d1 66 0 0 46 0 24 cm BI IM true W 66 H 46 BPC 1 D 1 0 F CCF DP ID 6 L O x xavk 0 EI endstream endobj 600 0 obj stream 120 0 0 0 0 0 d1 endstream endobj 601 0 obj stream 0 0 0 28 96 64 d1 96 0 0 36 0 28 cm BI IM true W 96 H 36 BPC 1 D 1 0 F CCF DP ID xs 7 zw h o m x 6 av m M KaVU EI endstream endobj 602 0 obj stream 0 0 0 26 56 73 d1 56 0 0 47 0 26 cm BI IM true W 56 H 47 BPC 1 D 1 0 F CCF DP ID ' 3 Xk oH P w f k 0 xY EI endstream endobj 603 0 obj stream 0 0 0 -7 61 75 d1 61 0 0 82 0 -7 cm BI IM true W 61 H 82 BPC 1 D 1 0 F CCF DP ID E F k p Y 2 p F 4 rj d' 4 k EI endstream endobj 604 0 obj stream 0 0 0 1 58 91 d1 58 0 0 90 0 1 cm BI IM true W 58 H 90 BPC 1 D 1 0 F CCF DP ID 2 z O 7 xXz' q EI endstream endobj 605 0 obj stream 0 0 0 0 63 92 d1 63 0 0 92 0 0 cm BI IM true W 63 H 92 BPC 1 D 1 0 F CCF DP ID 98 p M G7 V _ ku EI endstream endobj 606 0 obj stream 0 0 0 17 88 75 d1 88 0 0 58 0 17 cm BI IM true W 88 H 58 BPC 1 D 1 0 F CCF DP ID x x Hp Z _ Y Z -u Z _ EI endstream endobj 607 0 obj stream 0 0 0 -20 46 2 d1 46 0 0 22 0 -20 cm BI IM true W 46 H 22 BPC 1 D 1 0 F CCF DP ID Y EI endstream endobj 608 0 obj stream 0 0 0 0 41 49 d1 41 0 0 49 0 0 cm BI IM true W 41 H 49 BPC 1 D 1 0 F CCF DP ID g zxF l q ac v H l Xev8k EI endstream endobj 609 0 obj stream 0 0 0 -1 73 71 d1 73 0 0 72 0 -1 cm BI IM true W 73 H 72 BPC 1 D 1 0 F CCF DP ID K 0 v u K n w _ k EI endstream endobj 610 0 obj endobj 615 0 obj stream 0 0 0 40 12 51 d1 12 0 0 11 0 40 cm BI IM true W 12 H 11 BPC 1 D 1 0 F CCF DP ID MPX0 EI endstream endobj 616 0 obj stream 0 0 0 -4 37 95 d1 37 0 0 99 0 -4 cm BI IM true W 37 H 99 BPC 1 D 1 0 F CCF DP ID z K Z MW EI endstream endobj 617 0 obj stream 0 0 0 2 69 71 d1 69 0 0 69 0 2 cm BI IM true W 69 H 69 BPC 1 D 1 0 F CCF DP ID e w c f - c C r EI endstream endobj 618 0 obj stream 0 0 0 -4 37 95 d1 37 0 0 99 0 -4 cm BI IM true W 37 H 99 BPC 1 D 1 0 F CCF DP ID 0A o 7 o o _ EI endstream endobj 619 0 obj stream 0 0 0 -12 22 35 d1 22 0 0 47 0 -12 cm BI IM true W 22 H 47 BPC 1 D 1 0 F CCF DP ID O 0 7 EI endstream endobj 620 0 obj stream 0 0 0 0 39 38 d1 39 0 0 38 0 0 cm BI IM true W 39 H 38 BPC 1 D 1 0 F CCF DP ID f z k - EI endstream endobj 621 0 obj stream 0 0 0 5 61 87 d1 61 0 0 82 0 5 cm BI IM true W 61 H 82 BPC 1 D 1 0 F CCF DP ID k r f a-t az U gP B EI endstream endobj 622 0 obj stream 0 0 0 18 35 73 d1 35 0 0 55 0 18 cm BI IM true W 35 H 55 BPC 1 D 1 0 F CCF DP ID Bp 7 d0 K Wq EI endstream endobj 623 0 obj stream 0 0 0 19 53 71 d1 53 0 0 52 0 19 cm BI IM true W 53 H 52 BPC 1 D 1 0 F CCF DP ID x M EI endstream endobj 624 0 obj stream 0 0 0 19 55 73 d1 55 0 0 54 0 19 cm BI IM true W 55 H 54 BPC 1 D 1 0 F CCF DP ID P0 6 B 0 EI endstream endobj 625 0 obj stream 0 0 0 19 53 71 d1 53 0 0 52 0 19 cm BI IM true W 53 H 52 BPC 1 D 1 0 F CCF DP ID N K _ _ _ _ _ zA Q X EI endstream endobj 626 0 obj stream 0 0 0 19 53 71 d1 53 0 0 52 0 19 cm BI IM true W 53 H 52 BPC 1 D 1 0 F CCF DP ID CA EI endstream endobj 627 0 obj stream 0 0 0 19 44 71 d1 44 0 0 52 0 19 cm BI IM true W 44 H 52 BPC 1 D 1 0 F CCF DP ID 3 H 2 EI endstream endobj 628 0 obj stream 0 0 0 19 57 73 d1 57 0 0 54 0 19 cm BI IM true W 57 H 54 BPC 1 D 1 0 F CCF DP ID l2 W O 7 ' EI endstream endobj 629 0 obj stream 0 0 0 2 78 71 d1 78 0 0 69 0 2 cm BI IM true W 78 H 69 BPC 1 D 1 0 F CCF DP ID K 4 vo p l X 4OV 7 GB EI endstream endobj 630 0 obj stream 0 0 0 16 49 76 d1 49 0 0 60 0 16 cm BI IM true W 49 H 60 BPC 1 D 1 0 F CCF DP ID d3 et K _ B 5O o 0 EI endstream endobj 631 0 obj stream 0 0 0 -6 56 57 d1 56 0 0 63 0 -6 cm BI IM true W 56 H 63 BPC 1 D 1 0 F CCF DP ID x zxGP zM 7 M EI endstream endobj 632 0 obj stream 0 0 0 -4 74 68 d1 74 0 0 72 0 -4 cm BI IM true W 74 H 72 BPC 1 D 1 0 F CCF DP ID x ozM W Ck av 0i 5 M O C_G EI endstream endobj 633 0 obj stream 0 0 0 20 53 68 d1 53 0 0 48 0 20 cm BI IM true W 53 H 48 BPC 1 D 1 0 F CCF DP ID 3' M6 n y5 p 0_ r' o 4 OX1LV EI endstream endobj 634 0 obj stream 0 0 0 -3 75 66 d1 75 0 0 69 0 -3 cm BI IM true W 75 H 69 BPC 1 D 1 0 F CCF DP ID MB j 0 o p 8 x w n c _ EI endstream endobj 635 0 obj endobj 640 0 obj stream 0 0 0 -2 20 63 d1 20 0 0 65 0 -2 cm BI IM true W 20 H 65 BPC 1 D 1 0 F CCF DP ID p' q u C EI endstream endobj 641 0 obj stream 0 0 0 3 57 87 d1 57 0 0 84 0 3 cm BI IM true W 57 H 84 BPC 1 D 1 0 F CCF DP ID x z9 v o 7 v 0Kb EI endstream endobj 642 0 obj stream 123 0 0 0 0 0 d1 endstream endobj 643 0 obj stream 0 0 0 13 83 64 d1 83 0 0 51 0 13 cm BI IM true W 83 H 51 BPC 1 D 1 0 F CCF DP ID x k f - -ah p _ o ' EI endstream endobj 644 0 obj stream 0 0 0 -6 34 84 d1 34 0 0 90 0 -6 cm BI IM true W 34 H 90 BPC 1 D 1 0 F CCF DP ID nD K K o o 7 EI endstream endobj 645 0 obj stream 0 0 0 21 36 79 d1 36 0 0 58 0 21 cm BI IM true W 36 H 58 BPC 1 D 1 0 F CCF DP ID Ay D G c w k w n F EI endstream endobj 646 0 obj stream 0 0 0 0 34 90 d1 34 0 0 90 0 0 cm BI IM true W 34 H 90 BPC 1 D 1 0 F CCF DP ID d o 7 B X - _ YZ EI endstream endobj 647 0 obj stream 0 0 0 1 25 27 d1 25 0 0 26 0 1 cm BI IM true W 25 H 26 BPC 1 D 1 0 F CCF DP ID Fy q EI endstream endobj 648 0 obj stream 0 0 0 21 44 63 d1 44 0 0 42 0 21 cm BI IM true W 44 H 42 BPC 1 D 1 0 F CCF DP ID o w E o MW EI endstream endobj 649 0 obj stream 0 0 0 -2 54 61 d1 54 0 0 63 0 -2 cm BI IM true W 54 H 63 BPC 1 D 1 0 F CCF DP ID w k AAp EI endstream endobj 650 0 obj stream 0 0 0 19 35 63 d1 35 0 0 44 0 19 cm BI IM true W 35 H 44 BPC 1 D 1 0 F CCF DP ID p z o Gav P EI endstream endobj 651 0 obj stream 0 0 0 -2 39 61 d1 39 0 0 63 0 -2 cm BI IM true W 39 H 63 BPC 1 D 1 0 F CCF DP ID MFH EI endstream endobj 652 0 obj stream 0 0 0 1 36 61 d1 36 0 0 60 0 1 cm BI IM true W 36 H 60 BPC 1 D 1 0 F CCF DP ID lx m oo oo l xU _k a- - 0X0 EI endstream endobj 653 0 obj stream 0 0 0 -36 60 33 d1 60 0 0 69 0 -36 cm BI IM true W 60 H 69 BPC 1 D 1 0 F CCF DP ID L y K Xo _ oAm o X Ar y 8 EI endstream endobj 654 0 obj stream 0 0 0 2 68 74 d1 68 0 0 72 0 2 cm BI IM true W 68 H 72 BPC 1 D 1 0 F CCF DP ID h 6 C b N 0 EI endstream endobj 655 0 obj stream 0 0 0 -1 52 50 d1 52 0 0 51 0 -1 cm BI IM true W 52 H 51 BPC 1 D 1 0 F CCF DP ID 5 V p k _ _ _ _ k EI endstream endobj 656 0 obj stream 0 0 0 8 48 71 d1 48 0 0 63 0 8 cm BI IM true W 48 H 63 BPC 1 D 1 0 F CCF DP ID k MVO _ m o EI endstream endobj 657 0 obj stream 0 0 0 8 43 73 d1 43 0 0 65 0 8 cm BI IM true W 43 H 65 BPC 1 D 1 0 F CCF DP ID O O N' o C UxK - Q f Z x 24 O EI endstream endobj 658 0 obj stream 0 0 0 8 45 73 d1 45 0 0 65 0 8 cm BI IM true W 45 H 65 BPC 1 D 1 0 F CCF DP ID OOA x_ k V k O EI endstream endobj 659 0 obj stream 0 0 0 10 37 71 d1 37 0 0 61 0 10 cm BI IM true W 37 H 61 BPC 1 D 1 0 F CCF DP ID E j C P EI endstream endobj 660 0 obj stream 0 0 0 -3 71 66 d1 71 0 0 69 0 -3 cm BI IM true W 71 H 69 BPC 1 D 1 0 F CCF DP ID w 2 _ r EI endstream endobj 661 0 obj stream 0 0 0 -3 76 68 d1 76 0 0 71 0 -3 cm BI IM true W 76 H 71 BPC 1 D 1 0 F CCF DP ID V o w P _ EI endstream endobj 662 0 obj stream 0 0 0 -1 70 66 d1 70 0 0 67 0 -1 cm BI IM true W 70 H 67 BPC 1 D 1 0 F CCF DP ID _ G EI endstream endobj 663 0 obj endobj 668 0 obj stream 0 0 0 -45 22 44 d1 22 0 0 89 0 -45 cm BI IM true W 22 H 89 BPC 1 D 1 0 F CCF DP ID B Z _ k EI endstream endobj 669 0 obj stream 0 0 0 -2 32 63 d1 32 0 0 65 0 -2 cm BI IM true W 32 H 65 BPC 1 D 1 0 F CCF DP ID z L K f EI endstream endobj 670 0 obj stream 0 0 0 -6 23 83 d1 23 0 0 89 0 -6 cm BI IM true W 23 H 89 BPC 1 D 1 0 F CCF DP ID _ _ Z _ EI endstream endobj 671 0 obj stream 0 0 0 1 38 64 d1 38 0 0 63 0 1 cm BI IM true W 38 H 63 BPC 1 D 1 0 F CCF DP ID 4 J n k Aip 0 O - K EI endstream endobj 672 0 obj stream 0 0 0 -4 62 61 d1 62 0 0 65 0 -4 cm BI IM true W 62 H 65 BPC 1 D 1 0 F CCF DP ID f E _ 0 l3 K _ EI endstream endobj 673 0 obj stream 0 0 0 2 29 33 d1 29 0 0 31 0 2 cm BI IM true W 29 H 31 BPC 1 D 1 0 F CCF DP ID cA 0 EI endstream endobj 674 0 obj stream 0 0 0 -4 24 95 d1 24 0 0 99 0 -4 cm BI IM true W 24 H 99 BPC 1 D 1 0 F CCF DP ID _ _ W EI endstream endobj 675 0 obj stream 0 0 0 -4 24 95 d1 24 0 0 99 0 -4 cm BI IM true W 24 H 99 BPC 1 D 1 0 F CCF DP ID O o o _ k k EI endstream endobj 676 0 obj stream 0 0 0 21 16 66 d1 16 0 0 45 0 21 cm BI IM true W 16 H 45 BPC 1 D 1 0 F CCF DP ID _ _ 5K _ EI endstream endobj 677 0 obj stream 0 0 0 -3 60 66 d1 60 0 0 69 0 -3 cm BI IM true W 60 H 69 BPC 1 D 1 0 F CCF DP ID N 0 EI endstream endobj 678 0 obj stream 0 0 0 18 53 86 d1 53 0 0 68 0 18 cm BI IM true W 53 H 68 BPC 1 D 1 0 F CCF DP ID xp 7 lN ' oi oJ xV _ v z k EI endstream endobj 679 0 obj stream 0 0 0 2 71 71 d1 71 0 0 69 0 2 cm BI IM true W 71 H 69 BPC 1 D 1 0 F CCF DP ID ha 5 zO z o 7 z h o EI endstream endobj 680 0 obj stream 0 0 0 26 41 73 d1 41 0 0 47 0 26 cm BI IM true W 41 H 47 BPC 1 D 1 0 F CCF DP ID O c z 7 O EI endstream endobj 681 0 obj stream 0 0 0 26 45 92 d1 45 0 0 66 0 26 cm BI IM true W 45 H 66 BPC 1 D 1 0 F CCF DP ID xw x C c MV k EI endstream endobj 682 0 obj endobj 687 0 obj stream 0 0 0 0 45 61 d1 45 0 0 61 0 0 cm BI IM true W 45 H 61 BPC 1 D 1 0 F CCF DP ID 9 5 ia _ EI endstream endobj 688 0 obj stream 0 0 0 0 40 61 d1 40 0 0 61 0 0 cm BI IM true W 40 H 61 BPC 1 D 1 0 F CCF DP ID _ Po 1 7 7 EI endstream endobj 689 0 obj stream 0 0 0 24 48 91 d1 48 0 0 67 0 24 cm BI IM true W 48 H 67 BPC 1 D 1 0 F CCF DP ID m f 7 o av _ EI endstream endobj 690 0 obj stream 0 0 0 -1 60 69 d1 60 0 0 70 0 -1 cm BI IM true W 60 H 70 BPC 1 D 1 0 F CCF DP ID Y 5 P EI endstream endobj 691 0 obj stream 0 0 0 -2 39 71 d1 39 0 0 73 0 -2 cm BI IM true W 39 H 73 BPC 1 D 1 0 F CCF DP ID _ p 1 l 7 w mo EI endstream endobj 692 0 obj stream 0 0 0 20 43 68 d1 43 0 0 48 0 20 cm BI IM true W 43 H 48 BPC 1 D 1 0 F CCF DP ID xa X - 5 EI endstream endobj 693 0 obj endobj 698 0 obj stream 0 0 0 -2 56 61 d1 56 0 0 63 0 -2 cm BI IM true W 56 H 63 BPC 1 D 1 0 F CCF DP ID 5SO E _8 EI endstream endobj 699 0 obj stream 0 0 0 15 40 61 d1 40 0 0 46 0 15 cm BI IM true W 40 H 46 BPC 1 D 1 0 F CCF DP ID j8w xn p Aa Q B P EI endstream endobj 700 0 obj stream 0 0 0 -3 35 63 d1 35 0 0 66 0 -3 cm BI IM true W 35 H 66 BPC 1 D 1 0 F CCF DP ID z j2j o EI endstream endobj 701 0 obj stream 0 0 0 15 38 61 d1 38 0 0 46 0 15 cm BI IM true W 38 H 46 BPC 1 D 1 0 F CCF DP ID _ h M EI endstream endobj 702 0 obj stream 0 0 0 14 48 63 d1 48 0 0 49 0 14 cm BI IM true W 48 H 49 BPC 1 D 1 0 F CCF DP ID x 1A 7 X __ z KxXl K EI endstream endobj 703 0 obj stream 0 0 0 15 49 61 d1 49 0 0 46 0 15 cm BI IM true W 49 H 46 BPC 1 D 1 0 F CCF DP ID N _ _K K k 7 8q EI endstream endobj 704 0 obj stream 0 0 0 15 47 63 d1 47 0 0 48 0 15 cm BI IM true W 47 H 48 BPC 1 D 1 0 F CCF DP ID 7 o q EI endstream endobj 705 0 obj stream 0 0 0 15 42 61 d1 42 0 0 46 0 15 cm BI IM true W 42 H 46 BPC 1 D 1 0 F CCF DP ID S' _ 7 _ EI endstream endobj 706 0 obj stream 0 0 0 51 11 79 d1 11 0 0 28 0 51 cm BI IM true W 11 H 28 BPC 1 D 1 0 F CCF DP ID zTz EI endstream endobj 707 0 obj stream 0 0 0 13 83 64 d1 83 0 0 51 0 13 cm BI IM true W 83 H 51 BPC 1 D 1 0 F CCF DP ID p3 o 7 8J md K k p EI endstream endobj 708 0 obj stream 0 0 0 1 38 64 d1 38 0 0 63 0 1 cm BI IM true W 38 H 63 BPC 1 D 1 0 F CCF DP ID x Fd M O x_ u W h Ka Axa 6 k Y EI endstream endobj 709 0 obj stream 0 0 0 1 36 64 d1 36 0 0 63 0 1 cm BI IM true W 36 H 63 BPC 1 D 1 0 F CCF DP ID z o H ' 4 x EI endstream endobj 710 0 obj stream 0 0 0 -24 67 41 d1 67 0 0 65 0 -24 cm BI IM true W 67 H 65 BPC 1 D 1 0 F CCF DP ID 2 z K v n v EI endstream endobj 711 0 obj stream 0 0 0 26 22 71 d1 22 0 0 45 0 26 cm BI IM true W 22 H 45 BPC 1 D 1 0 F CCF DP ID jD k X Q EI endstream endobj 712 0 obj endobj 717 0 obj stream 0 0 0 0 56 61 d1 56 0 0 61 0 0 cm BI IM true W 56 H 61 BPC 1 D 1 0 F CCF DP ID Cf x hF z x KA d6k 1O y EI endstream endobj 718 0 obj stream 0 0 0 1 42 71 d1 42 0 0 70 0 1 cm BI IM true W 42 H 70 BPC 1 D 1 0 F CCF DP ID N _ EI endstream endobj 719 0 obj stream 0 0 0 2 11 71 d1 11 0 0 69 0 2 cm BI IM true W 11 H 69 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 720 0 obj stream 0 0 0 19 56 71 d1 56 0 0 52 0 19 cm BI IM true W 56 H 52 BPC 1 D 1 0 F CCF DP ID 3 Cv z_ K z __ k v o o EI endstream endobj 721 0 obj stream 0 0 0 19 53 73 d1 53 0 0 54 0 19 cm BI IM true W 53 H 54 BPC 1 D 1 0 F CCF DP ID 6 P1 W ' J ' O EI endstream endobj 722 0 obj stream 0 0 0 19 46 71 d1 46 0 0 52 0 19 cm BI IM true W 46 H 52 BPC 1 D 1 0 F CCF DP ID 3 EI endstream endobj 723 0 obj stream 0 0 0 0 48 61 d1 48 0 0 61 0 0 cm BI IM true W 48 H 61 BPC 1 D 1 0 F CCF DP ID qV4 O ' _ v 0 1 _ EI endstream endobj 724 0 obj stream 0 0 0 -14 30 104 d1 30 0 0 118 0 -14 cm BI IM true W 30 H 118 BPC 1 D 1 0 F CCF DP ID k K Z -z _ o o EI endstream endobj 725 0 obj stream 0 0 0 -16 29 102 d1 29 0 0 118 0 -16 cm BI IM true W 29 H 118 BPC 1 D 1 0 F CCF DP ID o o _ _ _ _ Z MR EI endstream endobj 726 0 obj endobj 731 0 obj stream 0 0 0 26 46 93 d1 46 0 0 67 0 26 cm BI IM true W 46 H 67 BPC 1 D 1 0 F CCF DP ID l w k LKz EI endstream endobj 732 0 obj stream 0 0 0 0 48 68 d1 48 0 0 68 0 0 cm BI IM true W 48 H 68 BPC 1 D 1 0 F CCF DP ID ZX p yw N Xa Ka EI endstream endobj 733 0 obj stream 0 0 0 54 18 90 d1 18 0 0 36 0 54 cm BI IM true W 18 H 36 BPC 1 D 1 0 F CCF DP ID _ o o p 0 EI endstream endobj 734 0 obj stream 0 0 0 46 26 52 d1 26 0 0 6 0 46 cm BI IM true W 26 H 6 BPC 1 D 1 0 F CCF DP ID W U EI endstream endobj 735 0 obj stream 0 0 0 1 51 74 d1 51 0 0 73 0 1 cm BI IM true W 51 H 73 BPC 1 D 1 0 F CCF DP ID 3 H7 zO M 6 EI endstream endobj 736 0 obj stream 0 0 0 25 37 71 d1 37 0 0 46 0 25 cm BI IM true W 37 H 46 BPC 1 D 1 0 F CCF DP ID 4 8V 4Kk m EI endstream endobj 737 0 obj stream 0 0 0 -52 64 20 d1 64 0 0 72 0 -52 cm BI IM true W 64 H 72 BPC 1 D 1 0 F CCF DP ID h F x x w o c EI endstream endobj 738 0 obj stream 0 0 0 -29 49 19 d1 49 0 0 48 0 -29 cm BI IM true W 49 H 48 BPC 1 D 1 0 F CCF DP ID 6 jMW h h h 5 OOO g zM zM N EI endstream endobj 739 0 obj stream 0 0 0 2 63 71 d1 63 0 0 69 0 2 cm BI IM true W 63 H 69 BPC 1 D 1 0 F CCF DP ID _ ' EI endstream endobj 740 0 obj stream 0 0 0 1 40 73 d1 40 0 0 72 0 1 cm BI IM true W 40 H 72 BPC 1 D 1 0 F CCF DP ID 8 0 0_ EI endstream endobj 741 0 obj stream 0 0 0 0 51 70 d1 51 0 0 70 0 0 cm BI IM true W 51 H 70 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 742 0 obj stream 0 0 0 0 61 70 d1 61 0 0 70 0 0 cm BI IM true W 61 H 70 BPC 1 D 1 0 F CCF DP ID 4 5Z x_ u _ _ EI endstream endobj 743 0 obj stream 0 0 0 24 38 73 d1 38 0 0 49 0 24 cm BI IM true W 38 H 49 BPC 1 D 1 0 F CCF DP ID _ r z K 8_ 6 ' k EI endstream endobj 744 0 obj stream 0 0 0 38 60 86 d1 60 0 0 48 0 38 cm BI IM true W 60 H 48 BPC 1 D 1 0 F CCF DP ID x 6 u m k O zA z 8F EI endstream endobj 745 0 obj endobj 750 0 obj stream 0 0 0 0 56 70 d1 56 0 0 70 0 0 cm BI IM true W 56 H 70 BPC 1 D 1 0 F CCF DP ID p k p EI endstream endobj 751 0 obj stream 0 0 0 0 35 93 d1 35 0 0 93 0 0 cm BI IM true W 35 H 93 BPC 1 D 1 0 F CCF DP ID _ _ ds EI endstream endobj 752 0 obj stream 0 0 0 38 21 87 d1 21 0 0 49 0 38 cm BI IM true W 21 H 49 BPC 1 D 1 0 F CCF DP ID z V l b P EI endstream endobj 753 0 obj stream 0 0 0 0 46 61 d1 46 0 0 61 0 0 cm BI IM true W 46 H 61 BPC 1 D 1 0 F CCF DP ID 8w G _ _ x_Az xK V MPP EI endstream endobj 754 0 obj stream 0 0 0 18 48 61 d1 48 0 0 43 0 18 cm BI IM true W 48 H 43 BPC 1 D 1 0 F CCF DP ID 8 x31 K mp O _O EI endstream endobj 755 0 obj stream 0 0 0 18 48 83 d1 48 0 0 65 0 18 cm BI IM true W 48 H 65 BPC 1 D 1 0 F CCF DP ID fTC l _ 7 _rj EI endstream endobj 756 0 obj stream 0 0 0 18 44 61 d1 44 0 0 43 0 18 cm BI IM true W 44 H 43 BPC 1 D 1 0 F CCF DP ID k xo loM EI endstream endobj 757 0 obj stream 0 0 0 48 14 61 d1 14 0 0 13 0 48 cm BI IM true W 14 H 13 BPC 1 D 1 0 F CCF DP ID _ - EI endstream endobj 758 0 obj stream 0 0 0 8 35 71 d1 35 0 0 63 0 8 cm BI IM true W 35 H 63 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 759 0 obj stream 0 0 0 0 66 74 d1 66 0 0 74 0 0 cm BI IM true W 66 H 74 BPC 1 D 1 0 F CCF DP ID C B 0 o o o H x m Xa k AoX0 l0 EI endstream endobj 760 0 obj stream 0 0 0 51 37 86 d1 37 0 0 35 0 51 cm BI IM true W 37 H 35 BPC 1 D 1 0 F CCF DP ID 3 - ZxA yA EI endstream endobj 761 0 obj stream 0 0 0 37 18 87 d1 18 0 0 50 0 37 cm BI IM true W 18 H 50 BPC 1 D 1 0 F CCF DP ID p r _ EI endstream endobj 762 0 obj stream 0 0 0 38 31 86 d1 31 0 0 48 0 38 cm BI IM true W 31 H 48 BPC 1 D 1 0 F CCF DP ID 7 EI endstream endobj 763 0 obj stream 0 0 0 37 8 86 d1 8 0 0 49 0 37 cm BI IM true W 8 H 49 BPC 1 D 1 0 F CCF DP ID M 7 EI endstream endobj 764 0 obj stream 0 0 0 52 25 88 d1 25 0 0 36 0 52 cm BI IM true W 25 H 36 BPC 1 D 1 0 F CCF DP ID qp _ rj 0_ EI endstream endobj 765 0 obj stream 0 0 0 46 23 88 d1 23 0 0 42 0 46 cm BI IM true W 23 H 42 BPC 1 D 1 0 F CCF DP ID f MH O EI endstream endobj 766 0 obj stream 0 0 0 52 26 88 d1 26 0 0 36 0 52 cm BI IM true W 26 H 36 BPC 1 D 1 0 F CCF DP ID h O O y5 W Hh 8 k EI endstream endobj 767 0 obj stream 0 0 0 38 30 88 d1 30 0 0 50 0 38 cm BI IM true W 30 H 50 BPC 1 D 1 0 F CCF DP ID ' W ax _ EI endstream endobj 768 0 obj stream 0 0 0 52 27 88 d1 27 0 0 36 0 52 cm BI IM true W 27 H 36 BPC 1 D 1 0 F CCF DP ID M sB R o P EI endstream endobj 769 0 obj stream 0 0 0 38 7 86 d1 7 0 0 48 0 38 cm BI IM true W 7 H 48 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 770 0 obj endobj 775 0 obj stream 0 0 0 -3 105 68 d1 105 0 0 71 0 -3 cm BI IM true W 105 H 71 BPC 1 D 1 0 F CCF DP ID w x aX 0 7 U v 6DQw k EI endstream endobj 776 0 obj stream 0 0 0 20 72 68 d1 72 0 0 48 0 20 cm BI IM true W 72 H 48 BPC 1 D 1 0 F CCF DP ID 0A N7 5 Xw M EI endstream endobj 777 0 obj stream 0 0 0 0 52 72 d1 52 0 0 72 0 0 cm BI IM true W 52 H 72 BPC 1 D 1 0 F CCF DP ID 4xO 7 3 X K Z 2 dfW K u _ p l K ' EI endstream endobj 778 0 obj stream 0 0 0 -4 17 33 d1 17 0 0 37 0 -4 cm BI IM true W 17 H 37 BPC 1 D 1 0 F CCF DP ID Q EI endstream endobj 779 0 obj stream 0 0 0 3 72 70 d1 72 0 0 67 0 3 cm BI IM true W 72 H 67 BPC 1 D 1 0 F CCF DP ID Z Rk _ G EI endstream endobj 780 0 obj endobj 785 0 obj stream 0 0 0 0 62 67 d1 62 0 0 67 0 0 cm BI IM true W 62 H 67 BPC 1 D 1 0 F CCF DP ID P 6 3 oI o 1 w m p _ D EI endstream endobj 786 0 obj stream 0 0 0 -4 41 16 d1 41 0 0 20 0 -4 cm BI IM true W 41 H 20 BPC 1 D 1 0 F CCF DP ID - _ EI endstream endobj 787 0 obj stream 0 0 0 10 30 52 d1 30 0 0 42 0 10 cm BI IM true W 30 H 42 BPC 1 D 1 0 F CCF DP ID 4 8 z v dD 0 xo qz W X1_ EI endstream endobj 788 0 obj stream 0 0 0 9 30 50 d1 30 0 0 41 0 9 cm BI IM true W 30 H 41 BPC 1 D 1 0 F CCF DP ID 1 7 ' EI endstream endobj 789 0 obj stream 0 0 0 39 33 86 d1 33 0 0 47 0 39 cm BI IM true W 33 H 47 BPC 1 D 1 0 F CCF DP ID M 7 EI endstream endobj 790 0 obj stream 0 0 0 39 31 87 d1 31 0 0 48 0 39 cm BI IM true W 31 H 48 BPC 1 D 1 0 F CCF DP ID xG wo Y Py 0K 8P EI endstream endobj 791 0 obj endobj 795 0 obj endobj 800 0 obj stream 0 0 0 -3 73 66 d1 73 0 0 69 0 -3 cm BI IM true W 73 H 69 BPC 1 D 1 0 F CCF DP ID CF xw q x d _ _ EI endstream endobj 801 0 obj stream 117 0 0 0 0 0 d1 endstream endobj 802 0 obj stream 0 0 0 -4 42 68 d1 42 0 0 72 0 -4 cm BI IM true W 42 H 72 BPC 1 D 1 0 F CCF DP ID g z' o w k K b Aq Dh EI endstream endobj 803 0 obj stream 0 0 0 19 57 71 d1 57 0 0 52 0 19 cm BI IM true W 57 H 52 BPC 1 D 1 0 F CCF DP ID o o _ P EI endstream endobj 804 0 obj stream 0 0 0 26 27 73 d1 27 0 0 47 0 26 cm BI IM true W 27 H 47 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 805 0 obj endobj 810 0 obj stream 0 0 0 2 57 77 d1 57 0 0 75 0 2 cm BI IM true W 57 H 75 BPC 1 D 1 0 F CCF DP ID E X X X Aap Aprj x 0x0 EI endstream endobj 811 0 obj stream 0 0 0 1 25 63 d1 25 0 0 62 0 1 cm BI IM true W 25 H 62 BPC 1 D 1 0 F CCF DP ID z o lW c EI endstream endobj 812 0 obj stream 0 0 0 21 51 63 d1 51 0 0 42 0 21 cm BI IM true W 51 H 42 BPC 1 D 1 0 F CCF DP ID 8 o MU m 4 - b EI endstream endobj 813 0 obj stream 0 0 0 37 27 47 d1 27 0 0 10 0 37 cm BI IM true W 27 H 10 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 814 0 obj stream 0 0 0 -11 48 33 d1 48 0 0 44 0 -11 cm BI IM true W 48 H 44 BPC 1 D 1 0 F CCF DP ID x pA o p x K l4 1 EI endstream endobj 815 0 obj stream 0 0 0 -39 62 22 d1 62 0 0 61 0 -39 cm BI IM true W 62 H 61 BPC 1 D 1 0 F CCF DP ID _ Jo 6 u d0Y EI endstream endobj 816 0 obj stream 0 0 0 15 47 61 d1 47 0 0 46 0 15 cm BI IM true W 47 H 46 BPC 1 D 1 0 F CCF DP ID 80Nv q EI endstream endobj 817 0 obj stream 0 0 0 15 51 61 d1 51 0 0 46 0 15 cm BI IM true W 51 H 46 BPC 1 D 1 0 F CCF DP ID hF_ o o J u EI endstream endobj 818 0 obj stream 0 0 0 14 32 63 d1 32 0 0 49 0 14 cm BI IM true W 32 H 49 BPC 1 D 1 0 F CCF DP ID O 89 _ X d p 2 u L EI endstream endobj 819 0 obj stream 0 0 0 0 32 81 d1 32 0 0 81 0 0 cm BI IM true W 32 H 81 BPC 1 D 1 0 F CCF DP ID TB B EI endstream endobj 820 0 obj stream 0 0 0 79 13 108 d1 13 0 0 29 0 79 cm BI IM true W 13 H 29 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 821 0 obj stream 0 0 0 0 31 163 d1 31 0 0 163 0 0 cm BI IM true W 31 H 163 BPC 1 D 1 0 F CCF DP ID o KAu k K EI endstream endobj 822 0 obj stream 0 0 0 0 32 81 d1 32 0 0 81 0 0 cm BI IM true W 32 H 81 BPC 1 D 1 0 F CCF DP ID 0 95 EI endstream endobj 823 0 obj stream 0 0 0 -23 54 40 d1 54 0 0 63 0 -23 cm BI IM true W 54 H 63 BPC 1 D 1 0 F CCF DP ID 5 5 j' EI endstream endobj 824 0 obj stream 0 0 0 -4 58 61 d1 58 0 0 65 0 -4 cm BI IM true W 58 H 65 BPC 1 D 1 0 F CCF DP ID C h l x EI endstream endobj 825 0 obj stream 0 0 0 27 26 69 d1 26 0 0 42 0 27 cm BI IM true W 26 H 42 BPC 1 D 1 0 F CCF DP ID x EI endstream endobj 826 0 obj stream 0 0 0 -24 49 24 d1 49 0 0 48 0 -24 cm BI IM true W 49 H 48 BPC 1 D 1 0 F CCF DP ID f D 4 J p x_K n EI endstream endobj 827 0 obj stream 0 0 0 -24 43 22 d1 43 0 0 46 0 -24 cm BI IM true W 43 H 46 BPC 1 D 1 0 F CCF DP ID 3 _ G EI endstream endobj 828 0 obj stream 0 0 0 -25 44 24 d1 44 0 0 49 0 -25 cm BI IM true W 44 H 49 BPC 1 D 1 0 F CCF DP ID Xz4 _ l- 0 3A EI endstream endobj 829 0 obj stream 0 0 0 20 37 64 d1 37 0 0 44 0 20 cm BI IM true W 37 H 44 BPC 1 D 1 0 F CCF DP ID x OA 7 7 Zq z z C 5 0X0P EI endstream endobj 830 0 obj stream 0 0 0 39 32 88 d1 32 0 0 49 0 39 cm BI IM true W 32 H 49 BPC 1 D 1 0 F CCF DP ID xO O k k 8 EI endstream endobj 831 0 obj endobj 836 0 obj stream 0 0 0 0 50 66 d1 50 0 0 66 0 0 cm BI IM true W 50 H 66 BPC 1 D 1 0 F CCF DP ID 34 6 o EI endstream endobj 837 0 obj stream 0 0 0 -25 17 11 d1 17 0 0 36 0 -25 cm BI IM true W 17 H 36 BPC 1 D 1 0 F CCF DP ID MW x EI endstream endobj 838 0 obj stream 0 0 0 0 18 36 d1 18 0 0 36 0 0 cm BI IM true W 18 H 36 BPC 1 D 1 0 F CCF DP ID _ o o p 0 EI endstream endobj 839 0 obj stream 0 0 0 25 42 70 d1 42 0 0 45 0 25 cm BI IM true W 42 H 45 BPC 1 D 1 0 F CCF DP ID _ u w 7 o EI endstream endobj 840 0 obj stream 0 0 0 -10 61 72 d1 61 0 0 82 0 -10 cm BI IM true W 61 H 82 BPC 1 D 1 0 F CCF DP ID E K X XApXA p p x x0 P EI endstream endobj 841 0 obj stream 0 0 0 -13 26 56 d1 26 0 0 69 0 -13 cm BI IM true W 26 H 69 BPC 1 D 1 0 F CCF DP ID z b EI endstream endobj 842 0 obj stream 0 0 0 9 54 56 d1 54 0 0 47 0 9 cm BI IM true W 54 H 47 BPC 1 D 1 0 F CCF DP ID l2 8 p pp 4 EI endstream endobj 843 0 obj stream 0 0 0 19 23 71 d1 23 0 0 52 0 19 cm BI IM true W 23 H 52 BPC 1 D 1 0 F CCF DP ID _ EI endstream endobj 844 0 obj stream 0 0 0 10 19 81 d1 19 0 0 71 0 10 cm BI IM true W 19 H 71 BPC 1 D 1 0 F CCF DP ID Z iu Z X_ z MW 8p EI endstream endobj 845 0 obj stream 0 0 0 33 19 104 d1 19 0 0 71 0 33 cm BI IM true W 19 H 71 BPC 1 D 1 0 F CCF DP ID 0 k K P EI endstream endobj 846 0 obj stream 0 0 0 36 13 107 d1 13 0 0 71 0 36 cm BI IM true W 13 H 71 BPC 1 D 1 0 F CCF DP ID b 7 EI endstream endobj 847 0 obj stream 0 0 0 36 13 107 d1 13 0 0 71 0 36 cm BI IM true W 13 H 71 BPC 1 D 1 0 F CCF DP ID j EI endstream endobj 848 0 obj stream 0 0 0 77 10 100 d1 10 0 0 23 0 77 cm BI IM true W 10 H 23 BPC 1 D 1 0 F CCF DP ID r Q MR EI endstream endobj 849 0 obj stream 0 0 0 34 13 60 d1 13 0 0 26 0 34 cm BI IM true W 13 H 26 BPC 1 D 1 0 F CCF DP ID 8 EI endstream endobj 850 0 obj endobj 855 0 obj stream 0 0 0 0 75 61 d1 75 0 0 61 0 0 cm BI IM true W 75 H 61 BPC 1 D 1 0 F CCF DP ID B O EI endstream endobj 856 0 obj stream 0 0 0 -21 63 40 d1 63 0 0 61 0 -21 cm BI IM true W 63 H 61 BPC 1 D 1 0 F CCF DP ID C l z _ EI endstream endobj 857 0 obj stream 0 0 0 0 53 58 d1 53 0 0 58 0 0 cm BI IM true W 53 H 58 BPC 1 D 1 0 F CCF DP ID 2 q ' 4 EI endstream endobj 858 0 obj stream 0 0 0 0 61 61 d1 61 0 0 61 0 0 cm BI IM true W 61 H 61 BPC 1 D 1 0 F CCF DP ID F _ 8 4 EI endstream endobj 859 0 obj stream 0 0 0 29 43 71 d1 43 0 0 42 0 29 cm BI IM true W 43 H 42 BPC 1 D 1 0 F CCF DP ID 0 l lo o o EI endstream endobj 860 0 obj stream 0 0 0 30 45 71 d1 45 0 0 41 0 30 cm BI IM true W 45 H 41 BPC 1 D 1 0 F CCF DP ID w k EI endstream endobj 861 0 obj stream 0 0 0 -20 22 21 d1 22 0 0 41 0 -20 cm BI IM true W 22 H 41 BPC 1 D 1 0 F CCF DP ID 3 9 EI endstream endobj 862 0 obj stream 0 0 0 -21 35 23 d1 35 0 0 44 0 -21 cm BI IM true W 35 H 44 BPC 1 D 1 0 F CCF DP ID p z f p o V EI endstream endobj 863 0 obj stream 0 0 0 -43 40 21 d1 40 0 0 64 0 -43 cm BI IM true W 40 H 64 BPC 1 D 1 0 F CCF DP ID 3 F 3 EI endstream endobj 864 0 obj stream 0 0 0 11 29 36 d1 29 0 0 25 0 11 cm BI IM true W 29 H 25 BPC 1 D 1 0 F CCF DP ID 8L' j o 5 EI endstream endobj 865 0 obj stream 0 0 0 54 8 79 d1 8 0 0 25 0 54 cm BI IM true W 8 H 25 BPC 1 D 1 0 F CCF DP ID E 5K EI endstream endobj 866 0 obj stream 0 0 0 27 47 69 d1 47 0 0 42 0 27 cm BI IM true W 47 H 42 BPC 1 D 1 0 F CCF DP ID 8' W _ 7 0 H pAy0 C d v _ EI endstream endobj 867 0 obj stream 0 0 0 -23 52 40 d1 52 0 0 63 0 -23 cm BI IM true W 52 H 63 BPC 1 D 1 0 F CCF DP ID x9 0 W 0 o v 4 4 j' EI endstream endobj 868 0 obj stream 0 0 0 7 29 32 d1 29 0 0 25 0 7 cm BI IM true W 29 H 25 BPC 1 D 1 0 F CCF DP ID h 4 x d 'o Gd EI endstream endobj 869 0 obj stream 0 0 0 0 47 65 d1 47 0 0 65 0 0 cm BI IM true W 47 H 65 BPC 1 D 1 0 F CCF DP ID 9 p __ k h' q ArL3 _5F Wu K EI endstream endobj 870 0 obj stream 0 0 0 -23 55 40 d1 55 0 0 63 0 -23 cm BI IM true W 55 H 63 BPC 1 D 1 0 F CCF DP ID 6 gP c Y EI endstream endobj 871 0 obj stream 0 0 0 0 24 89 d1 24 0 0 89 0 0 cm BI IM true W 24 H 89 BPC 1 D 1 0 F CCF DP ID h EI endstream endobj 872 0 obj stream 0 0 0 0 85 61 d1 85 0 0 61 0 0 cm BI IM true W 85 H 61 BPC 1 D 1 0 F CCF DP ID l o W o n p _ 7 N w EI endstream endobj 873 0 obj stream 139 0 0 0 0 0 d1 endstream endobj 874 0 obj stream 0 0 0 -6 24 83 d1 24 0 0 89 0 -6 cm BI IM true W 24 H 89 BPC 1 D 1 0 F CCF DP ID - P EI endstream endobj 875 0 obj stream 0 0 0 -2 33 61 d1 33 0 0 63 0 -2 cm BI IM true W 33 H 63 BPC 1 D 1 0 F CCF DP ID 3 0J Y EI endstream endobj 876 0 obj stream 0 0 0 19 33 63 d1 33 0 0 44 0 19 cm BI IM true W 33 H 44 BPC 1 D 1 0 F CCF DP ID 8 k - c y k X0 EI endstream endobj 877 0 obj stream 0 0 0 -2 8 61 d1 8 0 0 63 0 -2 cm BI IM true W 8 H 63 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 878 0 obj stream 0 0 0 -2 37 61 d1 37 0 0 63 0 -2 cm BI IM true W 37 H 63 BPC 1 D 1 0 F CCF DP ID 3 _ 4 W u EI endstream endobj 879 0 obj stream 0 0 0 -25 20 21 d1 20 0 0 46 0 -25 cm BI IM true W 20 H 46 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 880 0 obj stream 0 0 0 -25 47 21 d1 47 0 0 46 0 -25 cm BI IM true W 47 H 46 BPC 1 D 1 0 F CCF DP ID k K EI endstream endobj 881 0 obj stream 0 0 0 -25 30 23 d1 30 0 0 48 0 -25 cm BI IM true W 30 H 48 BPC 1 D 1 0 F CCF DP ID xG o EI endstream endobj 882 0 obj stream 0 0 0 -24 46 22 d1 46 0 0 46 0 -24 cm BI IM true W 46 H 46 BPC 1 D 1 0 F CCF DP ID J k _ _ EI endstream endobj 883 0 obj stream 0 0 0 -21 31 23 d1 31 0 0 44 0 -21 cm BI IM true W 31 H 44 BPC 1 D 1 0 F CCF DP ID qwN MP C B' 3 j Y EI endstream endobj 884 0 obj stream 0 0 0 -25 41 21 d1 41 0 0 46 0 -25 cm BI IM true W 41 H 46 BPC 1 D 1 0 F CCF DP ID NV x O z G EI endstream endobj 885 0 obj stream 0 0 0 5 48 51 d1 48 0 0 46 0 5 cm BI IM true W 48 H 46 BPC 1 D 1 0 F CCF DP ID ML K K EI endstream endobj 886 0 obj stream 0 0 0 15 59 61 d1 59 0 0 46 0 15 cm BI IM true W 59 H 46 BPC 1 D 1 0 F CCF DP ID 6 O Y _ O M u p EI endstream endobj 887 0 obj stream 140 0 0 0 0 0 d1 endstream endobj 888 0 obj stream 0 0 0 12 57 67 d1 57 0 0 55 0 12 cm BI IM true W 57 H 55 BPC 1 D 1 0 F CCF DP ID n -p XK Ap Bq _ CH o 7 EI endstream endobj 889 0 obj stream 0 0 0 29 42 70 d1 42 0 0 41 0 29 cm BI IM true W 42 H 41 BPC 1 D 1 0 F CCF DP ID o E x EI endstream endobj 890 0 obj stream 0 0 0 -35 19 2 d1 19 0 0 37 0 -35 cm BI IM true W 19 H 37 BPC 1 D 1 0 F CCF DP ID xpO o o yI EI endstream endobj 891 0 obj stream 0 0 0 -26 49 23 d1 49 0 0 49 0 -26 cm BI IM true W 49 H 49 BPC 1 D 1 0 F CCF DP ID k z O g k w F 0O w EI endstream endobj 892 0 obj stream 0 0 0 -2 53 79 d1 53 0 0 81 0 -2 cm BI IM true W 53 H 81 BPC 1 D 1 0 F CCF DP ID O o 7 o 8 0 c EI endstream endobj 893 0 obj stream 0 0 0 6 62 67 d1 62 0 0 61 0 6 cm BI IM true W 62 H 61 BPC 1 D 1 0 F CCF DP ID R6 ip - Xx 2 EI endstream endobj 894 0 obj stream 0 0 0 21 76 63 d1 76 0 0 42 0 21 cm BI IM true W 76 H 42 BPC 1 D 1 0 F CCF DP ID 8 h X C p p 5W u j x 1 EI endstream endobj 895 0 obj stream 0 0 0 0 90 61 d1 90 0 0 61 0 0 cm BI IM true W 90 H 61 BPC 1 D 1 0 F CCF DP ID ao w w x 0 Ao l o o W p EI endstream endobj 896 0 obj stream 0 0 0 0 64 61 d1 64 0 0 61 0 0 cm BI IM true W 64 H 61 BPC 1 D 1 0 F CCF DP ID 7 J o u p EI endstream endobj 897 0 obj stream 0 0 0 10 31 54 d1 31 0 0 44 0 10 cm BI IM true W 31 H 44 BPC 1 D 1 0 F CCF DP ID ' 81 D za o 5 EI endstream endobj 898 0 obj stream 0 0 0 -2 43 63 d1 43 0 0 65 0 -2 cm BI IM true W 43 H 65 BPC 1 D 1 0 F CCF DP ID x' rk C x 3O d- m m x EI endstream endobj 899 0 obj stream 0 0 0 1 38 64 d1 38 0 0 63 0 1 cm BI IM true W 38 H 63 BPC 1 D 1 0 F CCF DP ID yW 0 o w v l C EI endstream endobj 900 0 obj endobj 905 0 obj stream 0 0 0 26 40 91 d1 40 0 0 65 0 26 cm BI IM true W 40 H 65 BPC 1 D 1 0 F CCF DP ID M n w w n0h 8 EI endstream endobj 906 0 obj stream 0 0 0 38 34 88 d1 34 0 0 50 0 38 cm BI IM true W 34 H 50 BPC 1 D 1 0 F CCF DP ID 4s 7 k pE_ N 5 ax EI endstream endobj 907 0 obj stream 0 0 0 0 57 65 d1 57 0 0 65 0 0 cm BI IM true W 57 H 65 BPC 1 D 1 0 F CCF DP ID G O m _0 EI endstream endobj 908 0 obj stream 0 0 0 37 34 87 d1 34 0 0 50 0 37 cm BI IM true W 34 H 50 BPC 1 D 1 0 F CCF DP ID 0 p U dK O m EI endstream endobj 909 0 obj stream 0 0 0 0 45 71 d1 45 0 0 71 0 0 cm BI IM true W 45 H 71 BPC 1 D 1 0 F CCF DP ID H 5 3 F EI endstream endobj 910 0 obj stream 0 0 0 24 50 71 d1 50 0 0 47 0 24 cm BI IM true W 50 H 47 BPC 1 D 1 0 F CCF DP ID B p l 1 h 0 EI endstream endobj 911 0 obj stream 0 0 0 2 66 71 d1 66 0 0 69 0 2 cm BI IM true W 66 H 69 BPC 1 D 1 0 F CCF DP ID Z n 4E C EI endstream endobj 912 0 obj stream 0 0 0 22 42 60 d1 42 0 0 38 0 22 cm BI IM true W 42 H 38 BPC 1 D 1 0 F CCF DP ID Px G' y5 k 7 O EI endstream endobj 913 0 obj stream 0 0 0 3 42 60 d1 42 0 0 57 0 3 cm BI IM true W 42 H 57 BPC 1 D 1 0 F CCF DP ID c d p EI endstream endobj 914 0 obj stream 0 0 0 21 32 60 d1 32 0 0 39 0 21 cm BI IM true W 32 H 39 BPC 1 D 1 0 F CCF DP ID z _ 1 7 k kf EI endstream endobj 915 0 obj stream 0 0 0 3 18 58 d1 18 0 0 55 0 3 cm BI IM true W 18 H 55 BPC 1 D 1 0 F CCF DP ID c 5 EI endstream endobj 916 0 obj stream 0 0 0 22 42 58 d1 42 0 0 36 0 22 cm BI IM true W 42 H 36 BPC 1 D 1 0 F CCF DP ID jf k 0P EI endstream endobj 917 0 obj stream 0 0 0 22 38 76 d1 38 0 0 54 0 22 cm BI IM true W 38 H 54 BPC 1 D 1 0 F CCF DP ID G O 7 l-xZ 3 p m z x EI endstream endobj 918 0 obj stream 0 0 0 21 38 60 d1 38 0 0 39 0 21 cm BI IM true W 38 H 39 BPC 1 D 1 0 F CCF DP ID 8 e M d AG z ad EI endstream endobj 919 0 obj stream 0 0 0 21 37 60 d1 37 0 0 39 0 21 cm BI IM true W 37 H 39 BPC 1 D 1 0 F CCF DP ID o j k o 0 P EI endstream endobj 920 0 obj stream 0 0 0 3 42 60 d1 42 0 0 57 0 3 cm BI IM true W 42 H 57 BPC 1 D 1 0 F CCF DP ID _ H13 18 ayS r f EI endstream endobj 921 0 obj stream 0 0 0 9 26 60 d1 26 0 0 51 0 9 cm BI IM true W 26 H 51 BPC 1 D 1 0 F CCF DP ID y N p EI endstream endobj 922 0 obj stream 0 0 0 3 42 58 d1 42 0 0 55 0 3 cm BI IM true W 42 H 55 BPC 1 D 1 0 F CCF DP ID jf R EI endstream endobj 923 0 obj stream 0 0 0 21 28 60 d1 28 0 0 39 0 21 cm BI IM true W 28 H 39 BPC 1 D 1 0 F CCF DP ID 02q n X LF k N D1 z k 6 pa EI endstream endobj 924 0 obj stream 0 0 0 22 42 60 d1 42 0 0 38 0 22 cm BI IM true W 42 H 38 BPC 1 D 1 0 F CCF DP ID 7 V2 5 EI endstream endobj 925 0 obj stream 0 0 0 22 30 58 d1 30 0 0 36 0 22 cm BI IM true W 30 H 36 BPC 1 D 1 0 F CCF DP ID y53 c EI endstream endobj 926 0 obj stream 0 0 0 48 11 74 d1 11 0 0 26 0 48 cm BI IM true W 11 H 26 BPC 1 D 1 0 F CCF DP ID rj EI endstream endobj 927 0 obj stream 0 0 0 23 58 60 d1 58 0 0 37 0 23 cm BI IM true W 58 H 37 BPC 1 D 1 0 F CCF DP ID 1 4 4 4 w ' k O EI endstream endobj 928 0 obj stream 0 0 0 23 41 60 d1 41 0 0 37 0 23 cm BI IM true W 41 H 37 BPC 1 D 1 0 F CCF DP ID g O 7 0 EI endstream endobj 929 0 obj stream 0 0 0 3 19 58 d1 19 0 0 55 0 3 cm BI IM true W 19 H 55 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 930 0 obj stream 0 0 0 21 32 60 d1 32 0 0 39 0 21 cm BI IM true W 32 H 39 BPC 1 D 1 0 F CCF DP ID x oH O _ vO u 0P EI endstream endobj 931 0 obj stream 0 0 0 4 59 58 d1 59 0 0 54 0 4 cm BI IM true W 59 H 54 BPC 1 D 1 0 F CCF DP ID QI 0_ Av Q _ o zpq5 EI endstream endobj 932 0 obj stream 0 0 0 1 29 58 d1 29 0 0 57 0 1 cm BI IM true W 29 H 57 BPC 1 D 1 0 F CCF DP ID J _ Qy5 o EI endstream endobj 933 0 obj stream 0 0 0 23 41 75 d1 41 0 0 52 0 23 cm BI IM true W 41 H 52 BPC 1 D 1 0 F CCF DP ID x M EI endstream endobj 934 0 obj stream 0 0 0 1 43 58 d1 43 0 0 57 0 1 cm BI IM true W 43 H 57 BPC 1 D 1 0 F CCF DP ID J M G j3 z EI endstream endobj 935 0 obj stream 0 0 0 22 42 74 d1 42 0 0 52 0 22 cm BI IM true W 42 H 52 BPC 1 D 1 0 F CCF DP ID e6 ' _ m 5 x EI endstream endobj 936 0 obj stream 0 0 0 22 42 74 d1 42 0 0 52 0 22 cm BI IM true W 42 H 52 BPC 1 D 1 0 F CCF DP ID G S4 _ u W - D5 MJ EI endstream endobj 937 0 obj stream 0 0 0 -2 20 79 d1 20 0 0 81 0 -2 cm BI IM true W 20 H 81 BPC 1 D 1 0 F CCF DP ID Z x_ _ MW n EI endstream endobj 938 0 obj stream 0 0 0 3 37 60 d1 37 0 0 57 0 3 cm BI IM true W 37 H 57 BPC 1 D 1 0 F CCF DP ID Rp f 8 d XK G 1 o mv Q EI endstream endobj 939 0 obj stream 0 0 0 0 28 53 d1 28 0 0 53 0 0 cm BI IM true W 28 H 53 BPC 1 D 1 0 F CCF DP ID 5 EI endstream endobj 940 0 obj stream 0 0 0 0 35 55 d1 35 0 0 55 0 0 cm BI IM true W 35 H 55 BPC 1 D 1 0 F CCF DP ID x Fd 1 _ M w 8 EI endstream endobj 941 0 obj stream 0 0 0 0 35 55 d1 35 0 0 55 0 0 cm BI IM true W 35 H 55 BPC 1 D 1 0 F CCF DP ID x o w Mu K oo N_ il EI endstream endobj 942 0 obj stream 0 0 0 18 10 69 d1 10 0 0 51 0 18 cm BI IM true W 10 H 51 BPC 1 D 1 0 F CCF DP ID o G c N - EI endstream endobj 943 0 obj stream 0 0 0 -1 56 53 d1 56 0 0 54 0 -1 cm BI IM true W 56 H 54 BPC 1 D 1 0 F CCF DP ID N X EI endstream endobj 944 0 obj stream 0 0 0 22 67 58 d1 67 0 0 36 0 22 cm BI IM true W 67 H 36 BPC 1 D 1 0 F CCF DP ID ML 0h4 M5 k LB L 5 1H EI endstream endobj 945 0 obj stream 0 0 0 1 59 60 d1 59 0 0 59 0 1 cm BI IM true W 59 H 59 BPC 1 D 1 0 F CCF DP ID 98 b7 ' 4L aoxO J oo 6 z ' 4 _ K xa EI endstream endobj 946 0 obj stream 0 0 0 -1 37 53 d1 37 0 0 54 0 -1 cm BI IM true W 37 H 54 BPC 1 D 1 0 F CCF DP ID 6Sa N l o EI endstream endobj 947 0 obj stream 0 0 0 -7 20 74 d1 20 0 0 81 0 -7 cm BI IM true W 20 H 81 BPC 1 D 1 0 F CCF DP ID _ _ K Z z Aik P EI endstream endobj 948 0 obj endobj 953 0 obj stream 0 0 0 0 26 99 d1 26 0 0 99 0 0 cm BI IM true W 26 H 99 BPC 1 D 1 0 F CCF DP ID O P EI endstream endobj 954 0 obj stream 0 0 0 -4 26 95 d1 26 0 0 99 0 -4 cm BI IM true W 26 H 99 BPC 1 D 1 0 F CCF DP ID c _ EI endstream endobj 955 0 obj stream 0 0 0 19 32 73 d1 32 0 0 54 0 19 cm BI IM true W 32 H 54 BPC 1 D 1 0 F CCF DP ID oM O EI endstream endobj 956 0 obj stream 0 0 0 18 48 73 d1 48 0 0 55 0 18 cm BI IM true W 48 H 55 BPC 1 D 1 0 F CCF DP ID 1 zA 0 E EI endstream endobj 957 0 obj stream 0 0 0 17 61 77 d1 61 0 0 60 0 17 cm BI IM true W 61 H 60 BPC 1 D 1 0 F CCF DP ID Z eD nMQ d5 P EI endstream endobj 958 0 obj endobj 963 0 obj stream 0 0 0 0 47 72 d1 47 0 0 72 0 0 cm BI IM true W 47 H 72 BPC 1 D 1 0 F CCF DP ID n H n 8 B U bp EI endstream endobj 964 0 obj stream 0 0 0 0 49 86 d1 49 0 0 86 0 0 cm BI IM true W 49 H 86 BPC 1 D 1 0 F CCF DP ID p k p 7 m v c 7 EI endstream endobj 965 0 obj stream 0 0 0 -3 80 66 d1 80 0 0 69 0 -3 cm BI IM true W 80 H 69 BPC 1 D 1 0 F CCF DP ID Pp C o K _ p - EI endstream endobj 966 0 obj stream 0 0 0 20 48 68 d1 48 0 0 48 0 20 cm BI IM true W 48 H 48 BPC 1 D 1 0 F CCF DP ID A8h x P0 o 5 u 8 o m - 0M EI endstream endobj 967 0 obj stream 0 0 0 1 19 20 d1 19 0 0 19 0 1 cm BI IM true W 19 H 19 BPC 1 D 1 0 F CCF DP ID 0 EI endstream endobj 968 0 obj endobj 973 0 obj stream 0 0 0 36 53 87 d1 53 0 0 51 0 36 cm BI IM true W 53 H 51 BPC 1 D 1 0 F CCF DP ID 6 o 0 o x 0 95 K m 2 d6 EI endstream endobj 974 0 obj stream 0 0 0 0 58 70 d1 58 0 0 70 0 0 cm BI IM true W 58 H 70 BPC 1 D 1 0 F CCF DP ID 4O qXbC O e EI endstream endobj 975 0 obj endobj 980 0 obj stream 0 0 0 14 49 61 d1 49 0 0 47 0 14 cm BI IM true W 49 H 47 BPC 1 D 1 0 F CCF DP ID _ _ u k _ P EI endstream endobj 981 0 obj stream 0 0 0 21 39 81 d1 39 0 0 60 0 21 cm BI IM true W 39 H 60 BPC 1 D 1 0 F CCF DP ID h 0 z 0 7 1 5_ sP EI endstream endobj 982 0 obj stream 0 0 0 0 71 61 d1 71 0 0 61 0 0 cm BI IM true W 71 H 61 BPC 1 D 1 0 F CCF DP ID F x m o k xk 7 - rAH EI endstream endobj 983 0 obj stream 0 0 0 16 45 60 d1 45 0 0 44 0 16 cm BI IM true W 45 H 44 BPC 1 D 1 0 F CCF DP ID j ia io ia io ia _ zxA oI oI 5 EI endstream endobj 984 0 obj stream 0 0 0 0 63 61 d1 63 0 0 61 0 0 cm BI IM true W 63 H 61 BPC 1 D 1 0 F CCF DP ID z o P E EI endstream endobj 985 0 obj stream 0 0 0 18 55 71 d1 55 0 0 53 0 18 cm BI IM true W 55 H 53 BPC 1 D 1 0 F CCF DP ID 5 b z m k K _ k EI endstream endobj 986 0 obj endobj 990 0 obj endobj 995 0 obj stream 0 0 0 0 74 70 d1 74 0 0 70 0 0 cm BI IM true W 74 H 70 BPC 1 D 1 0 F CCF DP ID r D Q 9 O o b l p EI endstream endobj 996 0 obj stream 0 0 0 0 46 68 d1 46 0 0 68 0 0 cm BI IM true W 46 H 68 BPC 1 D 1 0 F CCF DP ID g 01 7 W q l c x EI endstream endobj 997 0 obj stream 0 0 0 -4 35 97 d1 35 0 0 101 0 -4 cm BI IM true W 35 H 101 BPC 1 D 1 0 F CCF DP ID th- xQ4 fFF P f EI endstream endobj 998 0 obj stream 0 0 0 -4 35 97 d1 35 0 0 101 0 -4 cm BI IM true W 35 H 101 BPC 1 D 1 0 F CCF DP ID 3 o n p K pK B EI endstream endobj 999 0 obj stream 0 0 0 48 18 76 d1 18 0 0 28 0 48 cm BI IM true W 18 H 28 BPC 1 D 1 0 F CCF DP ID kk EI endstream endobj 1000 0 obj endobj 1005 0 obj stream 0 0 0 0 45 61 d1 45 0 0 61 0 0 cm BI IM true W 45 H 61 BPC 1 D 1 0 F CCF DP ID AG EI endstream endobj 1006 0 obj stream 0 0 0 -2 43 63 d1 43 0 0 65 0 -2 cm BI IM true W 43 H 65 BPC 1 D 1 0 F CCF DP ID 1 ' 7 M O M z w _ 4 Ka EI endstream endobj 1007 0 obj stream 0 0 0 0 33 15 d1 33 0 0 15 0 0 cm BI IM true W 33 H 15 BPC 1 D 1 0 F CCF DP ID n '0 5 m X EI endstream endobj 1008 0 obj stream 0 0 0 -2 43 61 d1 43 0 0 63 0 -2 cm BI IM true W 43 H 63 BPC 1 D 1 0 F CCF DP ID l5 7 6 _ w k 5 EI endstream endobj 1009 0 obj stream 0 0 0 18 45 64 d1 45 0 0 46 0 18 cm BI IM true W 45 H 46 BPC 1 D 1 0 F CCF DP ID g Mu EI endstream endobj 1010 0 obj stream 0 0 0 1 41 73 d1 41 0 0 72 0 1 cm BI IM true W 41 H 72 BPC 1 D 1 0 F CCF DP ID c NH k - 5 EI endstream endobj 1011 0 obj stream 0 0 0 0 52 68 d1 52 0 0 68 0 0 cm BI IM true W 52 H 68 BPC 1 D 1 0 F CCF DP ID 1D 0 Y W 8W p EI endstream endobj 1012 0 obj stream 0 0 0 -5 74 66 d1 74 0 0 71 0 -5 cm BI IM true W 74 H 71 BPC 1 D 1 0 F CCF DP ID Q d VE n k o o j EI endstream endobj 1013 0 obj stream 0 0 0 10 45 71 d1 45 0 0 61 0 10 cm BI IM true W 45 H 61 BPC 1 D 1 0 F CCF DP ID 9 Bo 0p z 4 EI endstream endobj 1014 0 obj stream 0 0 0 19 48 71 d1 48 0 0 52 0 19 cm BI IM true W 48 H 52 BPC 1 D 1 0 F CCF DP ID y aA o K B EI endstream endobj 1015 0 obj endobj 1020 0 obj stream 0 0 0 45 23 70 d1 23 0 0 25 0 45 cm BI IM true W 23 H 25 BPC 1 D 1 0 F CCF DP ID h _ D Z l EI endstream endobj 1021 0 obj stream 0 0 0 15 43 61 d1 43 0 0 46 0 15 cm BI IM true W 43 H 46 BPC 1 D 1 0 F CCF DP ID aH S4 K Ax_ q 3 o _ _K P EI endstream endobj 1022 0 obj stream 0 0 0 0 48 68 d1 48 0 0 68 0 0 cm BI IM true W 48 H 68 BPC 1 D 1 0 F CCF DP ID J K ip p d l- c Xa xk EI endstream endobj 1023 0 obj stream 0 0 0 -3 81 68 d1 81 0 0 71 0 -3 cm BI IM true W 81 H 71 BPC 1 D 1 0 F CCF DP ID 5 X 7 M o O o O X q EI endstream endobj 1024 0 obj stream 0 0 0 -1 61 74 d1 61 0 0 75 0 -1 cm BI IM true W 61 H 75 BPC 1 D 1 0 F CCF DP ID N 6 u' L - o z z k - Ka 0 C EI endstream endobj 1025 0 obj stream 0 0 0 25 46 93 d1 46 0 0 68 0 25 cm BI IM true W 46 H 68 BPC 1 D 1 0 F CCF DP ID 0 G H O ip f z 4 o bB _ dp EI endstream endobj 1026 0 obj stream 0 0 0 25 41 91 d1 41 0 0 66 0 25 cm BI IM true W 41 H 66 BPC 1 D 1 0 F CCF DP ID C z y5 o - 5 EI endstream endobj 1027 0 obj endobj 1032 0 obj stream 0 0 0 43 61 49 d1 61 0 0 6 0 43 cm BI IM true W 61 H 6 BPC 1 D 1 0 F CCF DP ID MR EI endstream endobj 1033 0 obj stream 0 0 0 0 53 73 d1 53 0 0 73 0 0 cm BI IM true W 53 H 73 BPC 1 D 1 0 F CCF DP ID x P k -z z v e EI endstream endobj 1034 0 obj stream 0 0 0 25 64 71 d1 64 0 0 46 0 25 cm BI IM true W 64 H 46 BPC 1 D 1 0 F CCF DP ID 4 G k 5 8 EI endstream endobj 1035 0 obj stream 0 0 0 25 40 91 d1 40 0 0 66 0 25 cm BI IM true W 40 H 66 BPC 1 D 1 0 F CCF DP ID 4 F N Q 0 w J 0 EI endstream endobj 1036 0 obj endobj 1041 0 obj stream 0 0 0 0 50 63 d1 50 0 0 63 0 0 cm BI IM true W 50 H 63 BPC 1 D 1 0 F CCF DP ID 8 k _ _ 8 EI endstream endobj 1042 0 obj stream 0 0 0 0 49 68 d1 49 0 0 68 0 0 cm BI IM true W 49 H 68 BPC 1 D 1 0 F CCF DP ID 3 c4z 7 MW ms o o Y EI endstream endobj 1043 0 obj stream 0 0 0 54 63 87 d1 63 0 0 33 0 54 cm BI IM true W 63 H 33 BPC 1 D 1 0 F CCF DP ID l6 m C w q _ cb P EI endstream endobj 1044 0 obj stream 0 0 0 54 41 87 d1 41 0 0 33 0 54 cm BI IM true W 41 H 33 BPC 1 D 1 0 F CCF DP ID l 4 m w 0 9 cb P EI endstream endobj 1045 0 obj stream 0 0 0 43 53 95 d1 53 0 0 52 0 43 cm BI IM true W 53 H 52 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1046 0 obj stream 0 0 0 55 36 101 d1 36 0 0 46 0 55 cm BI IM true W 36 H 46 BPC 1 D 1 0 F CCF DP ID o C z U 5 0 EI endstream endobj 1047 0 obj endobj 1052 0 obj stream 0 0 0 -10 43 31 d1 43 0 0 41 0 -10 cm BI IM true W 43 H 41 BPC 1 D 1 0 F CCF DP ID Ip Cd z Xa - B cO g y _ EI endstream endobj 1053 0 obj stream 0 0 0 0 29 13 d1 29 0 0 13 0 0 cm BI IM true W 29 H 13 BPC 1 D 1 0 F CCF DP ID w EI endstream endobj 1054 0 obj stream 0 0 0 48 17 83 d1 17 0 0 35 0 48 cm BI IM true W 17 H 35 BPC 1 D 1 0 F CCF DP ID x w p X EI endstream endobj 1055 0 obj stream 0 0 0 0 63 70 d1 63 0 0 70 0 0 cm BI IM true W 63 H 70 BPC 1 D 1 0 F CCF DP ID PT O O W _ X wp EI endstream endobj 1056 0 obj stream 0 0 0 26 65 71 d1 65 0 0 45 0 26 cm BI IM true W 65 H 45 BPC 1 D 1 0 F CCF DP ID u o _ EI endstream endobj 1057 0 obj endobj 1062 0 obj stream 0 0 0 -3 48 63 d1 48 0 0 66 0 -3 cm BI IM true W 48 H 66 BPC 1 D 1 0 F CCF DP ID ' h MA K o o k p u EI endstream endobj 1063 0 obj stream 0 0 0 19 40 63 d1 40 0 0 44 0 19 cm BI IM true W 40 H 44 BPC 1 D 1 0 F CCF DP ID c X P p K v - _ EI endstream endobj 1064 0 obj stream 0 0 0 20 58 61 d1 58 0 0 41 0 20 cm BI IM true W 58 H 41 BPC 1 D 1 0 F CCF DP ID 3 k P Dr4 aI EI endstream endobj 1065 0 obj stream 0 0 0 20 37 79 d1 37 0 0 59 0 20 cm BI IM true W 37 H 59 BPC 1 D 1 0 F CCF DP ID 3 _ p OM m p_ EI endstream endobj 1066 0 obj stream 0 0 0 -21 38 43 d1 38 0 0 64 0 -21 cm BI IM true W 38 H 64 BPC 1 D 1 0 F CCF DP ID yW O o k _ v aw 1_ EI endstream endobj 1067 0 obj stream 0 0 0 -20 37 39 d1 37 0 0 59 0 -20 cm BI IM true W 37 H 59 BPC 1 D 1 0 F CCF DP ID GC k f EI endstream endobj 1068 0 obj stream 0 0 0 9 29 63 d1 29 0 0 54 0 9 cm BI IM true W 29 H 54 BPC 1 D 1 0 F CCF DP ID j 8_ BZ _ MFf EI endstream endobj 1069 0 obj stream 0 0 0 20 42 82 d1 42 0 0 62 0 20 cm BI IM true W 42 H 62 BPC 1 D 1 0 F CCF DP ID B zx ' 0 n MU _ h p C EI endstream endobj 1070 0 obj stream 131 0 0 0 0 0 d1 endstream endobj 1071 0 obj stream 0 0 0 8 62 69 d1 62 0 0 61 0 8 cm BI IM true W 62 H 61 BPC 1 D 1 0 F CCF DP ID 3 Z f EI endstream endobj 1072 0 obj stream 0 0 0 0 51 71 d1 51 0 0 71 0 0 cm BI IM true W 51 H 71 BPC 1 D 1 0 F CCF DP ID zz V7 jg _ EI endstream endobj 1073 0 obj stream 0 0 0 56 61 126 d1 61 0 0 70 0 56 cm BI IM true W 61 H 70 BPC 1 D 1 0 F CCF DP ID N H o EI endstream endobj 1074 0 obj stream 0 0 0 56 47 126 d1 47 0 0 70 0 56 cm BI IM true W 47 H 70 BPC 1 D 1 0 F CCF DP ID 5 EI endstream endobj 1075 0 obj stream 0 0 0 81 45 126 d1 45 0 0 45 0 81 cm BI IM true W 45 H 45 BPC 1 D 1 0 F CCF DP ID 'j K n K Ao k o H0 _ V EI endstream endobj 1076 0 obj stream 0 0 0 1 44 71 d1 44 0 0 70 0 1 cm BI IM true W 44 H 70 BPC 1 D 1 0 F CCF DP ID ' 8i - EI endstream endobj 1077 0 obj endobj 1082 0 obj stream 0 0 0 0 46 90 d1 46 0 0 90 0 0 cm BI IM true W 46 H 90 BPC 1 D 1 0 F CCF DP ID l X 4 7 z _ EI endstream endobj 1083 0 obj stream 0 0 0 0 57 68 d1 57 0 0 68 0 0 cm BI IM true W 57 H 68 BPC 1 D 1 0 F CCF DP ID k m 6 0 EI endstream endobj 1084 0 obj stream 0 0 0 0 10 70 d1 10 0 0 70 0 0 cm BI IM true W 10 H 70 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1085 0 obj endobj 1090 0 obj stream 0 0 0 38 29 48 d1 29 0 0 10 0 38 cm BI IM true W 29 H 10 BPC 1 D 1 0 F CCF DP ID Q EI endstream endobj 1091 0 obj stream 0 0 0 0 43 45 d1 43 0 0 45 0 0 cm BI IM true W 43 H 45 BPC 1 D 1 0 F CCF DP ID o o 0 EI endstream endobj 1092 0 obj stream 0 0 0 -45 51 3 d1 51 0 0 48 0 -45 cm BI IM true W 51 H 48 BPC 1 D 1 0 F CCF DP ID y EI endstream endobj 1093 0 obj stream 0 0 0 47 70 90 d1 70 0 0 43 0 47 cm BI IM true W 70 H 43 BPC 1 D 1 0 F CCF DP ID p U x0 H c d EI endstream endobj 1094 0 obj stream 0 0 0 -46 50 5 d1 50 0 0 51 0 -46 cm BI IM true W 50 H 51 BPC 1 D 1 0 F CCF DP ID 9 1 EI endstream endobj 1095 0 obj endobj 1100 0 obj stream 0 0 0 0 67 60 d1 67 0 0 60 0 0 cm BI IM true W 67 H 60 BPC 1 D 1 0 F CCF DP ID C O 3 xz G EI endstream endobj 1101 0 obj stream 0 0 0 -24 34 40 d1 34 0 0 64 0 -24 cm BI IM true W 34 H 64 BPC 1 D 1 0 F CCF DP ID xOO k o P b EI endstream endobj 1102 0 obj stream 0 0 0 -2 43 61 d1 43 0 0 63 0 -2 cm BI IM true W 43 H 63 BPC 1 D 1 0 F CCF DP ID h_ J h_ EI endstream endobj 1103 0 obj stream 0 0 0 -2 37 63 d1 37 0 0 65 0 -2 cm BI IM true W 37 H 65 BPC 1 D 1 0 F CCF DP ID z W k mw - 4 EI endstream endobj 1104 0 obj stream 0 0 0 -2 10 61 d1 10 0 0 63 0 -2 cm BI IM true W 10 H 63 BPC 1 D 1 0 F CCF DP ID O EI endstream endobj 1105 0 obj stream 0 0 0 -3 56 61 d1 56 0 0 64 0 -3 cm BI IM true W 56 H 64 BPC 1 D 1 0 F CCF DP ID 3 j30 aq w 0P EI endstream endobj 1106 0 obj stream 0 0 0 0 36 90 d1 36 0 0 90 0 0 cm BI IM true W 36 H 90 BPC 1 D 1 0 F CCF DP ID _ - _ K Z z _ k EI endstream endobj 1107 0 obj stream 0 0 0 0 59 61 d1 59 0 0 61 0 0 cm BI IM true W 59 H 61 BPC 1 D 1 0 F CCF DP ID _ w EI endstream endobj 1108 0 obj stream 0 0 0 -2 55 61 d1 55 0 0 63 0 -2 cm BI IM true W 55 H 63 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1109 0 obj stream 0 0 0 21 41 61 d1 41 0 0 40 0 21 cm BI IM true W 41 H 40 BPC 1 D 1 0 F CCF DP ID 4j u z k _ 0 oI C o_ EI endstream endobj 1110 0 obj stream 0 0 0 0 9 63 d1 9 0 0 63 0 0 cm BI IM true W 9 H 63 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1111 0 obj stream 0 0 0 -20 33 21 d1 33 0 0 41 0 -20 cm BI IM true W 33 H 41 BPC 1 D 1 0 F CCF DP ID 3 0J Rj EI endstream endobj 1112 0 obj stream 0 0 0 -2 49 61 d1 49 0 0 63 0 -2 cm BI IM true W 49 H 63 BPC 1 D 1 0 F CCF DP ID 4 K -z K r 4 K K H EI endstream endobj 1113 0 obj stream 0 0 0 -2 38 61 d1 38 0 0 63 0 -2 cm BI IM true W 38 H 63 BPC 1 D 1 0 F CCF DP ID 3 EI endstream endobj 1114 0 obj stream 0 0 0 0 59 71 d1 59 0 0 71 0 0 cm BI IM true W 59 H 71 BPC 1 D 1 0 F CCF DP ID c w llww EI endstream endobj 1115 0 obj stream 0 0 0 -6 39 95 d1 39 0 0 101 0 -6 cm BI IM true W 39 H 101 BPC 1 D 1 0 F CCF DP ID X_ _ k K Z _ _ k Z _ EI endstream endobj 1116 0 obj stream 0 0 0 1 46 71 d1 46 0 0 70 0 1 cm BI IM true W 46 H 70 BPC 1 D 1 0 F CCF DP ID Z 6w W 6w EI endstream endobj 1117 0 obj stream 147 0 0 0 0 0 d1 endstream endobj 1118 0 obj stream 0 0 0 6 66 71 d1 66 0 0 65 0 6 cm BI IM true W 66 H 65 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1119 0 obj stream 127 0 0 0 0 0 d1 endstream endobj 1120 0 obj endobj 1125 0 obj stream 0 0 0 -23 51 40 d1 51 0 0 63 0 -23 cm BI IM true W 51 H 63 BPC 1 D 1 0 F CCF DP ID jE K 0 X O EI endstream endobj 1126 0 obj stream 0 0 0 -42 58 21 d1 58 0 0 63 0 -42 cm BI IM true W 58 H 63 BPC 1 D 1 0 F CCF DP ID o _ V - H7 o EI endstream endobj 1127 0 obj stream 0 0 0 -43 37 1 d1 37 0 0 44 0 -43 cm BI IM true W 37 H 44 BPC 1 D 1 0 F CCF DP ID K H 0 6 M EI endstream endobj 1128 0 obj stream 0 0 0 21 39 61 d1 39 0 0 40 0 21 cm BI IM true W 39 H 40 BPC 1 D 1 0 F CCF DP ID J V o x EI endstream endobj 1129 0 obj stream 0 0 0 -42 56 21 d1 56 0 0 63 0 -42 cm BI IM true W 56 H 63 BPC 1 D 1 0 F CCF DP ID 3 y5T _ w _ _ b EI endstream endobj 1130 0 obj stream 0 0 0 -30 28 1 d1 28 0 0 31 0 -30 cm BI IM true W 28 H 31 BPC 1 D 1 0 F CCF DP ID xO K - EI endstream endobj 1131 0 obj stream 0 0 0 -34 62 2 d1 62 0 0 36 0 -34 cm BI IM true W 62 H 36 BPC 1 D 1 0 F CCF DP ID l6o yi m Aiu _ EI endstream endobj 1132 0 obj stream 0 0 0 26 28 86 d1 28 0 0 60 0 26 cm BI IM true W 28 H 60 BPC 1 D 1 0 F CCF DP ID c Z _ _ EI endstream endobj 1133 0 obj stream 0 0 0 10 28 52 d1 28 0 0 42 0 10 cm BI IM true W 28 H 42 BPC 1 D 1 0 F CCF DP ID G W o k EI endstream endobj 1134 0 obj stream 0 0 0 0 37 65 d1 37 0 0 65 0 0 cm BI IM true W 37 H 65 BPC 1 D 1 0 F CCF DP ID 3gP OM w X_ uS8 Y EI endstream endobj 1135 0 obj stream 0 0 0 21 39 81 d1 39 0 0 60 0 21 cm BI IM true W 39 H 60 BPC 1 D 1 0 F CCF DP ID f_ 0 o ' _ EI endstream endobj 1136 0 obj stream 0 0 0 -2 40 61 d1 40 0 0 63 0 -2 cm BI IM true W 40 H 63 BPC 1 D 1 0 F CCF DP ID 4 JC EI endstream endobj 1137 0 obj stream 0 0 0 21 33 63 d1 33 0 0 42 0 21 cm BI IM true W 33 H 42 BPC 1 D 1 0 F CCF DP ID N Q d P EI endstream endobj 1138 0 obj stream 0 0 0 0 29 64 d1 29 0 0 64 0 0 cm BI IM true W 29 H 64 BPC 1 D 1 0 F CCF DP ID 3 5 EI endstream endobj 1139 0 obj endobj 1144 0 obj stream 0 0 0 1 40 71 d1 40 0 0 70 0 1 cm BI IM true W 40 H 70 BPC 1 D 1 0 F CCF DP ID 4 k u X A_ 4 X 4K EI endstream endobj 1145 0 obj endobj 1150 0 obj stream 0 0 0 19 66 71 d1 66 0 0 52 0 19 cm BI IM true W 66 H 52 BPC 1 D 1 0 F CCF DP ID _ N 0am ' 7 o o ' o N EI endstream endobj 1151 0 obj endobj 1156 0 obj stream 0 0 0 -4 63 64 d1 63 0 0 68 0 -4 cm BI IM true W 63 H 68 BPC 1 D 1 0 F CCF DP ID b D o zLB k u xX ' rk z L _ 7 V z H k k X0 EI endstream endobj 1157 0 obj stream 0 0 0 0 48 64 d1 48 0 0 64 0 0 cm BI IM true W 48 H 64 BPC 1 D 1 0 F CCF DP ID h p xH0 Sp j u p EI endstream endobj 1158 0 obj stream 0 0 0 0 62 61 d1 62 0 0 61 0 0 cm BI IM true W 62 H 61 BPC 1 D 1 0 F CCF DP ID Jo _ _ r EI endstream endobj 1159 0 obj stream 0 0 0 -3 62 64 d1 62 0 0 67 0 -3 cm BI IM true W 62 H 67 BPC 1 D 1 0 F CCF DP ID P p c z z AL Cj 0 O ' EI endstream endobj 1160 0 obj stream 0 0 0 0 41 61 d1 41 0 0 61 0 0 cm BI IM true W 41 H 61 BPC 1 D 1 0 F CCF DP ID 7 EI endstream endobj 1161 0 obj stream 0 0 0 -38 43 25 d1 43 0 0 63 0 -38 cm BI IM true W 43 H 63 BPC 1 D 1 0 F CCF DP ID 6 4 Bc6 p u aw VP EI endstream endobj 1162 0 obj stream 0 0 0 12 11 22 d1 11 0 0 10 0 12 cm BI IM true W 11 H 10 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1163 0 obj stream 0 0 0 -38 31 22 d1 31 0 0 60 0 -38 cm BI IM true W 31 H 60 BPC 1 D 1 0 F CCF DP ID xF EI endstream endobj 1164 0 obj stream 0 0 0 -39 83 25 d1 83 0 0 64 0 -39 cm BI IM true W 83 H 64 BPC 1 D 1 0 F CCF DP ID g 7 jA w EI endstream endobj 1165 0 obj stream 0 0 0 -2 40 63 d1 40 0 0 65 0 -2 cm BI IM true W 40 H 65 BPC 1 D 1 0 F CCF DP ID xO O o N d W EI endstream endobj 1166 0 obj stream 0 0 0 -3 61 64 d1 61 0 0 67 0 -3 cm BI IM true W 61 H 67 BPC 1 D 1 0 F CCF DP ID 5 D H y5O k xz 1L80O 0 EI endstream endobj 1167 0 obj stream 0 0 0 -3 59 64 d1 59 0 0 67 0 -3 cm BI IM true W 59 H 67 BPC 1 D 1 0 F CCF DP ID 4 4N N 1 o n 5L o o p 0a z 1 a8 EI endstream endobj 1168 0 obj stream 0 0 0 51 14 79 d1 14 0 0 28 0 51 cm BI IM true W 14 H 28 BPC 1 D 1 0 F CCF DP ID 0 EI endstream endobj 1169 0 obj stream 0 0 0 -38 40 25 d1 40 0 0 63 0 -38 cm BI IM true W 40 H 63 BPC 1 D 1 0 F CCF DP ID G o 0 o p w - EI endstream endobj 1170 0 obj stream 0 0 0 0 66 61 d1 66 0 0 61 0 0 cm BI IM true W 66 H 61 BPC 1 D 1 0 F CCF DP ID j _ _K _ K _x o zh8 EI endstream endobj 1171 0 obj stream 0 0 0 0 66 64 d1 66 0 0 64 0 0 cm BI IM true W 66 H 64 BPC 1 D 1 0 F CCF DP ID hR P EI endstream endobj 1172 0 obj stream 0 0 0 0 53 61 d1 53 0 0 61 0 0 cm BI IM true W 53 H 61 BPC 1 D 1 0 F CCF DP ID J 7 x O EI endstream endobj 1173 0 obj stream 0 0 0 -38 41 25 d1 41 0 0 63 0 -38 cm BI IM true W 41 H 63 BPC 1 D 1 0 F CCF DP ID fp 7 M y o l EI endstream endobj 1174 0 obj stream 0 0 0 1 43 64 d1 43 0 0 63 0 1 cm BI IM true W 43 H 63 BPC 1 D 1 0 F CCF DP ID p xX 7 MS 0 K 5 3' C oA mp - K b k EI endstream endobj 1175 0 obj stream 0 0 0 1 41 64 d1 41 0 0 63 0 1 cm BI IM true W 41 H 63 BPC 1 D 1 0 F CCF DP ID x 7 M 7 0 EI endstream endobj 1176 0 obj stream 0 0 0 1 42 64 d1 42 0 0 63 0 1 cm BI IM true W 42 H 63 BPC 1 D 1 0 F CCF DP ID D 2 k 5 Xk GD O o X31 EI endstream endobj 1177 0 obj stream 0 0 0 36 42 39 d1 42 0 0 3 0 36 cm BI IM true W 42 H 3 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1178 0 obj stream 0 0 0 22 18 61 d1 18 0 0 39 0 22 cm BI IM true W 18 H 39 BPC 1 D 1 0 F CCF DP ID K EI endstream endobj 1179 0 obj stream 0 0 0 0 64 61 d1 64 0 0 61 0 0 cm BI IM true W 64 H 61 BPC 1 D 1 0 F CCF DP ID 85pa K ___ _ _ _ K _ _ EI endstream endobj 1180 0 obj stream 0 0 0 0 64 64 d1 64 0 0 64 0 0 cm BI IM true W 64 H 64 BPC 1 D 1 0 F CCF DP ID l ' 7 O x O oL8 EI endstream endobj 1181 0 obj stream 0 0 0 36 92 39 d1 92 0 0 3 0 36 cm BI IM true W 92 H 3 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1182 0 obj stream 0 0 0 39 21 46 d1 21 0 0 7 0 39 cm BI IM true W 21 H 7 BPC 1 D 1 0 F CCF DP ID E EI endstream endobj 1183 0 obj stream 0 0 0 -2 14 27 d1 14 0 0 29 0 -2 cm BI IM true W 14 H 29 BPC 1 D 1 0 F CCF DP ID 0rj 0 EI endstream endobj 1184 0 obj stream 0 0 0 0 56 42 d1 56 0 0 42 0 0 cm BI IM true W 56 H 42 BPC 1 D 1 0 F CCF DP ID d 7 1 EI endstream endobj 1185 0 obj stream 0 0 0 6 44 61 d1 44 0 0 55 0 6 cm BI IM true W 44 H 55 BPC 1 D 1 0 F CCF DP ID 5 G0fc EI endstream endobj 1186 0 obj stream 0 0 0 12 38 61 d1 38 0 0 49 0 12 cm BI IM true W 38 H 49 BPC 1 D 1 0 F CCF DP ID XA ax P C MP_ EI endstream endobj 1187 0 obj stream 0 0 0 22 43 82 d1 43 0 0 60 0 22 cm BI IM true W 43 H 60 BPC 1 D 1 0 F CCF DP ID YB P u EI endstream endobj 1188 0 obj stream 0 0 0 22 13 61 d1 13 0 0 39 0 22 cm BI IM true W 13 H 39 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1189 0 obj stream 0 0 0 -2 37 69 d1 37 0 0 71 0 -2 cm BI IM true W 37 H 71 BPC 1 D 1 0 F CCF DP ID h o o o k EI endstream endobj 1190 0 obj stream 0 0 0 22 44 61 d1 44 0 0 39 0 22 cm BI IM true W 44 H 39 BPC 1 D 1 0 F CCF DP ID O - k o M_ _ _ O EI endstream endobj 1191 0 obj stream 0 0 0 49 13 61 d1 13 0 0 12 0 49 cm BI IM true W 13 H 12 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1192 0 obj stream 0 0 0 22 36 61 d1 36 0 0 39 0 22 cm BI IM true W 36 H 39 BPC 1 D 1 0 F CCF DP ID E z EI endstream endobj 1193 0 obj stream 0 0 0 22 35 61 d1 35 0 0 39 0 22 cm BI IM true W 35 H 39 BPC 1 D 1 0 F CCF DP ID P p O _ d xK Z N c8H _ EI endstream endobj 1194 0 obj stream 0 0 0 22 42 61 d1 42 0 0 39 0 22 cm BI IM true W 42 H 39 BPC 1 D 1 0 F CCF DP ID h gAp E 03 K EI endstream endobj 1195 0 obj stream 0 0 0 6 37 61 d1 37 0 0 55 0 6 cm BI IM true W 37 H 55 BPC 1 D 1 0 F CCF DP ID b P EI endstream endobj 1196 0 obj stream 0 0 0 22 50 61 d1 50 0 0 39 0 22 cm BI IM true W 50 H 39 BPC 1 D 1 0 F CCF DP ID j 4 pB 5 EI endstream endobj 1197 0 obj stream 0 0 0 22 38 61 d1 38 0 0 39 0 22 cm BI IM true W 38 H 39 BPC 1 D 1 0 F CCF DP ID b xQ M v Xk EI endstream endobj 1198 0 obj stream 0 0 0 22 42 61 d1 42 0 0 39 0 22 cm BI IM true W 42 H 39 BPC 1 D 1 0 F CCF DP ID C hQP aa 5H_ EI endstream endobj 1199 0 obj stream 0 0 0 6 32 18 d1 32 0 0 12 0 6 cm BI IM true W 32 H 12 BPC 1 D 1 0 F CCF DP ID v a5 EI endstream endobj 1200 0 obj stream 0 0 0 22 44 61 d1 44 0 0 39 0 22 cm BI IM true W 44 H 39 BPC 1 D 1 0 F CCF DP ID N N2 k j EI endstream endobj 1201 0 obj stream 0 0 0 21 43 83 d1 43 0 0 62 0 21 cm BI IM true W 43 H 62 BPC 1 D 1 0 F CCF DP ID 5L ap z ' O ' kc EI endstream endobj 1202 0 obj stream 0 0 0 22 42 82 d1 42 0 0 60 0 22 cm BI IM true W 42 H 60 BPC 1 D 1 0 F CCF DP ID 3a U _ EI endstream endobj 1203 0 obj stream 0 0 0 22 44 61 d1 44 0 0 39 0 22 cm BI IM true W 44 H 39 BPC 1 D 1 0 F CCF DP ID 5 G0fc 8 u 0 EI endstream endobj 1204 0 obj stream 0 0 0 0 36 57 d1 36 0 0 57 0 0 cm BI IM true W 36 H 57 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1205 0 obj stream 0 0 0 0 71 61 d1 71 0 0 61 0 0 cm BI IM true W 71 H 61 BPC 1 D 1 0 F CCF DP ID V B aY EI endstream endobj 1206 0 obj stream 0 0 0 -3 62 64 d1 62 0 0 67 0 -3 cm BI IM true W 62 H 67 BPC 1 D 1 0 F CCF DP ID P 6 3 o0 k p AoX3A EI endstream endobj 1207 0 obj stream 0 0 0 1 42 64 d1 42 0 0 63 0 1 cm BI IM true W 42 H 63 BPC 1 D 1 0 F CCF DP ID zn 0 p W N y EI endstream endobj 1208 0 obj stream 0 0 0 1 46 64 d1 46 0 0 63 0 1 cm BI IM true W 46 H 63 BPC 1 D 1 0 F CCF DP ID 2 yV l n 7 H EI endstream endobj 1209 0 obj stream 0 0 0 2 43 63 d1 43 0 0 61 0 2 cm BI IM true W 43 H 61 BPC 1 D 1 0 F CCF DP ID 0 4 B D ' W z KW EI endstream endobj 1210 0 obj stream 0 0 0 36 45 39 d1 45 0 0 3 0 36 cm BI IM true W 45 H 3 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1211 0 obj stream 0 0 0 0 58 67 d1 58 0 0 67 0 0 cm BI IM true W 58 H 67 BPC 1 D 1 0 F CCF DP ID 4 q 2 A' o L M m rj u u p - 0 5 EI endstream endobj 1212 0 obj stream 0 0 0 2 38 61 d1 38 0 0 59 0 2 cm BI IM true W 38 H 59 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1213 0 obj stream 0 0 0 2 43 61 d1 43 0 0 59 0 2 cm BI IM true W 43 H 59 BPC 1 D 1 0 F CCF DP ID g d0k 7 dH EI endstream endobj 1214 0 obj stream 0 0 0 0 59 64 d1 59 0 0 64 0 0 cm BI IM true W 59 H 64 BPC 1 D 1 0 F CCF DP ID O Pg EI endstream endobj 1215 0 obj stream 0 0 0 6 45 61 d1 45 0 0 55 0 6 cm BI IM true W 45 H 55 BPC 1 D 1 0 F CCF DP ID k _ _k 31 _ 0 7 HG _ V EI endstream endobj 1216 0 obj stream 0 0 0 22 37 61 d1 37 0 0 39 0 22 cm BI IM true W 37 H 39 BPC 1 D 1 0 F CCF DP ID z _ m- EI endstream endobj 1217 0 obj stream 0 0 0 6 43 61 d1 43 0 0 55 0 6 cm BI IM true W 43 H 55 BPC 1 D 1 0 F CCF DP ID N 8 ' _ k _ r EI endstream endobj 1218 0 obj stream 0 0 0 22 42 61 d1 42 0 0 39 0 22 cm BI IM true W 42 H 39 BPC 1 D 1 0 F CCF DP ID 1O O O X Ud L EI endstream endobj 1219 0 obj endobj 1224 0 obj stream 0 0 0 0 47 61 d1 47 0 0 61 0 0 cm BI IM true W 47 H 61 BPC 1 D 1 0 F CCF DP ID G o m x EI endstream endobj 1225 0 obj stream 0 0 0 -38 39 40 d1 39 0 0 78 0 -38 cm BI IM true W 39 H 78 BPC 1 D 1 0 F CCF DP ID b W l Q l w p EI endstream endobj 1226 0 obj stream 0 0 0 -2 18 16 d1 18 0 0 18 0 -2 cm BI IM true W 18 H 18 BPC 1 D 1 0 F CCF DP ID pz o _ EI endstream endobj 1227 0 obj stream 0 0 0 6 38 61 d1 38 0 0 55 0 6 cm BI IM true W 38 H 55 BPC 1 D 1 0 F CCF DP ID O A' BQ 5A A' AB EI endstream endobj 1228 0 obj stream 0 0 0 22 46 82 d1 46 0 0 60 0 22 cm BI IM true W 46 H 60 BPC 1 D 1 0 F CCF DP ID 4O xC 5 k 5 EI endstream endobj 1229 0 obj stream 0 0 0 0 28 10 d1 28 0 0 10 0 0 cm BI IM true W 28 H 10 BPC 1 D 1 0 F CCF DP ID j P EI endstream endobj 1230 0 obj stream 0 0 0 -6 33 83 d1 33 0 0 89 0 -6 cm BI IM true W 33 H 89 BPC 1 D 1 0 F CCF DP ID o x xp EI endstream endobj 1231 0 obj stream 0 0 0 -4 19 12 d1 19 0 0 16 0 -4 cm BI IM true W 19 H 16 BPC 1 D 1 0 F CCF DP ID k EI endstream endobj 1232 0 obj stream 0 0 0 -6 33 83 d1 33 0 0 89 0 -6 cm BI IM true W 33 H 89 BPC 1 D 1 0 F CCF DP ID 0 o K EI endstream endobj 1233 0 obj stream 0 0 0 30 37 37 d1 37 0 0 7 0 30 cm BI IM true W 37 H 7 BPC 1 D 1 0 F CCF DP ID P EI endstream endobj 1234 0 obj stream 0 0 0 6 43 61 d1 43 0 0 55 0 6 cm BI IM true W 43 H 55 BPC 1 D 1 0 F CCF DP ID 3 0 q 7 o _ K K EI endstream endobj 1235 0 obj stream 0 0 0 4 39 63 d1 39 0 0 59 0 4 cm BI IM true W 39 H 59 BPC 1 D 1 0 F CCF DP ID 7 tx h z EI endstream endobj 1236 0 obj stream 0 0 0 4 37 61 d1 37 0 0 57 0 4 cm BI IM true W 37 H 57 BPC 1 D 1 0 F CCF DP ID 8 xoo o U v m k d EI endstream endobj 1237 0 obj stream 0 0 0 22 39 61 d1 39 0 0 39 0 22 cm BI IM true W 39 H 39 BPC 1 D 1 0 F CCF DP ID E 5E k EI endstream endobj 1238 0 obj stream 0 0 0 -2 21 16 d1 21 0 0 18 0 -2 cm BI IM true W 21 H 18 BPC 1 D 1 0 F CCF DP ID c xa EI endstream endobj 1239 0 obj stream 0 0 0 21 57 63 d1 57 0 0 42 0 21 cm BI IM true W 57 H 42 BPC 1 D 1 0 F CCF DP ID L L c N w xa o y b C3 - EI endstream endobj 1240 0 obj stream 0 0 0 2 43 63 d1 43 0 0 61 0 2 cm BI IM true W 43 H 61 BPC 1 D 1 0 F CCF DP ID B 4 0 C Aa - 2 EI endstream endobj 1241 0 obj stream 0 0 0 2 48 61 d1 48 0 0 59 0 2 cm BI IM true W 48 H 59 BPC 1 D 1 0 F CCF DP ID 2 P 7 o o EI endstream endobj 1242 0 obj stream 0 0 0 4 42 61 d1 42 0 0 57 0 4 cm BI IM true W 42 H 57 BPC 1 D 1 0 F CCF DP ID - Ms EI endstream endobj 1243 0 obj stream 0 0 0 6 43 61 d1 43 0 0 55 0 6 cm BI IM true W 43 H 55 BPC 1 D 1 0 F CCF DP ID L ' l 5J EI endstream endobj 1244 0 obj stream 0 0 0 4 39 63 d1 39 0 0 59 0 4 cm BI IM true W 39 H 59 BPC 1 D 1 0 F CCF DP ID ' z ' _ _ l 5 x0M EI endstream endobj 1245 0 obj stream 0 0 0 4 37 63 d1 37 0 0 59 0 4 cm BI IM true W 37 H 59 BPC 1 D 1 0 F CCF DP ID _ 7 O k k d4k Q p y 4Q _ Gp x k W EI endstream endobj 1246 0 obj stream 0 0 0 6 41 61 d1 41 0 0 55 0 6 cm BI IM true W 41 H 55 BPC 1 D 1 0 F CCF DP ID v95_ P EI endstream endobj 1247 0 obj stream 0 0 0 6 42 61 d1 42 0 0 55 0 6 cm BI IM true W 42 H 55 BPC 1 D 1 0 F CCF DP ID MPP EI endstream endobj 1248 0 obj stream 0 0 0 4 39 63 d1 39 0 0 59 0 4 cm BI IM true W 39 H 59 BPC 1 D 1 0 F CCF DP ID O 0 x k p n w av 0 G EI endstream endobj 1249 0 obj stream 0 0 0 4 39 63 d1 39 0 0 59 0 4 cm BI IM true W 39 H 59 BPC 1 D 1 0 F CCF DP ID c OOO k EI endstream endobj 1250 0 obj stream 0 0 0 2 43 63 d1 43 0 0 61 0 2 cm BI IM true W 43 H 61 BPC 1 D 1 0 F CCF DP ID c z oI _ n m _ l 5 K x 4a _ EI endstream endobj 1251 0 obj stream 0 0 0 -39 71 22 d1 71 0 0 61 0 -39 cm BI IM true W 71 H 61 BPC 1 D 1 0 F CCF DP ID G _ _ O W 0 EI endstream endobj 1252 0 obj stream 0 0 0 0 65 61 d1 65 0 0 61 0 0 cm BI IM true W 65 H 61 BPC 1 D 1 0 F CCF DP ID nJ 4S o g EI endstream endobj 1253 0 obj stream 0 0 0 0 64 61 d1 64 0 0 61 0 0 cm BI IM true W 64 H 61 BPC 1 D 1 0 F CCF DP ID p xXm K l D O z z xI z EI endstream endobj 1254 0 obj stream 0 0 0 4 32 61 d1 32 0 0 57 0 4 cm BI IM true W 32 H 57 BPC 1 D 1 0 F CCF DP ID X MW k EI endstream endobj 1255 0 obj stream 0 0 0 4 39 63 d1 39 0 0 59 0 4 cm BI IM true W 39 H 59 BPC 1 D 1 0 F CCF DP ID p k il0K 0Zz N M k _ 0 C EI endstream endobj 1256 0 obj stream 0 0 0 0 57 64 d1 57 0 0 64 0 0 cm BI IM true W 57 H 64 BPC 1 D 1 0 F CCF DP ID MV o o 7 w EI endstream endobj 1257 0 obj stream 0 0 0 36 84 39 d1 84 0 0 3 0 36 cm BI IM true W 84 H 3 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1258 0 obj stream 0 0 0 0 27 10 d1 27 0 0 10 0 0 cm BI IM true W 27 H 10 BPC 1 D 1 0 F CCF DP ID h EI endstream endobj 1259 0 obj endobj 1264 0 obj stream 0 0 0 -6 36 84 d1 36 0 0 90 0 -6 cm BI IM true W 36 H 90 BPC 1 D 1 0 F CCF DP ID 7 o EI endstream endobj 1265 0 obj stream 0 0 0 -3 62 79 d1 62 0 0 82 0 -3 cm BI IM true W 62 H 82 BPC 1 D 1 0 F CCF DP ID XA e 6 ' f 0p F P 5o - J O h 0 K m- 0 h- h0Xb 2 EI endstream endobj 1266 0 obj stream 0 0 0 -4 19 12 d1 19 0 0 16 0 -4 cm BI IM true W 19 H 16 BPC 1 D 1 0 F CCF DP ID lW E EI endstream endobj 1267 0 obj stream 0 0 0 6 46 63 d1 46 0 0 57 0 6 cm BI IM true W 46 H 57 BPC 1 D 1 0 F CCF DP ID A8 U 4 EI endstream endobj 1268 0 obj stream 0 0 0 4 30 82 d1 30 0 0 78 0 4 cm BI IM true W 30 H 78 BPC 1 D 1 0 F CCF DP ID g D _ EI endstream endobj 1269 0 obj stream 0 0 0 6 44 61 d1 44 0 0 55 0 6 cm BI IM true W 44 H 55 BPC 1 D 1 0 F CCF DP ID Jd 3 ' - 5I EI endstream endobj 1270 0 obj stream 0 0 0 6 35 61 d1 35 0 0 55 0 6 cm BI IM true W 35 H 55 BPC 1 D 1 0 F CCF DP ID EI endstream endobj 1271 0 obj stream 0 0 0 22 42 61 d1 42 0 0 39 0 22 cm BI IM true W 42 H 39 BPC 1 D 1 0 F CCF DP ID vm o zz _ F _ EI endstream endobj 1272 0 obj stream 0 0 0 6 39 61 d1 39 0 0 55 0 6 cm BI IM true W 39 H 55 BPC 1 D 1 0 F CCF DP ID k o l 0 EI endstream endobj 1273 0 obj stream 0 0 0 6 37 63 d1 37 0 0 57 0 6 cm BI IM true W 37 H 57 BPC 1 D 1 0 F CCF DP ID o_ x0 _ p j EI endstream endobj 1274 0 obj stream 0 0 0 0 67 61 d1 67 0 0 61 0 0 cm BI IM true W 67 H 61 BPC 1 D 1 0 F CCF DP ID ' ' 7 _ o C zM Pza EI endstream endobj 1275 0 obj stream 0 0 0 3 24 16 d1 24 0 0 13 0 3 cm BI IM true W 24 H 13 BPC 1 D 1 0 F CCF DP ID K EI endstream endobj 1276 0 obj endobj 1281 0 obj stream 0 0 0 0 33 65 d1 33 0 0 65 0 0 cm BI IM true W 33 H 65 BPC 1 D 1 0 F CCF DP ID xG o o K xk EI endstream endobj 1282 0 obj stream 0 0 0 -4 10 61 d1 10 0 0 65 0 -4 cm BI IM true W 10 H 65 BPC 1 D 1 0 F CCF DP ID Zq MR ' 5Kj EI endstream endobj 1283 0 obj stream 0 0 0 1 46 63 d1 46 0 0 62 0 1 cm BI IM true W 46 H 62 BPC 1 D 1 0 F CCF DP ID c O EI endstream endobj 1284 0 obj endobj 1280 0 obj FontBBox 0 -1 46 69 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 5 Widths 0 0 0 46 0 53 endobj 1263 0 obj FontBBox 0 -22 67 96 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 22 Widths 0 84 47 0 57 0 61 43 0 0 50 0 44 0 48 0 0 33 0 0 87 0 31 endobj 1223 0 obj FontBBox 0 -36 84 116 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 68 Widths 0 48 0 41 0 62 0 33 0 45 0 43 0 105 0 89 0 46 47 0 0 44 0 0 0 0 58 50 0 0 54 0 51 63 83 91 40 0 0 0 49 0 0 0 0 0 0 0 80 82 34 106 0 85 29 56 0 0 55 0 42 67 0 68 0 66 0 77 76 endobj 1155 0 obj FontBBox 0 -51 92 103 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 117 Widths 0 57 0 68 0 69 59 0 84 54 0 72 35 61 0 96 0 50 0 29 0 89 0 37 0 85 0 90 0 45 0 46 44 0 62 0 100 0 0 47 0 82 0 48 0 0 0 42 77 0 0 32 0 39 74 112 0 63 0 93 40 0 24 0 65 0 0 0 0 0 0 0 36 0 58 43 0 0 0 41 0 51 0 0 0 0 49 0 0 0 64 0 56 92 0 67 52 0 0 115 0 0 60 91 94 0 70 0 0 38 0 103 0 0 34 0 0 53 endobj 1149 0 obj FontBBox 0 -19 66 33 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 1 Widths 0 62 endobj 1143 0 obj FontBBox 0 -1 40 69 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 1 Widths 0 49 endobj 1124 0 obj FontBBox 0 -26 62 105 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 24 Widths 0 45 44 0 39 0 0 29 0 40 0 0 46 0 51 0 43 0 0 0 41 0 49 50 0 endobj 1099 0 obj FontBBox 0 -21 67 107 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 31 Widths 0 0 57 0 78 0 0 50 0 58 0 0 0 72 68 0 47 0 0 40 73 39 0 41 67 0 0 0 0 147 0 127 endobj 1089 0 obj FontBBox 0 -47 70 97 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 7 Widths 0 30 0 0 29 0 53 0 endobj 1081 0 obj FontBBox 0 0 57 90 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 3 Widths 0 0 0 0 endobj 1061 0 obj FontBBox 0 -81 62 85 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 25 Widths 0 75 0 56 0 50 0 73 0 0 41 0 0 131 45 0 74 70 0 0 0 0 51 0 93 82 endobj 1051 0 obj FontBBox 0 -48 65 70 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 8 Widths 0 56 0 0 28 0 0 44 43 endobj 1040 0 obj FontBBox 0 -55 63 68 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 10 Widths 0 50 0 0 61 0 0 46 0 32 43 endobj 1031 0 obj FontBBox 0 -43 64 73 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 10 Widths 0 85 110 0 0 55 0 79 80 56 84 endobj 1019 0 obj FontBBox 0 -45 81 76 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 14 Widths 0 0 56 0 0 112 0 83 0 47 0 46 39 80 45 endobj 1004 0 obj FontBBox 0 -19 74 76 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 20 Widths 0 0 103 0 43 0 55 0 97 101 107 54 98 0 0 0 111 0 76 0 62 endobj 994 0 obj FontBBox 0 -48 74 105 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 11 Widths 0 32 31 0 0 71 0 87 0 67 68 63 endobj 979 0 obj FontBBox 0 -21 71 61 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 13 Widths 0 43 44 0 45 0 38 0 112 0 95 50 0 47 endobj 972 0 obj FontBBox 0 -36 58 70 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 3 Widths 0 60 59 0 endobj 962 0 obj FontBBox 0 -20 80 86 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 9 Widths 0 0 0 0 113 0 36 0 98 99 endobj 952 0 obj FontBBox 0 -19 61 103 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 15 Widths 0 0 0 99 100 0 61 0 56 94 31 62 64 0 91 104 endobj 904 0 obj FontBBox 0 -48 67 88 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 92 Widths 0 41 0 58 0 53 79 75 0 40 45 0 43 0 101 0 62 0 66 0 73 0 49 0 38 0 24 0 46 0 69 0 47 0 44 0 72 34 0 33 0 42 64 0 0 0 0 67 48 0 37 32 74 0 0 50 0 91 35 51 0 28 56 63 36 0 83 0 86 0 30 80 0 54 70 60 71 0 89 0 29 0 0 0 0 0 0 0 76 96 39 0 0 endobj 854 0 obj FontBBox 0 -54 90 107 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 83 Widths 0 0 78 0 69 0 74 0 71 0 73 0 0 27 0 39 63 72 0 59 0 31 0 0 58 0 54 0 0 0 0 139 0 95 94 0 45 0 44 0 48 0 119 118 0 42 0 28 0 55 0 51 41 0 36 0 67 0 84 0 57 82 56 140 0 81 0 79 0 0 0 49 0 0 0 96 53 0 33 0 77 0 93 0 endobj 835 0 obj FontBBox 0 -77 61 92 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 28 Widths 0 0 95 0 66 0 32 0 78 0 99 68 0 100 0 51 0 0 38 0 69 0 0 74 0 36 39 37 27 endobj 809 0 obj FontBBox 0 -79 62 163 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 39 Widths 0 71 0 92 63 0 0 61 0 55 0 0 38 0 53 0 50 37 0 0 0 0 0 42 51 59 0 49 0 60 0 52 0 54 0 109 0 116 0 75 endobj 799 0 obj FontBBox 0 -26 73 76 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 8 Widths 0 117 0 60 0 59 0 26 57 endobj 784 0 obj FontBBox 0 -39 62 67 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 10 Widths 0 0 88 89 0 76 0 0 44 0 45 endobj 774 0 obj FontBBox 0 -20 105 74 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 12 Widths 0 125 0 97 0 66 0 56 65 55 0 64 63 endobj 749 0 obj FontBBox 0 -52 66 93 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 37 Widths 0 0 0 34 0 38 0 0 105 0 0 106 0 120 53 0 60 52 122 0 62 39 82 36 61 45 0 0 0 0 0 0 28 48 0 0 0 0 endobj 730 0 obj FontBBox 0 -54 64 124 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 29 Widths 0 80 0 0 51 0 44 42 49 0 60 0 68 67 83 52 0 0 105 0 57 0 0 0 64 0 48 56 0 39 endobj 716 0 obj FontBBox 0 -19 56 134 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 21 Widths 0 0 66 0 83 0 51 90 38 0 63 0 0 61 62 64 0 52 0 56 0 74 endobj 697 0 obj FontBBox 0 -51 83 89 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 34 Widths 0 89 0 59 63 0 115 60 87 61 86 62 90 0 0 45 57 0 56 0 0 0 33 0 0 84 0 55 91 0 101 100 114 53 0 endobj 686 0 obj FontBBox 0 -24 60 75 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 11 Widths 0 0 0 52 0 98 0 119 0 123 0 66 endobj 667 0 obj FontBBox 0 -26 71 134 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 33 Widths 0 51 0 47 0 80 30 0 54 0 68 0 87 0 0 33 62 85 86 0 69 0 95 0 63 0 59 0 61 82 0 89 100 88 endobj 639 0 obj FontBBox 0 -21 83 105 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 44 Widths 0 46 28 0 123 0 87 0 67 0 36 0 29 69 41 0 30 0 45 0 122 0 118 0 116 0 55 0 0 79 0 25 0 80 0 0 52 0 58 0 114 0 111 0 83 endobj 614 0 obj FontBBox 0 -40 78 103 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 45 Widths 0 86 0 0 32 0 42 0 66 0 67 0 68 0 85 0 44 0 59 0 56 61 0 60 0 79 0 51 0 33 91 43 55 37 38 45 132 62 0 89 0 0 121 0 0 90 endobj 588 0 obj FontBBox 0 -56 96 92 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 36 Widths 0 54 0 0 61 0 48 0 60 0 38 0 71 0 81 0 0 119 0 66 120 0 67 56 0 72 0 91 0 107 0 33 0 0 0 0 55 endobj 524 0 obj FontBBox 0 -33 90 151 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 122 Widths 0 0 41 0 58 0 55 0 0 52 0 31 0 100 0 0 119 0 84 0 64 130 0 63 0 49 0 65 0 50 0 43 30 111 0 47 0 77 0 110 36 86 0 122 54 80 112 76 109 0 0 53 0 29 0 28 59 38 0 90 73 0 0 114 0 81 51 96 79 71 0 57 0 134 108 82 0 48 0 67 121 91 66 70 37 0 83 0 0 0 0 46 0 0 99 56 44 42 89 0 0 0 0 61 0 0 107 72 0 78 0 88 0 0 60 85 105 0 93 0 0 68 0 endobj 504 0 obj FontBBox 0 -28 78 105 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 33 Widths 0 46 0 63 0 74 0 58 0 80 0 75 76 0 0 113 0 41 47 57 0 83 49 0 67 0 96 54 82 0 89 0 71 101 endobj 490 0 obj FontBBox 0 -21 88 105 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 15 Widths 0 51 0 36 0 116 0 57 0 50 0 58 0 65 0 53 endobj 468 0 obj FontBBox 0 -60 88 97 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 39 Widths 0 0 46 0 42 0 61 0 62 34 0 81 76 40 89 0 0 125 0 63 0 39 0 29 0 67 0 47 92 0 38 0 50 49 60 0 87 51 0 78 endobj 427 0 obj FontBBox 0 -60 83 95 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 63 Widths 0 0 0 57 38 0 111 0 84 0 59 0 50 0 0 56 0 46 0 0 63 0 66 0 82 0 105 0 81 0 51 0 69 0 0 28 0 33 0 32 0 87 90 0 0 0 40 0 75 0 62 0 58 0 98 30 55 150 54 0 0 83 60 124 endobj 379 0 obj FontBBox 0 -43 99 122 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 82 Widths 0 0 43 0 0 0 53 32 0 0 0 0 0 0 0 0 52 0 0 38 0 124 0 0 42 0 34 33 143 0 0 58 0 47 0 76 0 48 0 90 84 0 0 0 80 0 55 0 64 0 0 83 60 0 75 0 56 79 74 73 69 68 54 96 37 0 46 0 93 106 77 0 39 0 40 0 57 86 36 0 97 0 101 endobj 274 0 obj FontBBox 0 -60 92 120 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 163 Widths 0 0 0 48 0 79 0 91 0 41 73 0 32 0 50 59 0 86 0 84 0 43 75 92 0 40 0 37 0 0 52 0 0 36 44 87 0 0 53 0 83 0 63 0 45 0 51 0 0 69 0 0 90 0 0 74 0 68 0 0 57 112 46 0 0 49 82 27 0 0 0 26 56 60 28 85 33 42 0 38 0 0 101 81 0 0 0 0 0 0 0 54 0 47 0 107 0 0 0 104 0 0 55 0 0 119 0 118 89 0 99 0 109 105 0 97 0 0 103 108 0 0 61 29 0 78 80 0 0 71 0 76 100 0 0 102 0 115 39 0 98 0 0 0 0 0 95 30 0 122 0 67 0 0 0 106 0 0 62 34 31 0 0 0 endobj 266 0 obj FontBBox 0 -28 50 71 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 11 Widths 0 48 0 36 0 34 0 89 70 50 0 43 endobj 9 0 obj FontBBox 0 -60 128 160 FontMatrix 1 0 0 1 0 0 FirstChar 0 LastChar 255 Widths 0 0 54 0 49 0 44 0 38 0 67 0 35 42 0 48 0 27 0 32 0 43 28 0 73 36 0 61 0 50 0 47 0 29 79 0 0 46 0 53 52 0 60 33 0 34 0 70 69 45 0 0 0 102 0 92 0 133 0 78 57 0 0 0 0 0 82 0 93 0 132 55 71 0 0 0 51 0 0 72 0 91 0 0 40 0 0 0 56 0 89 0 83 0 0 77 0 68 39 0 64 0 65 0 26 41 0 0 0 75 0 59 100 0 0 66 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 85 0 0 0 0 0 0 0 0 0 37 0 0 0 96 0 0 0 25 0 88 0 0 80 0 0 0 95 0 0 0 0 0 0 0 0 0 94 0 24 0 81 0 112 0 0 76 0 58 63 30 0 74 0 0 0 0 0 0 0 31 0 0 86 90 0 0 0 62 84 0 87 0 0 0 0 0 0 105 0 0 0 0 0 0 0 0 0 0 0 0 0 0 97 0 0 0 0 0 111 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 endobj 8 0 obj endobj 2 0 obj endobj xref 0 1285 0000000000 65535 f 0000230015 00000 n 0000496039 00000 n 0000229571 00000 n 0000230063 00000 n 0000222222 00000 n 0000000015 00000 n 0000003536 00000 n 0000494802 00000 n 0000490911 00000 n 0000230118 00000 n 0000230359 00000 n 0000230591 00000 n 0000230655 00000 n 0000230901 00000 n 0000230965 00000 n 0000231193 00000 n 0000231257 00000 n 0000231472 00000 n 0000231536 00000 n 0000231755 00000 n 0000231819 00000 n 0000232039 00000 n 0000232103 00000 n 0000232167 00000 n 0000232388 00000 n 0000232452 00000 n 0000232673 00000 n 0000232737 00000 n 0000232966 00000 n 0000233030 00000 n 0000233247 00000 n 0000233311 00000 n 0000233375 00000 n 0000233609 00000 n 0000233673 00000 n 0000233737 00000 n 0000233977 00000 n 0000234041 00000 n 0000234274 00000 n 0000234338 00000 n 0000234569 00000 n 0000234633 00000 n 0000234847 00000 n 0000234911 00000 n 0000234975 00000 n 0000235194 00000 n 0000235372 00000 n 0000235436 00000 n 0000235661 00000 n 0000235725 00000 n 0000235789 00000 n 0000236019 00000 n 0000236083 00000 n 0000236147 00000 n 0000236386 00000 n 0000236450 00000 n 0000236705 00000 n 0000236769 00000 n 0000236833 00000 n 0000236897 00000 n 0000237109 00000 n 0000237404 00000 n 0000237728 00000 n 0000237793 00000 n 0000238084 00000 n 0000238148 00000 n 0000238431 00000 n 0000238496 00000 n 0000238777 00000 n 0000238841 00000 n 0000238905 00000 n 0000239235 00000 n 0000239544 00000 n 0000239809 00000 n 0000240088 00000 n 0000240450 00000 n 0000240514 00000 n 0000240781 00000 n 0000240845 00000 n 0000241118 00000 n 0000241183 00000 n 0000241247 00000 n 0000241311 00000 n 0000241579 00000 n 0000241814 00000 n 0000242035 00000 n 0000242099 00000 n 0000242312 00000 n 0000242595 00000 n 0000242659 00000 n 0000242889 00000 n 0000242953 00000 n 0000243204 00000 n 0000243410 00000 n 0000243474 00000 n 0000243728 00000 n 0000243961 00000 n 0000244211 00000 n 0000244275 00000 n 0000244504 00000 n 0000244569 00000 n 0000244818 00000 n 0000244883 00000 n 0000245121 00000 n 0000245382 00000 n 0000245447 00000 n 0000245685 00000 n 0000245750 00000 n 0000245815 00000 n 0000246067 00000 n 0000246132 00000 n 0000246389 00000 n 0000246454 00000 n 0000246679 00000 n 0000246744 00000 n 0000246809 00000 n 0000247057 00000 n 0000247298 00000 n 0000247551 00000 n 0000247616 00000 n 0000247813 00000 n 0000247878 00000 n 0000247944 00000 n 0000248179 00000 n 0000248393 00000 n 0000248458 00000 n 0000248707 00000 n 0000248929 00000 n 0000249170 00000 n 0000249382 00000 n 0000249561 00000 n 0000249779 00000 n 0000250007 00000 n 0000250233 00000 n 0000250443 00000 n 0000250668 00000 n 0000250901 00000 n 0000251117 00000 n 0000251375 00000 n 0000251599 00000 n 0000251829 00000 n 0000252047 00000 n 0000252285 00000 n 0000252517 00000 n 0000252738 00000 n 0000252983 00000 n 0000253228 00000 n 0000253293 00000 n 0000253528 00000 n 0000253751 00000 n 0000253964 00000 n 0000254206 00000 n 0000254438 00000 n 0000254668 00000 n 0000254911 00000 n 0000255127 00000 n 0000255355 00000 n 0000255420 00000 n 0000255626 00000 n 0000255841 00000 n 0000256081 00000 n 0000256146 00000 n 0000256373 00000 n 0000256600 00000 n 0000256802 00000 n 0000256867 00000 n 0000257135 00000 n 0000257200 00000 n 0000257430 00000 n 0000257668 00000 n 0000257733 00000 n 0000257963 00000 n 0000258183 00000 n 0000258433 00000 n 0000258498 00000 n 0000258722 00000 n 0000258926 00000 n 0000259167 00000 n 0000259411 00000 n 0000259633 00000 n 0000259856 00000 n 0000260099 00000 n 0000260277 00000 n 0000260497 00000 n 0000260562 00000 n 0000260787 00000 n 0000260852 00000 n 0000261044 00000 n 0000261109 00000 n 0000261350 00000 n 0000261416 00000 n 0000261584 00000 n 0000261818 00000 n 0000261883 00000 n 0000262122 00000 n 0000262187 00000 n 0000262252 00000 n 0000262317 00000 n 0000262548 00000 n 0000262613 00000 n 0000262856 00000 n 0000263081 00000 n 0000263289 00000 n 0000263536 00000 n 0000263769 00000 n 0000264040 00000 n 0000264262 00000 n 0000264327 00000 n 0000264549 00000 n 0000264775 00000 n 0000264840 00000 n 0000264905 00000 n 0000265107 00000 n 0000265353 00000 n 0000265557 00000 n 0000265622 00000 n 0000265687 00000 n 0000265962 00000 n 0000266027 00000 n 0000266263 00000 n 0000266479 00000 n 0000266764 00000 n 0000266956 00000 n 0000267148 00000 n 0000267411 00000 n 0000267477 00000 n 0000267710 00000 n 0000267970 00000 n 0000268219 00000 n 0000268441 00000 n 0000268669 00000 n 0000268899 00000 n 0000269128 00000 n 0000269371 00000 n 0000269622 00000 n 0000269860 00000 n 0000270083 00000 n 0000270332 00000 n 0000270563 00000 n 0000270834 00000 n 0000270899 00000 n 0000271126 00000 n 0000271371 00000 n 0000271597 00000 n 0000271807 00000 n 0000272013 00000 n 0000272079 00000 n 0000272300 00000 n 0000272532 00000 n 0000272780 00000 n 0000273004 00000 n 0000273218 00000 n 0000273446 00000 n 0000273681 00000 n 0000273929 00000 n 0000274152 00000 n 0000274402 00000 n 0000274633 00000 n 0000274839 00000 n 0000275064 00000 n 0000275342 00000 n 0000275538 00000 n 0000275791 00000 n 0000275959 00000 n 0000276211 00000 n 0000490590 00000 n 0000276446 00000 n 0000276674 00000 n 0000276919 00000 n 0000277153 00000 n 0000277378 00000 n 0000277609 00000 n 0000277640 00000 n 0000488021 00000 n 0000277680 00000 n 0000222392 00000 n 0000003556 00000 n 0000007537 00000 n 0000277927 00000 n 0000278204 00000 n 0000278430 00000 n 0000278729 00000 n 0000278961 00000 n 0000279224 00000 n 0000279487 00000 n 0000279728 00000 n 0000279961 00000 n 0000280243 00000 n 0000280481 00000 n 0000280753 00000 n 0000281000 00000 n 0000281181 00000 n 0000281387 00000 n 0000281647 00000 n 0000281902 00000 n 0000282159 00000 n 0000282418 00000 n 0000282682 00000 n 0000282919 00000 n 0000283182 00000 n 0000283447 00000 n 0000283688 00000 n 0000283930 00000 n 0000284175 00000 n 0000284407 00000 n 0000284602 00000 n 0000284825 00000 n 0000285032 00000 n 0000285309 00000 n 0000285548 00000 n 0000285781 00000 n 0000286033 00000 n 0000286269 00000 n 0000286494 00000 n 0000286743 00000 n 0000286989 00000 n 0000287271 00000 n 0000287489 00000 n 0000287555 00000 n 0000287735 00000 n 0000287931 00000 n 0000288148 00000 n 0000288369 00000 n 0000288591 00000 n 0000288823 00000 n 0000289027 00000 n 0000289263 00000 n 0000289503 00000 n 0000289569 00000 n 0000289766 00000 n 0000289973 00000 n 0000290157 00000 n 0000290223 00000 n 0000290465 00000 n 0000290707 00000 n 0000290903 00000 n 0000291138 00000 n 0000291204 00000 n 0000291401 00000 n 0000291467 00000 n 0000291701 00000 n 0000291766 00000 n 0000291980 00000 n 0000292046 00000 n 0000292262 00000 n 0000292492 00000 n 0000292706 00000 n 0000292772 00000 n 0000292838 00000 n 0000293119 00000 n 0000293330 00000 n 0000293579 00000 n 0000293858 00000 n 0000294118 00000 n 0000294344 00000 n 0000294573 00000 n 0000294805 00000 n 0000295000 00000 n 0000295066 00000 n 0000295298 00000 n 0000295363 00000 n 0000295675 00000 n 0000295917 00000 n 0000296166 00000 n 0000296379 00000 n 0000296592 00000 n 0000296837 00000 n 0000296903 00000 n 0000297123 00000 n 0000297335 00000 n 0000297565 00000 n 0000297738 00000 n 0000297804 00000 n 0000298078 00000 n 0000298311 00000 n 0000298544 00000 n 0000298814 00000 n 0000298998 00000 n 0000486682 00000 n 0000299048 00000 n 0000222547 00000 n 0000007559 00000 n 0000012769 00000 n 0000299286 00000 n 0000299548 00000 n 0000299810 00000 n 0000300043 00000 n 0000300253 00000 n 0000300501 00000 n 0000300700 00000 n 0000300909 00000 n 0000301098 00000 n 0000301320 00000 n 0000301537 00000 n 0000301768 00000 n 0000301940 00000 n 0000302176 00000 n 0000302408 00000 n 0000302618 00000 n 0000302684 00000 n 0000302899 00000 n 0000303091 00000 n 0000303290 00000 n 0000303356 00000 n 0000303600 00000 n 0000303864 00000 n 0000304050 00000 n 0000304292 00000 n 0000304460 00000 n 0000304653 00000 n 0000304916 00000 n 0000305138 00000 n 0000305370 00000 n 0000305599 00000 n 0000305871 00000 n 0000306106 00000 n 0000306347 00000 n 0000306586 00000 n 0000306790 00000 n 0000307003 00000 n 0000307300 00000 n 0000307501 00000 n 0000307725 00000 n 0000307962 00000 n 0000308206 00000 n 0000308458 00000 n 0000485613 00000 n 0000308518 00000 n 0000222702 00000 n 0000012791 00000 n 0000017690 00000 n 0000308754 00000 n 0000308978 00000 n 0000309162 00000 n 0000309423 00000 n 0000309670 00000 n 0000309906 00000 n 0000310179 00000 n 0000310440 00000 n 0000310671 00000 n 0000310909 00000 n 0000311160 00000 n 0000311413 00000 n 0000311677 00000 n 0000311928 00000 n 0000312204 00000 n 0000312415 00000 n 0000312645 00000 n 0000312903 00000 n 0000313152 00000 n 0000313374 00000 n 0000313654 00000 n 0000313921 00000 n 0000314165 00000 n 0000314465 00000 n 0000314636 00000 n 0000314882 00000 n 0000315133 00000 n 0000315378 00000 n 0000315559 00000 n 0000315805 00000 n 0000315871 00000 n 0000316103 00000 n 0000316368 00000 n 0000222857 00000 n 0000017712 00000 n 0000022350 00000 n 0000484903 00000 n 0000316438 00000 n 0000316670 00000 n 0000316945 00000 n 0000317196 00000 n 0000317392 00000 n 0000317604 00000 n 0000317886 00000 n 0000318162 00000 n 0000318228 00000 n 0000318459 00000 n 0000318687 00000 n 0000318931 00000 n 0000319173 00000 n 0000319430 00000 n 0000319690 00000 n 0000319934 00000 n 0000320190 00000 n 0000320428 00000 n 0000223012 00000 n 0000022372 00000 n 0000027242 00000 n 0000484522 00000 n 0000320508 00000 n 0000320756 00000 n 0000321026 00000 n 0000321304 00000 n 0000321370 00000 n 0000321651 00000 n 0000321919 00000 n 0000322137 00000 n 0000322383 00000 n 0000322688 00000 n 0000223167 00000 n 0000027264 00000 n 0000032919 00000 n 0000483879 00000 n 0000322778 00000 n 0000323017 00000 n 0000323296 00000 n 0000323542 00000 n 0000323809 00000 n 0000324077 00000 n 0000324321 00000 n 0000324569 00000 n 0000324820 00000 n 0000324886 00000 n 0000325132 00000 n 0000325410 00000 n 0000325654 00000 n 0000325942 00000 n 0000326204 00000 n 0000326450 00000 n 0000223322 00000 n 0000032941 00000 n 0000035815 00000 n 0000481928 00000 n 0000326550 00000 n 0000326777 00000 n 0000327015 00000 n 0000327229 00000 n 0000327450 00000 n 0000327684 00000 n 0000327907 00000 n 0000328164 00000 n 0000328355 00000 n 0000328538 00000 n 0000328782 00000 n 0000328965 00000 n 0000329143 00000 n 0000329209 00000 n 0000329448 00000 n 0000329665 00000 n 0000329863 00000 n 0000330077 00000 n 0000330325 00000 n 0000330567 00000 n 0000330752 00000 n 0000330971 00000 n 0000331037 00000 n 0000331215 00000 n 0000331430 00000 n 0000331635 00000 n 0000331845 00000 n 0000332090 00000 n 0000332299 00000 n 0000332516 00000 n 0000332782 00000 n 0000332848 00000 n 0000333062 00000 n 0000333297 00000 n 0000333564 00000 n 0000333630 00000 n 0000333850 00000 n 0000334051 00000 n 0000334117 00000 n 0000334369 00000 n 0000334577 00000 n 0000334806 00000 n 0000335022 00000 n 0000335245 00000 n 0000335471 00000 n 0000335719 00000 n 0000335940 00000 n 0000336132 00000 n 0000336410 00000 n 0000336611 00000 n 0000336860 00000 n 0000337059 00000 n 0000337297 00000 n 0000337535 00000 n 0000337763 00000 n 0000338002 00000 n 0000338262 00000 n 0000338484 00000 n 0000338698 00000 n 0000338941 00000 n 0000223477 00000 n 0000035837 00000 n 0000041482 00000 n 0000481250 00000 n 0000339001 00000 n 0000339229 00000 n 0000339462 00000 n 0000339690 00000 n 0000339879 00000 n 0000340131 00000 n 0000340350 00000 n 0000340594 00000 n 0000340828 00000 n 0000341046 00000 n 0000341259 00000 n 0000341487 00000 n 0000341553 00000 n 0000341806 00000 n 0000342065 00000 n 0000342323 00000 n 0000342593 00000 n 0000342875 00000 n 0000343114 00000 n 0000343309 00000 n 0000343548 00000 n 0000343802 00000 n 0000223632 00000 n 0000041504 00000 n 0000045805 00000 n 0000480441 00000 n 0000343902 00000 n 0000344083 00000 n 0000344324 00000 n 0000344583 00000 n 0000344823 00000 n 0000345040 00000 n 0000345243 00000 n 0000345483 00000 n 0000345737 00000 n 0000345953 00000 n 0000346197 00000 n 0000346445 00000 n 0000346666 00000 n 0000346887 00000 n 0000347122 00000 n 0000347390 00000 n 0000347626 00000 n 0000347863 00000 n 0000348139 00000 n 0000348395 00000 n 0000348638 00000 n 0000223787 00000 n 0000045827 00000 n 0000050259 00000 n 0000479639 00000 n 0000348758 00000 n 0000348982 00000 n 0000349255 00000 n 0000349321 00000 n 0000349552 00000 n 0000349795 00000 n 0000350034 00000 n 0000350275 00000 n 0000350484 00000 n 0000350726 00000 n 0000350950 00000 n 0000351172 00000 n 0000351395 00000 n 0000351633 00000 n 0000351909 00000 n 0000352178 00000 n 0000352405 00000 n 0000352639 00000 n 0000352904 00000 n 0000353147 00000 n 0000353354 00000 n 0000353597 00000 n 0000353862 00000 n 0000354103 00000 n 0000223942 00000 n 0000050281 00000 n 0000054874 00000 n 0000478996 00000 n 0000354223 00000 n 0000354459 00000 n 0000354699 00000 n 0000354934 00000 n 0000355183 00000 n 0000355427 00000 n 0000355645 00000 n 0000355886 00000 n 0000356127 00000 n 0000356328 00000 n 0000356550 00000 n 0000356822 00000 n 0000357070 00000 n 0000357316 00000 n 0000357582 00000 n 0000224097 00000 n 0000054896 00000 n 0000059745 00000 n 0000478681 00000 n 0000357722 00000 n 0000357963 00000 n 0000358191 00000 n 0000358442 00000 n 0000358676 00000 n 0000358941 00000 n 0000359174 00000 n 0000224252 00000 n 0000059767 00000 n 0000064116 00000 n 0000478023 00000 n 0000359294 00000 n 0000359522 00000 n 0000359751 00000 n 0000360003 00000 n 0000360207 00000 n 0000360446 00000 n 0000360682 00000 n 0000360909 00000 n 0000361125 00000 n 0000361317 00000 n 0000361549 00000 n 0000361799 00000 n 0000362045 00000 n 0000362294 00000 n 0000362489 00000 n 0000224407 00000 n 0000064138 00000 n 0000069362 00000 n 0000477566 00000 n 0000362629 00000 n 0000362889 00000 n 0000363075 00000 n 0000363271 00000 n 0000363515 00000 n 0000363750 00000 n 0000363972 00000 n 0000364212 00000 n 0000364474 00000 n 0000364738 00000 n 0000224562 00000 n 0000069384 00000 n 0000074130 00000 n 0000476986 00000 n 0000364888 00000 n 0000365141 00000 n 0000365403 00000 n 0000365604 00000 n 0000365775 00000 n 0000366000 00000 n 0000366202 00000 n 0000366452 00000 n 0000366706 00000 n 0000366936 00000 n 0000367159 00000 n 0000367356 00000 n 0000367600 00000 n 0000367825 00000 n 0000368070 00000 n 0000224717 00000 n 0000074152 00000 n 0000079291 00000 n 0000476303 00000 n 0000368200 00000 n 0000368428 00000 n 0000368664 00000 n 0000368883 00000 n 0000369117 00000 n 0000369352 00000 n 0000369601 00000 n 0000369819 00000 n 0000370001 00000 n 0000370213 00000 n 0000370499 00000 n 0000370720 00000 n 0000370932 00000 n 0000371128 00000 n 0000371314 00000 n 0000371532 00000 n 0000371735 00000 n 0000371950 00000 n 0000372173 00000 n 0000372387 00000 n 0000372572 00000 n 0000224872 00000 n 0000079313 00000 n 0000083962 00000 n 0000475961 00000 n 0000372732 00000 n 0000373027 00000 n 0000373292 00000 n 0000373576 00000 n 0000373773 00000 n 0000374001 00000 n 0000225027 00000 n 0000083984 00000 n 0000088786 00000 n 0000475652 00000 n 0000374151 00000 n 0000374428 00000 n 0000374620 00000 n 0000374845 00000 n 0000375055 00000 n 0000375273 00000 n 0000375507 00000 n 0000225182 00000 n 0000088808 00000 n 0000093509 00000 n 0000375677 00000 n 0000225337 00000 n 0000093531 00000 n 0000098585 00000 n 0000475370 00000 n 0000375817 00000 n 0000376074 00000 n 0000376140 00000 n 0000376391 00000 n 0000376621 00000 n 0000376837 00000 n 0000225492 00000 n 0000098607 00000 n 0000102928 00000 n 0000474649 00000 n 0000377027 00000 n 0000377290 00000 n 0000377522 00000 n 0000377769 00000 n 0000377940 00000 n 0000378192 00000 n 0000378432 00000 n 0000378648 00000 n 0000378876 00000 n 0000379116 00000 n 0000379331 00000 n 0000379514 00000 n 0000379790 00000 n 0000380005 00000 n 0000380234 00000 n 0000380476 00000 n 0000380691 00000 n 0000380928 00000 n 0000381150 00000 n 0000381390 00000 n 0000381624 00000 n 0000381848 00000 n 0000225647 00000 n 0000102950 00000 n 0000108167 00000 n 0000474082 00000 n 0000382018 00000 n 0000382249 00000 n 0000382450 00000 n 0000382649 00000 n 0000382871 00000 n 0000383146 00000 n 0000383384 00000 n 0000383634 00000 n 0000383834 00000 n 0000384055 00000 n 0000384277 00000 n 0000384468 00000 n 0000384665 00000 n 0000384855 00000 n 0000385043 00000 n 0000225802 00000 n 0000108189 00000 n 0000112352 00000 n 0000472732 00000 n 0000385213 00000 n 0000385437 00000 n 0000385676 00000 n 0000385913 00000 n 0000386164 00000 n 0000386384 00000 n 0000386612 00000 n 0000386806 00000 n 0000387034 00000 n 0000387262 00000 n 0000387474 00000 n 0000387654 00000 n 0000387901 00000 n 0000388143 00000 n 0000388356 00000 n 0000388624 00000 n 0000388864 00000 n 0000389062 00000 n 0000389346 00000 n 0000389412 00000 n 0000389619 00000 n 0000389820 00000 n 0000390046 00000 n 0000390219 00000 n 0000390434 00000 n 0000390633 00000 n 0000390871 00000 n 0000391083 00000 n 0000391295 00000 n 0000391526 00000 n 0000391743 00000 n 0000391965 00000 n 0000392216 00000 n 0000392282 00000 n 0000392519 00000 n 0000392731 00000 n 0000392936 00000 n 0000393186 00000 n 0000393448 00000 n 0000393699 00000 n 0000393974 00000 n 0000394263 00000 n 0000394513 00000 n 0000394749 00000 n 0000395014 00000 n 0000395250 00000 n 0000225957 00000 n 0000112374 00000 n 0000117704 00000 n 0000471258 00000 n 0000395390 00000 n 0000395640 00000 n 0000395882 00000 n 0000396127 00000 n 0000396368 00000 n 0000396598 00000 n 0000396852 00000 n 0000397111 00000 n 0000397346 00000 n 0000397579 00000 n 0000397801 00000 n 0000398001 00000 n 0000398212 00000 n 0000398468 00000 n 0000398700 00000 n 0000398923 00000 n 0000399163 00000 n 0000399374 00000 n 0000399593 00000 n 0000399818 00000 n 0000400037 00000 n 0000400241 00000 n 0000400432 00000 n 0000400671 00000 n 0000400886 00000 n 0000401085 00000 n 0000401303 00000 n 0000401549 00000 n 0000401765 00000 n 0000401998 00000 n 0000402228 00000 n 0000402462 00000 n 0000402696 00000 n 0000402922 00000 n 0000403181 00000 n 0000403384 00000 n 0000403625 00000 n 0000403866 00000 n 0000404067 00000 n 0000404290 00000 n 0000404525 00000 n 0000404807 00000 n 0000405032 00000 n 0000405259 00000 n 0000226112 00000 n 0000117726 00000 n 0000122794 00000 n 0000470883 00000 n 0000405449 00000 n 0000405672 00000 n 0000405885 00000 n 0000406101 00000 n 0000406348 00000 n 0000406596 00000 n 0000226267 00000 n 0000122816 00000 n 0000127869 00000 n 0000470598 00000 n 0000406806 00000 n 0000407077 00000 n 0000407339 00000 n 0000407601 00000 n 0000407842 00000 n 0000408028 00000 n 0000226422 00000 n 0000127891 00000 n 0000132149 00000 n 0000470383 00000 n 0000408249 00000 n 0000408507 00000 n 0000408749 00000 n 0000226577 00000 n 0000132171 00000 n 0000137324 00000 n 0000470031 00000 n 0000408920 00000 n 0000409145 00000 n 0000409403 00000 n 0000409661 00000 n 0000409907 00000 n 0000410146 00000 n 0000410379 00000 n 0000226732 00000 n 0000137346 00000 n 0000142496 00000 n 0000410631 00000 n 0000226887 00000 n 0000142518 00000 n 0000146838 00000 n 0000469705 00000 n 0000410782 00000 n 0000411043 00000 n 0000411302 00000 n 0000411559 00000 n 0000411810 00000 n 0000412006 00000 n 0000227043 00000 n 0000146860 00000 n 0000151138 00000 n 0000469235 00000 n 0000412158 00000 n 0000412368 00000 n 0000412618 00000 n 0000412815 00000 n 0000413058 00000 n 0000413260 00000 n 0000413495 00000 n 0000413757 00000 n 0000414006 00000 n 0000414237 00000 n 0000414474 00000 n 0000227201 00000 n 0000151161 00000 n 0000156045 00000 n 0000468859 00000 n 0000414648 00000 n 0000414855 00000 n 0000415082 00000 n 0000415345 00000 n 0000415597 00000 n 0000415869 00000 n 0000416141 00000 n 0000416374 00000 n 0000227359 00000 n 0000156068 00000 n 0000160052 00000 n 0000468542 00000 n 0000416611 00000 n 0000416786 00000 n 0000417038 00000 n 0000417263 00000 n 0000417488 00000 n 0000227517 00000 n 0000160075 00000 n 0000165082 00000 n 0000468228 00000 n 0000417656 00000 n 0000417910 00000 n 0000418168 00000 n 0000418420 00000 n 0000418650 00000 n 0000418857 00000 n 0000419098 00000 n 0000227675 00000 n 0000165105 00000 n 0000170116 00000 n 0000467943 00000 n 0000419339 00000 n 0000419579 00000 n 0000419763 00000 n 0000419969 00000 n 0000420218 00000 n 0000420468 00000 n 0000227833 00000 n 0000170139 00000 n 0000174740 00000 n 0000467405 00000 n 0000420748 00000 n 0000420994 00000 n 0000421224 00000 n 0000421443 00000 n 0000421661 00000 n 0000421901 00000 n 0000422128 00000 n 0000422337 00000 n 0000422598 00000 n 0000422665 00000 n 0000422875 00000 n 0000423106 00000 n 0000423317 00000 n 0000423512 00000 n 0000423750 00000 n 0000423944 00000 n 0000227991 00000 n 0000174763 00000 n 0000179318 00000 n 0000467200 00000 n 0000424192 00000 n 0000424439 00000 n 0000424688 00000 n 0000424865 00000 n 0000228149 00000 n 0000179341 00000 n 0000183621 00000 n 0000466927 00000 n 0000425086 00000 n 0000425264 00000 n 0000425485 00000 n 0000425709 00000 n 0000425934 00000 n 0000426164 00000 n 0000228307 00000 n 0000183644 00000 n 0000188360 00000 n 0000466296 00000 n 0000426429 00000 n 0000426653 00000 n 0000426886 00000 n 0000427079 00000 n 0000427309 00000 n 0000427506 00000 n 0000427752 00000 n 0000427985 00000 n 0000428211 00000 n 0000428418 00000 n 0000428650 00000 n 0000428822 00000 n 0000429022 00000 n 0000429252 00000 n 0000429440 00000 n 0000429690 00000 n 0000429935 00000 n 0000430142 00000 n 0000430209 00000 n 0000430415 00000 n 0000430482 00000 n 0000228465 00000 n 0000188383 00000 n 0000192057 00000 n 0000465775 00000 n 0000430745 00000 n 0000430983 00000 n 0000431230 00000 n 0000431473 00000 n 0000431690 00000 n 0000431933 00000 n 0000432143 00000 n 0000432360 00000 n 0000432575 00000 n 0000432800 00000 n 0000433019 00000 n 0000433254 00000 n 0000433448 00000 n 0000433646 00000 n 0000433859 00000 n 0000228623 00000 n 0000192080 00000 n 0000196945 00000 n 0000465586 00000 n 0000434026 00000 n 0000434245 00000 n 0000228781 00000 n 0000196968 00000 n 0000201802 00000 n 0000465395 00000 n 0000434488 00000 n 0000434751 00000 n 0000228939 00000 n 0000201825 00000 n 0000207298 00000 n 0000463479 00000 n 0000434885 00000 n 0000435184 00000 n 0000435413 00000 n 0000435648 00000 n 0000435921 00000 n 0000436135 00000 n 0000436411 00000 n 0000436591 00000 n 0000436813 00000 n 0000437097 00000 n 0000437358 00000 n 0000437626 00000 n 0000437897 00000 n 0000438092 00000 n 0000438342 00000 n 0000438596 00000 n 0000438853 00000 n 0000439084 00000 n 0000439342 00000 n 0000439603 00000 n 0000439859 00000 n 0000440122 00000 n 0000440291 00000 n 0000440487 00000 n 0000440743 00000 n 0000440987 00000 n 0000441156 00000 n 0000441328 00000 n 0000441524 00000 n 0000441775 00000 n 0000441999 00000 n 0000442215 00000 n 0000442453 00000 n 0000442649 00000 n 0000442875 00000 n 0000443102 00000 n 0000443283 00000 n 0000443503 00000 n 0000443737 00000 n 0000443967 00000 n 0000444169 00000 n 0000444402 00000 n 0000444625 00000 n 0000444837 00000 n 0000445030 00000 n 0000445246 00000 n 0000445510 00000 n 0000445751 00000 n 0000445968 00000 n 0000446174 00000 n 0000446418 00000 n 0000446686 00000 n 0000446932 00000 n 0000447172 00000 n 0000447423 00000 n 0000447592 00000 n 0000447856 00000 n 0000448064 00000 n 0000448302 00000 n 0000448545 00000 n 0000448777 00000 n 0000449000 00000 n 0000449233 00000 n 0000449451 00000 n 0000229097 00000 n 0000207321 00000 n 0000213540 00000 n 0000462307 00000 n 0000449667 00000 n 0000449906 00000 n 0000450162 00000 n 0000450351 00000 n 0000450567 00000 n 0000450804 00000 n 0000450990 00000 n 0000451224 00000 n 0000451417 00000 n 0000451652 00000 n 0000451826 00000 n 0000452058 00000 n 0000452302 00000 n 0000452534 00000 n 0000452749 00000 n 0000452940 00000 n 0000453207 00000 n 0000453464 00000 n 0000453693 00000 n 0000453919 00000 n 0000454139 00000 n 0000454375 00000 n 0000454627 00000 n 0000454835 00000 n 0000455052 00000 n 0000455299 00000 n 0000455537 00000 n 0000455795 00000 n 0000456058 00000 n 0000456308 00000 n 0000456569 00000 n 0000456777 00000 n 0000457034 00000 n 0000457281 00000 n 0000457452 00000 n 0000457638 00000 n 0000229255 00000 n 0000213563 00000 n 0000219478 00000 n 0000461816 00000 n 0000457814 00000 n 0000458050 00000 n 0000458348 00000 n 0000458543 00000 n 0000458774 00000 n 0000458994 00000 n 0000459218 00000 n 0000459420 00000 n 0000459648 00000 n 0000459869 00000 n 0000460099 00000 n 0000460340 00000 n 0000460531 00000 n 0000229413 00000 n 0000219501 00000 n 0000222199 00000 n 0000461584 00000 n 0000460709 00000 n 0000460955 00000 n 0000461161 00000 n 0000461384 00000 n trailer startxref 496089 EOF"),
('An AI Never Forgets (Until You Try to Teach It Something New)', "Sections Machines Discoveries Space Futures Gaming Earth Videos en de es nl pt VICE Channels Share Tweet Motherboard Motherboard Watch Sections Machines Discoveries Space Futures Gaming Earth Latest Videos Documentaries Interviews Machines Discoveries Space Futures Gaming Earth Follow Newsletter Image Flickr Tim Green AI Never Forgets Try Teach Something New Written Jordan Pearson Staff Writer Canada April 2 2015 01 09 PM EST famous techies blaring warning siren digital beings one day enslave us human brain still outmatches even complex computers One reason brain-mimicking neural networks remember things like human new research getting closer long-standing problem artificial neural networks virtual simulations brain neurons design system learn also remember learned tries something new neural networks process input make connections digital neurons output solution comes time learn something else neural network reconfigure connections effectively overwriting already learned called catastrophic forgetting puts real damper artificial intelligence able respond changing real-world situations Earlier solutions problem involved tricks like plugging neural network external memory store everything learned network learn remember Since artificial neural networks inspired biology made sense international team researchers based France Norway US look animal brain solution catastrophic forgetting modularity idea animal brains composed many tight clusters modules neurons loosely connect clusters splitting neural network modules could learn dividing resources Screengrab YoutubeIn paper published today PLoS Computational Biology researchers describe applied principles animal evolution modern theories memory learning neural nets order produce modularity virtual brain first bio-inspired idea memory human brain thought scientists distributed central memory bank recall information first task researchers reproduce neural networks turning certain neurons processing one task turning processing another segmenting network modules second bio-inspired idea cost building connections brain time energy example building costs connections neural networks researchers forced efficient number nodes used process input thereby encouraging aforementioned segmenting design network turn mess entangled nodes would cost much Third researchers added dedicated reward punishment nodes made sure neural network learned something output lined reward signal reward encourages learning age-old principle human animal psychology Finally let networks evolve change learning complete two different tasks letting three design principles guide eventual organization end researchers found segmentation pressure reduce connections resulted highly modular networks learn something learn something else remember first thing could well step forward neural networks evolve learn new things crucial step forward artificial intelligence adapt real world computer impressive probably perform process dozens times every day whenever learn something new ain easy digital brain Topics artificial intelligence Artificial Neural Networks neural networks brain memory Comment Share Share facebook Share twitter Google plus Tumblr Reddit Stumbleupon Recommended Might Intelligent Machines One Day Convince Us It's Time Die Internet's Collective Human Intelligence Could Outsmart AI Google Stanford Built Similar Neural Networks Without Knowing Google Knows House Number Superintelligent AI Ignore Humans Instead Destroying Us Elon Musk Larry Page World's Weirdest Friendship Connect Motherboard Popular Superintelligent AI Ignore Humans Instead Destroying Us Inflatable Plane Would Float Like Leaf Venus Atmosphere Porn Watching Six Men Spent 520 Days Locked Room See Could Live Mars Comments Please enable JavaScript view comments powered Disqus comments powered Disqus 2015 Vice Media LLC Motherboard Motherboard Contact Privacy Policy Terms Use"),
('Learning computer science on my own as a hobby', "jump contentmy subredditsannouncementsArtAskRedditaskscienceawwblogbookscreepydataisbeautifulDIYDocumentariesEarthPornexplainlikeimfiveFitnessfoodfunnyFuturologygadgetsgamingGetMotivatedgifshistoryIAmAInternetIsBeautifulJokesLifeProTipslistentothismildlyinterestingmoviesMusicnewsnosleepnottheonionOldSchoolCoolpersonalfinancephilosophyphotoshopbattlespicsscienceShowerthoughtsspacesportstelevisiontifutodayilearnedTwoXChromosomesUpliftingNewsvideosworldnewsWritingPromptsedit subscriptionsfront-all-random gadgets-sports-gaming-pics-worldnews-videos-AskReddit-aww-Music-funny-news-movies-books-history-food-philosophy-television-Jokes-Art-DIY-space-Documentaries-Fitness-askscience-nottheonion-todayilearned-personalfinance-gifs-listentothis-IAmA-TwoXChromosomes-creepy-nosleep-GetMotivated-WritingPrompts-LifeProTips-EarthPorn-explainlikeimfive-Showerthoughts-Futurology-photoshopbattles-mildlyinteresting-dataisbeautiful-tifu-OldSchoolCool-UpliftingNews-InternetIsBeautiful-sciencemore UofTcommentsrelatedother discussions 1 want join sign create account seconds Englishlimit search r UofTuse following search parameters narrow results subreddit subredditfind submissions subreddit author usernamefind submissions username site example comfind submissions example com url textsearch text urlselftext textsearch text self post contentsself yes self include exclude self postsnsfw yes nsfw include exclude results marked NSFWe g subreddit aww site imgur com dogsee search faq details advanced search author subreddit post submitted 04 Apr 20155 points 70 upvoted shortlink remember mereset passwordloginSubmit new linkSubmit new text postUofTsubscribeunsubscribe5 485 readers 29 users nowAll things pertaining social academic cultural goings-on University Toronto question please quick search see answered check FAQ question may deleted otherwise April 2015 Arts Science Exam Schedule Reddit UofT Facebook Page Reddit UofT Facebook Group Related Subreddits r UTSC - UTSC subreddit r DCS_UofT - UofT Computer Science subreddit r Skule - UofT Engineering subreddit U T-run sites Mental Health Counselling Psychological Services Main Campus Map ArtSci Calendar Engineering Calendar ArtSci Important Dates 2014 ULife - Hub student life information UofT Job Board - List jobs around Toronto need login Course Selection Timetable Generation Griddy - Efficient time table generation Coursewiz - Aggregates data Calendar Timetable Anti-Calendar RateMyProfs com Arts Science Course Finder - Find interesting courses plan timetable Fill - Find courses fill specific times schedule ASSU Anti-Calendar - Reviews individual courses Book Trading Toronto University Student Book Exchange - Buy sell used textbooks relatively low prices Bookwiz - Buy sell used textbooks fellow U students Torbok - Book trading GTA Class 2019 Facebook Group - New students look Facebook group meet peers Askastudent Blog - U student blogger answers students' questions properly email prof - quick primer tips email professors Comp Sci Student Union Wiki - wiki run CSSU provide people information academic social aspects Department Computer Science created deleted community 5 yearsmessage moderatorsMODERATORSskookybirdSt GeorgetaminatorPsych Cog SciChristmas_CatPCJ PSYCHGreyAgencySt George - Computer ScienceHumanunicornrelationUTSC Journalism Media FriendshipFASTFORCEabout moderation team discussions r UofT X4 points 13 comments People forgetting highschool averages 2 points 2 comments iClickersDoes Varsity Centre allow student drop-in gives CSC265 taken STA247 corequisite CSC263 can't 23 points 5 comments Toronto Police investigating PUA guy guy tried pick UofT student2 points 2 comments Admission Question2 points 5 comments Transferring Rotman 2 points 10 comments Computer Science UTM Ryerson 2 points 5 comments go UTSC res UTSG 1 points 1 comment U Life Sciences worth 456Learning computer science hobby self UofT submitted 1 month ago Alex_UofTWhen high school really liked programming learned C C Java technologies old times like COM eventually become interested math I'm getting PhD math thesis almost ready waiting postdoc offers thinking would don't get postdocs realize programming still interesting background weak want change say mathematician learn aspects computer science easily never say actual path I'm trying find books give conceptual background I'm also interested computer stuff around works organization processors memory OS system programming nets compiler modern 3D video game works inside would recommend read want use computer science basically hobby next several years list books Aho Data Structures Algorithms Aho Ullman J Foundations Computer Science C Edition Thomas H Cormen Charles E Leiserson Ronald L Rivest Clifford Stein Introduction Algorithms 3rd ed Harris D Harris Digital Design Computer Architecture 2nd ed David Patterson John L Hennessy Computer Organization Design Tanenbaum Austin Structured computer organization Sipser M Introduction Theory Computation Nemeth E Snyder G UNIX Linux System Administration Handbook Kerrisk M Linux Programming Interface Linux UNIX System Programming Handbook Clean Code - Handbook Agile Software Craftsmanship McConnell Code Complete Bentley J Programming Pearls 2nd ed Hunt Thomas D Pragmatic Programmer Journeyman Master Aho Lam M Sethi R Ullman J Compilers Principles Techniques Tools Tanenbaum David J Wetherall Computer Networks Gregory J Game Engine Architecture Alan R Feuer C Puzzle Book Peter van der Linden Expert C Programming Seacord R Secure Coding C C would add remove list 24 commentssharecancelall 24 commentssorted besttopnewhotcontroversialoldrandomq LinooneySt George - Bioinfo Comp Bio SPE CS MAJ 10 points11 points12 points 1 month ago 1 child Books conceptual learning great nothing beats hand experience especially it's hobby P permalinksavereportgive goldreply Tadgh11 4 points5 points6 points 1 month ago 0 children I'll second want actual coding practice find project want permalinksaveparentreportgive goldreply Eeyore_ 4 points5 points6 points 1 month ago 0 children topics focused languages development practices software engineering computer science Software Engineering Computer Science Carpentry Structural Engineering focus less theory behind computation necessarily bad thing want use computers programming mathematical research don't want rely grad students entirely need skills However actually interested learning Computer Science science determining problems solvable given solutions problem optimal efficient need theory less how-to say books you've compiled won't valuable won't valuable education computer scientist developer Introduction Theory Computation Michael Sipser fantastic book dense learn lot one Introduction Algorithms Thomas H Cormen et al good foundational book learning computational complexity Computer Science study solvability problems measure efficiency solutions Without knowing problem domain want pursue advice difficult provide you're interested networks distributed computing learning graph theory useful you're interested learning graphical programming works discrete mathematics good tool belt fundamental level matrix manipulation heavily play graphics processing applications computers solving problems boundless want learn something specific field various recommendations you're going Math Ph D would imagine access university's curriculum faculty Strike conversation fellow Comp Sci Ph D student collaborate permalinksavereportgive goldreply AuthenticAccount 1 point2 points3 points 1 month ago 0 children http csundergradresources com permalinksavereportgive goldreply downwithcupeI Piss Moet Evian 1 point2 points3 points 1 month ago 0 children Less reading application advice Adversity greatest asset learning quickly efficiently Foundational knowledge vital find usually comes application phase Best luck permalinksavereportgive goldreply 74563throw 1 point2 points3 points 1 month ago 0 children really want learn computer science undergrads would suggest follow requirements major specialist deciding learn study Eg Start intro programming maybe python Later C read OS's great thing also gives required textbooks syllabus learn end period don't follow step step theory less apply-able math PHD probably maturity skip intro theory courses permalinksavereportgive goldreply sun_tzu_vs_srs 2 points3 points4 points 1 month ago 1 child Thomas H Cormen Charles E Leiserson Ronald L Rivest Clifford Stein Introduction Algorithms 3rd ed Sipser M Introduction Theory Computation work understand material you'll better understanding CS BSc grads math PhD super difficult self teach take lot time due sheer volume material non-theoretical CS stuff Patterson Hennesy's Comp Organization fine Add Tannenbaum's Modern Operating Systems OS read permalinksavereportgive goldreply pqnelson 0 points1 point2 points 1 month ago 0 children Add Tannenbaum's Modern Operating Systems OS read second Maurice J Bach's Design UNIX Operating System still quite good studying OS probably xv6 best educational UNIX permalinksaveparentreportgive goldreply BrainInAJar 3 points4 points5 points 1 month ago 2 children look like largely programming books CS books want learn CS want program latter forget books find open-source project find interesting start hacking bugs it's former forget 90 books go download textbook read couple us Reddit We're chapter 2 week catch permalinksavereportgive goldreply ice109 1 point2 points3 points 1 month ago 1 child Aho Data Structures Algorithms Aho Ullman J Foundations Computer Science C Edition Thomas H Cormen Charles E Leiserson Ronald L Rivest Clifford Stein Introduction Algorithms 3rd ed Harris D Harris Digital Design Computer Architecture 2nd ed David Patterson John L Hennessy Computer Organization Design Tanenbaum Austin Structured computer organization Sipser M Introduction Theory Computation permalinksaveparentreportgive goldreply BrainInAJar 0 points1 point2 points 1 month ago 0 children Yeah that's short list useful books massive pile even there's tons duplicates 2 algo textbooks 3 arch textbooks permalinksaveparentreportgive goldreply myusernameisokayComp Eng Grad 1 point2 points3 points 1 month ago 0 children look guide online programming language online It's probably good book data structures algorithms book OS design don't really need books lot info books you've linked definitely found online permalinksavereportgive goldreply kbradero 0 points1 point2 points 1 month ago 0 children Structure interpretation computer programs Concepts Techniques Models Computer Programming permalinksavereportgive goldreply WhackAMoleE 0 points1 point2 points 1 month ago 1 child Unix Network Programming Rich Stevens better book foundation modern network programming http www amazon com UNIX-Network-Programming-Richard-Stevens dp 0139498761 permalinksavereportgive goldreply btcMike 0 points1 point2 points 1 month ago 0 children best intro cs course http cs50 tv permalinksavereportgive goldreply firedark60Computer Science 2nd Year PEY UTSG 0 points1 point2 points 1 month ago 0 children Mano Kime logic computer design fundamentals good read hardware Ans clrs pretty good go whole thing permalinksavereportgive goldreply deleted 1 month ago 5 children deleted LittleHelperRobot 0 points1 point2 points 1 month ago 2 children Non-mobile http www amazon com dp 012088478X That's I'm don't judge PM u xl0 I'm causing trouble WUT permalinksavereportgive goldreply smile_link_bot 0 points1 point2 points 1 month ago 0 children Smile Link Bot currently beta Please leave feedback encounter issues Please consider using link Amazon Smile Amazon donate percentage price charity choice http smile amazon com dp 012088478X Learn Amazon Smile bot Leave feedback permalinksaveparentreportgive goldreply smile_link_bot 0 points1 point2 points 1 month ago 1 child Smile Link Bot currently beta Please leave feedback encounter issues Please consider using link Amazon Smile Amazon donate percentage price charity choice http smile amazon com gp aw d 012088478X Learn Amazon Smile bot Leave feedback permalinksavereportgive goldreply C3aa 0 points1 point2 points 1 month ago 0 children could take look pattern recognition machine learning know mathematicians really liked terms CS skills need know program matlab course rest math want could send e books EDIT seem give algorithm programming books really don't think help lot use math knowledge explore direction computer science turn 180 software architecture Theoretic CS would also interesting rather low value actually something Algorithms etc nice know shouldn't target permalinksavereportgive goldreply petabit 0 points1 point2 points 1 month ago 0 children think keep CLRS maybe Michael Sisper's book add SICP replace books projects books really really boring helps projects use books reference great introduction computer science permalinksavereportgive goldreplyaboutblogaboutvaluesteamsource codeadvertisejobshelpsite rulesFAQwikireddiquettetransparencycontact usapps toolsAlien Blue iOS appreddit AMA appmobile betabuttons 3reddit goldreddit storeredditgiftsreddit tvradio redditUse site constitutes acceptance User Agreement Privacy Policy Genitive 2015 reddit inc rights reserved REDDIT ALIEN Logo registered trademarks reddit inc Rendered PID 15727 app-144 2015-05-27 17 35 02 137969 00 00 running 8944350 country code"),
('A good resource to learn Git', 'Git Immersion Git Immersion guided tour walks fundamentals Git inspired premise know thing Git powerful sophisticated system distributed version control Gaining understanding features opens developers new liberating approach source code management surest path mastering Git immerse oneself utilities operations experience first-hand Install Git Mac Windows Graphical Clients Mac Windows Start Git Immersion Provide Private Training Neo helps organizations access full potential latest technologies methodologies offering structured training areas Git Ruby Ruby Rails Agile development specialize building better software staying top rapidly changing technologies Let us bring expertise business Get contact Neo License GitImmersion released Creative Commons Attribution-NonCommercial-ShareAlike License Try Github Resources git-scm com github com book git-scm com'),
('Zip Files All The Way Down - Lempvel-Ziv Quine -- rsc', "research rsc Thoughts links computer programming Russ Cox Zip Files Way Posted Thursday March 18 2010 Stephen Hawking begins Brief History Time story well-known scientist say Bertrand Russell gave public lecture astronomy described earth orbits around sun sun turn orbits around center vast collection stars called galaxy end lecture little old lady back room got said told us rubbish world really flat plate supported back giant tortoise scientist gave superior smile replying tortoise standing You're clever young man clever said old lady it's turtles way Scientists today pretty sure universe actually turtles way create kind situation contexts example video monitors way set theory books way shopping carts way here's computer storage equivalent look inside r zip It's zip files way one contains another zip file name r r zip die-hard Unix fans r tar gz gzipped tar files way Like line shopping carts never ends loops back onto zip file contains it's probably less work put together self-reproducing zip file put together shopping carts least you're kind person would read blog post explains get self-reproducing zip files though need take brief detour self-reproducing programs Self-reproducing programs idea self-reproducing programs dates back 1960s favorite statement problem one Ken Thompson gave 1983 Turing Award address college video games would amuse posing programming exercises One favorites write shortest self-reproducing program Since exercise divorced reality usual vehicle FORTRAN Actually FORTRAN language choice reason three-legged races popular precisely stated problem write source program compiled executed produce output exact copy source never done urge try discovery revelation far surpasses benefit obtained told part shortest incentive demonstrate skill determine winner Spoiler alert agree never done urge try internet makes easy look things it's refreshing discover something Go ahead spend days figuring blog still get back don't mind spoilers entire Turing award address worth reading Spoiler blocker http www robertwechsler com projects html Let's try write Python program prints probably print statement here's first attempt run interpreter prompt print 'hello' hello didn't quite work know program let's print print print 'hello' print 'hello' didn't quite work either problem execute simple print statement prints part argument print need way print rest program trick use recursion write string whole program missing plug passing print 'print s' print repr print 'print s' quite closer problem string isn't actually program know general form program ' s' print repr That's string use 's print repr ' print repr 's print repr ' print repr Recursion win form self-reproducing program often called quine honor philosopher logician W V O Quine discovered paradoxical sentence Yields falsehood preceded quotation yields falsehood preceded quotation simplest English form self-reproducing quine command like Print followed quotation Print followed quotation There's nothing particularly special Python makes quining possible elegant quine know Scheme program direct somewhat inscrutable translation sentiment lambda x x ' x ' lambda x x ' x think Go version clearer translation least far quoting concerned Go quine package main import fmt func main fmt Printf c c n q 0x60 q 0x60 var q Go quine package main import fmt func main fmt Printf c c n q 0x60 q 0x60 var q I've colored data literals green throughout make clear program data Go program interesting property ignoring pesky newline end entire program thing twice Go quine q got thinking maybe it's possible write self-reproducing program using repetition operator know programming language essentially repetition operator language used encode Lempel-Ziv compressed files like ones used gzip zip Self-reproducing Lempel-Ziv programs Lempel-Ziv compressed data stream instructions two basic opcodes literal n followed n bytes data means write n bytes decompressed output repeat d n means look backward d bytes current location decompressed output copy n bytes find output stream programming exercise write Lempel-Ziv program using two opcodes prints run words write compressed data stream decompresses Feel free assume reasonable encoding literal repeat opcodes grand prize find program decompresses surrounded arbitrary prefix suffix sequence could embedded actual gzip zip file fixed-format header trailer Spoiler alert urge try continuing read It's great way spend lazy afternoon one critical advantage didn't know solution Spoiler blocker http www robertwechsler com thebest html way here's r gz gzip files way gunzip r gz r cmp r r gz nice thing r gz even broken web browsers ordinarily decompress downloaded gzip data storing disk handle file correctly Enough stalling hide spoilers Let's use shorthand describe Lempel-Ziv instructions Ln Rn shorthand literal n repeat n n program assumes code one byte L0 therefore Lempel-Ziv no-op L5 hello prints hello L3 hel R1 L1 o Here's Lempel-Ziv program prints line one instruction CodeOutput no-opL0 no-opL0 no-opL0 print 4 bytesL4 L0 L0 L0 L4L0 L0 L0 L4 repeat last 4 printed bytesR4L0 L0 L0 L4 print 4 bytesL4 R4 L4 R4 L4R4 L4 R4 L4 repeat last 4 printed bytesR4R4 L4 R4 L4 print 4 bytesL4 L0 L0 L0 L0L0 L0 L0 L0 two columns Code Output contain byte sequence interesting core program 6-byte sequence L4 R4 L4 R4 L4 R4 prints 8-byte sequence R4 L4 R4 L4 R4 L4 R4 L4 prints extra byte trying write self-reproducing Python program basic problem print statement always longer printed solved problem recursion computing string print plugging took different approach Lempel-Ziv program particularly repetitive repeated substring ends containing entire fragment recursion representation program rather execution Either way fragment crucial point final R4 output lags behind input executes output one code ahead L0 no-ops plugged general variant program reproduce addition arbitrary three-byte prefix suffix CodeOutput print 4 bytesL4 aa bb cc L4aa bb cc L4 repeat last 4 printed bytesR4aa bb cc L4 print 4 bytesL4 R4 L4 R4 L4R4 L4 R4 L4 repeat last 4 printed bytesR4R4 L4 R4 L4 print 4 bytesL4 R4 xx yy zzR4 xx yy zz repeat last 4 printed bytesR4R4 xx yy zz byte sequence Output column aa bb cc byte sequence Code column xx yy zz took better part quiet Sunday get far time got knew game I'd won experimenting knew easy create program fragment printed minus instructions even one printed arbitrary prefix minus instructions extra aa bb cc output provides place attach program fragment Similarly it's easy create fragment attach xx yy zz prints minus first three instructions plus arbitrary suffix use generality attach appropriate header trailer final program prints surrounded arbitrary prefix suffix P denotes p-byte compressed form prefix P similarly denotes s-byte compressed form suffix CodeOutput print prefix P P print p 1 bytes Lp 1 P Lp 1 P Lp 1 repeat last p 1 printed bytes Rp 1 P Lp 1 print 1 byte L1 Rp 1 Rp 1 print 1 byte L1 L1 L1 print 4 bytes L4 Rp 1 L1 L1 L4 Rp 1 L1 L1 L4 repeat last 4 printed bytes R4 Rp 1 L1 L1 L4 print 4 bytes L4 R4 L4 R4 L4 R4 L4 R4 L4 repeat last 4 printed bytes R4 R4 L4 R4 L4 print 4 bytes L4 R4 L0 L0 Ls 1 R4 L0 L0 Ls 1 repeat last 4 printed bytes R4 R4 L0 L0 Ls 1 no-op L0 no-op L0 print 1 bytes Ls 1 Rs 1 Rs 1 repeat last 1 bytes Rs 1 Rs 1 print suffix byte sequence Output column P byte sequence Code column Self-reproducing zip files rubber meets road We've solved main theoretical obstacle making self-reproducing zip file couple practical obstacles still way first obstacle translate self-reproducing Lempel-Ziv program written simplified opcodes real opcode encoding RFC 1951 describes DEFLATE format used gzip zip sequence blocks sequence opcodes encoded using Huffman codes Huffman codes assign different length bit strings different opcodes breaking assumption opcodes fixed length wait care find set fixed-size encodings says need able express DEFLATE literal blocks opcode blocks header beginning literal block 5 bytes translation L opcodes 5 bytes translation R opcodes must also 5 bytes byte counts scaled factor 5 example L4 20-byte argument R4 repeats last 20 bytes output opcode block single repeat 20 20 instruction falls well short 5 bytes Luckily opcode block containing two repeat 20 10 instructions effect exactly 5 bytes Encoding sized repeats Rp 1 Rs 1 takes effort sleazy tricks turns design 5-byte codes repeat amount 9 64 bytes example repeat blocks 10 bytes 40 bytes repeat block 10 bytes two bits short every repeat block followed literal block starts three zero bits padding next byte boundary repeat block ends two bits short byte followed literal block literal block's padding insert extra two bits Similarly repeat block 40 bytes five bits long they're zero bits Starting literal block five bits late steals bits padding tricks work last 7 bits repeat block zero bits first byte literal block also zero boundary isn't directly visible literal block started one bit sleazy trick wouldn't work second obstacle zip archives gzip files record CRC32 checksum uncompressed data Since uncompressed data zip archive data checksummed includes checksum need find value x writing x checksum field causes file checksum x Recursion strikes back CRC32 checksum computation interprets entire file big number computes remainder divide number specific constant using specific kind division could go effort setting appropriate equations solving x frankly we've already solved one nasty recursive puzzle today enough enough four billion possibilities x write program try turn finds one works want recreate files minor obstacles like making sure tar file multiple 512 bytes compressing rather large zip trailer 59 bytes Rs 1 R64 they're simple matter programming r gz gzip files way r tar gz gzipped tar files way r zip zip files way regret unable find programs insist decompressing files recursively ad infinitum would fun watch squirm looks like much less sophisticated zip bombs spoiled fun you're feeling particularly ambitious rgzip go Go program generated files wonder create zip file contains gzipped tar file contains original zip file Ken Thompson suggested trying make zip file contains slightly larger copy recursively dive chain zip files one gets little bigger manage either please leave comment P can't end post without sharing favorite self-reproducing program one-line shell script bin cat Comments originally posted via Blogger Marius Gedminas March 18 2010 9 22 It's done liked writeup better tafs March 18 2010 9 46 Safari Mac OS X option 'open safe files downloading' set default keeps uncompressing filling disk safe indeed Aaron Davies March 18 2010 1 59 PM bin catvery nice i'm kind partial 10 LIST Shahms March 18 2010 3 46 PM It's kind cheating Python write arbitrary self-repeating programs pretty trivially assume standard library well import inspect sysprint inspect getsource sys modules '__main__' EthanG March 18 2010 4 39 PM tafs least responds cancel button downloads window Mine got r-962 963 unpacks killed total 3 8MB trash Nick March 18 2010 6 23 PM post removed author Nick March 18 2010 6 25 PM Perhaps r zip could contain two copies Reminds cannot played record player X luc March 19 2010 7 18 C's handling strings make slightly annoying overly complicated I'd like know anyone come anything shorter still bare C char qs 160 char q char char rs qs 0x22 rs 0x5C rs return qs int main char char qs 160 char q char char rs qs 0x22 rs 0x5C rs return qs int main char printf q printf q luc March 19 2010 7 21 Despite slight annoiances related string handling C version relatively short closest fragment IOCCC candidate ever written char qs 160 char q char char rs qs 0x22 rs 0x5C rs return qs int main char char qs 160 char q char char rs qs 0x22 rs 0x5C rs return qs int main char printf q printf q luc March 19 2010 7 22 Sorry double posting browser returned 404 first attempt Arachnid March 19 2010 9 19 hints would write version unpacks larger copy given crc32 issue Russ Cox March 19 2010 10 08 Arachnid suspect could engineer sequence inserted specific place matter many times would leave crc unaffected haven't done math nickjohnson March 19 2010 10 13 occurred shortly afterwards principle shouldn't hard since CRCs correct small errors sequence set instructions print twice you're sorted ajshankar March 22 2010 12 40 PM Fascinating post possible create pure LZ quine without header footer doesn't use L0 no-ops ajshankar March 23 2010 10 39 record answer yes done 16-opcode quine easier-to-explain solution 20 L2 L2 L2L2 L2 L2L2 L2 L2R4 3L4 R4 3 L4 R4 3 L4R4 3And shortest one I've found 14 opcodes L0L4 L0 L4 L0 L4L0R4 3L4 R4 3 L4 R4 3 L4R4 3 Russ Cox March 23 2010 12 05 PM Neat start core pattern plug L1 L1 L1 L1 L1 L1 ends instead L0 L0 L0 that's even longer link first comment boils 9-instruction one takes advantage fact repeat length longer back-up L0L2 L0 L2L0R2 3L2 R2 3 L2R2 3 R2 3 go back 2 bytes copy 3 current output ends x y appends x y x ajshankar March 23 2010 12 20 PM Dang that's sneaky like happened 4 3 approach got frustrated trying find pure 3 2 solution never thought 2 3 Misi March 24 2010 2 56 PM CRC modify program contain arbitrary 4 byte sequence somewhere exactly modifying 4 bytes make CRC anything first chose CRC example 0x00000000 create self-reproducing archive finally chose 4 bytes CRC want Thus avoiding recursive problem altogether k5 user March 25 2010 11 54 Late game recursive zips around long time anti-virus world known least 8 years One could create denial service attack AV product set scan compressed files sending zip death combat many AV programs stop processing configurable depth file Misi March 27 2010 9 12 here's talking rec_fix gzIt gzip quine bytes 102-105 fix points change whatever want file still uncompress course change CRC won't check created file CRC gzip footer set 0 reverse computed CRC four bytes CRC whole file actually 0 believe based idea possible create file part middle duplicate gunzipping CRC stays post I'm finished also might want look inside file based slightly different idea example depend repeat opcodes 5 bytes There's source code might slightly easier read rec_fix lgz Misi March 27 2010 3 47 PM rec_exp gz 32 bytes block duplicates uncompressing CRC always correct 0 Unfortunately gzip footer also contains size field course won't correct uncompress file 27 times point size duplicating block become 4 gigabytes 32 bit size field set remainder didn't check though thinking realized much simpler somewhat cheating way creating growing gzip quine duplicate whole file gzip concatenates output concatenated inputs work without paying much attention size crc fields file gunzipping concatenating rec_dup gz sources available directory Marc Ruef May 1 2010 1 57 Hello interesting research great writeup Keep good work Regards Marc user-unknown May 1 2010 3 23 PM rather unknown quine import java math BigInteger c Stefan Wagner GPLv3 0 class Quine public static void main String args BigInteger b new BigInteger 3125672623196693767569686149189009633452 2377871159551965921417137170609691214223 9208376749605139774443708326203800130556 5247549291738666720120851102563432688661 2425053632619026133552590824825360959495 9103568388341399920152904163137391991148 8600579488934249116624219425362354637760 9935667840623358056717110027295132562103 9400252768836739128617742678124740473856 7878670179316536315099060433926849016933 4865116792986969613917692005305319947405 7778267800604078704652663104779321903695 4971735707525104532138973326414147694788 6144049586837524382107377428450195285880 0467794888319592557310425481240448120408 1531669064199685228190893676717975716990 4846241527401973665847012561439332697517 5470668411522967977332908759408086343490 26570 int 0 byte c b toByteArray 159 System print b System print char c shortest bash-quine Yes Maybe didn't see - produce touch _ chmod x _ _ steffenz May 2 2010 10 02 Perl one line without newline q chr 39 ' q chr 39 printf q q ' printf q q steffenz May 3 2010 3 18 C version one line without newline main char q 34 char main char q 34 char c c printf q q printf q q DAGwyn May 19 2010 4 31 Hioefukky antivirus program stops fixed depth flags file malware rather treating benign main reason hackers obviously hide malware nested ZIP file one level deeper threshold Duncan May 25 2010 5 52 regret unable find programs insist decompressing files recursively ad infinitum would fun watch squirm looks like much less sophisticated zip bombs spoiled fun I'm afraid found something bombs thought fun last week emailed copy r zip colleagues work Today mail servers crashed email Lotus Notes McAfee virus scanner seems desktop version McAfee scans zip file unzip server version checks every emailed zip file right way seems taken week fill disc Franz November 4 2010 5 25 Computer scientists way downBeautiful post thank find misleading shopping cart metaphor keyto quine something program contains arepresentation string printed Finally actof representing representation executing 'print' instruction makes representation real new program identical itsparent There's representation cart circle carts artistic context potentiality making quines theyblur boundary reality representation I'm thinkingabout Escher's drawings Pirandello's six characters insearch author Allen's Purple Rose Cairo However none quine artistic work notrepresent e g Purple Rose Cairo 's representation amovie egypt rather Great Depression story example gets closer real quine probably accident 13th floor spoiler ahead movie team computer scientists Los Angeles creates asimulation Los Angeles discover themselvespart computer simulation made team Los Angelesscientists silly authors stop movie three levels theinnermost Los Angeles year 1937 nocomputers wait enough cpu time it's going becomputer scientists way Aaron Davies November 4 2010 5 36 also eXistenZ course Inception books there's house leaves various things borjes nabakov AndyMm November 29 2010 2 00 PM Javascript using Integers c 59 21 51 53 19 62 71 74 0 57 21 58 21 51 53 19 57 20 14 13 19 57 3 3 1 58 3 21 57 54 11 23 43 76 74 65 70 63 6 62 74 71 69 27 64 57 74 27 71 60 61 0 59 51 3 57 53 3 12 8 1 18 59 19 b 65 b 3 String fromCharCode c 40 c using RegExp Seen people use RegExp crazier ways simple one unescape q unescape 28q 2FQ 2F 5B-1 5D 29 replace 28 2FQ 2F q 29 -1 replace Q q rhialto January 7 2011 1 50 PM 13th floor film version book Daniel Galouye Simulacron 3 http en wikipedia org wiki Simulacron-3Also made film Fassbinder Michael Mol March 8 2011 8 44 Rosetta Code page Quines cacoyi March 15 2011 2 47 I'm trying compile code modify get similar results http www steike com code useless zip-file-quine I'm getting errors rgzip go 347 undefined bytes Addrgzip go 700 many arguments panic panic cannot encode REP n rgzip go 710 undefined flate NewDeflaterrgzip go 1057 cannot use f codebits type 19 int type int function argumentbeing new go point right direction Anonymous April 7 2011 6 49 cacoyi bytes Add deleted language Changed appendpanic interprets literal two arguments Eleminated n flate NewDeflater longer exists Changed flate NewWritercodebits numCodes int drives program crazy changed codebits intCompiles Don't know works Anonymous April 7 2011 6 59 cacoyi bytes Add deleted language Changed appendpanic interprets literal two arguments Eleminated n flate NewDeflater longer exists Changed flate NewWritercodebits numCodes int drives program crazy changed codebits intCompiles Don't know works Anonymous June 10 2011 7 39 PM took advice tried create one tried php turned trivial Simply put guess trying make different point Anonymous June 10 2011 7 40 PM took advice tried create one tried php turned trivial Simply put php print file_get_contents __FILE__ guess trying make different point Kela July 17 2011 9 48 Unix Shell z ' 'z z z z eval echo a' eval echo Cody November 21 2011 5 52 wrote day C versions problem non compliance C standard say int main's return type Another example implicit declaration printf include stdio h fixed stuff hopefully pastes ok include stdio h int main char p include stdio h cint main char p c c printf p 10 34 p 34 10 10 return 0 c c printf p 10 34 p 34 10 10 return 0 wc ran source file worth 3 16 173 quine2 c windows folks means 3 lines 16 words 173 characters person tried php included file directly indeed point different That's cheating isn't quine include file reading source that's hardly point challenge author post thanks - interesting fun found way looking zip file format reason can't remember think referred wiki Cody November 21 2011 6 04 One thing forgot reply antiviruses recursive zip files it's generally least I've seen user defined variable hard coded really flawed fact there's things hard find it's ok first look av's may report ok others Even antidebugging tricks make antivirus detection engine think malware course 'scary' trick piggybacking - that's malware would infect files whatever av engine scanning Still false positives bad false negatives another similar thing - badly configured firewalls really bad comes security That's goes make best times course file zipped many times may bring suspicion perhaps hide end matter using common sense understanding things work antiviruses along pretty good job work together David Wagner January 28 2012 10 10 PM awesome Thank posting puzzle fun looking simplified version allowed Ln Rn opcodes Rn m allowed curious shortest quine fun decided throw SAT solver Here's found shortest quine 16 bytes long L0 L0 L0 L2 L0 L0 L2 L0 L2 R3 R2 L2 R3 R2 R3 R2Or parsed form L0L0L0L2 L0 L0 L2 L0 L2 R3 R2 L2 R3 R2 R3 R2 Assuming SAT code correct shorter quine also quine length 17 However appear quines larger lengths you're curious encoded SAT here's approach took search quine length n defined n-byte array unknowns call ith byte input We'll add constraints force also ith byte output defined n 1 x n 1 array boolean unknowns active whereactive j true 0 i-1 well-parsed sequence bytes e doesn't end middle unfinished string literal decompressing 0 i-1 produces output 0 j-1 difficult write set constraints define entries active terms entries emit constraints require active 0 0 true require active n n true invoke SAT solver find solution respects constraints fun Thank sharing puzzle"),
("XKCD inspired passwords: 'How to Memorize a Random 60-Bit String'", 'PDF-1 5 3 0 obj'),
('MapReduce and RDBMS: Practice and Theory', "Big Data Theory Posts Rss Author Tweet Grigory Yaroslavtsev Postdoctoral Fellow University Pennsylvania affiliated Warren Center Network Data Sciences work Computer Information Science Department Department Statistics Wharton School Email Twitter Facebook Google LinkedIn Github MapReduce RDBMS Practice Theory Congratulations Michael Stonebraker winning ACM Turing Award last week Michael recognized fundamental contributions concepts practices underlying modern database systems somewhat unfortunate though RDBMS community MapReduce crowd ended split apart 2010 CACM articles MapReduce Flexible Data Processing Tool Jeffrey Dean Sanjay Ghemawat MapReduce Parallel DBMSs Friends Foes Michael Stonebraker et al Stonebraker criticism MapReduce Hadoop started back 2008 post MapReduce major step backwards changed slightly last 7 years see e g good example Michael talk XLDB12 found fun educational Moreover tend agree waht Michael says except comes Hadoop e g Hadoop right top Gartner group hype cycle M 2012 7 years criticism Hadoop become successful open source platform general purpose massively parallel computing probably won surprising see Dean Ghemawat winning Turing Award future making massively parallel computing commonplace believe theory practice MapReduce RDBMSs apples oranges big data universe crunching hundreds petabytes data days However experience people still think way directly compare two determine single winner heard Stonebraker criticism Hadoop many times places diverse e g one running club buddies Penn track well visit Princeton conversation one professors highly respect decided write blog post try bite bull horns expression courtesy Ken Clarkson summarize advantages paradigm experience practice theory Advantages MapReduce MapReduce paradigm emerged universal tool specific type parallel computing would compare magic hammer theory allows almost anything might want Swiss army knife RDBMS solution would certainly efficient specific tasks designed magic hammer MapReduce works almost problem possible parallelize Universality big advantage MapReduce universality particular offers efficient low-level access data software engineer allows handle completely unstructured messy data example many graph algorithms easily implemented MapReduce general purpose databases don't play well graphs well-known issue also reason specialized graph databases Neo4j exist learning use MapReduce takes time experience programming experience good software engineers learn fairly quickly best companies Google Facebook etc learning curve cost skillful engineers doesn't seem issue Customization 10 years existence base Hadoop layer extended many different frameworks run top Examples free frameworks Spark greatly improved raw Hadoop efficiency Apache Storm streaming support others particular Stonebraker's criticism regarding inefficiency Hadoop longer applicable improvements inefficient higher-level Hadoop layers replaced HDFS remains untouched According Stonebraker don't problem HDFS parallel file system means go ahead use Companies Google Facebook running custom versions Hadoop MapReduce details secret routinely hear news petabytes user data crunched daily systems Support favorite programming language Hadoop Streaming one use programming language Open source Apache Hadoop easy learn open source version implementation MapReduce framework Advantages Parallel RDBMSs Database management system technology perfected 40 years becoming Swiss army knife -type solution big data management Efficient processing typical queries relational types data relational data efficiency parallel RDBMSs outstanding aware successful attempts beat performance RDBMSs home turf using general purpose frameworks massively parallel computing e g using Hive Hadoop discussed Moreover specialized database systems exist also types structured data graphs e g Neo4j sparse arrays etc like Swiss Army knife certain application directly handled RDBMS probably handled pretty well common use cases pretty well covered Simplicity clearly subjective might change time currently learning curve MapReduce users seems much steeper use RDBMS Simplicity also means costs less employ data analysts work RDBMSs Theory theorist excited fact performance MapReduce-style systems systematicaly analyzed using rigorous theoretical framework See earlier blog post details formal theoretical model MapReduce exciting see MapReduce-style algorithms making advanced algorithms classes focused dealing big data many top schools examples aware Dealing Massive Data Sergei Vassilvitskii Columbia Algorithms Big Data Jelani Nelson Harvard Algorithms Modern Data Models Ashish Goel Stanford Models Computation Massive Data Jeff Philips University Utah examples fact days almost every theoretical class algorithms big data aware covers MapReduce algorithms Moreover clean hard open problems raised MapReduce model would strong implications rest theoretical computer science including fundamental parts circuit complexity communication complexity approximation algorithms well modern areas streaming algorithms example notorisouly hard question see details sparse undirected graph connectivity solved o log V rounds MapReduce Hint Probably Resolution kind open questions surprise practitioners might also win best paper award one top theory conferences likely going MapReduce deep consequences result would hand unaware open questions databases would level appeal theoretical community flagship theory conference STOC 2015 together 27th ACM Symposium Parallelism Algorithms Architectures colocated FCRC 2015 host 1-day workshop Algorithmic Frontiers Modern Massively Parallel Computation focused theoretical foundations MapReduce-style systems directions future research co-organizing together Ashish Goel Sergei Vassilvitskii post details later stay tuned interested P Apple-oranges room apple-oranges none seem successful far seems common sense SQL-on-Hadoop like apple-on-orange great idea terms performance Limited success attempts Hive Hadoop seem prove far Using low-level programming languages C RDBMSs also possible see e g SQLAPI However described advantages RDBMSs likely vanish Grigory Yaroslavtsev Postdoctoral Fellow University Pennsylvania affiliated Warren Center Network Data Sciences work Computer Information Science Department Department Statistics Wharton School Email Twitter Facebook Google LinkedIn Github MapReduce RDBMS Practice Theory published April 02 2015 might also enjoy View posts Upcoming Workshops Modern Algorithms Brave New O Big N Models Parallel Computation Hitchhiker's Guide Massively Parallel Universes 2015 Grigory Yaroslavtsev Subscribe via RSS Powered Jekyll using Minimal Mistakes theme Please enable JavaScript view comments powered Disqus comments powered Disqus"),
('Some Data Structure Overview/Study Guide', "ONLINE COURSES LIBRARY STUDYROOM FLASHCARDS TESTSNEW LogIn SignUp Suggest WRITEFOR US GET PAID DATA STRUCTURES Data Structures widely used organize data unique structures enhance programs performance Basics Sorting Introduction Data Structures Time Complexity Algorithms Introduction Sorting Bubble Sort Insertion Sort Selection Sort Quick Sort Merge Sort Heap Sort Data Structures Stack Data Structure Queue Data Structure Test studied lessons Data Structure evaluate taking tests Coming Soon Introduction Data Structures Data Structure way collecting organising data way perform operations data effective way Data Structures rendering data elements terms relationship better organization storage example data player's name Virat age 26 Virat String data type 26 integer data type organize data record like Player record collect store player's records file database data structure example Dhoni 30 Gambhir 31 Sehwag 33 simple language Data Structures structures programmed store ordered data various operations performed easily Basic types Data Structures discussed anything store data called data strucure hence Integer Float Boolean Char etc data structures known Primitive Data Structures also complex Data Structures used store large connected data example Abstract Data Structure Linked List Tree Graph Stack Queue etc data structures allow us perform different operations data select data structures based type operation required look data structures details later lessons Algorithm algorithm finite set instructions logic written order accomplish certain predefined task Algorithm complete code program core logic solution problem expressed either informal high level description pseudocode using flowchart algorithm said efficient fast takes less time execute consumes less memory space performance algorithm measured basis following properties Time Complexity Space Complexity Space Complexity amount memory space required algorithm course execution Space complexity must taken seriously multi-user systems situations limited memory available algorithm generally requires space following components Instruction Space space required store executable version program space fixed varies depending upon number lines code program Data Space space required store constants variables value Environment Space space required store environment information needed resume suspended function Time Complexity Time Complexity way represent amount time needed program run completion study details section NOTE going deep data structure good knowledge programming either C C Java Next Check Library Video Courses Studyroom Flashcards Studytonight 2014 Handcrafted Love Us Suggest Terms Contact Us Collaborate Authors Blog"),
('BubbleSort: Computer Science Zines by sailorhg', "Kickstarter Main menu Discover Start User menu Sign Log Share project Done Share Tweet Share Embed Share project Done Tweet Share Email BubbleSort Computer Science Zines Zines computer science zine focuses one concept filled comics diagrams stories examples exercises Pre-order Created sailorhg 1 153 backers pledged 60 431 help bring project life Rewards Campaign Updates Comments 17 Share project May 26 Ready first round edits first draft BubbleSort Zines finished came back local printer It's 4x longer first set write- you'll receiving Read 9 likes May 19 Draft Calculators Even It's busy BubbleSort Zines HQ Drafts Chapters 1 2 3 5 total written printed prototype right Read 2 Comments 11 likes Apr 2015 April 29 online shop pre-orders Hi everyone mentioned wanting upgrade full subscription wanting order individual zines kickstarter I've Read 2 Comments 3 likes April 22 OMG THANK BubbleSortZines raised 60k thanks I'm humbled grateful super excited work bringing zines life stretch goal 60k Read 4 Comments 22 likes April 22 2015 Successfully raised 60 431 USD 1 153 backers April 21 full year subscriptions reached 50k stretch goal eeee thank tiers get full year subscriptions I'm excited many Read 1 Comment 17 likes April 21 take research seriously take research seriously reading lots educational books children teenagers favorite educational books children series Read 3 Comments 10 likes April 17 BubbleSort Poster Proofs BubbleSort poster proofs arrived today I'm excited show came They're 16 inches wide 11 inches tall look great Read 3 Comments 8 likes April 17 tour BubbleSort HQ Welcome BubbleSort HQ worked make sure place inspires creativity playfulness plenty space sit floor Read 3 Comments 7 likes April 16 cover zine 6 6 days left 6th BubbleSort Zine caching also tribute objectively best website internet cashcats biz Love Amy 4 likes April 14 Stickers Stickers Stickers Today BubbleSort Zines stickers calculator stickers arrived BubbleSort HQ BubbleSort Zines stickers ship every print copy zines every zine subscription calculator Read 6 likes April 14 covers zines 4 5 BubbleSort Zines kickstarter 8 days left Thank much support love far 3 I've working designing covers Read 1 Comment 10 likes April 8 Meet project assistant Today I'd like meet important part Bubblesort team kitty Moxie see video good af assistanting 9 likes April 7 BubbleSort Posters Stretch Goals finished designing draft BubbleSort Zine posters backed poster tier poster look like left hand side Read 5 likes April 1 BubbleSort Zine Stickers quick update today I've designing stickers ship every physical copy BubbleSort Zines I'm excited share sneak peek 10 likes Mar 2015 March 31 Hello rainy Killarney week i'm attending ll conference Ireland I'm really impressed 1 children's track includes Little Bits workshops Lego robot building sessions 2 Read 1 Comment 4 likes March 26 Stretch goals announcement Thank much reached 20 000 means backers receive behind-the-scenes video process making zine start finish I'm super excited Read 2 likes March 24 Thank much OMG Thank sooooo much generosity support kickstarter funded 4 hours raised 17 000 first day I'm excited Read 13 likes March 23 2015 Project launched Eureka You've found little secret Sign Happening email inside info arts culture Kickstarter universe beyond Email address us Kickstarter Year Kickstarter 2014 Jobs Press Stats Projects love Spotlight New Help FAQ Rules Creator Handbook Trust Safety Support Terms Use Privacy Policy Cookie Policy Discover Art Comics Crafts Dance Design Fashion Film Video Food Games Journalism Music Photography Publishing Technology Theater Hello Happening Company Blog Engineering Blog Twitter Facebook Tumblr Instagram Pinterest KICKSTARTER 2015 Kickstarter Inc English Deutsch Espa ol Fran ais"),
('Found this amazing website with stick figure comics called xtcc!', "Contents Topics Names First Previous Next Last Random DanishDAGerman DeutschDEEnglishENSpanish Espa olESFrench Fran aisFRItalian ItalianoITDutch NederlandsNLPolish PolskiPLPortuguese Portugu sPTRussian RUChinese ZH TheCodeless Code illustrated collection sometimes violent fablesconcerning Art Philosophy software development written spirit Zen k ans also browse name topic 192The Four Words Distress Part Two EN 2015-05-25191The Four Words Distress Part One DEENESFR 2015-05-18190To Make Omelette ENESFR RU 2015-05-03189The Dense Forest DEENESFR RU 2015-04-26188Tough Love DEENESFRIT RU 2015-04-18187Exit Interview ENESFRIT RU 2015-04-12186Nothing Forever DEENESFRIT RU 2015-04-07184Life DEENESFRIT RU 2015-03-22183Choosing Battles DEENESFRIT RU 2015-03-14182Mousetrap DEENESFRIT RU 2015-03-08181Future Imperfect DEENESFRIT RU 2015-03-01180Past Perfect DEENESFRIT RU 2015-02-22179Walking Path DEENESFRIT PL RU 2015-02-10178Unity DEENESFRIT RU 2015-01-25177The Tool-Shed DEENESFRIT PL RU 2015-01-19176Many Happy Returns DEENESFRIT RU 2015-01-11175Flat Shark DEENESFRIT RU 2015-01-01174Out Zone DEENESFRIT RU 2014-12-28173Lost Peer DEENESFR 2014-12-21172Lesson One ENESFRIT RU 2014-12-07171Initial Conditions ENESFRIT RU 2014-11-30170The Purple Beggar ENESFRIT RU 2014-11-23169Best Practices DEENESFRIT RU 2014-11-16168Horizontal Vertical ENESFRIT RU 2014-11-09167Back Basics ENESFRIT RU 2014-11-02166Tempus Fugit ENESFRIT RU 2014-10-26165Failsafe ENESFRIT RU 2014-10-19164Paradox ENESFRIT RU 2014-09-30163Vacation DEENESFRIT RU 2014-09-23162All According Plan ENESFRIT RU 2014-09-15161Triangle ENESFRIT RU 2014-09-08160The Eye Beholder ENESFRIT RU 2014-08-31159Blocks ENESFRIT RU 2014-08-25158Monday Monday DEENESFRIT RU 2014-08-17157Captive Audience ENESFRIT RU 2014-08-10156The Garden Path ENESFRIT RUZH2014-08-03155Don't Help ENESFRIT RU 2014-07-26154A Bridge Nowhere ENESFRIT RU 2014-07-20153The Red Circle ENESFRIT RU 2014-07-13152What Lies Beneath ENESFRIT RU 2014-07-06151The Summer Scarf ENESFRIT RU 2014-06-28150Undone ENESFRIT RU 2014-06-22149The First Finger ENESFRIT RU 2014-06-14148Subtle Art ENESFRIT RU 2014-06-07147Bawan's Table ENESFRIT RU 2014-06-01146Box Model ENESFRIT RU 2014-05-25145Five Years ENESFRIT RU 2014-05-18144Mnemonic ENESFRIT RU 2014-05-11143Monolith ENESFRIT RU 2014-05-04142The Blind Leading Blind ENESFRIT RU 2014-04-27141Ill Met Moonlight DEENESFRIT RU 2014-04-20140Heartbleed ENESFRIT RU 2014-04-13139Feedback ENESFRIT RUZH 2014-04-05138The Province Eternal Crisis ENESFRIT RUZH2014-03-30137The 1000 Words ENESFRIT RU 2014-03-23136Unsupported Protocol ENESFRIT RU 2014-03-15135Ass-Backwards Compatibility ENESFRIT RU 2014-03-09134Thin Ice ENESFRIT RU 2014-03-01133Dead Language ENESFRIT RU 2014-02-20132Interpreter ENESFRIT RU 2014-02-15131Don't Think ENESFRIT RU 2014-02-08130The First Mantra DEENESFRIT RU 2014-02-03129Like Rolling Stone ENESFRIT RU 2014-01-27128The Prison Infinite Pleasures ENESFRIT RU 2014-01-19127State Change ENESFRIT RU 2014-01-12126Tea Two DEENESFRIT RU 2014-01-05125Power ENESFRIT RU 2013-12-28124The Hidden Variable DEENESFRIT RU 2013-12-22123Order Chaos ENESFRIT RU 2013-12-14122Craftsmanship ENESFRIT RU 2013-12-07121Where Angels Fear Thread ENESFRIT RU 2013-11-29120Plug Play ENESFRIT RU 2013-11-24119Sushi ENESFRIT RU 2013-11-15118Clay ENESFRIT PTRU 2013-11-10117Bareback ENESFRIT PTRU 2013-11-01116Trust One ENESFRIT RU 2013-10-24115Pain ENESFRIT RU 2013-10-18114Character Assassination ENESFRIT RU 2013-10-11113Black Sheep ENESFRIT RU 2013-10-07112Speak ENESFRIT RU 2013-09-21111Labyrinth ENESFRIT RU 2013-09-17110The Trunk ENESFRIT RU 2013-09-15109The Ties Bind ENESFRIT RU 2013-09-03108Sweet Tooth ENESFRIT RU 2013-09-01107Babel ENESFRIT RU 2013-08-23106The Team ENESFRIT RU 2013-08-15105Navigation ENESFRIT RU 2013-08-03104Guardrails ENESFRIT RUZH2013-07-28103The Black Enamel Box ENESFRIT RU 2013-07-21102Paddle ENESFRIT RU 2013-07-12101Accountability ENESFRIT RU 2013-07-05100Ten Thousand Mistakes DEENESFRIT PTRU 2013-06-2499Queen Error ENESFRIT RU 2013-06-2298Anti Matter ENESFRIT RU 2013-06-1397Flammable DEENESFRIT RU 2013-06-0896Stateless DEENESFRIT PTRU 2013-06-0195Roses Red ENESFRIT RU 2013-05-2594Conventions ENESFRIT RU 2013-05-1893You Take High Road ENESFRIT RU 2013-05-1192Still Waters ENESFR RU 2013-05-0391The Soul Wit ENESFRIT RU 2013-04-3090Not Number ENESFRIT PTRU 2013-04-2189Version Control ENESFRIT RU 2013-04-1088Suku's Adviser ENESFRIT RU 2013-04-0787The Concubine's Fog ENESFRIT RU 2013-03-3186Liberation DEENESFRIT RUZH 2013-03-2485Suku's Golden Mean ENESFRIT RUZH 2013-03-1784What Says Tin ENESFRIT RU 2013-03-1083Consequences ENESFRIT RU 2013-03-0382Jinyu's Tack ENESFRIT RU 2013-02-2481Bubble Sort DEENESFRIT RU 2013-02-1580A Breed Apart ENESFRIT RU 2013-02-0679Cave Canem ENESFRIT RU 2013-02-0378Crashing Third Gate ENESFRIT RU 2013-01-2077The Upside-Down Abbey ENESFRIT RU 2013-01-1976Myong's Cat ENESFRIT RU 2013-01-1275Fear Commitment ENESFRIT RU 2013-01-0574Bathwater ENESFRIT RU 2012-12-3073The White Pearl ENESFRIT RU 2012-12-2472Too Eager ENESFRIT RU 2012-12-1571The Six Unwelcome Hosts ENESFRIT RU 2012-12-0870System ENESFRIT RUZH 2012-12-0269Up Date ENESFRIT RUZH 2012-11-2568Decay DEENESFRIT RU 2012-11-1767Grease ENESFRIT RU 2012-11-1166Porpoise ENESFRIT RU 2012-11-0465Two Choices DEENESFRIT RU 2012-10-2864Three Beggars DEENESFRIT RUZH 2012-10-2163Shackles DEENESFRIT RU 2012-10-1362Confusion DEENESFRIT RU 2012-10-0661Weight DEENESFRIT RU 2012-10-0260The Watchdog DEENESFRIT RU 2012-09-3058Enough Hang DEENESFRIT RU 2012-09-1957Precision DEENESFRIT RU 2012-09-1656Bear Necessities DEENESFRIT RU 2012-09-1254Knots DEENESFRIT RU 2012-09-0252Buckets DEENESFRIT RU 2012-08-1750Adapter DEENESFRIT RU 2013-08-0349Banzen's investigation ENESFRIT RU 2012-07-2848Silence DEENESFRIT RU 2012-07-2047The Origin DEENESFRIT RU 2012-07-1546The Greatest Aspiration DEENESFRIT RU 2012-07-0945Full Circle DEENESFRIT RU 2012-07-0844The Backwards Monk DEENESFRIT RU 2012-07-0443Holes DEENESFRIT RU 2011-06-0842Triggers DEENESFRIT RU 2011-05-1841Garbage DEENESFRIT PL RU 2011-03-2440Authority DEENESFRIT PTRU 2011-05-1239The River Tea DEENESFRIT RU 2011-05-1238Language DEENESFRIT RU 2011-05-0537Simulation DEENESFRIT RU 2011-06-0736Division DEENESFR RU 2011-05-1535Sparrow Breaks Free DEENESFRIT RU 2011-05-0134The Naming Names DEENESFRIT RU 2011-04-2033Fear DEENESFRIT RU 2011-04-2032Weeds DEENESFRIT RU 2011-03-2931The Eloquent Sandal DEENESFRIT RU 2011-03-2930Cups DEENESFRIT RU 2011-03-2629Goldfish DEENESFRIT RU 2011-03-2628Echo DEENESFRIT RU 2011-03-2627Koan Zero DEENESFRIT RU 2011-03-2626The Uncorrected Monk DEENESFRIT RU 2010-11-2625Compromise DEENESFRIT PL RU 2010-11-2524The Red Notebook DEENESFRIT RU 2010-11-2523Shape DEENESFRIT RU 2010-11-2522Safety DEENESFRIT RU 2010-11-2321Interrupt DEENESFRIT RU 2010-11-2120Neither Yes DEENESFRIT RU 2010-11-2019By Name DEENESFRIT RU 2010-11-1818Necessary Features DEENESFRIT RU 2010-11-1717Not Invented DEENES FRIT RU 2010-11-1616Documentation DEENESFRIT RU 2010-11-1515Immutable DEENESFRIT RU 2010-11-1414Hello World DEENESFRIT NL RU 2010-11-1313Evolution DEENESFRIT RUZH2010-11-1212Effect DEENESFRIT NL RUZH2010-11-1111Cages DEENESFRITNL RUZH2010-11-1110Pride DEENES FRIT NL RUZH2010-11-119Infinities DEENES FRIT NL RUZH2010-11-108Reduce Reuse Recycle DEENES FRIT NL RUZH2010-11-107The Enemy Good DEENES FRIT NL RUZH2010-11-096EmptyDADEENESFRIT NL RUZH2010-11-095VoidDADEENES FRIT NL RUZH2010-11-094WillowsDADEENESFR NLPL RUZH2010-11-083EncapsulationDADEENESFR NLPL RU ZH 2010-11-082Unknown UnknownsDADEENES FR NLPL RU ZH 2010-11-041The Small StuffDADEENESFR NLPL RU ZH 2010-11-03 Applicant open-ended chronicle follows journey young novice Temple Morning Brass Gong companion piece Codeless Code 1 5The Applicant Iron Cookpot DEENESFR RU 2012-09-231 4The Applicant Bundle DEENESFR RU 2012-08-261 3The Applicant Math DEENESFR RU 2012-08-261 2The Applicant Anantha's Fountain DEENESFR RU 2012-08-121 1The Applicant Hermit DEENESFR RU 2012-08-05 Talks I've Given Hacking mind Art help us talk teach technology Presented September 2014 ABB DevDay 2014 Krakow Poland Works Ancient Code used code Apple assembly hex back Ancient Times Devil Take Everyone Part Dark Yule collection another writing project mine Dark Yule contains somewhat twisted takes various Christmas legends Windows Doors Time Machines Windows Doors Time Machines upcoming theater piece beautifully weird individual human liminal spaces people create communicating national boundaries time zones I'm collaborating artists Jennifer Gwirtz April Renee Pipe Codeless Code Qi qi thecodelesscode com Provided Creative Commons Attribution-NonCommercial 3 0 Unported License"),
("The AI Games - Create a poker bot and join the competition (Texas Hold'em)", "CompetitionsDiscussions cooperation Warlight netCompaniesUniversitiesSign Sign Forgot password HomeRulesGetting StartedLeaderboardGame logDiscussionsDaFishRound 1-Chips--Odds--Bet-SkelBotThe popular poker game ever available famous Texas Hold 'em poker variant played TheAIGames com game widely played real-life online let bots battle takes create best Texas Hold 'em bot fun coding right side see prizes available competition eight finalists take home finals played date format finals announced later 1102425123256412856463271688AboutRoadmapFAQConnectFacebookTwitterGoogle PlusEmailLegalSite rulesTerms ServicePrivacy Policy 2015 Star Apple B V"),
('How we used Bin Packing to simulate the U.S. Senate', "Work Careers News Blog Contact EMK Institute Software Powered Senate Vikash Dat March 31 2015 developed custom software power Edward M Kennedy Institute highly interactive museum dedicated United States Senate software stack accommodate 22 unique interactive exhibits 2 unique experiences experience touching upon post Senate Immersion Module Senate Immersion Module SIM fully interactive simulation U Senate voting session participant tablet cast votes several potential bills including environment immigration firearms well nominees federal posts One core parts experience ability become senator work way senate process ultimately pass bill start player must assigned senator profile sourced internal CMS built putting content CMS new content SIM created EMK staff external partners time distribution described makes easier write SIM balanced mix competing positions piece software certain requirements must met case subset requirements follows Allow maximum 100 players Allow minimum 24 players Distribute players 3 possible committees 6 possible subcommittees 18 possible issue conferences distribution players must remain balanced along party lines committees subcommittees issue conferences help illustrate consider 100 players divided evenly 3 committees would give us 34 players Committee 33 players Committee B 33 players Committee C since committee 2 subcommittees evenly divide players 6 subcommittees furthermore committee 6 Issue Conferences players must also evenly distributed diagram would 18 issue conferences 5 6 players seems nested distributions must maintain balance along party lines player counts respective distribution Furthermore example shows base case 100 players know number players range 24 100 go even start problem best first step break problem smaller subproblems Since seems committee distributions rely results subcommittee distributions subcommittee distribution relies results issue conference distributions seems best place start issue conferences base sub-problem Players Committee Players SubCommittee1 Players SubCommittee2 Players SubCommitteeX Players IssueConference1 Players IssueConference2 Players IssueConference3 Players IssueConference4 Players IssueConference5 Players IssueConference6 know start start Well let consider CS algorithms address problem statement 2 basic algorithms come mind Partition problem http en wikipedia org wiki Partition_problem Bin-Packing problem http en wikipedia org wiki Bin_packing_problem Lets take look algorithms starting Partition problem basic sense algorithm returns whether set items partitioned 2 equal sets example given wikipedia break following set numbers 3 1 1 2 2 1 two subsets equal 5 S1 1 1 1 2 S2 2 3 Great seems similar want except set Senators Bin-Packing problem algorithm attempts pack set items N set Bins B best case items packed single bin referred Best-Fit worst case items packed available bins referred Worst-Fit example three 3-gallon buckets one 3 gallon jug water cases would Best-Fit Pour 3 gallons first bucket Worst-Fit Pour 1 gallon 3 buckets algorithms seem one go Well remember Partition problem aims tell equal partitions possible Bin-Packing aims give ways place set items certain number bins seems Bin-Packing algorithm us need decide case bin packing need Best Worst Since Worst-Fit attempts utilize bins means uniform distribution Issue Conferences Worst-Fit taking base sub problem issue conference assignment must iterate issue conference bin place senator bin maintaining party balance per bin could come complex algorithm packing also logic maintain balance part core ideas computer science idea single responsibility means bin packing function concerned placing senators issue conference bins place logic maintaining balance inside another function simplify things little maintain balance best possible packing party one time two parties Democrats Republicans fit 1 Democrat per issue conference first 1 Republican per issue conference repeat fit senators function written Scala Bin packing 1 define function called fitSenatorBasedOnRarity rarity deal frequency issues conferences senators care issue order rare issue conference least rare issue conference calculated early another function result passed variable utilizing Map data structure Committees Issue Conferences called committeesWithIssueConfs second argument function Set senators called senators final argument String indicating party currently dealing within algorithm called party 2 Scala functional language http en wikipedia org wiki Functional_programming whose default types immutabble However want remove senators placed issue conference convert immutable Set mutable Set 3 take Map data structure two iterations first keys map Committees second issue conferences respective Committee may help think loop within loop 4 step use mutable Set senators loop find senator whose party faction equals party currently working also cares particular issue conference via function doesMatchPositionRule 5 next step check results step 4 see found Senator matches criteria 6 case found senator matches criteria step 4 add issue conference current committee 7 remove Set available senators used next loop iteration 8 step completed iterations removed quite senators return back reduced Set senators reduced Set sent back fitSenatorBasedOnRarity function another pass different party keep utilizing function passing updated Set senators alternating parties senators left issue conferences solved first sub problem use result solve next sub problem Bin Packing Sub Committees function Bin Packing Sub Committees 1 define function named defineSenatorTrack Although funciton Bin Packing Sub Committees got clever also used Bin Pack Committees well turn completes senator track particular senator 2 variable committeeIssueSenatorMap results step 6 previous function also based Map data structure Map Committee Issue Conferences Issue Conference mapped Set senators iterate Committee iterate issue Conference respective Committee iterate Senator respective Issue Conference 3 utilize functional concept folding calculate sum current senators Issue Conferences within respective Committee particular party divide number 2 determine maximum number senators particular party Sub Committee 4 step utilize another function called doesSenatorFitInSubCommittee checks result adding particular senator Sub Committee 1 keeps allotted number factions per committee maximum calculated step 3 details method important know uses functional programming concepts quickly calculate return either true false indicating senator placed certain Sub Committee 5 results step 4 true meaning senator placed Sub Committee 1 update another variable based Map data structure called senatorTrackMap place senator within Sub Committee 1 well place within current Committee 6 step step 4 instead calling doesSenatorFitInSubCommittee Sub Committee 1 call function Sub Committee 2 determine senator placed within Sub Committee 2 without breaking party balance 7 results step 6 true update senatorTrackMap variable place current senator within Sub Committee 2 well placing within current Committee 8 results step 4 step 6 false log cannot place senator additional logic shown deal case point successfully completed second sub problem cleverly completed first problem Bin Packing Committees well see use Bin Packing algorithm within software somewhat different generalized form shown Wikipedia text books Instead packing numbers Bins packed Objects encapsulated information Senator Also instead using numbers determine weights item size Bin used meta data Senator Party derive numerical weight total number players drive maximum size Bin pretty cool use fundamental algorithm Bin Packing describe placed Senators Committees Sub Committees Issue Conferences Senate Immersion Module software hope post shows applicable algorithms outside generalized form Data structures Algorithms one key important aspects Computer Science turn Software Engineering knowledge help better figure approach solve simple complex problems would sincerely recommend everyone take time learn basic algorithms may fully understand first time around take slowly eventually develop understanding appreciation heart every piece software use daily Helpful Resources https www coursera org course algo Algorithm Design Manual used book undergraduate graduate schools continue utilize day Algorithms Nutshell r algorithms http www reddit com r algorithms Share Click email friend Opens new window Share Facebook Opens new window Click share Google Opens new window Click share LinkedIn Opens new window Click share Twitter Opens new window AlgorithmsComputer ScienceFunctional ProgrammingScalasoftware development Leave Reply Cancel reply Control Group Control Group innovation strategy firm uses technology design help clients envision what's possible build Search CG News Payphone wi-fi program seen citizen engagement platform May 18 2015 Capital Inside New York's Plan Cover City Free Super-fast Wi-Fi April 10 2015 Fast Company Ted Kennedy Institute Combines Cutting-Edge Tech Full-Scale Senate Chamber Replica March 31 2015 Slate Popular Posts Guided Creation CloudFormation Templates VPC Bootstrapping EC2 Instances cfn-init Best Interface Really Interface Dealing Spoofed Spam Emails Control Group one Best Places Work NYC 2015 Control Group Privacy Twitter Facebook LinkedIn Instagram Vimeo Send Email Address Name Email Address Cancel Post sent - check email addresses Email check failed please try Sorry blog cannot share posts email"),
('SIGBOVIK 2015 proceedings are out', '2015 2014 2013 2012 2011 2010 2010 2009 2008 2007 sigbovik 2015 venue scope proceedings submissions listserv SIGBOVIK 2015 9th ACH Special Interest Groupon Harry Q Bovik Wednesday April 1 2015 5 00 PM Rashid Auditorium Gates-Hillman Center 4401 Carnegie Mellon University SIGBOVIK celebrates lesser-known areas academic research joke realizations joke ideas joke realizations serious ideas serious realizations joke ideas Proceedings available Download buy physical copy Submissions due EasyChair March 8 2015 March 15 2015 March 17 2015 Stay date Subscribe mailing list Copyright 2015 Association Computational Heresy leading source cutting-edge research Science Computational Archaeolinguistics Artificial Stupidity'),
('27 Free Data Mining Books', 'Skip content Home Data Mining Data Warehousing Us Contact Us 27 Free Data Mining Books know DataOnFocus love share information specially data sciences related subjects one best ways learn specific topic Reading book practice fresh knowledge acquired better increase knowledge studying high quality book subject like reading free work created epic list absolutelly free books data related subjects learn lot become expert aware complex subjects require previous knowledge resources provided pdf great well known books data mining machine learning predictive analytics big data referenced books different approaches subjects practical others specific programming stuff lot theorical concepts list offers distinct tastes subjects approaches making sure ll find suitable learning needs Introduction Statistical Learning Applications R Overview statistical learning based large datasets information exploratory techniques data discussed using R programming language Data Science Business need know data mining data-analytic thinking introduction data sciences principles theory explaining necessary analytical thinking approach kind problems discusses various data mining techniques explore information Modeling Data book focus processes solve analytical problems applied data particular explains theory create tools exploring big datasets information Big Data Data Mining Machine Learning Value Creation Business Leaders Practitioners resource reality big data explored benefits marketing point view also explains store kind data algorithms process based data mining machine learning Data Mining Practical Machine Learning Tools Techniques Full real world situations machine learning tools applied practical book provides knowledge hability master whole process machine learning Machine Learning Wikipedia Guide great resource provided Wikipedia assembling lot machine learning simple yet useful complete guide Data Mining Analysis Fundamental Concepts Algorithms great cover data mining exploratory algorithms machine learning processes explanations complemented statistical analysis Mining Social Web Data Mining Facebook Twitter LinkedIn Google GitHub exploration social web data explained book Data capture social media apps manipulation final visualization tools focus resource Probabilistic Programming Bayesian Methods Hackers book bayesian networks provide capabilities solve complex problems Also discusses programming implementations Python language Data Mining Techniques Marketing Sales Customer Relationship Management data mining book oriented specifically marketing business management great case studies order understand apply techniques real world Inductive Logic Programming Techniques Applications old book inductive logic programming great theoretical practical information referencing important tools Elements Statistical Learning Data Mining Inference Prediction Second Edition conceptual book terms data mining prediction statistical point view Covers many machine learning subjects Introduction Data Science introductory level resource developed american university presents overview important data science notions Mining Massive Datasets main focus book provide necessary tools knowledge manage manipulate consume large chunks information databases Programmer Guide Data Mining guide data mining concepts programming point view provides several hands-on problems practice test subjects taught online book Data Mining Rattle R Art Excavating Data Knowledge Discovery objective book provide lots information data manipulation focus Rattle toolkit R language demonstrate implementation techniques Reinforcement Learning introduction solid approach reinforcement learning thematic providing solution methods describes also important case studies Pattern Recognition Machine Learning Information Science Statistics book presents lot pattern recognition stuff based bayesian networks perspective Many machine learning concepts approached exemplified Machine Learning Neural Statistical Classification good old book statistical methodology learning techniques another important issues related machine learning Information Theory Inference Learning Algorithms interesting approach information theory merged inference learning concepts book taughts lot data mining techniques creating bridge information theory Predictive Analytics Power Predict Click Buy Lie Die Broken Link great predictive analytics book providing insight concept alongside case studies consolidate theory Introduction Machine Learning simple yet important book introduce everyone machine learning subject Data Mining Business Analytics R Another R based book describing processes implementations explore transform store information also focus concept Business Analytics Machine Learning complete book machine learning subject approching several specific useful techniques Think Bayes Bayesian Statistics Made Simple Python programming language approach bayesian statistical methods techniques applied solve real-world problems simulations Bayesian Reasoning Machine Learning Another bayesian book reference one focusing applying machine learning algorithms processes hands-on resource great absorb knowledge book Gaussian Processes Machine Learning theoretical book approaching learning algortihms based probabilistic gaussian processes supervised learning problems describing models solutions related machine learning Hope enjoy fantastic list free data mining machine learning resources hope choose suitable books raise level knowledge data sciences concepts list continuously updated fresh new stuff comment feel free contact us Search Exclusive Resources want become Data specialist useful resources 27 Free Data Mining Books Clustering Data Mining Data Mart vs Data Warehouse Data Warehouse Interview Questions Answers K Means Clustering Java Code OLTP vs OLAP Star schema Snowflake schema Tagsbasics books clustering concepts data data mining data warehousing information interview olap oltp oltp vs olap review reviews tutorial DataOnFocus Copyright 2015 Iconic One Theme'),
('Tutorial: Theorem Proving in Lean', ''),
('The coming funding crunch', "Geomblog Ruminations computational geometry algorithms theoretical computer science life Pages Job Search series posts conceptual view clustering Thursday March 19 2015 coming funding crunch It's secret we're middle another boom CS enrollment Departments everywhere struggling keep increased number students wanting get programs there's chain reaction potentially nasty consequences coming way obvious academic types might obvious community large even graduate students considering going academia Consider departments everywhere try adjust new load students two options hire lot teaching faculty teach classes start negotiating universities tenure-track positions latter clearly preferable don't believe look plight adjuncts humanities Universities live hiring faculty increased tuition students helps justify faculty means research grants hafta administration faculty means applications research awards various organizations dole money NSF NIH DARPA ONR DoE seen science budgets lately They're basically flat We've seen Ponzi scheme biology consequence average age first time PI crossed 40 coupled increased time spent postdocs It's norm rather exception CS see faculty candidates least one postdoc there's easy way de-escalate possible dams build bad difficult execute Don't hire faculty we're stuck ever increasing class sizes lower quality student education Hire contingent faculty might short term solution it's horrible way treat new Ph Ds frankly given options industry wouldn't get many takers least people think rationally De-link academic success funding encourage teaching mission complete non-starter schools rely overhead R1 universities research dollars bottomline factor prestige element don't even get started going affect already stretched-near-breaking-point conference review process Posted Suresh Venkatasubramanian 3 19 2015 10 58 00 Email ThisBlogThis Share TwitterShare FacebookShare Pinterest Labels funding Reactions Newer Post Older Post Home Subscribe Post Comments Atom Disqus Geomblog Amazon Contextual Product Ads Tweeterific Tweets follow Twitter Followers FeedBurner FeedCount Recent Comments Blog Archive 2015 21 May 4 April 3 March 2 Revisiting Misra-Gries estimator coming funding crunch February 6 January 6 2014 25 December 2 November 1 October 2 September 1 August 4 July 1 June 1 May 3 April 5 March 4 February 1 2013 36 November 2 October 4 September 4 August 5 July 1 June 2 May 5 March 2 February 2 January 9 2012 42 December 2 November 2 October 3 September 2 August 1 July 5 June 8 May 4 April 3 March 3 February 1 January 8 2011 74 December 10 November 7 October 3 September 5 August 1 July 2 June 10 May 3 April 5 March 4 February 14 January 10 2010 77 December 1 November 5 October 10 September 2 August 7 July 2 June 17 May 12 April 1 March 4 February 11 January 5 2009 92 December 1 November 5 October 3 September 7 August 3 July 8 June 13 May 5 April 11 March 18 February 9 January 9 2008 86 December 8 November 4 October 1 September 5 August 3 July 5 June 19 May 9 April 8 March 4 February 6 January 14 2007 136 December 10 November 9 October 6 September 15 August 7 July 11 June 6 May 13 April 13 March 15 February 15 January 16 2006 131 December 3 November 11 October 8 September 14 August 14 July 7 June 14 May 12 April 13 March 8 February 12 January 15 2005 255 December 10 November 8 October 21 September 16 August 14 July 14 June 29 May 34 April 25 March 19 February 34 January 31 2004 287 December 34 November 24 October 32 September 29 August 24 July 26 June 50 May 17 April 28 March 23 Ground State www kdnuggets com - Analytics Big Data Data Mining Data Science Resources Things I'm reading Labels research 136 community 87 miscellaneous 55 soda 37 conferences 36 data-mining 31 socg 29 blogosphere 26 publishing 25 clustering 23 jobs 21 teaching 20 funding 18 awards 17 humor 17 outreach 15 cs CG 13 nsf 13 focs 12 socg-2010 12 stoc 12 academy 10 latex 10 acm 9 reviewing 9 workshops 9 cs DS 8 cs LG 8 geometry 8 p-vs-nc 8 sabbatical 7 simons foundation 7 writing 7 advising 6 announcement 6 big-data 6 conf-blogs 6 deadline 6 jeff phillips 6 streaming 6 large-data 5 p-vs-np 5 books 4 cra 4 focs2010 4 icdm 4 math PR 4 memorial 4 personal 4 posters 4 potd 4 rajeev motwani 4 shonan 4 socg2012 4 software 4 stoc2012 4 GIA 3 SDM 3 alenex2011 3 arxiv 3 career 3 complexity 3 cs CC 3 cstheory 3 deolalikar 3 distributions 3 madalgo 3 sdm2011 3 shape 3 talks 3 technology 3 theory SE 3 travel 3 video 3 8f-cg 2 DBR 2 ICS 2 LISPI 2 acceptances 2 alenex 2 bibtex 2 bregman 2 cfp 2 column 2 combinatorial geometry 2 current-distance 2 ecml-pkdd 2 empirical 2 esa 2 focs2012 2 focs2014 2 fwcg 2 game theory 2 godel 2 graphs 2 implementation 2 journals 2 kernels 2 nips 2 obituary 2 productivity 2 programming 2 society 2 soda2011 2 topology 2 turing 2 women-in-theory 2 02 1 IMA 1 MOOC 1 PPAD 1 accountability 1 active-learning 1 ams 1 analco 1 barriers 1 beamer 1 blogging 1 candes 1 classification 1 coding-theory 1 coffee 1 conjecture 1 cosmos 1 counting 1 cricket 1 cs DC 1 databuse 1 dimacs 1 dimensionality-reduction 1 distributed-learning 1 duality 1 eda 1 embarrassing 1 expanders 1 experiments 1 fairness 1 fellowships 1 focs2013 1 fonts 1 gct 1 ggplot 1 gpu 1 graph minors 1 guitar 1 hangouts 1 hirsch 1 history 1 ipe 1 jmm 1 k-12 1 knuth 1 machine-learning 1 massive 1 math ST 1 media 1 memes 1 metrics 1 misc 1 models 1 morris 1 multicore 1 narrative 1 networks 1 nih 1 parallelism 1 partha niyogi 1 polymath 1 polymath research 1 polytopes 1 postdocs 1 privacy 1 quant-ph 1 quantum 1 randomness 1 sampling 1 seminars 1 social-networking 1 soda2014 1 submissions 1 summer-school 1 superbowl 1 surveys 1 svn 1 television 1 traffic 1 twitter 1 utah 1 wads 1 xkcd 1 Blogs read Picture Window template Powered Blogger"),
('A closer look at problem state encoding in genetic algorithms through electronics', 'Skip content Maker Maker Approach Artificial Intelligence Primary Menu Home GitHub RSS Contact closer look problem state encoding genetic algorithms electronics March 29 2015April 1 2015 atrilla Encoding problem state information genetic algorithm GA one cumbersome aspects deployment GA deals binary vectors format must comply order find optimum solutions technique depending strategy choose solution search process may different GA algorithm may take less time space reach order display issues go complete example electronic circuit post Specifically circuit analysis non-inverting amplifier built OP07 operational amplifier see Figure 1 goal discrete optimisation problem find optimum values two resistors Rf Rg finite set may available store circuit implementable maximise symmetric excursion 1V peak input sinusoidal signal without clipping Let synthesise circuit GA Figure 1 Schematic non-inverting amplifier Source Wikipedia Schematic non-inverting amplifier First step encode resistor value alone binary array good approach represent bits integer number weight bit directly related specific weight resistive spectrum e significant bits always correspond high resistor values vice-versa see Figure 2 also tried follow colour-based encoding resistors display e like mantissa exponent much failure suspect given non-linear relation bit weight resistance value Note must still check represented number within accepted range resistor values Otherwise discard assigning bad fitness score likely disappear evolution process example ll using 10 standard resistor values 10 ohm 820k ohm 60 different values total 6 bits Figure 2 Resistor value encoding crossover Resistor value encoding crossover Next encode two resistor values array create initial population end append one resistor build aggregate individual like Rf Rg see Figure 2 combine crossover point keep value one resistor stable evolving improvement makes perfect sense output function non-inverting amplifier given fitness function used evaluate effectiveness solution mainly driven inverse error symmetric excursion recall greater scores better individuals Taking account power supply 15V OP07 saturates 12V let fix maximum symmetric excursion output 20V e avoid signal clipping set re ready start optimising look fitness surface GA algorithm deal see Figure 3 shows hard time dealing many extrema Note maxima located 9x slope line indicates solution must maintain ratio 9 Rf Rg Also note resistors placed lower end resistance range tend stable consume power ones placed higher end range draw less current unstable Since none considerations included fitness function GA procedure may end local maxima e g fitness score Figure 3 Fitness surface plot Fitness surface plot performance brute-force exhaustive iterative search solution taken reference computational complexity time amount possible resistor values e 60 number resistors circuit e 2 yields search space 3600 states matter fancy GA may small search space exhaustive linear search much faster takes less second GA takes 5 secs 4 resistors though search space 12M two approaches take 10 secs bound GA able perform better Long days engineers assemble prototype circuits breadboard optimise numerical values components see video 6 15 Posted Electronics Optimisation Post navigation genetic algorithmsGradient-based methods Leave Reply Cancel reply email address published Required fields marked Name Email Website Comment may use HTML tags attributes href title abbr title acronym title b blockquote cite cite code del datetime em q cite strike strong Search Recent Posts Artificial Neural Networks point Gradient-based methods closer look problem state encoding genetic algorithms electronics genetic algorithms simulated annealing algorithm Follow ai_maker Facebook AI-Maker LinkedIn SubscribeLeave Blank Change email Categories Electronics Optimisation Search Uncategorized Archives May 2015 April 2015 March 2015 February 2015 January 2015 December 2014 Proudly powered WordPress Theme Plainly Chris Rudzki'),
('Hacking and Computer Science Education', 'Request storySign Sign upPanashe Mahachi Mar 294 minNext storyNext storyThe author chose make story unlisted means people link see sure want share Yes show sharing optionsHacking Computer Science Education Share Twitter Share FacebookHacking Computer Science EducationNote post isn talking everyone talking hackers Hackers defined Individuals try write interesting software use computers medium express Perhaps one day computer science like Yugoslavia get broken component parts might good thing Especially meant independence native land hacking Paul GrahamHackers need understand theory computation much painters need understand paint chemistry Paul GrahamThe preceding quotes really got thinking future computer science education Fundamentally computer science involves math heavy theory algorithms ve thinking late future education Back 90s computer science much less popular today programmers back stood true computer science feel like quite case believe shift away studying computer science hacking hacker schools believe case Lots curriculums rigid start really low goes current trends 2 People want create products abstraction hot thing 3 School becomes barrier Point 1 Curriculums rigid start really low Fundamentally brick mortar education isn going change much stake probably isn feasible school change curriculum massive issue especially computer science people taking initiative learn code early teens even earlier cases learning teens create products re exposed computer science concepts pure necessity Ex algorithm slow game won fun classes good object oriented principles create custom feature etc believe creates two problems computer science education First hackers enter first year sometimes taught introductory material exposed Sometimes exposed new material upper years hacker mentality way long wait ends creating problems re caught string manipulation based assignments learning classes etc quite bit time optimal Second believe long term cause computer science faculties lower standards wave hackers really massive current trends show people aren necessarily interested content institution move fast enough people inevitably get lower marks even though understand content Marks doesn always equal understanding content could really cause lot people fail standards lowered Point 2 People want create products abstraction hot thing really believe reason computer science popular people want make stuff Whether silly app world changing technology get former studying computer science school computer science curriculum teaches plain simple believe studying computer science get latter either re truly passionate creating world changing technology software take initiative self study resources online staggering Research papers amazing technology MOOCs readily available click hack around see works doesn addition abstraction hot thing Hackers flock incoming students want deal pointers memory allocation like People want abstraction want write high level programs essentially like English want fast possible goes core computer science goes right line hacking creating products advantageous use powerful tool possible Often times tool extremely abstract Point 3 School becomes barrier Traditional computer science education creates massive barrier hackers believe caps personal growth know many amazing hackers given free time create products people use download m talking small numbers m talking 500k cases 2m free time scarce rigour computer science education wouldn bad learned class often related hacks find rarely ever case implement insert favourite sorting algorithm name mentioned earlier pure neccesity learn - time works favour barrier think could inner frustrations hackers trapped computer science face computer science hacking separated Paul Graham hopes perhaps less stigma dropping computer science program hack join Hacker school could potentially release new wave interesting products solve interesting problems really believe gap computer science education hacker mentality believe continue escalate people start coding earlier lives interesting see things like MakeSchool progress RecommendRecommendedBookmarkBookmarkedShareMoreBlockedUnblockFollowFollowingPanashe Mahachi1A CS uwaterlooPublished Mar 29 rights reserved author'),
('Going Against the Flow for Type-less Programming [PDF]', 'PDF-1 5 1 0 obj endobj 4 0 obj Introduction endobj 5 0 obj endobj 8 0 obj Type-less endobj 9 0 obj endobj 12 0 obj Experience endobj 13 0 obj endobj 16 0 obj Technology endobj 17 0 obj endobj 20 0 obj Discussion Limitations endobj 21 0 obj endobj 24 0 obj Related Work endobj 25 0 obj endobj 28 0 obj Conclusion endobj 29 0 obj endobj 47 0 obj'),
('Maze Algorithms (visual)', "Maze Algorithms you're interested maze algorithms I've written book subject Mazes Programmers Check source code demos freely available http github com jamis csmazes Recursive Backtracking Eller's Algorithm Kruskal's Algorithm Prim's Algorithm Recursive Division Aldous-Broder Algorithm Wilson's Algorithm Hunt Kill Algorithm Growing Tree Algorithm E g random 50 newest 30 oldest 75 middle 100 comma-delimited combination must click reset maze recognize changes Binary Tree Algorithm Sidewinder Algorithm"),
('Anyone know of an online course that covers the material in this syllabus (with lecture videos would be preferred)?', "JavaScript isn't enabled browser file can't opened Enable reload Sign in53 Schedule Syllabus ShareFileEditViewHelpAccessibilityDebug nbsp Toggle screen reader support"),
("Summary of 'Computing Machinery and Intelligence' (1950) by Alan Turing", "Home Summary 'Computing Machinery Intelligence' 1950 Alan Turing 22 Mar 2015 - London England Machines Think question begins Alan Turing's paper 'Computing Machinery Intelligence' 1950 However found form question unhelpful even process defining 'machines' 'think' common terms would dangerous could mistakenly lead one think answer obtained kind statistical survey Instead replaced question 'The Imitation Game' - game two rooms one sits man woman B sits interrogator C must determine two man woman series typewritten communication 1 A's objective cause C make incorrect identification B's objective help C make correct identification Turing noted best strategy woman B probably give truthful answers adding things like woman don't listen answers alone enough man make similar remarks reframed original question 'What happens machine takes role ' interrogator still decide incorrectly many times role performed machine Testing Machine Intelligence critiquing new problem Turing satisfied clear line drawn physical intellectual capacities humans separation rooms use written communication remarked little point 'thinking machine' looking sounding feeling like human purpose testing intelligence defined meaning word 'machine' within context game Initially stated kind engineering technique permitted yet desire exclude natural born humans biological creations fact interest thinking machines time driven specific kind machine concluded 'machine' game refer 'digital computer' Digital Computers Given computers something take granted today it's fascinating Turing starts definition digital computers using analogy human computer - human would follow set fixed rules using unlimited supply paper calculations Putting headspace analogy required humbling noted idea digital computer old one referencing various Analytical Engine designs produced Charles Babbage death 1871 Although mechanical design found ideas less importance Turing defined digital computer Store infomation calculations rules computer must follow Executive unit carries individual operations Control ensures instructions performed accordance rules correct order Numbers assigned parts store allowing machine receive instructions like 'Add number stored position 6809 4302 put result back latter storage position' instructions would expressed machine language something like - '6809430217' - 17 references type instruction defined rulebook Normally instructions carried order stored memory unless instruction contains logic asks control continue instruction another storage location creation rules computer must follow described programming highlighted ability define logic important factor mimicing ability human computer Turing predicted year 2000 would possible program computers play 'The Imitation Game' well average interrogator 70 chance making right identification 5 minutes questioning 2 Contrary Views putting arguments forward Turing went great length refute expected objections Theological Objection Argument Thinking function man's immortal soul God given immortal soul every man woman animal machines Hence animal machine think Response Turing could accept part argument rejected idea thinking machines would usurp God's power creating souls humans procreation children Head Sand Objection Argument consequences machines thinking would dreadful Let us hope believe cannot Response claimed argument would likely quite strong intellectual people since value power thinking highly others inclined base belief superiority Man power Turing feel argument sufficiently substantial require refutation Mathematical Objection Argument number results mathematical logic used show limitations powers discrete-state machines best known results known Godel's theorem 1931 shows sufficiently powerful logical system statements formulated neither proved disproved within system Response acknowledged limits powers machine saw proof limits also apply human intellect expected holding mathematical argument would willing accept 'The Imitation Game' basis discussion unlike previous two arguments Argument Consciousness Argument machine cannot match brain conscious moved act it's thoughts emotions Response According view way know man thinks particular man noted may logical view hold makes communication ideas difficult liable believe thinks B whilst B believes B thinks instead arguing continually point usual polite convention everyone thinks accepted certain mystery nature consciousness see impact question Arguments Various Disabilities Argument Machines may things mentioned never able make one X Insert fall love sense humour etc Response argued support usually offered statements mostly founded basis scientific induction thousands machines people seen - ugly designed limited purpose required minutely different purpose useless etc Naturally conclude true machines Turing believed diversity behaviour would directly increase storage capacity growing exponentially Lady Lovelace's Objection Argument Lady Lovelace's memoir stated Babbage's Analytical Engine pretensions originate behaviour it's Response Turing agreed Hartree's 1949 analysis despite fact machines constructed projected time seem property imply impossibility constructing electronic equipment 'think itself' Argument Continuity Nervous System Argument nervous system certainly discrete-state machine small error information size nervous impulse impinging neuron may make large difference size outgoing impulse therefore one cannot expect able mimic behaviour nervous system discrete-state system Response agreed discrete-state machine must different continuous machine adhering conditions 'The Imitation Game' interrogator able take advantage difference would possible sufficiently mimic continous outputs required Argument Informality Behaviour Argument possible produce set rules purporting describe man every conceivable set circumstances One might instance rule one stop one sees red traffic light go one sees green one fault appear together One may perhaps decide safest stop difficulty may well arise decision later attempt provide rules conduct cover every eventuality even arising traffic lights appears impossible Response Turing reformed argument 'if men acted based rules would better machines rules men cannot machines' argues men clearly governed laws behaviour laws nature applied men 'if pinch man squeak' Rules conduct man follows harder ascertain found scientific observation circumstances one could say searched enough laws Argument Extrasensory Perception Argument Unlike machines humans possess Extrasensory Perception viz telepathy clairvoyance precognition psychokinesis Response Turing felt argument strong yet noted many scientific theories seem remain workable practice spite clashing ESP fact one get along nicely one forgets acknowledged much comfort domain thinking one ESP may especially relevant telepathy admitted test may need modified use 'telepathy-proof room' Learning Machines Given Turing's lengthy analysis objections suspected reader would think arguments however devoted remainder paper views summary Consider human mind like skin onion layer find mechanical operations explained mechanical terms say layers correspond real mind - true found ever peel back onion layer find real mind really satisfactory support thinking machines provided waiting end century playing 'The Imitation Game' problem mainly one programming rather engineering data storage problem Estimates storage capacity brain vary 1010 1015 binary digits small fraction used higher types thinking likely used retention visual impressions would surprising 109 required satisfactory playing 'The Imitation Game' Think process brought adult mind initial state mind birth education subjected experience described education subjected separate problem two first create child's brain educate experimentation machine teaching methods could emulate evolutiontionary process Opinions may vary complexity child machine one might try make simple possible following general principles alternatively one might complete system logical inference built Regulating order rules logical system applied important stage would large number valid alternative steps choices mean difference brilliant poor reasoner important feature learning machine teacher often largely ignorant going inside although may still able extent predict pupil's behavior clear contrast normal procedure using machine computations one's object clear mental picture state machine moment computation Intelligent behaviour presumably consists departure completely disciplined behaviour involved computation probably wise include random element learning machine random element rather useful searching solution problem systematic method disadvantage may enormous block without solutions region investigated first learning process may regarded search form behaviour satisfy teacher criterion Since probably large number satisfactory solutions random method seems better systematic noticed used analogous process evolution systematic method possible could one keep track different genetical combinations tried avoid trying Conclusion may hope machines eventually compete men purely intellectual fields best ones start Even difficult decision Many people think abstract activity like playing chess would best also maintained best provide machine best sense organs money buy teach understand speak English process could follow normal teaching child Things would pointed named etc know right answer think approaches tried see short distance ahead see plenty needs done Read Original Paper Sidenotes 1 well-known 'Turing Test' actually proposed Turing interpretation also called 'Standard Interpretation' 'The Imitation Game' 2 first look seems like measured calculated prediction doubt typical Turing's character yet quite Related Posts Spent 3 Days Sandi Metz Learned Aug 2014 Getting Started Elasticsearch Nov 2013 Jack Hoy Software Engineer thinking intelligent systems lean startups well-being Sharing findings Follow hackjoy Stay touch hackjoy hackjoy jackhoy05 gmail"),
('Search De-Optimization', "Menu HomeAbout Search Skip content Phalanxed Noise Bing Branch Prediction Computer Science Content Data Facebook Functionality Futurology Google Information Internet SEO Technology Utility Wikipedia Wordpress Yahoo Youtube Search De-Optimization Posted March 27 phalanxednoise Words easily used different meanings popularity one meaning bury popularity another Take general term like Formula instance search term Wikipedia ll directed page Formula symbolic expressions used describe things well-defined logical manner type term YouTube though search come lot race car videos anyone using term YouTube latter sense obviously problem since terms used widely different meanings popularity one meaning obstruct searches interested another meaning Even dominant meaning term still obviously undesirable consequences One interests example philosophy found general searches philosophy often pull lot information interest efficiency indexing systems compromised shifting conflicted usages terminology immediate question follows difficulty minimized Tag category terms clearly help since serve narrow context search performed technology really serve needs constantly aware importance devising systems optimize ability come across things would enjoy might unaware respect means putting onus user enjoy music Mozart example also might enjoy music Vivaldi constant searching Mozart may never lead Conversely widen search classical music might inundated various different types media artists lectures theory etc become disinclined use search platform search Even said platform content m looking seems ideally information search platform structured maximize partitioning make partition accessible least number steps Let say egg carton full eggs different species birds 12 species let say wanted come way group eggs according significant variations Obviously want practically useful subsets group might mean something like set North American Birds set Delicious Eggs leads though inference element set would ideally something like searchable set properties embedded attached element might want put eggs different carton point regardless element-object exported retain fully defined status depend sharing constantly update relevant information needed whatever new search platform introduced Said platforms turn would maximize ability utilize information creating searches allow user access entire search tree hierarchy search something really general Wikipedia like Format instance introduced list different ways term Format used list arbitrarily created though rather generated algorithm someone take time organize kind dependency people gathering terms together eliminated lot branch prediction usually done eliminated well fully optimized search engine allow user explore every possible branch information architecture give user choice go forwards backwards anywhere else every single node Using user search inputs may able eliminate large subset information available one step shouldn arbitrary decide point push user one particular node content example one third tier nodes graph presumably want access least one four bottom nodes within branch search engine point shouldn throw one simply weighting function popular choice automatically decided upon Instead provide list available options means evaluate may know search term would allow access one four bottom nodes may possess shibboleth access might want access internet ever going maximize potential meeting needs users going place decision making apparatuses within user control course mean full customization features people prefer make decisions people prefer make decisions search system doesn support needs sub-optimal movement works towards anything satisfying needs movement towards de-optimization Image taken http www ethblue com cyoa essay html Share TwitterFacebookGoogleLike Like Loading Related Bing Branch Prediction Computer Science Content Data End User Facebook Functionality Futurology Google Information Internet Optimization Organization Search SEO Technology Wikipedia Wordpress Yahoo YouTube Post navigation Haiku Chicken Nugger Leave Reply Cancel reply Enter comment Fill details click icon log Email required Address never made public Name required Website commenting using WordPress com account Log Change commenting using Twitter account Log Change commenting using Facebook account Log Change commenting using Google account Log Change Cancel Connecting Notify new comments via email Search Recent Posts Thoughts Propositional Forms Disentangling Kierkegaard Definition Self Justified Belief Knowledge Solution Gettier Problem Anxiety Dizziness Freedom Kierkegaard Perceivers Perceptions Perceptiveness Recent Comments phalanxednoise Philosophy Pseudophilo flubber Philosophy Pseudophilo Ompong Justified Belief Knowledge phalanxednoise Justified Belief Knowledge Ompong Justified Belief Knowledge Archives May 2015 April 2015 March 2015 Categories Absurdity Academia Achievement Adventure Advertising Aesthetics Alfred Rethel Aliens Alternative Analytical Animals Apocalypse Aristotle Art Auschwitz Balance Ballet Basho Bees Bilyana Ilivska Bing Biology Birds Birth Book Review Books Bralowski Branch Prediction Buson Butcher's Block Causality Cause Centaur Charity Charlie Rose Chicken Children Chora Christianity City Comedy Communication Computer Science Confucius Content Conversation Cool Cooperation Courage Creativity Critical Theory Crows Culture Dachau Dance Dante Dao Data Deanna FOng Death Debate Deconstruction Demon Artifact Despair Dialectics Dialog Disaster Discussion Doc's Song Donald Davidson Dragonhouse Drawing Dreams Drepression Drumming Dubstep economy Edgar Allen Poe Education Edward Gorey Enlightenment Entomology Epistemology Equilibrium Eschatology Essay Ethics Existentialism Exopolitics Extraterrestrials Fables Facebook Fairy Tales Fantasy Fiction Finger First Amendment First Contact Flight Food Footwork Bill Free Verse Freedom Friendship Fun Functionality Fusei Futility Futurology Game Gaming Gastronomy Genius Get Gnomes Goals God Godel Google Gutei Haikai Haiku Hardship Harmony Harold G Henderson Hatred Health Hegel Heidegger Hell Herons Hip Hop Hokku Homeless Hope humanity Humor Icarus Ice Breaker Ideology iGlide Imagination Indeterminacy Indeterminism Information Insects Internet Interpol Interview Iran Issa Japanese Art Jargon John Dewey Jokes Journals Julius Chisolm June Jordan Kagai Kierkegaard Knights Knowledge Koan Kong Fuzi Lao Tse Lao Tzu Laughter Life Literary Criticism Literature Logic Logos Loss Macabre Magic Magical Realism Mars Meaning Measurement Problem Media Meditation Meet Muster Station Melanesia Mental Illness Metaphysics Michael Dummett Miinimalism Mind Modding Monsters Moon Motivation Mumon Music Mysticism Myth Mythology NASA Native America Nature Necromancy Nemesis Neo Gothic Neurophilosophy Nietzsche Nirvana Nonsense Obsolescence Ogden Nash Online Ontology Optimism Orinthology Parable Paradox Parenting peace People Perception Perserverance Persia Phenomenology Philosophy Physics Piano Pistol Press Poetry politics Post Apocalypse Post Modernism Post Punk Post Structuralism Postpunk Procrastination progress PS Love Psychology Psychosis Publishing Quantum Mechanics Quest Quotes Ranko Reality Reason Relationships Relax Research Rhetoric Robert Frost Rock Rodin Rostam Batmanglij Sadness Sales Schrodinger's Cat Science Science Fiction Sculpture Seasons security Self SEO SETI Shiki Short Story Skepticism Skyrim Snow White Socializing Society Sociobiology Socrates Soliloquy Sonic Sorcery Space Spelling Spring Sri Lanka Stalin Steam Punk Strangers Strategy Summer Superposition Surrealism Tales Talking Tao Team Building Technology Analects East First Move future Holocaust world Thomas Tank Engine Time Totalitarianism Tractatus Logico Philosophicus Tragedy Translation Trap Truth Turing Ubermensch Uncategorized Uncertainty Understanding united nations Utility videogamedunkey Voyager Waste Land Wikipedia William Blake Wisdom Wittgenstein Wizards Women Wordpress World Peace Writers Writing Xenophobia Yahoo Youth Youtube Zen Zizek Meta Register Log Entries RSS Comments RSS WordPress com Search Recent Posts Thoughts Propositional Forms Disentangling Kierkegaard Definition Self Justified Belief Knowledge Solution Gettier Problem Anxiety Dizziness Freedom Kierkegaard Perceivers Perceptions Perceptiveness Recent Comments phalanxednoise Philosophy Pseudophilo flubber Philosophy Pseudophilo Ompong Justified Belief Knowledge phalanxednoise Justified Belief Knowledge Ompong Justified Belief Knowledge Archives May 2015 April 2015 March 2015 Categories Absurdity Academia Achievement Adventure Advertising Aesthetics Alfred Rethel Aliens Alternative Analytical Animals Apocalypse Aristotle Art Auschwitz Balance Ballet Basho Bees Bilyana Ilivska Bing Biology Birds Birth Book Review Books Bralowski Branch Prediction Buson Butcher's Block Causality Cause Centaur Charity Charlie Rose Chicken Children Chora Christianity City Comedy Communication Computer Science Confucius Content Conversation Cool Cooperation Courage Creativity Critical Theory Crows Culture Dachau Dance Dante Dao Data Deanna FOng Death Debate Deconstruction Demon Artifact Despair Dialectics Dialog Disaster Discussion Doc's Song Donald Davidson Dragonhouse Drawing Dreams Drepression Drumming Dubstep economy Edgar Allen Poe Education Edward Gorey Enlightenment Entomology Epistemology Equilibrium Eschatology Essay Ethics Existentialism Exopolitics Extraterrestrials Fables Facebook Fairy Tales Fantasy Fiction Finger First Amendment First Contact Flight Food Footwork Bill Free Verse Freedom Friendship Fun Functionality Fusei Futility Futurology Game Gaming Gastronomy Genius Get Gnomes Goals God Godel Google Gutei Haikai Haiku Hardship Harmony Harold G Henderson Hatred Health Hegel Heidegger Hell Herons Hip Hop Hokku Homeless Hope humanity Humor Icarus Ice Breaker Ideology iGlide Imagination Indeterminacy Indeterminism Information Insects Internet Interpol Interview Iran Issa Japanese Art Jargon John Dewey Jokes Journals Julius Chisolm June Jordan Kagai Kierkegaard Knights Knowledge Koan Kong Fuzi Lao Tse Lao Tzu Laughter Life Literary Criticism Literature Logic Logos Loss Macabre Magic Magical Realism Mars Meaning Measurement Problem Media Meditation Meet Muster Station Melanesia Mental Illness Metaphysics Michael Dummett Miinimalism Mind Modding Monsters Moon Motivation Mumon Music Mysticism Myth Mythology NASA Native America Nature Necromancy Nemesis Neo Gothic Neurophilosophy Nietzsche Nirvana Nonsense Obsolescence Ogden Nash Online Ontology Optimism Orinthology Parable Paradox Parenting peace People Perception Perserverance Persia Phenomenology Philosophy Physics Piano Pistol Press Poetry politics Post Apocalypse Post Modernism Post Punk Post Structuralism Postpunk Procrastination progress PS Love Psychology Psychosis Publishing Quantum Mechanics Quest Quotes Ranko Reality Reason Relationships Relax Research Rhetoric Robert Frost Rock Rodin Rostam Batmanglij Sadness Sales Schrodinger's Cat Science Science Fiction Sculpture Seasons security Self SEO SETI Shiki Short Story Skepticism Skyrim Snow White Socializing Society Sociobiology Socrates Soliloquy Sonic Sorcery Space Spelling Spring Sri Lanka Stalin Steam Punk Strangers Strategy Summer Superposition Surrealism Tales Talking Tao Team Building Technology Analects East First Move future Holocaust world Thomas Tank Engine Time Totalitarianism Tractatus Logico Philosophicus Tragedy Translation Trap Truth Turing Ubermensch Uncategorized Uncertainty Understanding united nations Utility videogamedunkey Voyager Waste Land Wikipedia William Blake Wisdom Wittgenstein Wizards Women Wordpress World Peace Writers Writing Xenophobia Yahoo Youth Youtube Zen Zizek Meta Register Log Entries RSS Comments RSS Create free website blog WordPress com Create free website blog WordPress com Eighties Theme Follow Follow Phalanxed Noise Get every new post delivered Inbox Join 97 followers Build website WordPress com d bloggers like"),
('Contextual String Manipulation', "Package Index Browse packages Package submission List trove classifiers List packages RSS latest 40 updates RSS newest 40 packages Python 3 Packages PyPI Tutorial PyPI Security PyPI Support PyPI Bug Reports PyPI Discussion PyPI Developer Info News Documentation Download Community Foundation Core Development Package Index contex 1 0 Logged Login Register Lost Login Use OpenID contex 1 0 Downloads Contextual string manipulation Latest Version 3 library provides two related abstractions StringContext MatchContext problem abstractions ll present two problems library attempts solve first one rather contrived second one realistic Afterwards show contex help Problem 1 string abcde want surround index 2 parentheses Thus '' join string 2 string 2 string 2 something similar inelegant bugprone hard read StringContex tries solve problem Problem 2 bunch files form Photo number jpg problem numbers one high Photo034 jpg actually Photo033 jpg hard problem doesn feel good solve almost-solutions One attempt use re sub could re sub r' 0-9 ' lambda match ' 0 3 ' format int match group 1 - 1 'Photo034 jpg' 'Photo033 jpg' fragile solution deal complicated filenames happens filenames Vacation2008Photo_034 jpg longer decide right end regex r' 0-9 ' format 'Vacation2008Photo_' r' jpg' regex ' Vacation2008Photo_ 0-9 jpg ' re sub regex lambda match ' 0 3 ' format int match group 1 - 1 'Vacation2008Photo_034 jpg' 'Vacation2008Photo_033 jpg' wonderful sight works obviously isn desirable Contex rescue thesis abstractions aren fit sort problem problems hit hurts speak order solved elegantly require context one dimensional world strings means came came part string focusing right exactly StringContext contains 3 parts focus import contex contex 'Hello' StringContext '' 'Hello' '' contex 'abcde' 2 StringContext 'ab' 'cde' '' contex 'abcde' 2 0 StringContext '' 'a' 'bcde' contex 'abcde' 2 StringContext 'ab' 'c' 'de' view contex 'abcde' 2 view view focus view 'ab' 'c' 'de' view replace lambda focus ' ' format focus StringContext 'ab' ' c ' 'de' str view replace lambda focus ' ' format focus 'ab c de' see slicing function shifting focus string want look part points true StringContext MatchContext treated immutable objects methods change stuff doesn mutate returns new version methods operates full string merely focus point StringContext reverse doesn reverse focus reverses everything StringContext search searches everything get picture 3 composite parts normal strings rejected idea tree StringContext objects seemed complicated confusing useful Methods needs str arguments also accept StringContext arguments converted str automatically MatchContext MatchContext get regular expression searches subclass StringContext contains information relevant match search created namely span - start end tuple indices string start end referred points - various regex groups happened match also contains useful methods pertaining regex groups like MatchContext group MatchContext expand Q happens regex spans manipulate string example MatchContext replace move around sensible ways details found docstring MatchContext replace gist focus grows length 3 replace point end focus also grows 3 point focus stays middle focus might shrink focus becomes small contain d use solve problem number 2 contex match 'Vacation2008Photo_034 jpg' r'Vacation2008Photo_ P number 0-9 jpg' MatchContext '' 'Vacation2008Photo_034 jpg' '' m contex match 'Vacation2008Photo_034 jpg' r'Vacation2008Photo_ P number 0-9 jpg' m group number MatchContext 'Vacation2008Photo_' '034' ' jpg' m group 'number' replace lambda num ' 0 3 ' format int num - 1 MatchContext 'Vacation2008Photo_' '033' ' jpg' result m group 'number' replace lambda num ' 0 3 ' format int num - 1 str result 'Vacation2008Photo_033 jpg' group method like slicing says want look part string Using Contex contex package contains 4 functions string search string pattern flags 0 match string pattern flags 0 find string substring bringing string world contex converting StringContext object search match regex searches find normal string search contex also contains StringContext MatchContext classes Developing Contex documented tested Run nosetests python3 setup py test run tests License library licensed GNU General Public License 3 later README file public domain File Type Py Version Uploaded Size contex-1 0-py3-none-any whl md5 Python Wheel py3 2015-03-28 12KB contex-1 0 tar gz md5 Source 2015-03-28 9KB Downloads Versions 48 downloads last day 308 downloads last week 1190 downloads last month Author Mattias Ugelvik Home Page https notabug org Uglemat Contex License GPL3 Categories License OSI Approved GNU General Public License v3 later GPLv3 Programming Language Python 3 Topic Text Processing General Package Index Owner Uglemat DOAP record contex-1 0 xml Website maintained Python community Real-time CDN Fastly hosting Rackspace design Tim Parkin Copyright 1990-2014 Python Software Foundation Legal Statements"),
('Logic solvers in JavaScript', 'Logictools Solve Propositional logic Predicate logic Download Solve propositional formula syntax - b -b Solve using dpll better dpll old dpll naive truth table better truth table naive resolution better resolution naive showing trace html trace console trace Build truth table clause normal form parse tree Generate problem type random 3-sat combinations small unsat variables Clear problems satlib competitions Result Process milliseconds Syntax Use either conventional formula syntax like - b -b dimacs version clause normal form syntax like -1 2 1 -2 conjunction disjunction lines numbers standing variables last example means simply -x1 v x2 x1 -x2 conventional formula syntax negation symbols - conjunction symbols disjunction symbols v V xor symbols xor implication symbols - equivalence symbols - operator precedence operators bound left b v c d v e read b v c d v e dimacs may use skip initial comment lines starting c special p line final 0 symbols end disjunct allow trailing 0-s end line e may use full dimacs version like c comment p cnf 2 3 -1 2 0 1 0 -2 0 -1 2 1 -2 hide syntax Close Solve propositional formula Solving classical propositional formula means looking values variables formula becomes true example - b becomes true b assigned true select try several solver algorithms DPLL better best solver amongst options Read differences algorithms One single suitable set values enough solution solver algorithms stop try find additional solutions solver algorithms output suitable values output partial set may also happen formula false possible values variables solver algorithms report exhausting search options example - b -b always false Notice check whether formula F always true trying solve negated formula -F case -F always false F must always true algorithms may optionally output trace search process Select html trace see search process read search methods used algorithms formula-syntax input solvers first convert formula clause normal form certain kinds formulas conversion step may create huge output cases sensible simplification actual search Close Build three building options truth table clause normal form parse tree simple useful utilities truth table prints full truth table formula 1024 rows nice checking small propositional formulas clause normal form conjunctive normal form used solvers conversion algorithm used simple perform optimizations many cases optimized converters like Tseitin transformation would give much smaller output much faster parse tree prints formula nested list built simple recursive descent parser list later used clause normal form converter build form suitable solvers Check parse tree case sure system understands formula Close Generate problem Generate problem generate example problem simple DIMACS format clause normal form suitable solvers options type problem random 3-sat generates random set clauses length 3 using number variables choose problems containing variables average harder solve number clauses always four times number variables average specially hard-to-solve ratio solvers DPLL try 200 variables Truth table solvers start running trouble 20 variables resolution provers bit better truth table solvers yet much worse DPLL solvers combinations generates set clauses representing possible combinations input variables set unsatisfiable e values variables make true number clauses hence always two power number variables small unsat generates small unsatisfiable clause set consisting single long clause containing variables N single-element clauses containing variables negated clear button simply clears input field result also browse read contents file input area essentially copy-paste file'),
('Turing Machines and the Busy Beaver Game', 'Close Search Home Categories Culture General Mobile Apps Operations Careers Recent Posts Automate Mobile Testing Part 4 Mobile Automation Series Making Big Ideas Small Working Remote Employee Automate Mobile Testing Part 3 Menu Tweet Share Turing Machines Busy Beaver Game Mishkin Faustini 6 min read March 24 2015 bigger complex computational systems become less seem know foundations work foundation conceptual theory however necessary understanding essentials computing extension building better systems Though difficult overstate importance people know anything one first computing machines ever Turing machine part Turing machine relegated history referential pages shouldn 1936 seminal paper Computable Numbers Application Entscheidungsproblem Alan Turing describes Turing machine way hypothetical mechanical machine capable computation via relatively simple process reading writing digits arbitrarily long tape could move back forth Amazingly Turing showed device capable calculating computable number series finite steps 1962 Hungarian mathematician named Tibor Rad published paper entitled Non-Computable Functions described specialized version Turing machine designed purpose solving game referred Busy Beaver game Busy Beaver game won using subset possible Turing machines result maximum number non-blank characters upon reaching halting state Interestingly enough Busy Beaver Turing machine BBTM shown fastest growing computable algorithm asymptotically example Turing Machine Schematic representation blank-tape hypothetical Turing machine Constructing Binary Busy Beaver Turing Machine multiple kinds machines ll focus binary Turing machines 2 symbols 0 1 refer Busy Beaver Turing machine BBTM complexity attribute denoted number cards used constructing BBTM Sometimes cards also referred states Rad used term cards n-card Turing machine machine control unit seen transitions n discrete states BBTM specialized Turing machine guaranteed halt specified set cards cause maximum number non-zero outputs upon halting cards define control tape head card transition next always starting card Let look example card used 1-card BBTM Single Card Busy Beaver Turing machine starts read write head center tape follows instructions given starting card Card first value read tape 0 means follow instructions card indicating 0 state instructions must performed order left right tape write move move next card example Turing machine writes 1 moves head right denoted R goes halting state takes 1 step complete Turing machine 1-card Turing machine turns 1 maximum number 1s achieve 2-Card Busy Beaver 2-card BBTM slightly complex since requires 6 steps reach halting state achieves maximum size 4 procedure described would followed starting Card image gives sense output would look like BBTM actually discovered date record amount cards able achieve constructing BBTM 6 roughly 3 515 1018267 1s took 7 412 1036534 steps Problem Grows Fast many combinations potential Turing machines exist given n-cards answer absolutely astronomical picture attempts depict massive number possible Turing machines may exist 1 40 cards used single card permuted 64 different ways ways end BBTM machine since definition must finite number operations end halting state real question permutations result BBTM point might think would easy enough design program iterate possible permutations cards find result maximal number 1s simple however since permutations cards result BBTM Turing showed us actually possible generate generalized algorithm determine given machine halt famous Halting Problem addition attempt run possible permutations card sets known halt would sitting around long long example let look would take find maximum number 1s simple 3-card BBTM graphic already see 17 million permutations 3 cards 17 million permutations must attempt run BBTM Given difficult prove configuration cards ever reach Halting state process could ostensibly take forever configurations cards result halting state may take immense amount steps get record number steps simple 3-card BBTM made reaching halting state mind boggling 119 112 334 170 342 540 steps Busy Beaver Turing Machine Ruby However created simple Ruby program actually mimic behavior Turing machine also included sample card values known BBTMs experiment Please feel free take code attempt run want hear anybody thinks challenge willing attempt find 7-card Busy Beaver Turing machine wish luck re really going need Busy-beaver-ruby https github com mishkinf busy-beaver-ruby Note true basic Turing machine require halting state BBTM fact may accurately reflected first publishing article Archived General tagged computing theory turing Tweet Share TrueCar hiring Previous Next Collaboration Cloud Jeremy Kreutzbender 5 min read March 24 2015 Missing Apply Function Swift Matt Bradley 8 min read March 24 2015'),
('the SMT solver Z3 (MSR) now free software!', "Skip content Sign Sign repository Explore Features Enterprise Blog Watch 80 Star 1 011 Fork 122 Z3Prover z3 Code Issues Pull requests Wiki Pulse Graphs HTTPS clone URL Subversion checkout URL clone HTTPS Subversion Download ZIP Permalink Browse files Move MIT License Loading branch information commit 40269c8511ca343bc6848cae8c4f2d0f0455b949 1 parent cee7dd3 leodemoura authored Mar 26 2015 Unified Split Showing 1 changed file 6 additions 40 deletions 6 40 LICENSE txt Show notes View 46 LICENSE txt -1 41 1 7 -Microsoft Research License Agreement -Non-Commercial Use Z3 -_____________________________________________________________________ -This Microsoft Research License Agreement including exhibits MSR-LA legal agreement Microsoft Corporation Microsoft data identified may include associated materials text speech files associated media online electronic documentation updates provide discretion together Software - -By installing copying otherwise using Software agree bound terms MSR-LA agree install copy use Software Software protected copyright intellectual property laws licensed sold - -SCOPE RIGHTS -You may use copy reproduce distribute Software non-commercial purpose subject restrictions MSR-LA purposes non-commercial teaching academic research public demonstrations personal experimentation may also distribute Software books teaching materials publish Software websites intended teach use Software academic non-commercial purposes - -You may use distribute Software derivative works form commercial purposes Examples commercial purposes would running business operations licensing leasing selling Software distributing Software use commercial products using Software creation use commercial products activity purpose procure commercial gain others - -You may create derivative works Software source code distribute modified Software solely non-commercial academic purposes provided herein distribute Software derivative works Software distribute terms conditions license grant rights Software derivative works different provided MSR-LA - -If created derivative works Software distribute derivative works cause modified files carry prominent notices recipients know receiving original Software notices must state changed Software ii date changes -In return simply require agree - -1 remove copyright notices Software - -2 Software binary format attempt modify portions Software reverse engineer decompile except extent authorized applicable law - -3 Microsoft granted back without restrictions limitations non-exclusive perpetual irrevocable royalty-free assignable sub-licensable license reproduce publicly perform display install use modify post distribute make made sell transfer modifications derivative works Software source code data purpose - -4 feedback Software provided us voluntarily given Microsoft shall free use feedback sees fit without obligation restriction kind even feedback designated confidential - -5 SOFTWARE COMES WARRANTIES MEANS EXPRESS IMPLIED STATUTORY WARRANTY INCLUDING WITHOUT LIMITATION WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE WARRANTY INTERFERENCE ENJOYMENT SOFTWARE WARRANTY TITLE NON-INFRINGEMENT WARRANTY SOFTWARE FULFILL PARTICULAR PURPOSES NEEDS ALSO MUST PASS DISCLAIMER WHENEVER DISTRIBUTE SOFTWARE DERIVATIVE WORKS - -6 NEITHER MICROSOFT CONTRIBUTOR SOFTWARE LIABLE DAMAGES RELATED SOFTWARE MSR-LA INCLUDING DIRECT INDIRECT SPECIAL CONSEQUENTIAL INCIDENTAL DAMAGES MAXIMUM EXTENT LAW PERMITS MATTER LEGAL THEORY BASED ALSO MUST PASS LIMITATION LIABILITY WHENEVER DISTRIBUTE SOFTWARE DERIVATIVE WORKS - -7 duty reasonable care lack negligence obligated provide technical support Software - -8 breach MSR-LA sue anyone patents think may apply read Software anyone's use Software MSR-LA license rights obtained herein terminate automatically Upon termination shall destroy copies Software immediately Sections 3 4 5 6 7 8 11 12 MSR-LA shall survive termination MSR-LA - -9 patent rights granted MSR-LA apply Software derivative works make - -10 Software may subject U export jurisdiction time licensed may subject additional export import laws places agree comply laws regulations may apply Software delivery Software - -11 rights expressly granted MSR-LA reserved - -12 MSR-LA shall construed controlled laws State Washington USA without regard conflicts law provision MSR-LA shall deemed unenforceable contrary law rest MSR-LA shall remain full effect interpreted enforceable manner nearly captures intent original language Copyright c Microsoft Corporation rights reserved MIT License Permission hereby granted free charge person obtaining copy software associated documentation files Software deal Software without restriction including without limitation rights use copy modify merge publish distribute sublicense sell copies Software permit persons Software furnished subject following conditions copyright notice permission notice shall included copies substantial portions Software SOFTWARE PROVIDED WITHOUT WARRANTY KIND EXPRESS IMPLIED INCLUDING LIMITED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE NONINFRINGEMENT EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM DAMAGES LIABILITY WHETHER ACTION CONTRACT TORT OTHERWISE ARISING CONNECTION SOFTWARE USE DEALINGS SOFTWARE Toggle file notes 5 comments commit 40269c8 zimmski commented 40269c8 Mar 26 2015 mean Z3 used commercial products without buying licence Owner leodemoura commented 40269c8 Mar 26 2015 Yes course zimmski commented 40269c8 Mar 26 2015 guess need buy guys beers - hgolden commented 40269c8 Mar 26 2015 zimmski get good introduction MIT License Wikipedia zimmski commented 40269c8 Mar 26 2015 Yeah thanks know using thought would dual-licence something else since Z3 non-commercial long Please sign comment Status API Training Shop Blog 2015 GitHub Inc Terms Privacy Security Contact Something went wrong request Please try"),
('Efficient Functional Unification and Substitution', 'PDF-1 4 4 0 obj'),
('Visual Programming Is Unbelievable Heres Why We Dont Believe In It', 'link Call us 404-719-5100BlogContacts LoginHow WorksSolutionsCustomersCompanyTry free Rapid Application Delivery Platform One codebase devices lock-in OutSystems Develop devices Easily integrate existing systems Rapid delivery effortless change OutSystems Platform Overview Pre-built Apps Pricing Platform Demo join us live demo Solutions Hundreds companies 22 industries use OutSystems Platform deliver innovative business solutions See customers built industries like Banking Insurance Healthcare Pharma Biotech Retail Consumer Goods industries Kick-start next app project sample apps Field Services Mobile Order Management Executive Dashboard Customer Portal Car Accident Reporting apps Customers See customers Case Studies reduced development hours 75 got market 3x faster using OutSystems See case studies average lifetime appeal reduced seven three days See innovation award winners Company Us Offices Worldwide Management Team Investors News Careers Culture Download copy Small Book Big Rules Blog Visual Programming Unbelievable Believe Tiago Sim es March 25 2015 Twitter Facebook G linkedin Company Overview Events News Management Team Careers Analysts Investors Blog Offices Support OutSystems Blog Perspectives Visual Programming Unbelievable Believe Tiago Sim es March 25 2015 Visual programming unfulfilled prophecy years many areas like virtual reality artificial intelligence speech recognition hype high underlying technology wasn yet problem Several Misfires visual programming hype peaked early 90s CASE tools trends ahead time repercussions failure years underinvestment little innovation lingering skepticism UML Unified Modeling Language promise bringing sanity object-oriented programming hasn helped either although much faults due underlying complexities related inheritance even recent trends like Business Process Modeling probably harm good giving credibility area CASE tools UML BPM failed deliver promises Silver Bullet seminal Silver Bullet paper Fred Brooks stated single development promises one order-of-magnitude improvement productivity technology complexities would decrease requested features would Like Moore law hardware first part sentence proved prescient almost 30 years ago Brooks might missed would make room many directions software development often making us move circles instead forward example explosion number languages idioms practices sometimes opposite approaches e g strongly weakly typed client-server server different new JavaScript frameworks etc Non-functional requirements like scalability security new expectations like mobile user experience made things harder complexity opens space approach would allow developers focus delivering real value Visual programming higher level abstraction could champion approach become productivity silver bullet ve looking hasn yet visual languages fundamental set problems Visual Languages Aren Extensible probably capital sin visual languages allow limited set things easily edge cases far difficult even impossible achieve Tools give us power instead limiting us Visual Languages Generate Slow Code Every developer faced performance problems knows hard diagnose overcome Visual languages leaky abstractions often generating slow code impossible optimize Visual Language Tools Terrible live breathe IDEs Integrated Development Environments poor make lives miserable Visual languages IDEs designed together love hate language direct measure love hate tools Visual Languages Lock technology decision brings level lock fear locked dead-end justifiable given visual languages generate unreadable lower level code target niche segments supported suicidal startups haven left research lab yet amazing recent work like Bret Victor done Real success stories people using large projects still rare communities still growing Neurologically Programmed Reject problems previous sections serious visual language architects know responsibility continue work address removing limitations deeper reasons trust visual languages first related love complexity Although might say otherwise according father usability Norman Take musical instruments instance musicians love hard master Think legislation even language poetry hidden complex sentences words love intellectual challenge thinking difficult thoughts mind probably right agreeing ideas checking anything wrong missing need however careful create deep moats rest world brilliant xor swap algorithm ve coded today may somebody else nightmare next year Like Steve Jobs said Simple harder complex worth second reason even primitive fear change take time acquire expertise suddenly seems old weapons longer needed re seeing wrong weapons able malloc pointer arithmetic able divide problem smaller parts understand process iterating solution detect strange code smells discuss diagram whiteboard refactor systems better architectures real weapons ones ve sharpening years weapons higher level languages become even deadly problem might cross path Fear great developer always valuable tool works let face also social acceptance first bought debut albums d never caught listening sellouts make easy everyone ve instinctive reactions anything aims democratize computing met skepticism HyperCard Delphi Visual Basic COBOL real developers quick point faults mock mercy die instead helping improve Even JavaScript almost fate DHTML days however analogy might better show us future shift text operating systems like Unix MS-DOS graphical user interfaces like Mac Windows suffered pushback several computer experts time evolution seems inevitable today brought us better graphic cards lead better games brought us world wide web brought us smartphones imagine world without unbelievable things Finally Ready sure may may feel re fair either way try understand biases afraid give visual languages shot several organizations like mine different domains challenging way software traditionally delivered pushing forward state art even trying still see bright future visual programming fine consider keeping open mind come back later otherwise might end wrong side history visual programming author Tiago Sim es hacker tinkerer thinker believes making faster existing developers making possible everyone else Comments Scott Anderson March 26 2015 5 26 Reply Everyday work large complex desktop applications Mac Windows using visual language Prograph believer case definitely order magnitude increase productivity also required shift viewpoint coding writing instructions coding plumbing great see visual development tools coming along look forward trying OutSystems development Tiago Sim es March 28 2015 9 36 Reply Hi Scott Curious feedback always learning curve couple days people come desktop applications development sometimes struggle paradigm shift web first videos online training might seem bit basic help consolidating knowledge needed Cheers Tiago Sim es John March 27 2015 11 41 Reply Hi Tiago aware DRAKON came USSR http en wikipedia org wiki DRAKON NoFlo http noflojs org look forward seeing outsystems comes area Cheers John Tiago Sim es March 27 2015 2 35 pm Reply Hi John Yes aware interesting superficial point view would say show age opposite directions haven looked ll deeper look already product enterprise applications domain shared data important asset integration existing systems must Would love feedback Cheers Tiago Scott Jordan March 29 2015 3 41 pm Reply LabVIEW wouldn want write word-processor quickly creating fast truly parallel code hooks real-world devices yes extensibility nothing better Tiago Sim es March 29 2015 8 34 pm Reply Yes LabVIEW good example Ivan March 29 2015 3 59 pm Reply Delphi kind nice btw question pops head would write blog post promises visual programming rather via video Also know areas ultimately feel better done visually like monitoring guess still picking set proper metaphors educating people finding people understand suggested metaphors better tricky Anyway ll glad see making business people basic coding Tiago Sim es March 29 2015 8 40 pm Reply Yes Delphi nice Regarding video actually excellent idea might create presentation video look closely article text formatting images make easier digest case right text always play major role programming language agree areas visual definitely even appropriate user interfaces obvious candidate Thanks feedback R J Steinert April 9 2015 12 10 Reply theory GUIs could used educate people effective command line better coding rise Windows Mac OS may result 1 people initially attracted something visual 2 lack good code scaffolding code required us write lot boiler plate Code scaffolding getting super easy see yeoman io perhaps need build reminders operation GUI could efficient command line Git GUI taught commands running ran hiking mouse across screen like treasure hunt really going type command next time theory anyways something m interested testing think m going write GUI pulling data sensor sending arbitrary database shows commands run underneath ll collect usage metrics see effective getting folks use command line conveniently always bottom screen m inspired classes ve taught folks basic file operations takes 10x longer Tiago Sim es April 9 2015 1 33 pm Reply Hi Steinert good idea software e g autocad least small command window bottom use directly shows equivalent commands UI useful expert users want become Cheers Tiago Sim es Andreas Leue April 10 2015 3 13 pm Reply Hi Tiago fully understand article wouldn say caused Visual Programming Highly Abstract Programming Visual Programming another way presenting code like uses apt discussing explaining discovering uses much profiling debugging exchanged easily information displayed diagram code problem Highly Abstract Programming ve trying CG CASE MDA DSLs name issues mention apply independently text diagram BTW opinion alternative kind programming nearer future might named differently Kind regards Andreas Tiago Sim es April 11 2015 3 54 pm Reply Hi Andreas Yes right stuff applies high abstraction languages Regarding profiling debugging think problem lot present old visual programming languages visual representation actually help e g highlight traveled code paths show charts timings etc ve focused visual instinctive biases even present visual languages Programming never look easy Thanks feedback Tiago Leave Comment Cancel reply Name E-mail URL Comment Current ye r Leave field empty Subscribe RSS Explore categories Tech Zone Platform Action Perspectives posts category Perspectives Beware Second Wave Vendor Lock-In Fueled Salesforce com Vertical Strategy Salesforce com announced new industries strategy analysts predicted would catalyst second wave SaaS adoption SaaS provider rolls verticalized offerings built Salesforce1 Platform also become second wave vendor lock-in Sean Allen May 20 2015 Perspectives Custom Mobile App Transform Company Business Based experience helping companies deliver amazing apps identified nine apps crucial helping companies quickly make move mobile right mobile app really power transform business - d surprised fast get one custom-built fit existing Check new infographic Miguel Baltazar May 15 2015 Perspectives Ovum Decision Matrix MADP Care significant new piece research mobile app development platforms released giving guidance organizations trying get handle approach mobility Ovum Decision Matrix Selecting Mobile App Development Platform Solution highlights companies looking MADP solution Given amount time energy money anxiety attention aimed enterprise mobility right report quite timely Sean Allen March 31 2015 Company Us Careers Training Partners News Resources Blog Community Agile Network Twitter Facebook G linkedin Upcoming Events events Built OutSystems Platform - OutSystems rights reserved Terms Conditions Cookies Questions Feedback powered Olark live chat software'),
('How chaos limits computational modeling and prediction', 'Skip content Geoff Boeing PhD candidate urban planning UC Berkeley Menu widgets Recent Posts Animated 3-D Plots Python Visualizing Chaos Randomness Chaos Theory Logistic Map LEED-ND Neighborhood Livability Inside Field Exam Urban Complexity Archives April 2015 March 2015 February 2015 January 2015 December 2014 November 2014 October 2014 September 2014 August 2014 July 2014 June 2014 May 2014 Meta Log Entries RSS Comments RSS WordPress org Search Chaos Theory Logistic Map Using Python visualize chaos fractals self-similarity better understand limits knowledge prediction Chaos theory branch mathematics deals nonlinear dynamical systems system set set interacting components form larger whole Nonlinear means due feedback multiplicative effects components whole becomes something greater adding individual parts Lastly dynamical means system changes time based current state following piece break jargon visualize interesting characteristics chaos discuss implications knowledge prediction Chaotic systems simple sub-type nonlinear dynamical systems may contain interacting parts may follow simple rules systems sensitive dependence initial conditions Despite deterministic simplicity time systems produce totally unpredictable wildly divergent aka chaotic behavior Edward Lorenz father chaos theory described chaos present determines future approximate present approximately determine future Logistic Map happen Let explore example using famous logistic map model based common s-curve logistic function shows population grows slowly rapidly tapering reaches carrying capacity logistic function uses differential equation treats time continuous logistic map instead uses nonlinear difference equation look discrete time steps called logistic map maps population value time step value next time step equation defines rules dynamics system x represents population given time r represents growth rate words population level given time function growth rate parameter previous time step population level growth rate set low population die go extinct Higher growth rates might settle toward stable value fluctuate across series population booms busts simple equation produces chaos certain growth rate parameters ll explore source code Python available IPython notebook First ll run logistic model 20 time steps ll henceforth call recursive iterations equation generations growth rate parameters 0 5 1 0 1 5 2 0 2 5 3 0 3 5 values get columns represent growth rates rows represent generations model always starts population level 0 5 set represent population ratio 0 extinction 1 maximum carrying capacity system System Behavior Attractors trace column growth rate 1 5 ll see population level settles toward final value 0 333 20 generations column growth rate 2 0 ll see unchanging population level across generation makes sense real world two parents produce two children overall population won grow shrink growth rate 2 0 represents replacement rate Let visualize table results line chart easily see population changes time given different growth rates blue line represents growth rate 0 5 quickly drops zero population dies cyan line represents growth rate 2 0 remember replacement rate stays steady population level 0 5 growth rates 3 0 3 5 interesting yellow line 3 0 seems slowly converging toward stable value gray line 3 5 seems bounce around attractor value set values system settles toward time growth rate parameter set 0 5 system fixed-point attractor population level 0 depicted blue line words population value drawn toward 0 time model iterates growth rate parameter set 3 5 system oscillates four values depicted gray line attractor called limit cycle adjust growth rate parameter beyond 3 5 see onset chaos chaotic system strange attractor around system oscillates forever never repeating settling steady state behavior never hits point twice structure fractal form meaning patterns exist every scale matter much zoom Bifurcations Path Chaos show clearly let run logistic model time 200 generations across 1 000 growth rates 0 0 4 0 produced line chart 7 growth rates time ll 1 000 ll need visualize different way using something called bifurcation diagram Think bifurcation diagram 1 000 discrete vertical slices one corresponding one 1 000 growth rate parameters 0 4 slices ran model 200 times threw away first 100 values re left final 100 generations growth rate Thus vertical slice depicts population values logistic map settles toward parameter value words vertical slice growth rate growth rate attractor growth rates less 1 0 system always collapses zero extinction growth rates 1 0 3 0 system always settles exact stable population level Look vertical slice growth rate 2 5 one population value represented 0 6 corresponds magenta line settles line chart shown earlier growth rates 3 9 diagram shows 100 different values words different value 100 generations never settles fixed point limit cycle called bifurcation diagram Let zoom growth rates 2 8 4 0 see happening vertical slice growth rate 3 0 possible population values fork two discrete paths growth rate 3 2 system essentially oscillates exclusively two population values one around 0 5 around 0 8 words growth rate applying logistic equation one values yields growth rate 3 4 diagram bifurcates four paths corresponds gray line line chart saw earlier growth rate parameter set 3 5 system oscillates four population values growth rate 3 5 bifurcates eight paths system oscillates eight population values Onset Chaos Beyond growth rate 3 6 however bifurcations ramp system capable eventually landing population value known period-doubling path chaos adjust growth rate parameter upwards logistic map oscillate two four eight 16 32 population values periods like period pendulum time reach growth rate 3 9 bifurcated many times system jumps seemingly randomly population values say seemingly randomly definitely random Rather model follows simple deterministic rules yet produces apparent randomness chaos deterministic aperiodic Let zoom narrow slice growth rates 3 7 3 9 zoom begin see beauty chaos noise emerge strange swirling patterns thresholds either side system behaves differently growth rate parameters 3 82 3 84 system moves chaos back order oscillating three population values approximately 0 15 0 55 0 95 bifurcates returns chaos growth rates beyond 3 86 Fractals Strange Attractors plot bifurcations around growth rate 3 85 look bit familiar Let zoom center one Incredibly see exact structure saw earlier macro-level fact keep zooming infinitely plot ll keep seeing structure patterns finer finer scales forever mentioned earlier chaotic systems strange attractors structure characterized fractal Fractals self-similar meaning structure every scale zoom find smaller copies larger macro-structure fine scale see tiny reiteration bifurcations chaos limit cycles saw first bifurcation diagram full range growth rates Another way visualize Poincar plot plots population value generation 1 y-axis versus population value x-axis delve 2-D 3-D animated Poincar plots greater detail subsequent post Remember model follows simple deterministic rule know certain generation population value easily determine next generation value Poincar plot left shows logistic map homes fixed-point attractor 0 655 axes growth rate parameter set 2 9 corresponds vertical slice x-axis value 2 9 bifurcation diagrams shown earlier plot right shows limit cycle attractor growth rate set 3 5 logistic map oscillates across four points shown Poincar plot bifurcation diagrams earlier happens period-doubling bifurcations lead chaos plot left depicts parabola formed growth rate parameter 3 9 plot right depicts 50 different growth rate parameters 3 6 4 0 range parameters represents chaotic regime range parameter values logistic map behaves chaotically growth rate forms curve parabolas never overlap due fractal geometry deterministic nature logistic equation Strange attractors revealed shapes system somehow oddly constrained yet never settles fixed point steady oscillation like earlier Poincar plots r 2 9 r 3 5 bounces around different population values forever without ever repeating value twice Chaos vs Randomness Poincar plots depict 2-dimensional state space imaginary space uses system variables dimensions point state space possible system state words set variable values Poincar plots useful revealing strange attractors time series data like produced logistic map embed 1-dimensional data 2- even 3-dimensional state space Indeed hard tell certain time series chaotic random fully understand underlying dynamics Take two example lines seem jump around randomly red line depict random data blue line comes logistic model growth rate set 3 99 deterministic chaos hard differentiate randomness let visualize two data sets Poincar plots instead line charts see chaotic system red constrained strange attractor contrast random data blue looks like noise even compelling 3-D Poincar plot embeds time series 3-dimensional state space depicting population value generation 2 vs value generation 1 vs value Let plot rest logistic map chaotic regime 3-D animated 3-D version 2-D rainbow parabolas saw earlier three dimensions beautiful structure strange attractor revealed twists curls around 3-D state space structure demonstrates apparently random time series data logistic model isn really random Instead aperiodic deterministic chaos constrained mind-bending strange attractor Butterfly Effect Chaotic systems also characterized sensitive dependence initial conditions basin attraction collects nearby points time fixed-point limit cycle attractor Rather strange attractor close points diverge time makes real-world modeling prediction difficult must measure parameters system state infinite precision Otherwise tiny errors measurement rounding compounded time system thrown drastically one rounding error Lorenz first discovered chaos Recall words beginning piece present determines future approximate present approximately determine future example let run logistic model two similar initial population values growth rate parameter 3 9 blue line represents initial population value 0 5 red line represents initial population 0 50001 two initial conditions extremely similar one another Accordingly results look essentially identical first 30 generations however minuscule difference initial conditions starts compound 40th generation two lines show little common knowledge two systems started generation 50 would way guessing almost identical beginning chaos history lost time prediction future accurate measurements real-world chaotic systems measurements never infinitely precise errors always compound future becomes entirely unknowable given long enough time horizons famously known butterfly effect butterfly flaps wings China sets tornado Texas Small events compound irreversibly alter future universe line chart tiny fluctuation 0 00001 makes enormous difference behavior state system 50 generations later Implications Chaos Real-world chaotic fractal systems include leaky faucets ferns heart rates random number generators Many scholars studied implications chaos theory social sciences cities urban planning Chaos fundamentally indicates limits knowledge prediction futures may unknowable precision Deterministic systems produce wildly fluctuating non-repeating behavior Interventions system may unpredictable outcomes even initially change things slightly effects compound time 1990s complexity theory grew chaos theory largely supplanted analytic frame social systems Complexity draws similar principles end different beast Instead looking simple closed deterministic systems complexity examines large open systems made many interacting parts Unlike chaotic systems complex systems retain trace initial conditions previous states path dependence unpredictable different way chaos complex systems ability surprise novelty emergence tale another day delve 2-D 3-D animated Poincar plots greater detail subsequent post explain create animated 3-D data visualizations Python post code used run model produce graphics available IPython notebook functionality thoroughly commented leave note questions suggestions Feel free play explore beauty chaos Share Click share Twitter Opens new window Click share Tumblr Opens new window Share Facebook Opens new window Click share Pinterest Opens new window MoreClick email friend Opens new window Click share Pocket Opens new window Click share LinkedIn Opens new window Click share Google Opens new window Click share Reddit Opens new window Click share StumbleUpon Opens new window Posted March 25 2015May 7 2015Author gboeingCategories DataTags chaos complexity data math matplotlib modeling pandas python science theory visualization 3 thoughts Chaos Theory Logistic Map john marinelli says March 27 2015 10 55 Great stuff recently picked James Gleicks Chaos New Science goes logistic map detail feel like much clearer understanding logistic map reading Reply Marco says March 28 2015 10 20 Great article However dynamic systems systems change time dynamic system system evolution time depends inputs value state initial conditions need specified particular case chaotic systems evolution system greatly affected value initial conditions Reply gboeing says March 28 2015 22 21 Excellent point edited introductory sentence make clearer Reply Leave Reply Cancel reply email address published Required fields marked Name Email Website Comment may use HTML tags attributes href title abbr title acronym title b blockquote cite cite code del datetime em q cite strike strong Notify follow-up comments email Notify new posts email Post navigation Previous Previous post LEED-ND Neighborhood LivabilityNext Next post Visualizing Chaos Randomness Proudly powered WordPress Send Email Address Name Email Address Cancel Post sent - check email addresses Email check failed please try Sorry blog cannot share posts email'),
('Michael Stonebraker wins $1 million Turing Award. This year marks the first time that the Turing Award comes with a Google-funded $1 million prize.', "Massachusetts Institute Technology News Video Social Follow MIT MIT News RSS Follow MIT Twitter Follow MIT Facebook Follow MIT Google Follow MIT Instagram Follow MIT Flickr Follow MIT YouTube MIT News Office Browse Browse Popular Remote observing progress Esther Duflo receives Princess Asturias Award Cimran Virdi captures NCAA outdoor track field pole vault title Spinning new version silk SuperUROP class 2015 graduates high accomplishment promise Forbes Caf Stata Center undergo renovations better way deliver innovation world Using desalination address drought Topic Computer Science Artificial Intelligence Laboratory CSAIL Gauging materials physical properties video handle big data shrink Learn language text Removing reflections photos taken windows Computer vision Gauging materials physical properties video Object recognition free Graphics reverse Vision system household robots Electrical Engineering Computer Science eecs Helping robots put together Meet 2015 Goldwater Scholars SuperUROP class 2015 graduates high accomplishment promise Voltage new community electrical engineers Imaging Hu selected 2015 Holonyak Jr Award Five CSAIL researchers named ACM fellows Two sensors one Extracting audio visual information Research make emotional decisions Spinning new version silk Diagnosing cancer help bacteria Helping robots put together See Topics School School Architecture Planning MISTI Global Seed Funds 2015-16 call proposals Putting people buildings Seeing gender Sustainability built environment School Engineering Using desalination address drought Spinning new version silk Diagnosing cancer help bacteria Helping robots put together School Humanities Arts Social Sciences Students launch MIT INSPIRE competition Mark R Epstein 63 endows directorship MIT Museum Esther Duflo receives Princess Asturias Award Melissa Nobles named dean SHASS Sloan School Management MISTI Global Seed Funds 2015-16 call proposals MIT LGO Succeeding mission create industry leaders Impact players Crop-mapping drones win MIT 100K School Science make emotional decisions Remote observing progress Measuring hot electrons enduring legacy education opportunity Department Writing Humanistic Studies Knight Science Journalism Program director Philip Hilts step 3 Questions Seth Mnookin Symposium marks 50th anniversary Machine Garden Wi-Phi website presents 'philosophy's greatest hits' Brain Cognitive Sciences make emotional decisions Master gene regulator could new target schizophrenia treatment Seeking deeper understanding brain works Seeing gender Electrical Engineering Computer Science Diagnosing cancer help bacteria Helping robots put together Meet 2015 Goldwater Scholars better way deliver innovation world Mechanical Engineering Defusing bombs color make continuous rolls graphene Taking control light emission Newly tenured engineers Business Students prepare real-world product development hands-on collaboration Chinese entrepreneurs visit MIT Sloan Study Ethanol major factor reducing gas prices MIT Sloan alumna finds elixir successful integrative medicine practice See Departments Center Lab Program Computer Science Artificial Intelligence Laboratory CSAIL Helping robots put together Gauging materials physical properties video handle big data shrink Learn language text Research Laboratory Electronics Better sensors medical imaging contraband detection Diagnosis keyboard Building community EECS postdocs Hu selected 2015 Holonyak Jr Award Biomimetics Robotics Lab Bound robotic glory Computer Science Artificial Intelligence Laboratory CSAIL Helping robots put together Gauging materials physical properties video handle big data shrink Learn language text Technology Policy Program Dava Newman nominated NASA post Alumna takes space Saturday mornings Shrink-wrapping spacesuits Graduate student Sami Khan receives research award See Centers Labs Programs Login Subscribe Newsletter Michael StonebrakerPhoto M Scott BrauerFull Screen Michael Stonebraker wins 1 million Turing Award CSAIL researcher invented core database concepts turned many companies Adam Conner-Simons CSAIL March 25 2015 Press Inquiries Share Press Contact Adam Conner-SimonsEmail aconner csail mit eduPhone 617-324-9135MIT Computer Science Artificial Intelligence Lab Media Resources 2 images download Access Media Media downloaded desktop version website Share Comment Leave comment Michael Stonebraker researcher MIT Computer Science Artificial Intelligence Laboratory CSAIL revolutionized field database management systems DBMSs founded multiple successful database companies won Association Computing Machinery ACM M Turing Award often referred Nobel Prize computing year marks first time Turing Award comes Google-funded 1 million prize announcement today ACM said Stonebraker invented many concepts used almost modern database systems founded numerous companies successfully commercializing pioneering database technology work adjunct professor computer science engineering MIT principal investigator CSAIL Stonebraker sometimes jokes didn know researching 30 years nowhere marketing guys started talking big data says realized d studying thing better part academic life Stonebraker's work past four decades helped spur multibillion-dollar big data industry participated creating leading nine separate companies including VoltDB Tamr Paradigm4 Vertica bought Hewlett-Packard 2011 340 million Mike trailblazer field databases asking essential questions collect organize access information lives says Daniela Rus director CSAIL Andrew Erna Viterbi Professor Electrical Engineering Computer Science devoted academic serial entrepreneur us CSAIL inspired work proud colleague previous work University California Berkeley Stonebraker developed two influential systems Ingres Postgres provide foundational ideas many cases specific source code spawned several contemporary database products including IBM Informix EMC Greenplum Ingres one first relational databases provide organized way store multiple kinds entities serve industry standard business storage Larry Rowe professor emeritus Berkeley helped Stonebraker commercialize technology remembers many colleagues didn think relational databases could evolve academic theory practical application better way get Mike going tell Rowe says One great abilities imagine something exist ask doesn set new research goal making happen Postgres meanwhile integrated Ingres ideas object-oriented programming enabling users natively map objects attributes databases new notion object-relational databases could used represent manipulate complex data like computer-aided design geospatial data time series Stonebraker major projects MIT include C-Store column-oriented database partitions tables column allowing delivery dramatic performance speedups reading large quantities data H-Store parallel database management system deliver high sustained rate operations transactions per second SciDB represents data arrays provides substantially improved performance many modern analytics settings machine learning statistical data processing Notably era term open source didn yet exist Stonebraker also released many systems public domain ensuring widespread adoption allowing academics build work delighted Professor Stonebraker recognized groundbreaking contributions database technology says Anantha Chandrakasan Joseph F Nancy P Keithley Professor Electrical Engineering head MIT Department Electrical Engineering Computer Science EECS award honor EECS department inspiring many members MIT community worked Stonebraker co-directs CSAIL Intel Science Technology Center Big Data Sam Madden professor computer science engineering joining MIT Stonebraker professor computer science Berkeley 29 years graduate Princeton University earned master's degree PhD University Michigan every computer scientist dream get award honored selected Stonebraker says reinforces validates importance work alongside many researchers field database management systems Past Turing Award recipients either taught earned degrees MIT include Shafi Goldwasser Silvio Micali 2013 Barbara Liskov 2008 Ronald Rivest 2002 Manuel Blum 1995 Butler Lampson 1992 Fernando Corbato 1990 Ivan Sutherland 1988 John McCarthy 1971 Marvin Minsky 1969 Stonebraker formally receive award ACM annual awards banquet June 20 San Francisco Topics School Engineering Electrical Engineering Computer Science eecs Computer Science Artificial Intelligence Laboratory CSAIL Computer science technology Data Entrepreneurship Awards honors fellowships Faculty Innovation Entrepreneurship E Comments View discussion thread Press Mentions Lauren Beavin Boston Magazine speaks M Turing Award recipient Michael Stonebraker Boston great place computer scientists Boston tech scene way critical mass quality life high Stonebraker explains ACM awarded M Turing Award widely regarded Nobel Prize Computing CSAIL researcher adjunct professor Michael Stonebraker reports Barb Darrow Fortune Stonebraker famous arguing database one-size-fits-all category Michael Stonebraker principal investigator MIT Computer Science Artificial Intelligence Lab adjunct professor MIT won M Turning Award work database management systems reports Nidhi Subbaraman BetaBoston every computer scientist lifetime dream came true said Stonebraker Related Michael StonebrakerCSAIL Database GroupComputer Science Artificial Intelligence LaboratoryDepartment Electrical Engineering Computer ScienceSchool Engineering Archives Goldwasser Micali win Turing Award Visual control big data Improving data management entrepreneurship Website Website maintained MIT News Office MIT News Office MIT News Press Center Press Inquries Filming Guidelines Contact Us Terms Use RSS Twitter Facebook Google Instagram Flickr YouTube MIT Homepage MIT Video MIT Connect MIT Resources Events Calendar MIT Admissions Alumni Education Labs Centers Resources Submit Campus News Pitch Story Sign Newsletter Subscribe Press Releases Terms Use GIVE MIT Massachusetts Institute Technology MIT News Office Building 11-400 Massachusetts Institute Technology Cambridge MA 02139-4307 Back top"),
('The Nature of Code', "NATURE CODE Daniel Shiffman Buy book print Buy book PDF Welcome Acknowledgments Dedication Preface Introduction 1 Vectors 2 Forces 3 Oscillation 4 Particle Systems 5 Physics Libraries 6 Autonomous Agents 7 Cellular Automata 8 Fractals 9 Evolution Code 10 Neural Networks Reading Index Nature Code Daniel Shiffman Introduction two nature Woody Allen beginning Well almost beginning since ve done programming Processing math matter introduction get mind back computational thinking approach difficult complex material Chapter 1 re going talk concept vector serve building block simulating motion throughout book take step let think means something simply move around screen Let begin one best-known simplest simulations motion random walk 1 Random Walks Imagine standing middle balance beam Every ten seconds flip coin Heads take step forward Tails take step backward random walk path defined series random steps Stepping balance beam onto floor could perform random walk two dimensions flipping coin twice following results Flip 1 Flip 2 Result Heads Heads Step forward Heads Tails Step right Tails Heads Step left Tails Tails Step backward Yes may seem like particularly unsophisticated algorithm Nevertheless random walks used model phenomena occur real world movements molecules gas behavior gambler spending day casino us begin book studying random walk three goals mind need review programming concept central book object-oriented programming random walker serve template use object-oriented design make things move around Processing window random walk instigates two questions ask throughout book define rules govern behavior objects implement rules Processing Throughout book ll periodically need basic understanding randomness probability Perlin noise random walk allow us demonstrate key points come handy later 2 Random Walker Class Let review bit object-oriented programming OOP first building Walker object cursory review never worked OOP may want something comprehensive d suggest stopping reviewing basics Processing website continuing object Processing entity data functionality looking design Walker object keeps track data exists screen capability perform certain actions draw take step class template building actual instances objects Think class cookie cutter objects cookies Let begin defining Walker class means Walker object Walker needs two pieces data number x-location one y-location Show Raw class Walker full Objects data int x int y end class Walker Objects data int x int y Every class must constructor special function called object first created think object setup ll initialize Walker starting location case center window Show Raw full Objects constructor initialized Walker x width 2 y height 2 end Objects constructor initialized Walker x width 2 y height 2 Finally addition data classes defined functionality example Walker two functions first write function allows object display white dot Show Raw full Objects functions void display stroke 0 point x y end Objects functions void display stroke 0 point x y second function directs Walker object take step things get bit interesting Remember floor taking random steps Well use Processing window capacity four possible steps step right simulated incrementing x x left decrementing x x-- forward going pixel y backward going pixel y-- pick four choices Earlier stated could flip two coins Processing however want randomly choose list options pick random number using random Show Raw void step 0 1 2 3 int choice int random 4 void step 0 1 2 3 int choice int random 4 line code picks random floating point number 0 4 converts integer result 0 1 2 3 Technically speaking highest number never 4 0 rather 3 999999999 many 9s decimal places since process converting integer lops decimal place highest int get 3 Next take appropriate step left right depending random number picked Show Raw full random choice determines step choice 0 x else choice 1 x-- else choice 2 y else y-- end random choice determines step choice 0 x else choice 1 x-- else choice 2 y else y-- ve written class time make actual Walker object main part sketch setup draw Assuming looking model single random walk declare one global variable type Walker Show Raw Walker object Walker w Walker objectWalker w create object setup calling constructor new operator Example 1 Traditional random walk time see Example heading book means corresponding code example available GitHub Show Raw void setup size 640 360 Create Walker w new Walker bold background 255 void setup size 640 360 Create Walker w new Walker background 255 Finally cycle draw ask Walker take step draw dot Show Raw void draw full Call functions Walker w step bold w display bold end void draw Call functions Walker w step w display Since draw background setup rather clearing continually time draw see trail random walk Processing window browser support canvas tag RESET PAUSE couple improvements could make random walker one Walker step choices limited four options left right given pixel window eight possible neighbors ninth possibility stay place Figure 1 implement Walker object step neighboring pixel stay put could pick number 0 8 nine possible choices However efficient way write code would simply pick three possible steps along x-axis -1 0 1 three possible steps along y-axis Show Raw void step full Yields -1 0 1 int stepx int random 3 -1 int stepy int random 3 -1 end x stepx y stepy void step Yields -1 0 1 int stepx int random 3 -1 int stepy int random 3 -1 x stepx y stepy Taking could use floating point numbers e decimal numbers x y instead move according arbitrary random value -1 1 Show Raw void step full Yields floating point number -1 0 1 0 float stepx random -1 1 float stepy random -1 1 end x stepx y stepy void step Yields floating point number -1 0 1 0 float stepx random -1 1 float stepy random -1 1 x stepx y stepy variations traditional random walk one thing common moment time probability Walker take step given direction equal probability Walker take step direction words four possible steps 1 4 25 chance Walker take given step nine possible steps 1 9 11 1 chance Conveniently random function works Processing random number generator operates behind scenes produces known uniform distribution numbers test distribution Processing sketch counts time random number picked graphs height rectangle browser support canvas tag RESET PAUSE Example 2 Random number distribution Show Raw array keep track often random numbers picked int randomCounts void setup size 640 240 randomCounts new int 20 void draw background 255 Pick random number increase count int index int random randomCounts length randomCounts index stroke 0 fill 175 int w width randomCounts length full Graphing results int x 0 x array keep track often random numbers pickedint randomCounts void setup size 640 240 randomCounts new int 20 void draw background 255 Pick random number increase count int index int random randomCounts length randomCounts index stroke 0 fill 175 int w width randomCounts length Graphing results int x 0 x randomCounts length x rect x w height-randomCounts x w-1 randomCounts x screenshot shows result sketch running minutes Notice bar graph differs height sample size e number random numbers ve picked rather small occasional discrepancies certain numbers picked often time good random number generator would even Pseudo-Random NumbersThe random numbers get random function truly random therefore known pseudo-random result mathematical function simulates randomness function would yield pattern time time period long us good pure randomness Exercise 1Create random walker tendency move right ll see solution next section 3 Probability Non-Uniform Distributions Remember first started programming Processing Perhaps wanted draw lot circles screen said Oh know ll draw circles random locations random sizes random colors computer graphics system often easiest seed system randomness book however re looking build systems modeled see nature Defaulting randomness particularly thoughtful solution design problem particular kind problem involves creating organic natural-looking simulation tricks change way use random produce non-uniform distributions random numbers come handy throughout book look number different scenarios examine genetic algorithms example ll need methodology performing selection members population selected pass DNA next generation Remember concept survival fittest Let say population monkeys evolving every monkey equal chance reproducing simulate Darwinian evolution simply pick two random monkeys parents need fit ones likely chosen need define probability fittest example particularly fast strong monkey might 90 chance procreating weaker one 10 chance Let pause take look probability basic principles First ll examine single event probability e likelihood given event occur system certain number possible outcomes probability occurrence given event equals number outcomes qualify event divided total number possible outcomes coin toss simple example two possible outcomes heads tails one way flip heads probability coin turn heads therefore one divided two 1 2 50 Take deck fifty-two cards probability drawing ace deck number aces number cards 4 52 0 077 8 probability drawing diamond number diamonds number cards 13 52 0 25 25 also calculate probability multiple events occurring sequence simply multiply individual probabilities event probability coin turning heads three times row 1 2 1 2 1 2 1 8 0 125 meaning coin turn heads three times row one eight times time three tosses Exercise 2What probability drawing two aces row deck fifty-two cards couple ways use random function probability code One technique fill array selection numbers repeated choose random numbers array generate events based choices Show Raw int stuff new int 5 full 1 stored array twice making likely picked stuff 0 1 stuff 1 1 end stuff 2 2 stuff 3 3 stuff 4 3 Picking random element array int index int random stuff length int stuff new int 5 1 stored array twice making likely picked stuff 0 1 stuff 1 1 stuff 2 2 stuff 3 3 stuff 4 3 Picking random element arrayint index int random stuff length Running code produce 40 chance printing value 1 20 chance printing 2 40 chance printing 3 also ask random number let make simple consider random floating point values 0 1 allow event occur random number within certain range example Show Raw probability 10 float prob 0 10 random floating point value 0 1 float r random 1 full random number less 0 1 try r probability 10 float prob 0 10 random floating point value 0 1float r random 1 random number less 0 1 try r prob try method also applied multiple outcomes Let say Outcome 60 chance happening Outcome B 10 chance Outcome C 30 chance implement code picking random float seeing range falls 0 00 0 60 60 Outcome 0 60 0 70 10 Outcome B 0 70 1 00 30 Outcome C Show Raw float num random 1 random number less 0 6 num float num random 1 random number less 0 6if num 0 6 println Outcome 0 6 0 7 else num 0 7 println Outcome B Greater 0 7 else println Outcome C could use methodology create random walker tends move right example Walker following probabilities chance moving 20 chance moving 20 chance moving left 20 chance moving right 40 browser support canvas tag RESET PAUSE Example 3 Walker tends move right Show Raw void step float r random 1 full 40 chance moving right r void step float r random 1 40 chance moving right r 0 4 x else r 0 6 x-- else r 0 8 y else y-- Exercise 3Create random walker dynamic probabilities example give 50 chance moving direction mouse 4 Normal Distribution Random NumbersLet go back population simulated Processing monkeys program generates thousand Monkey objects height value 200 300 world monkeys heights 200 300 pixels Show Raw float h random 200 300 float h random 200 300 accurately depict heights real-world beings Think crowded sidewalk New York City Pick person street may appear height random Nevertheless kind random random produces People heights uniformly distributed great deal people average height tall short ones simulate nature may want likely monkeys average height 250 pixels yet still allow occasion short tall distribution values cluster around average referred mean known normal distribution also called Gaussian distribution named mathematician Carl Friedrich Gauss French Laplacian distribution named Pierre-Simon Laplace mathematicians working concurrently early nineteenth century defining distribution graph distribution get something looks like following informally known bell curve Figure 2 Figure 3 curve generated mathematical function defines probability given value occurring function mean often written Greek letter mu standard deviation Greek letter sigma mean pretty easy understand case height values 200 300 probably intuitive sense mean e average 250 However say standard deviation 3 15 mean numbers graphs give us hint graph left shows us distribution low standard deviation majority values cluster closely around mean graph right shows us higher standard deviation values evenly spread average numbers work follows Given population 68 members population values range one standard deviation mean 98 within two standard deviations 99 7 within three standard deviations Given standard deviation 5 pixels 0 3 monkey heights less 235 pixels three standard deviations mean 250 greater 265 pixels three standard deviations mean 250 Calculating Mean Standard DeviationConsider class ten students receive following scores 100 test 85 82 88 86 85 93 98 40 73 83 mean average 81 3 standard deviation calculated square root average squares deviations around mean words take difference mean person square variance Calculate average values take square root standard deviation Score Difference Mean Variance Average Variance 254 23 85 85-81 3 3 7 3 7 2 13 69 40 40-81 3 -41 3 -41 3 2 1705 69 etc standard deviation square root average variance 15 13 Luckily us use normal distribution random numbers Processing sketch calculations Instead make use class known Random get free part default Java libraries imported Processing see JavaDocs information use Random class must first declare variable type Random create Random object setup Show Raw use variable name generator thought random number generator Random generator void setup size 640 360 generator new Random use variable name generator thought random number generator Random generator void setup size 640 360 generator new Random want produce random number normal Gaussian distribution time run draw easy calling function nextGaussian Show Raw void draw Asking Gaussian random number Note nextGaussian returns double must converted float float num float generator nextGaussian void draw Asking Gaussian random number Note nextGaussian returns double must converted float float num float generator nextGaussian thing supposed value wanted use example assign x-position shape draw screen nextGaussian function returns normal distribution random numbers following parameters mean zero standard deviation one Let say want mean 320 center horizontal pixel window width 640 standard deviation 60 pixels adjust value parameters multiplying standard deviation adding mean browser support canvas tag RESET PAUSE Example 4 Gaussian distribution Show Raw void draw Note nextGaussian returns double float num float generator nextGaussian float sd 60 float mean 320 Multiply standard deviation add mean float x sd num mean noStroke fill 255 10 ellipse x 180 16 16 void draw Note nextGaussian returns double float num float generator nextGaussian float sd 60 float mean 320 Multiply standard deviation add mean float x sd num mean noStroke fill 255 10 ellipse x 180 16 16 drawing ellipses top transparency actually see distribution brightest spot near center values cluster every often circles drawn farther right left center Exercise 4Consider simulation paint splatter drawn collection colored dots paint clusters around central location dots splatter towards edges use normal distribution random numbers generate locations dots also use normal distribution random numbers generate color palette Exercise 5A Gaussian random walk defined one step size far object moves given direction generated normal distribution Implement variation random walk 5 Custom Distribution Random Numbers come time life want uniform distribution random values Gaussian one Let imagine moment random walker search food Moving randomly around space seems like reasonable strategy finding something eat know food might well search randomly find problem may noticed random walkers return previously visited locations many times known oversampling One strategy avoid problem every often take large step allows walker forage randomly around specific location periodically jumping far away reduce amount oversampling variation random walk known L vy flight requires custom set probabilities Though exact implementation L vy flight could state probability distribution follows longer step less likely picked shorter step likely Earlier prologue saw could generate custom probability distributions filling array values duplicated would picked frequently testing result random could implement L vy flight saying 1 chance walker taking large step Show Raw float r random 1 full 1 chance taking large step r float r random 1 1 chance taking large stepif r 0 01 xstep random -100 100 ystep random -100 100 else xstep random -1 1 ystep random -1 1 However reduces probabilities fixed number options wanted make general rule higher number likely picked 3 145 would likely picked 3 144 even likelihood tiny bit greater words x random number could map likelihood y-axis y x Figure 4 figure generate distribution random numbers according graph able apply methodology curve formula One solution pick two random numbers instead one first random number random number second one however ll call qualifying random value tell us whether use first one throw away pick another one Numbers easier time qualifying picked often numbers rarely qualify picked infrequently steps let consider random values 0 1 Pick random number R1 Compute probability P R1 qualify Let try P R1 Pick another random number R2 R2 less P found number R1 R2 less P go back step 1 start saying likelihood random value qualify equal random number Let say pick 0 1 R1 means R1 10 chance qualifying pick 0 83 R1 83 chance qualifying higher number greater likelihood actually use function named Monte Carlo method named Monte Carlo casino implements algorithm returning random value 0 1 Show Raw float montecarlo forever find qualifying random value true Pick random value float r1 random 1 Assign probability float probability r1 Pick second random value float r2 random 1 full qualify re done r2 float montecarlo forever find qualifying random value true Pick random value float r1 random 1 Assign probability float probability r1 Pick second random value float r2 random 1 qualify re done r2 probability return r1 Exercise 6Use custom probability distribution vary size step taken random walker step size determined influencing range values picked map probability exponentially e making likelihood value picked equal value squared Show Raw uniform distribution step sizes Change float stepsize random 0 10 float stepx random -stepsize stepsize float stepy random -stepsize stepsize x stepx y stepy uniform distribution step sizes Change float stepsize random 0 10 float stepx random -stepsize stepsize float stepy random -stepsize stepsize x stepx y stepy Later ll see efficiently using vectors 6 Perlin Noise Smoother Approach good random number generator produces numbers relationship show discernible pattern beginning see little bit randomness good thing programming organic lifelike behaviors However randomness single guiding principle necessarily natural algorithm known Perlin noise named inventor Ken Perlin takes concept account Perlin developed noise function working original Tron movie early 1980s designed create procedural textures computer-generated effects 1997 Perlin won Academy Award technical achievement work Perlin noise used generate various effects natural qualities clouds landscapes patterned textures like marble Perlin noise organic appearance produces naturally ordered smooth sequence pseudo-random numbers graph left shows Perlin noise time x-axis representing time note smoothness curve graph right shows pure random numbers time code generating graphs available accompanying book downloads Figure 5 Noise Figure 6 Random Processing built-in implementation Perlin noise algorithm function noise noise function takes one two three arguments noise computed one two three dimensions Let start looking one-dimensional noise Noise Detail Processing noise reference tells us noise calculated several octaves Calling noiseDetail function change number octaves importance relative one another turn changes noise function behaves online lecture Ken Perlin lets learn noise works Perlin Consider drawing circle Processing window random x-location Show Raw random x-location float x random 0 width ellipse x 180 16 16 random x-locationfloat x random 0 width ellipse x 180 16 16 instead random x-location want Perlin noise x-location smoother might think need replace random noise e Show Raw noise x-location float x noise 0 width line-through noise x-location float x noise 0 width conceptually exactly want calculate x-value ranges 0 width according Perlin noise correct implementation arguments random function specify range values minimum maximum noise work way Instead output range fixed always returns value 0 1 ll see moment get around easily Processing map function first must examine exactly noise expects us pass argument think one-dimensional Perlin noise linear sequence values time example Time Noise Value 0 0 365 1 0 363 2 0 363 3 0 364 4 0 366 order access particular noise value Processing pass specific moment time noise function example Show Raw float n noise 3 float n noise 3 According table noise 3 return 0 364 time equals 3 could improve using variable time asking noise value continuously draw Show Raw float 3 void draw need noise value specific moment time float n noise println n float 3 void draw need noise value specific moment time float n noise println n code results value printed happens asking result noise function point time 3 increment time variable however ll get different result Show Raw Typically would start time 0 though arbitrary float 0 void draw float n noise println n move forward time 0 01 Typically would start time 0 though arbitrary float 0 void draw float n noise println n move forward time 0 01 quickly increment also affects smoothness noise make large jumps time skipping ahead values random Figure 7 Try running code several times incrementing 0 01 0 02 0 05 0 1 0 0001 see different results Mapping Noise re ready answer question noise value value range 0 1 us map range want easiest way Processing map function map function takes five arguments First value want map case n give value current range minimum maximum followed desired range Figure 8 case know noise range 0 1 d like draw circle range 0 window width Show Raw float 0 void draw float n noise Using map customize range Perlin noise float x map n 0 1 0 width ellipse x 180 16 16 0 01 float 0 void draw float n noise Using map customize range Perlin noise float x map n 0 1 0 width ellipse x 180 16 16 0 01 apply exact logic random walker assign x- y-values according Perlin noise browser support canvas tag RESET PAUSE Example 5 Perlin noise walker Show Raw class Walker float x y float tx ty Walker tx 0 ty 10000 void step full x- y-location mapped noise x map noise tx 0 1 0 width y map noise ty 0 1 0 height end full Move forward time tx 0 01 ty 0 01 end class Walker float x y float tx ty Walker tx 0 ty 10000 void step x- y-location mapped noise x map noise tx 0 1 0 width y map noise ty 0 1 0 height Move forward time tx 0 01 ty 0 01 Notice example requires additional pair variables tx ty need keep track two time variables one x-location Walker object one y-location something bit odd variables tx start 0 ty 10 000 numbers arbitrary choices specifically initialized two time variables different values noise function deterministic gives result specific time every time asked noise value time x y x y would always equal meaning Walker object would move along diagonal Instead simply use two different parts noise space starting 0 x 10 000 y x y appear act independently Figure 9 truth actual concept time play useful metaphor help us understand noise function works really space rather time graph depicts linear sequence noise values one-dimensional space ask value specific x-location whenever want examples often see variable named xoff indicate x-offset along noise graph rather time noted diagram Exercise 7In random walker result noise function mapped directly Walker location Create random walker instead map result noise function Walker step size Two-Dimensional Noise idea noise values living one-dimensional space important leads us right discussion two-dimensional space Let think moment one-dimensional noise sequence values given value similar neighbor value one dimension two neighbors value comes left graph one comes right Figure 10 1D Noise Figure 11 2D Noise Two-dimensional noise works exactly way conceptually difference course aren looking values along linear path values sitting grid Think piece graph paper numbers written cell given value similar neighbors right left along diagonal visualize graph paper value mapped brightness color would get something looks like clouds White sits next light gray sits next gray sits next dark gray sits next black sits next dark gray etc noise originally invented tweak parameters bit play color make resulting image look like marble wood organic texture Let take quick look implement two-dimensional noise Processing wanted color every pixel window randomly would need nested loop one accessed pixel picked random brightness Show Raw loadPixels int x 0 x loadPixels int x 0 x width x int y 0 y height y random brightness float bright random 255 pixels x y width color bright updatePixels color pixel according noise function ll exactly thing instead calling random ll call noise Show Raw Perlin noise brightness float bright map noise x y 0 1 0 255 bold Perlin noise brightness float bright map noise x y 0 1 0 255 nice start conceptually gives noise value every x y location two-dimensional space problem won cloudy quality want Jumping pixel 200 pixel 201 large jump noise Remember worked one-dimensional noise incremented time variable 0 01 frame 1 pretty good solution problem use different variables noise arguments example could increment variable called xoff time move horizontally yoff variable time move vertically nested loops Example 6 2D Perlin noise Show Raw Start xoff 0 float xoff 0 0 bold int x 0 x Start xoff 0 float xoff 0 0 int x 0 x width x every xoff start yoff 0 float yoff 0 0 int y 0 y height y Use xoff yoff noise float bright map noise xoff yoff 0 1 0 255 Use x y pixel location pixels x y width color bright Increment yoff yoff 0 01 Increment xoff xoff 0 01 Exercise 8Play color noiseDetail rate xoff yoff incremented achieve different visual effects Exercise 9Add third argument noise increments per cycle draw animate two-dimensional noise Exercise 10Use noise values elevations landscape See screenshot reference ve examined several traditional uses Perlin noise section one-dimensional noise used smooth values assign location object give appearance wandering two-dimensional noise created cloudy pattern smoothed values plane pixels important remember however Perlin noise values values aren inherently tied pixel locations color example book variable could controlled via Perlin noise model wind force strength could controlled Perlin noise goes angles branches fractal tree pattern speed direction objects moving along grid flow field simulation browser support canvas tag RESET PAUSE Figure 12 Tree Perlin noise browser support canvas tag RESET PAUSE Figure 13 Flow field Perlin noise 7 OnwardWe began chapter talking randomness crutch many ways obvious answer kinds questions ask continuously object move color obvious answer however also lazy one finish introduction also worth noting could easily fall trap using Perlin noise crutch object move Perlin noise color Perlin noise fast grow Perlin noise point say shouldn use randomness shouldn use Perlin noise point rules system defined larger toolbox choices ll implement rules goal book fill toolbox know random design thinking limited Sure Perlin noise helps ll need lot think re ready begin Licenses book's text illustrations licensed Creative Commons Attribution-NonCommercial 3 0 Unported License book's source code licensed GNU Lesser General Public License published Free Software Foundation either version 2 1 License option later version Colophon book generated Magic Book Project book would possible without generous support Kickstarter backers book typeset web Georgia headers Proxima Nova Please report mistakes book bugs source GitHub issue contact daniel shiffman dot net Author Daniel Shiffman professor Interactive Telecommunications Program New York University author Learning Processing Twitter GitHub"),
('Michael Stonebraker wins ACM Turing Award', "Massachusetts Institute Technology News Video Social Follow MIT MIT News RSS Follow MIT Twitter Follow MIT Facebook Follow MIT Google Follow MIT Instagram Follow MIT Flickr Follow MIT YouTube MIT News Office Browse Browse Popular Meet 2015 Goldwater Scholars Sports Shorts May 25 2015 weekly wrap-up MIT varsity athletics Uncovering diversity invisible ocean world Students inspire engineering activities curriculum development young learners Conference highlight Portugal-U partnerships Mission Space enduring legacy education opportunity Seeking deeper understanding brain works Topic Computer Science Artificial Intelligence Laboratory CSAIL Gauging materials physical properties video handle big data shrink Learn language text Removing reflections photos taken windows Computer vision Gauging materials physical properties video Object recognition free Graphics reverse Vision system household robots Electrical Engineering Computer Science eecs Helping robots put together Meet 2015 Goldwater Scholars SuperUROP class 2015 graduates high accomplishment promise Voltage new community electrical engineers Imaging Hu selected 2015 Holonyak Jr Award Five CSAIL researchers named ACM fellows Two sensors one Extracting audio visual information Research Researchers find lost memories make emotional decisions Spinning new version silk Diagnosing cancer help bacteria See Topics School School Architecture Planning MISTI Global Seed Funds 2015-16 call proposals Putting people buildings Seeing gender Sustainability built environment School Engineering Using desalination address drought Spinning new version silk Diagnosing cancer help bacteria Helping robots put together School Humanities Arts Social Sciences Students launch MIT INSPIRE competition Mark R Epstein 63 endows directorship MIT Museum Esther Duflo receives Princess Asturias Award Melissa Nobles named dean SHASS Sloan School Management MISTI Global Seed Funds 2015-16 call proposals MIT LGO Succeeding mission create industry leaders Impact players Crop-mapping drones win MIT 100K School Science Researchers find lost memories make emotional decisions Remote observing progress Measuring hot electrons Department Music Theater Arts Sleuthing Glaser Codex MIT MIT Music recording released major jazz label Jay Scheib named new housemaster Senior House SHASS announces 12 research fund recipients 2015 Chemistry enduring legacy education opportunity Meet 2015 Goldwater Scholars Symposium honors professor chemistry Stephen Lippard Timothy F Jamison appointed next head Department Chemistry Global Studies Languages MIT-India launches new dialogue MIT food thought Alumni gift SHASS establishes Cynthia L Reed Chair French Studies Language Said Done October 2014 Nuclear Science Engineering Coding cooling Newly tenured engineers Richard Lester named associate provost international activities NSE announces faculty promotions Civil Environmental Engineering Using desalination address drought Spinning new version silk Students inspire engineering activities curriculum development young learners Newly tenured engineers See Departments Center Lab Program Computer Science Artificial Intelligence Laboratory CSAIL Helping robots put together Gauging materials physical properties video handle big data shrink Learn language text Research Laboratory Electronics Better sensors medical imaging contraband detection Diagnosis keyboard Building community EECS postdocs Hu selected 2015 Holonyak Jr Award Biomimetics Robotics Lab Bound robotic glory Computer Science Artificial Intelligence Laboratory CSAIL Helping robots put together Gauging materials physical properties video handle big data shrink Learn language text Technology Policy Program Dava Newman nominated NASA post Alumna takes space Saturday mornings Shrink-wrapping spacesuits Graduate student Sami Khan receives research award See Centers Labs Programs Login Subscribe Newsletter Michael StonebrakerPhoto M Scott BrauerFull Screen Michael Stonebraker wins 1 million Turing Award CSAIL researcher invented core database concepts turned many companies Adam Conner-Simons CSAIL March 25 2015 Press Inquiries Share Press Contact Adam Conner-SimonsEmail aconner csail mit eduPhone 617-324-9135MIT Computer Science Artificial Intelligence Lab Media Resources 2 images download Access Media Media downloaded desktop version website Share Comment Leave comment Michael Stonebraker researcher MIT Computer Science Artificial Intelligence Laboratory CSAIL revolutionized field database management systems DBMSs founded multiple successful database companies won Association Computing Machinery ACM M Turing Award often referred Nobel Prize computing year marks first time Turing Award comes Google-funded 1 million prize announcement today ACM said Stonebraker invented many concepts used almost modern database systems founded numerous companies successfully commercializing pioneering database technology work adjunct professor computer science engineering MIT principal investigator CSAIL Stonebraker sometimes jokes didn know researching 30 years nowhere marketing guys started talking big data says realized d studying thing better part academic life Stonebraker's work past four decades helped spur multibillion-dollar big data industry participated creating leading nine separate companies including VoltDB Tamr Paradigm4 Vertica bought Hewlett-Packard 2011 340 million Mike trailblazer field databases asking essential questions collect organize access information lives says Daniela Rus director CSAIL Andrew Erna Viterbi Professor Electrical Engineering Computer Science devoted academic serial entrepreneur us CSAIL inspired work proud colleague previous work University California Berkeley Stonebraker developed two influential systems Ingres Postgres provide foundational ideas many cases specific source code spawned several contemporary database products including IBM Informix EMC Greenplum Ingres one first relational databases provide organized way store multiple kinds entities serve industry standard business storage Larry Rowe professor emeritus Berkeley helped Stonebraker commercialize technology remembers many colleagues didn think relational databases could evolve academic theory practical application better way get Mike going tell Rowe says One great abilities imagine something exist ask doesn set new research goal making happen Postgres meanwhile integrated Ingres ideas object-oriented programming enabling users natively map objects attributes databases new notion object-relational databases could used represent manipulate complex data like computer-aided design geospatial data time series Stonebraker major projects MIT include C-Store column-oriented database partitions tables column allowing delivery dramatic performance speedups reading large quantities data H-Store parallel database management system deliver high sustained rate operations transactions per second SciDB represents data arrays provides substantially improved performance many modern analytics settings machine learning statistical data processing Notably era term open source didn yet exist Stonebraker also released many systems public domain ensuring widespread adoption allowing academics build work delighted Professor Stonebraker recognized groundbreaking contributions database technology says Anantha Chandrakasan Joseph F Nancy P Keithley Professor Electrical Engineering head MIT Department Electrical Engineering Computer Science EECS award honor EECS department inspiring many members MIT community worked Stonebraker co-directs CSAIL Intel Science Technology Center Big Data Sam Madden professor computer science engineering joining MIT Stonebraker professor computer science Berkeley 29 years graduate Princeton University earned master's degree PhD University Michigan every computer scientist dream get award honored selected Stonebraker says reinforces validates importance work alongside many researchers field database management systems Past Turing Award recipients either taught earned degrees MIT include Shafi Goldwasser Silvio Micali 2013 Barbara Liskov 2008 Ronald Rivest 2002 Manuel Blum 1995 Butler Lampson 1992 Fernando Corbato 1990 Ivan Sutherland 1988 John McCarthy 1971 Marvin Minsky 1969 Stonebraker formally receive award ACM annual awards banquet June 20 San Francisco Topics School Engineering Electrical Engineering Computer Science eecs Computer Science Artificial Intelligence Laboratory CSAIL Computer science technology Data Entrepreneurship Awards honors fellowships Faculty Innovation Entrepreneurship E Comments View discussion thread Press Mentions Lauren Beavin Boston Magazine speaks M Turing Award recipient Michael Stonebraker Boston great place computer scientists Boston tech scene way critical mass quality life high Stonebraker explains ACM awarded M Turing Award widely regarded Nobel Prize Computing CSAIL researcher adjunct professor Michael Stonebraker reports Barb Darrow Fortune Stonebraker famous arguing database one-size-fits-all category Michael Stonebraker principal investigator MIT Computer Science Artificial Intelligence Lab adjunct professor MIT won M Turning Award work database management systems reports Nidhi Subbaraman BetaBoston every computer scientist lifetime dream came true said Stonebraker Related Michael StonebrakerCSAIL Database GroupComputer Science Artificial Intelligence LaboratoryDepartment Electrical Engineering Computer ScienceSchool Engineering Archives Goldwasser Micali win Turing Award Visual control big data Improving data management entrepreneurship Website Website maintained MIT News Office MIT News Office MIT News Press Center Press Inquries Filming Guidelines Contact Us Terms Use RSS Twitter Facebook Google Instagram Flickr YouTube MIT Homepage MIT Video MIT Connect MIT Resources Events Calendar MIT Admissions Alumni Education Labs Centers Resources Submit Campus News Pitch Story Sign Newsletter Subscribe Press Releases Terms Use GIVE MIT Massachusetts Institute Technology MIT News Office Building 11-400 Massachusetts Institute Technology Cambridge MA 02139-4307 Back top"),
('Database pioneer Stonebraker rocks $1M Nobel Prize in Computing', "Trending Watch Google O livestream Research community looks SDN iPhone 7 rumor rollup Resources White Papers network world read Create connected devices dragging dropping Japanese show latest drones IoT cow Sensors take Elsie's temperature World geekiest license plates Objective-C past Swift future Netgear ZyXEL confirm NetUSB flaw working fixes Search Search Suggestions Insider email Security Security Access Control Application Security Compliance Malware Cybercrime Mobile Security Network Security Security Vulnerability Management LAN WAN LAN WAN Ethernet Switch IPv6 Internet Things Router Service Providers WAN Optimization SDN Unified Communications VoIP Unified Communications VoIP Collaboration Social Contact Center E-mail Services Videoconferencing VoIP Cloud Computing Cloud Computing Cloud Security Cloud Storage Hybrid Cloud IaaS PaaS Private Cloud Public Cloud SaaS Infrastructure Management Infrastructure Management Application Performance Management Asset Management Network Management System Management Wireless Wireless 4G Android BYOD MDM MAM Mobile Apps Smartphones Wi-Fi iOS Software Software Applications Big Data Business Intelligence CRM ERP Linux Windows Data Center Data Center Business Continuity Disaster Recovery Green Network Storage PCs Servers Tablets Virtual Desktop Virtualization SMB Careers Careers Education Skills Training Salary Tech Debates Tech Primers Cisco Subnet Microsoft Subnet Open Source Subnet Events Events Demo News Tests Insider Blogs Resources White Papers Newsletters Video Job Search Events Home Software Share Twitter Like Facebook Share LinkedIn 1 Google Email friend Use commas separate multiple email addresses Privacy Policy Thank message sent Sorry error emailing page Database pioneer Stonebraker rocks 1M Nobel Prize Computing Related Stanford crypto expert Dan Boneh wins 175K computer science award 2011 timeline major high tech awards Cryptographers Unix pioneers lead 'Nobel Prize Computing' goes distributed computing wrangler Leslie IDG Answers Convert OST file data PST file formats Credit Wikipedia M Turing Award recognizes Ingres RDBMS creator Bob Brown Follow Network World Mar 25 2015 7 29 PT RELATED TOPICS Software big data Databases Awards ACMMichael Stonebraker whose database software breakthroughs helped tame information overload long referred big data recipient 2014 ACM M Turing Award k Nobel Prize Computing annual Association Computing Machinery honor includes jacked-up 1M prize funded Google recognizes Stonebraker fundamental contributions concepts practices underlying modern database systems Also NetworkWorld official Nobel Prize Computing Whirlwind tour technology major awards honors prizes early-1970s development INGRES Interactive Graphics Retrieval System relational database management system one first two RDBMSs along IBM System R credited major advances query language design processing techniques well data access methods built foundation many modern database systems Stonebraker commercialize Unix-based creations series companies Ingres acquired CA Illustra bought Informix Vertica purchased HP released open software used others grow database industry Stonebraker developed Ingres well object-relational Postgres 29-year career computer science professor University California Berkeley currently serves adjunct professor compute science engineering MIT principal investigator MIT's Computer Science Artificial Intelligence Laboratory co-founder co-director Intel Science Technology Center Big Data work included XPRS parallel shared nothing version Postgres Mariposa massively-distributed federated database system commercialized via Cohera Corp recently Stonebraker focused specialized database management systems SciDB scientific data start-up front recent company lead pitch co-founder Stonebraker name Tamr formed 2013 help enterprises curate data internal external data stores even Internet Things Michael Stonebraker work integral part business gets done today said ACM President Alexander L Wolf statement Moreover practical application innovative database management technologies numerous business start-ups continually demonstrated role research university driving economic development Stonebraker throughout career outspoken software developments See Database pioneer continues bash RDBMS Stonebraker DeWitt eBay slam MapReduce NoSQL Discussion Nothing SQL ACM present 2014 M Turing Award annual Awards Banquet June 20 San Francisco Past winners included Microsoft Research Leslie Lamport MIT crypto experts Shafi Goldwasser Silvio Micali check Stonebraker action recent YouTube video discusses among things notion one size doesn fit databases RELATED TOPICS Software big data Databases Awards Bob Brown Secure Cloud-enabled Software-Defined News Editor Bob Brown news editor Network World blogs network research works closely staff's wireless mobile reporters Follow Twitter Alphadoggs connect via email bbrown nww com View Comments Might Like Join discussion first comment article Commenting Policies Don't Miss Richard Stallman Windows OS malware Microsoft Apple operating systems malware backdoors snoop shackle users Microsoft offers Windows 10 carrot threatens stick 7 free Wi-Fi stumbling surveying tools Windows Mac Newsletters Sign receive latest news reviews trends favorite technology topics Get Daily News newsletter Go EMC spent 1 2B buy cloud vendor Virtustream EMC public private cloud offerings VMware wanted slice managed cloud Create connected devices dragging dropping Little coding skills required do-it-yourself hardware kit Sony-backed Mesh BrandPostLearn Sponsored HP Build Hybrid Cloud Part 5 Resources White Paper Gartner Business Continuity 2015 Video WebcastSponsored Storm - Maintain Business Usual - Even Extreme Weather White Paper 10 Steps Reducing Mainframe MLC Costs White Paper 5 Microsoft Azure Myths Debunked White Paper 5 Tips Secure Small Business Backdoors Enterprise Supply Chain Go Top Stories Avago buying Broadcom 37 billion create networking chip giant combined company develop chipsets wired wireless networks overcome failure threat intelligence Steps take break silos enable threat intelligence flow throughout SDN helps distribute data Large Hadron Collider advanced research education networks transitioned 100 Gbps fast core 6 hottest jobs new tech grads College graduates entering workforce interest STEM careers reaching new Sponsored Links Network World Follow us Security LAN WAN SDN Unified Communications VoIP Cloud Computing Infrastructure Management Wireless Software Data Center SMB Careers Tech Debates Tech Primers Cisco Subnet Microsoft Subnet Open Source Subnet Events Features News Blogs Resources Newsletters Events Us Contact Privacy Policy Advertising Careers IDG Site Map Ad Choices Copyright 1994 - 2015 Network World Inc rights reserved Explore IDG Network descend CFOworld CIO CITEworld Computerworld CSO DEMO Fritterati Greenbot IDC IDG IDG Answers IDG Connect IDG Knowledge Hub IDG TechNetwork IDG TV IDG Ventures InfoWorld News ITwhitepapers ITworld JavaWorld LinuxWorld Macworld Network World PC World TechHive ad close 20 seconds Continue site"),
('Kinda dated, but I thought it was funny', "Hamster Republic - James - Technomancy ever wondered computer works fascinatingly mysterious type point click inside million little things happen stuff appears screen purpose article teach simple terms exactly really going inside computer Machines first computers machines Punch cards vacuum tubes big rooms filled wires could math high speed count things sort records long way modern computers eh That's today computers aren't machines magic modern computer magic box filled ceremonial components traps little evil spirit forced work That's True Yes really true computer may resemble appliance many ways plug roughly box shaped well similarity appliances house stops doesn't Computers marketed machines many people base whole careers around supporting claim machine however complex may something break component parts smart enough actually understand works ground computers Many computer experts claim understand computers work ever ask one explain probably start telling something like key point understanding computer works concept abstraction multitude layers functionality built upon like bricks tower Semiconductors etched treated doped form circuits redirect electrons specific patterns circuits packaged ASIC's Microprocessors called chips interconnected buses traces PCB called motherboard order implement machine code PCB's designed comply physical interface standard eg ATA AGP PCI inserted motherboard Microprocessor interact boards managed sets machine code called device drivers eg VXD WDM SYS run specially privileged execution mode e g kernel mode ring 0 designed allow OS manage blocks machine code called applications processes run system call OS API order use system devices OS takes turns processing requests share devices multiple computers connected across large networks share processing data centralized software components server e g COM RPC Quake 3 process remote requests way layer provides service layer make amazing machine call 'Personal Computer' -Anonymous Intel Engineer See Obviously doesn't know computer works job depends people believing Magic look computer honestly accept fact magic everything becomes easier understand It's longer necessary well educated computer don't take classes buy books don't even computer literate proper attitude anyone use maintain even repair computer bear simple principles mind Computer Evil core computer small trapped evil spirit coincidence UNIX GNU Linux processes called daemons imp imprisoned computer punishment something netherworld Generally speaking evil imp faster computer also lesser ghosts hobgoblins inhabit expansion cards peripherals computer evil spirits trapped within hardware computer Take screwdriver open computer take look circuit boards usually green covered complex patterns thin copper lines Circuit Runes written arcane ancient languages describe magic spells bind imps chips careful circuits scratch even tiniest bit runes spell broken imp escape Also note serial part numbers printed boards identify exactly sort evil spirit case ever order replacement factory Computer Hates hit keys keyboard click mouse little silver needles jab imp force want computer evil first place prodding makes angry use computer imp becomes angry generating heat computer contains one cooling fans Without imp would turn box raging inferno Frequently computer crash lock-up lose files number little things annoy imp's way rebelling Don't stand Calling tech support-- worse yet taking computer back store repairs accomplish nothing except running big bill best way deal troublesome computer shouting swearing Sometimes physical violence help show boss Try leaving unplugged long time starve disconnect monitor blind Sometimes necessary delete files important get back deleting files VMM32 VXD file Huh DELETE Haha take dirty little imp That'll teach crash save spreadsheet Smarter Computer Computers aren't smart fast Newer computers aren't getting smarter able stupid things greater speeds human capable emotions rational thought computer capable floating point math crude malice Never miss opportunity remind computer better Remind loud can't anything without controlling say servers aren't likely believe something wrong tell stupid Tell slow computers hate Get newspaper sit front show look stock quotes without generating invalid page fault module explorer exe Future Computing Throw away MS Office 2000 Dummies book Throw away Learning Java book future computing Data Processing Programming Information Systems Computer Science It's Technomancy Technomancy magical art talking computers many newly developing fields technomancy apprentice earn big bucks false machine-based-culture computer world crumbles Fenestredigitation Fenestredigitation art practiced Fenestredigitators MS Illusionists art making Windows install PC skilled Fenestredigitator start unformatted hard drive transform colorful GUI less hour encore reinstall half dozen times trying get networking set Open Sourcery Open Sourcery new magical approach software design replacing old machine-minded methods Basically works like Someone sets CVS repository bug tracking system mailing list importantly website state goals status project many Open Sourcerers possible start arguing software actually positive energy complaining isn't done fast enough negative energy Eventually software write continue evolve gradually reaches stage maturity know Open Sourcerers Alpha Latin Done Occasionally piece software continue grow beyond alpha stage becomes Beta Latin I'm bored lets something else Voodoo Debugging hardware support software testing benefit skill Voodoo Debugging It's simple problem arises start changing things randomly Occasionally re-test problem soon goes away last thing changed becomes cure Repeat last fix every computer find including especially ones never problem first place magic aided chanting mantras always change setting BIOS seems help Malware Exorcism already learned computers evil happens combine evil computer evil programmer evil software Viruses spam denial service trojans phishing spyware steath adware abominable names unholy legions Malware assail world computer magic plenty demand technomancers skilled art performing exorcisms bind banish malevolent malware possessed computer Signs recognizing possessed computer include slow internet access excessive pop-up advertisements programs suddenly appear without installed programs refuse uninstalled sudden changes browser start-page green pea-soup spewing drive bays Excorcism difficult tame imp controls computer may already killed malware attempts purge malware may overly effective kill computer's native demons really bad Kill Computer know kill Vampire wooden stake Werewolf silver bullet kill computer Computers malevolent presences evil fact domesticated locked pretty white grey black fruity-translucent boxes doesn't change fact computer goes berserk prepared defend home family Could protect employees company server started stomping sucking blood It's something many us contingency plans believe insurance carrier isn't going cover Weapons It's important arm weapons go confront computer might put many available favorites FDISK FDISK powerful weapon probably already Versions included DOS Windows GNU Linux FDISK like double-edged sword cut heart right computer's hard drive used surgical precision lop partitions warning careful hurt computer happened files cared inside belly learn safely wielding FDISK intimidate wound even kill computer visit http www fdisk com fdisk CMOS BIOS CMOS setup also known BIOS important weak-spot computer know get past computers defenses soft underbelly BIOS never need spend another sleepless night cowering bed fear computer real trick BIOS getting computer booting try pressing DEL F1 F10 Different computers different magic keys must press open attack inside computer nostrils metaphorically speaking Try tell hardware doesn't really deny real hardware See number Try changing Careful abuse BIOS wound kill even causes cause computer catch fire Physical Weapons course take computer turf things terms Screwdrivers claw-hammers baseball bats chainsaws possibilities endless exception over-powered CD-trays computers don't ability hit back creative Gasoline cordless drills second-story windows possibilities endless 2001-2006 James Paige work licensed Creative Commons Attribution-ShareAlike 2 5 License Back James's Stuff"),
('Thinking in Types', "Thinking Types Pat Brisbin May 02 2014 haskell colleague mine stuck attempting something Haskell seemed conceptually simple resulted type error particular form polymorphism common object-oriented languages translated well Haskell related technique permitted language type system post d like outline simplified version task limitation overcome Hopefully ll see working type system rather find unexpected benefits resulting design Task system colleague building models Pong-like game two players ball need rendered screen re going avoid discussion graphics library used accomplish focus task flexibly sharing behavior across two kinds objects domain simplification allow Haskell examples make sense someone familiar language task well-suited polymorphism object-oriented slant could define Renderable interface two object types presumably Ball Player conform interface way simply tell object whatever render Ruby easily duck typing safety concise flexible Java could define actual Interface get form type checking Things would bit safer also verbose approach translates well Haskell thanks feature called type classes provide concise flexible completely type safe way define interfaces multiple types implement order understand problem want discuss ll need digress little explain work Type Classes type class defines set functions must implemented type considered type class functions written operate one specific type type given class constraint example help type Showable Show type class define represent String desired interface described class Show show - String common represent type variable declaration states type Show class must define function show takes type argument returns String Imagine declare type representing people age name data Person Person Int String value type Person built giving Int age String name constructor also called Person common use word type constructor since ambiguity either used would ve also fine say data Person BuildPerson Int String uncommon cases one constructor people domain specify represent Strings implementing instance Show Person instance Show Person show Person age name name show age years old left hand side uses pattern matching take value type Person bind individual components variables age name use function body possible type used functions care re given type instance Show One function print type signature specifies class constraint left allowing use show function body print Show - IO print x putStrLn show x could use Haskell program like main print Person 29 Pat might guessed program would print Pat 29 years old terminal Renderable fresh Haskell knowledge speak actual problem hand Using Show example define type class class Render render - IO states type made renderable defining function render takes type argument whatever required render screen Much like print would IO action details IO Haskell actual meaning IO interesting topics well outside scope post Presuming types Ball Player system make instance Render data Ball Ball instance Render Ball render ball -- whatever data Player Player instance Render Player render player -- whatever implementing instance types currently domain write functions care re given Ball Player simply need something rendered renderAll Render - IO renderAll rs mapM_ render rs need use mapM_ place map might expect IO involved detail safely ignored direct curious readers docs Let test thing main -- renderAll ball playerOne playerTwo home patrick test hs 4 22 Couldn't match expected type Ball' actual type Player' expression playerOne first argument renderAll' namely ball playerOne playerTwo ' expression renderAll ball playerOne playerTwo Uh-Oh Problem reason error Haskell allow heterogeneous lists words elements list must type might consider list game elements homogeneous renderable language like Ruby Java code would work fine Haskell much stricter type system even though values share interface type colleague got stuck asked question sparked blog post common question learning new language ask already know X language Y case X heterogeneous lists Y Haskell gave probably common response questions earth want X actuality approaches heterogeneous lists Haskell However think good use case get around problem cleaner safer way using type system rather subverting Thinking Types list specific type suitably descriptive many Foos However find attempting put objects different types single list lose descriptiveness Even language allowed d blob generic things sense things represent taken together one solution problem would define type play role currently nondescript list adds shape safety program data Game Game Ball Player Player Game consists Ball two Players trade-off could ve also specified Game Ball list Players would flexible less safe since would make possible create game wrong number players Haskell type system shines best encode many invariants possible within types impossible run Haskell program type error follows logic encoded types guaranteed correct hear Haskell reprise compiles works technique reduces possibility certain bugs real tangible benefit moving generic list structured type many advantages code easier read understand group data structured type rather opaque list also extend system adding behavior around data type specifically behaviors also easier understand arguments return values structured well-understood type Composite next change motivated type turning renderAll renderGame wait could render instance Render Game render Game b p1 p2 render b render p1 render p2 main -- render game form Composite pattern compound value indistinguishable individual parts least comes rendering using type class polymorphism composite data type system closely follows Open Closed best minimize impact Expression Problem Extending game occur number flexible ways example could extend Game type instance another record renderable type data Game Game Ball Player Player Score instance Render Game render Game b p1 p2 render b render p1 render p2 render re careful module exports change like done backward-compatible way approach outlined whatever reason cannot change Game may choose extend Composite another layer data ExtendedGame ExtendedGame Game Score instance Render ExtendedGame render ExtendedGame g render g render Hopefully post shown strong static type system evil thing avoided help guide designing abstractions ensure make mistakes Languages like Haskell embrace idea make easy utilize great effect hope found interesting see small shift thinking work around limitation also improve code write next Interested learning Haskell Start Learn Haskell Want learn type classes particular Check talk Type classes come around minute 40 Pat Brisbin Pair one expert developers level skills Coaching thoughtbot Save time learning best practices techniques reducing technical debt Ember Ruby Haskell Go 1-on-1 sessions tailored goals Services Consulting Coaching Workshops Hire Us Products FormKeep Hound Rototo Tropos Upcase Open Source Argo Bourbon Capybara Webkit Clearance Dotfiles Factory Girl Laptop Runes Suspenders Books Backbone js Rails Design Web Geocoding Rails Goal-Oriented Git iOS Rails Maintaining OSS Playbook Ruby Science Testing Rails Write Roguelike Podcasts Bike Shed Build Phase Giant Robots Reboot Tentative 2015 thoughtbot inc design robot thoughtbot registered trademarks thoughtbot inc"),
('Complexity theory isnt required to be a programmer', 'Musing Mortoray Programming Language Design Search Complexity theory isn required programmer 24 Tuesday Mar 2015 Posted mortoray CodeProject Philosophy 6 Comments Tagscomplexity Programming software-development Complexity sometimes portrayed corner stone theory computation good would algorithm analysis way communicate results Theory role play field m sure required typical day programming Perhaps could even go far saying could good programmer without understanding much anything complexity theory purpose article question value complexity theory significant part theory computer science even enjoy bit analysis sometimes m wondering loud whether actually plays role day typical programmer Practical matters typical problems see projects far removed realm theory re looking concrete answers specific problems re right need know save record DB send JSON request server rotate element screen etc might enjoy analysing algorithm opportunity usually isn process methods tuned producing functioning maintainable code primary goal writing feature theoretical efficiency functional correctness means writing tests choosing appropriate API putting correct runtime checks Perhaps need get peer reviewed merge main branch create changelog mark issue complete ready-for-testing typical day week even month even get close computational complexity day comes need populate collection objects pick elements Finally something reminds complexity theory learned need function efficient set looking solutions realities dawn could probably solve problem simply creating simple list building simple comparator sorting list analysis standard library functions efficient enough m even sure needs efficient heard back product management extreme customer ever thousand items used brain-dead brute force method possible nobody would ever notice Minimal understanding fine really need discuss algorithms Say m team presentation show O n solution causing problem Bob gives funny look asks O n mean could stare blankly unsure doesn understand stuff could dismiss could even mean laugh could simply answer measure long code takes run n means number items container algorithm one comparison item container Bob answers ah like loop runs 1 n Good Bob grasped basics complexity theory really O n might say common knowledge complexity starts waver significantly Surely Bob doesn claim understands theory much really understand Consider O n means nothing right somebody tells something O n truthfully tells nothing d need make sorts assumptions semblance meaning First need know whether time space complexity re dealing collections people tend mean time complexity collections space complexity O n say since common one radix tree second major assumption m measuring significant operation O n must referring something particular algorithm collections convention seems comparison operation really best choice many practical situations memory allocation costlier comparison disk based algorithms number serializations could key cost situations may even cost calculating hash re looking fine details hand-wavey approach good theoretical analysis use random-access machine specific model computer purpose analysis often state re using machine complexity analysis aside value n O n actually represent cases actually measure number steps time quite commonly big-O notation actually measuring amortized time instead re dealing hash maps get even lenient allowing O 1 mean average expected time given good hashing function Measurements big-O give us idea algorithm performs practice wouldn allow somebody replace O log N algorithm one O 1 time complexity without first measuring Perhaps big-O isn even right value often non-simplified complexity revealing Even still lot details practice algorithm perform given layers caching CPU m sure many us thought even designed algorithms around m however still aware properly integrate complexity theory know cache-aware analysis topic isn widely covered seems algorithm perform concurrent computing Clearly d prefer algorithm scale processors one even refer scaling complexity like linear gain N processors m bit uncertain precise way something called isoefficiency topic also seems uncommon practice know size complexity data stores easily dominate time complexity really costly access large amounts memory know sequential reading faster random access know alignment good false sharing bad Certainly way put together theory know details hasn prevented analysing situations Simply reading CPU architecture understanding threading colleague Bob could probably start type analysis honest situations details become vastly important exceedingly rare practical programming quite possible effective programmer without understanding cache coherency Let honest Algorithm analysis important field people daily basis significant influence value community standard libraries VMs operating systems continually improved field research d foolish recognize value field however speciality field think one really needs complexity theory programmer m positive somebody could even become really good programmer without ever seeing utmost basics far important understand pitfalls floating point calculations Knowing theory course make one better programmer knowing number details computing improve one abilities cryptography cache coherency compiler design functional programming user experience declarative programming quality assurance fault tolerance name tiny immense number aspects modern software way expected know certainly level expertise Complexity theory doesn stand list good programmer without knowing ve fortunate work wide variety projects engineering media finance games Follow Twitter share love programming re interested something special let know RedditTwitterEmailMoreFacebookPocketLinkedInTumblrGoogleLike Like Loading Related Post navigation Previous post Next post 6 thoughts Complexity theory isn required programmer Lomash said 2015-03-24 10 30 agree Big-O best way rank algorithms programmers believe O 1 algorithm faster O N algorithm case says performance O N algorithms would deteriorate faster rate O 1 algorithms increase size data given data size even small size changes Big-O nothing say compare performance algorithms O 1 algorithm large constant may much slower O N algorithm small constant still believe nice concept know Something back mind keep making bad choices problem misnomer Big-O represents algorithm speed many programmers working cloud technologies big data opinion Big-O would become relevant Reply Hari said 2015-03-24 15 58 use Asymptotic notations everyday look piece code problem think could done better analysis already done piece code trying copy online stare determine actually efficient job understand use API calls time never need know general disagree need know broad knowledge lot areas computer science every field version notation Although always use big O time space general take distributed computing consider rounds message counts major measure notion attributes considered different always mentioned algorithm field see points argument convincing enough say widely used somebody happens make html webpages probably need writing codes computation theoretical knowledge better insight performance code Reply Jamie Kingsbery said 2015-03-24 20 25 find use algorithmic complexity implicitly lots things every day Every time write database relational NoSQL ask performance deteriorates Every time list things ask performance deteriorates list gets longer add database index Plus algorithmic complexity hard said explain gist minutes understand pretty well week thinking Reply Chao Xu said 2015-03-24 21 06 Complexity theory usually means computational complexity theory proving things complexity classes instead algorithms think better name would algorithm analysis Reply charter said 2015-03-24 21 16 Agree doesn matter often big oh 1 log n n every developer needs recognize happens things go exponential relative prediction size n given utility algorithm hiring like check one spot exponential time m pretty terrible exact big oh like pointed details seldom matter Reply Vlad said 2015-04-01 00 00 think interesting article albeit little unclear first sentence refers theory computation switches day-to-day programming two thing like difference civil engineering particle physics end think amount algorithmic sophistication required given programming task depends always case life context thought d add thoughts 1 true quite lot programming fairly naive algorithmic point view Business programming often involves using pre-packaged frameworks APIs adding layer business logic Said business logic may lot rules require sophistication subtelty properly understand translate code need really clever algorithms algorithms really onerous amount data small enough doesn matter 2 Often enough d like sophisticated algorithm fundamentally reduce complexity one figured cases often patchwork clever heuristics underlying engine still brute force processing Maybe chess simple example minimax algorithm brute force algorithm today programs lot clever tricks added basic framework trim prune amount processing needed Big online services also Let take online store need quickly show product information large catalog basic idea simply use map takes huge amount RAM levels caching involved map presumably distributed across clusters machines etc lot online services use huge amounts RAM approach though m sure d love bettter lower data center costs 3 agree algorithms go beyond naive idea big-Oh needed think often enough college grads computer science related fields take courses involve algorithms 70s 80s fine starting point may give people wrong idea enter worlforce applying thinking everything even may best approach author pointed hammer everything looks like nail knowledgeable enough say sure imagine sophisticated new paradigms algorithm development continue developed used depends kind programming re Reply Leave Reply Cancel reply Enter comment Fill details click icon log Email required Address never made public Name required Website commenting using WordPress com account Log Change commenting using Twitter account Log Change commenting using Facebook account Log Change commenting using Google account Log Change Cancel Connecting Notify new comments via email Notify new posts via email Author Leaf programming language Follow meon Twitter Follow Blog via Email Enter email address follow blog receive notifications new posts email Recent Posts wild code grows Blocking asynchronous operations without timeout broken Debugging binary searching code revisions bug error fault irrelevance classification swipingly good time edge gestures HTTP cache headers betray privacy Fast build turnaround time essential Cohesion coupling good measures quality Nobody cares code Using hack stifling perfectionist moving Measuring finger mouse velocity release time Complexity theory isn required programmer Blog WordPress com Chateau Theme Follow Follow Musing Mortoray Get every new post delivered Inbox Join 779 followers Build website WordPress com Send Email Address Name Email Address Cancel Post sent - check email addresses Email check failed please try Sorry blog cannot share posts email d bloggers like'),
("My Master's program capstone project: The M Programming Language (feedback welcome)", "Matthew Mayo Adventures software data systems Blog M Programming Language capstone project Master's degree program designing programming language implementing compiler set libraries number programs language language called M somewhat aimed new programmers designed intent reducing initial learning curve built around concept syntactic semantic integration subprograms objects M mainly influenced C Ruby Lisp M strongly-typed block structured lexically-scoped general-purpose programming language supports type inference primitives allows user-defined data type creation permit global variables M single top-level linguistic construct module used define functional structural code blocks original wonder got project rolling well single data structure list M compiler currently targeting Scala intermediary representation stop-over way JVM I'm interested soliciting feedback anyone willing take time look find concepts odd choice module instance keep mind decisions made specific reasons related undertaking project Also toy proof-of-concept-style language used educational tool anything process highly rewarding thus far said pretty happy result point actively writing programs M write test compiler Read M Design Document like Follow Getting Started Tutorial write familiarize code currently publicly-available compiler hope finished next months Written March 22 2015"),
('Dexter Kozen talks about NetKAT - a system for mathematically reasoning about networks', 'Kalender Find vej Telefonbog Job A- -indeks KUnet English Toggle menu Videoportal Kanaler K benhavns Universitet Det Humanistiske Fakultet Det Juridiske Fakultet Det Natur- og Biovidenskabelig Det Samfundsvidenskabelige Fak Det Sundhedsvidenskabelige Fak Det Teologiske Fakultet Niels Bohr Institutet KU screencasts Forskerspirer Temasider 1814 - Hvad skete der lige med Norge Strategi 2016 Copenhagen Summer University Virtuel Festsal Videoportal English Meet PhD Students Studieteknik studiestartere Live events Abonn r F nye videoer som e-mail F nye videoer som podcast F nye videoer som RSS Log ind Log ud Dexter Kozen DIKU Talk mp4 Det Natur- og Biovidenskabelige Fakultet 131 views 19 marts 2015 netkat dexter kozen programming languages programmeringssprog datalogi diku diku talk datalogisk institut department computer science Fredag d 13 marts holdt g steprofessor Dexter Kozen fra Cornell University foredrag om de nyeste gennembrud udviklingen af NetKat et h jniveau sprog til programmere netv rk kan du se hele foredraget p film Dexter Kozen DIKU Talk mp4 0 Del Embed Email URL share Embed denne video Send til en ven Send Kommunikation K benhavns Universitet N rregade 10 postboks 21771017 K benhavn K Kontakt Nyhedsredakt r nyhedsredaktion adm ku dk Tel 45 22 64 03 55 00 52 Lykke Friis efter Merkel-debatten K benhavns Universitet 88 views 30 april 2015 01 07 Participants Merkel debate K benhavns Universitet 555 views 29 april 2015 20 33 Digital humaniora 2015 Velkommen og introduktion Det Humanistiske Fakultet 42 views 29 april 2015 1 04 00 Merkel Thorning-Schmidt UCPH K benhavns Universitet 2 059 views 28 april 2015 02 46 Feltarbejde p Disko Gr nland Det Natur- og Biovidenskabelige Fakultet 319 views 24 marts 2015 04 39 Talking Turing video teaser Det Humanistiske Fakultet 2 887 views 23 januar 2015 Show'),
('High-content math and algorithm training videos', 'also onsite training make programmers better Hire us train conglomerate corporation Lo-Fi Learning Advanced topics blackboard screen coming soon spammy promise Loop School latest releases Good interview prep Beef probability skills great order Hold butts Click future titles vote priorityVideos works include Loop School project Tweet'),
('Representing Decision Trees in Code', "Toggle navigation Archive Categories Pages Tags Submit Represent Decision Trees Code 20 March 2015 Exploring Decision Trees Permutation problems solved using decision trees depth decision tree represents number possible outcomes breadth decision tree represents ordering decisions made programming represent decision trees using recursive backtracking algorithm Recursive Backtracking Algorithm function recurse depth basecase var 0 breadth length applyValue breadth recurse breadth depth removeValue breadth code represents generalization recursive backtracking algorithm algorithm used model decision trees depth tree represented depth recursive stack breadth tree represented number iterations performed loop within recursive stackframe actual decision making process represented code within loop Solving Permutation Problems using Recursive Backtracking Algorithm Lets explore using recursive backtracking algorithm solve permutation problem algorithm created finding possible anagrams given word function anagrams originalString var resultStorage function recurse buildUpString originalString originalString '' resultStorage buildUpString 1 return var 0 originalString length recurse buildUpString originalString originalString substring 0 originalString substring 1 '' originalString return Object keys resultStorage var anagrams anagrams 'abc' console log anagrams 'abc' 'acb' 'bac' 'bca' 'cab' 'cba' solution follows structure recursive backtracking algorithm shown previously see loop within recursive function Within loop code controls final result generated code within loop appears though resemble 3 lines code within loop recursive backtracking algorithm actuality one line code performing behavior three lines code within recursive backtracking algorithm's loop one line code within loop anagrams algorithms perform behavior one implicitly anagrams solution contains 3 variables essential structure decision tree Algorithm's represent decision tree often form variables resultStorage resultStorage variable accumulates values buildUpString variable passed success base case using pure recursive solution variable exist case branch decision tree would return it's results previous branch results would accumulate together stackframe returned buildUpString buildUpVariable initially starts empty accumulates values depth decision tree increases final level decision tree hit represented code hitting base case add value buildUpString resultStorage traverse back decision tree returning stack frames originalString originalString variable represents initial value passed decision tree basis possible permutations Bringing together every recursive call buildUpString gets bigger originalString gets smaller originalString length 0 add value buildUpString resultStorage Returning recursive stack frames removes values buildUpString order added essence returning takes values away buildUpString puts back originalString process represents traversal back decision tree computer science 4 computer science 7 design patterns 5 Previous Archive Next 2015 Anthony Zotti help Jekyll Bootstrap Twitter Bootstrap"),
('How Pseudorandom Number Generators Work', 'Devan Patel Latest Post Browse Posts Pseudorandom Number Generators Work Published 2015-03-20 Devan Patel Pseudorandom number generators PRNG ever prevalent yet highly disputed honestly think ever get computer calculate pure randomness Anyone considers arithmetical methods producing random digits course state sin - John von Neumann Terminology reason cannot generate randomness PRNG dependent initial seed seed initial value algorithm generate given number could level noise time milliseconds really anything instance generate random number C pass number seconds since UNIX epoch seed srand srand unsigned time double random rand seed formally known state digit state denoted bit Since never reach pure randomness generating n numbers see initial value exact number takes find repeating value defined periodicity cycle combinatorics 2-digit seed period length 100 3-digits 1 000 4-digits 10 000 set unique numbers generated n digit number cardinality upper-bound limit quite obvious relate brute-force password cracking Take 5 digit password 10 numbers guess digit 0 9 coming 10 5 Middle-Squares Method Middle-Squares method earliest pseudo-random number algorithm discovered John von Neumann follows Take initial seed length m Square Take middle m digits new value Square Repeat steps 2 4 x number times wrote simple Middle-Squared algorithm public static void main String args HashSet randomNumbers new HashSet Random rand new Random int numberGenerated rand nextInt int iterations 0 randomNumbers contains numberGenerated randomNumbers add numberGenerated int newIteration getNewIteration numberGenerated numberGenerated int Math pow newIteration 2 iterations public static int getNewIteration int numberGenerated String numberGeneratedString String valueOf numberGenerated int length numberGeneratedString length String newIteration numberGeneratedString substring length 2 length 4 length 2 length 4 System println Old number numberGenerated New number newIteration return Integer parseInt newIteration output Old number 169560864 New number 9560 Old number 91393600 New number 3936 Old number 15492096 New number 4920 Old number 24206400 New number 2064 Old number 4260096 New number 60 Old number 3600 New number 60 Number iterations 6 One biggest flaws design quickly converges 0 However since many discoveries PRNG field Linear Congruential Generators prevalent PRNG type Linear Congruential Generator LCG based following recurrence relation X_ n 1 aX_n c pmod m modulus m m 0 multiplier m 0 incremented c m c geq 0 Like Middle-Squared Method relies seed value denoted X_0 m X_0 geq 0 algorithm described detail give perspective source code Java pseudo-random number generator public Random long seed setSeed seed public synchronized void setSeed long seed seed seed 0x5DEECE66DL 1L 48 1 haveNextNextGaussian false multiplier 0x5DEECE66DL 25214903917 decimal incrementer 0xBL 11 decimal Right shifts seed bits argument protected synchronized int next int bits seed seed 0x5DEECE66DL 0xBL 1L 48 1 return int seed 48 bits see Java uses 2 48 25214903917 11 modulus multiplier increment respectively number bits used output determined argument next Therefore nextInt uses 32 bits However 2 48 would produce IntegerOverflow Java strips n th significant bits right shifting due higher period bits comparison others LCG Advantages Disadvantages main advantages LCG offer speed memory drawbacks concerning modulus power 2 least significant bits drastically smaller period Namely m 2 period 2 displayed within nextInt public int nextInt int n n 0 throw new IllegalArgumentException n must positive n -n n return int n long next 31 31 int bits val bits next 31 val bits n bits val n 1 0 return val Conclusion hope gives glimpse history implementation Pseudorandom Number Generators copious amount PRNGs however wanted touch two widely-used ones easy see drawbacks using one PRNG versus another plan implementing one take consideration play video games relate research PRNGs came Donald Knuth Art Computer Programming Volume II always feel free check Github check m currently working Twitter Facebook Google Devan Patel 2015 Devan Patel'),
('If P = NP were true, would quantum computers be useful? Yes, because of quantum communication and because BQP is probably not in PH.', "current community chat blog Theoretical Computer Science Theoretical Computer Science Meta communities Sign log customize list stack exchange communities Stack Exchange sign log tour help Tour Start quick overview site Help Center Detailed answers questions might Meta Discuss workings policies site Theoretical Computer Science Questions Tags Users Badges Unanswered Ask Question Take 2-minute tour Theoretical Computer Science Stack Exchange question answer site theoretical computer scientists researchers related fields It's 100 free registration required P NP true would quantum computers useful vote 24 vote favorite 5 Suppose P NP true Would practical application building quantum computer solving certain problems faster would improvement irrelevant based fact P NP true would characterize improvement efficiency would come quantum computer could built world P NP opposed world P NP Here's made-up example I'm looking P NP see complexity class ABC equal quantum complexity class XYZ P NP class ABC collapses related class UVW anyway Motivation curious relatively new quantum computing please migrate question insufficiently advanced cc complexity-theory complexity-classes quantum-computing share improve question asked Feb 4 22 24 Philip White 2 2531234 9 know P NP implies BQP P might problem BQP P even P NP even also open question whether BQP PH Tayfun Pay Feb 4 22 36 4 basically class BQP captures efficient quantum algorithms bounded-error quantum polynomial time Tayfun's formalization question natural one e g P NP problems still P yet BQP apparently consistent current knowledge happens usul Feb 5 2 26 add comment 4 Answers 4 active oldest votes vote 27 vote accepted paper BQP Polynomial Hierarchy Scott Aaronson directly addresses question P NP PH would collapse furthermore BQP PH quantum speed-up would possible case hand Aaronson gives evidence problem quantum speedup outside PH thus speed-up would survive collapse PH share improve answer edited Feb 5 12 42 answered Feb 5 12 37 Martin Schwarz 4 2861338 9 Actually Aaronson proved conjecture based work false See scottaaronson com papers glnfalse pdf Alex Grilo Feb 8 9 34 5 AlexGrilo results paper unconditional still stand oracle separation relational versions BQP PH Sasho Nikolov Feb 9 16 06 8 clarification Generalized Linial-Nisan Conjecture turned false conjecture Fourier Checking Forrelation problem PH still stands It's approach needed prove Also strengthen result exists oracle relative BQP relation problems BPP PH show exists oracle relative P NP still BQP relation problems BPP It's straightforward extension unfortunately haven't written yet Scott Aaronson Feb 12 22 35 add comment vote 6 vote answer unequivocal yes Quantum computers would definitely still useful Quantum computers oracles BQP rather devices process quantum states communicate using quantum states ability make non-deterministic queries fundamentally powerful ability make purely deterministic queries independent status P vs NP indeed root oracle separations ability make quantum queries communicate using quantum states fundamentally powerful purely classical counterpart leads advantages wide range applications ability query oracles external databases superposition provides provable separation quantum computers classical computers terms query complexity variety communication tasks see drastic reductions communication cost quantum communication used Quantum information processing allows information theoretically secure protocols wider range problems classically possible Certainly QKD require universal quantum computer implemented many protocols tasks Pre- post-processing large entangled quantum states allows violate shot noise limit metrology resulting precise measurements Aside complexity arguments another practical reason want quantum computers Much data processed classical computers days derived sensing natural world example via CCD digital camera However measurements necessarily throw away information system order render measurement result classical bit string example collapsing spatial superpositions photons always clear information later considered important initially recording data therefore reasonable believe ability store process quantum states directly rather collapsing basis prior processing become increasingly desirable share improve answer answered Mar 19 15 49 Joe Fitzsimons 10 8k2883 add comment vote 2 vote studies relation BQP polynomial hierachy PH instance problem relative BQP contained PH http arxiv org abs 0910 4698 conjecture proves result unrelativized world http arxiv org abs 1007 0305 See also problem BosonSampling sampling probability outcome photons coming beam splitter network thought classically hard implemented rather simple quantum systems even universal quantum computer look paper Aaronson Arkhipov - Computational Complexity Linear Optics another hint quantum computing stongher PH indeed classical computer efficiently solve BosonSampling oracle PH problem P P subseteq BPP PH imply polynomial hierarchy would collapse conclusion don't know exact power quantum computers results suggesting BQP might outside PH share improve answer edited Mar 16 22 14 answered Feb 9 14 42 neophyte 1414 add comment vote 1 vote Addressing practical part P NP SAT solvers run O n 2 10 3 practical interest current hardware April 1st Doron Zeilberger proved jokingly P equal NP paper Alas complexity algorithm O n 10 10000 implied constant larger Skewes number far tell sufficiently powerful quantum computer practical interest case share improve answer answered Feb 5 10 31 joro 7891213 quantum computers might offer speedup SAT solver takes time n 2 10 3 either Sasho Nikolov Feb 9 16 09 SashoNikolov addressed practical Quantum computer factors 2048 bit integers efficiently would practical interest RSA keys joro Feb 9 17 22 add comment Answer draft saved draft discarded Sign log Sign using Google Sign using Facebook Sign using Stack Exchange Post guest Name Email Post guest Name Email discard posting answer agree privacy policy terms service answer you're looking Browse questions tagged cc complexity-theory complexity-classes quantum-computing ask question asked 3 months ago viewed 2735 times active 2 months ago Blog Stack Overflow Andela partner provide education beyond borders 9 votes comment stats Get weekly newsletter Top questions answers Important announcements Unanswered questions see example newsletter subscribing agree privacy policy terms service Related 21 BQP vs QMA 10 Quantum analogues SPACE complexity classes 9 Interactive Proofs via Postselection 14 complexity class quantum subroutines taking arbitrary quantum states inputs 1 quantum computing pave way native true RNGs 8 adiabatic quantum computing powerful circuit model 1 Environment-assisted quantum transport computation 9 powerful exact quantum computing suspend unitarity 0 Known time complexity advantage quantum algorithms classical algorithms 9 Quantum algorithms QED computations related fine structure constants Hot Network Questions Request delete LinkedIn account termination employment Star vs Heart icon represent save favourite Write Program Outputs Mirror Level don't know whether staff member PhD address Dr emails Help determining whether transformation linear CSS underline moving click equivalent reserveinserts latex 2015 morally obligated use time fix bugs software projects symbol mean difference Multiple robots swarm robots way encoding cryptographic hashes safe Phrase mean fully prepared use use Typocaptcha - alternative CAPTCHA Issues nesting textbf textit check statistical significance electron shells probability distributions Can't use inline array c Creating complex diagrams Travel Portugal Cologne Germany Ubuntu provide Multiverse repository What's point conferences CV remove ants laptop keyboard Generate list symbols planets hot questions question feed tour help blog chat data legal privacy policy work advertising info mobile contact us feedback Technology Life Arts Culture Recreation Science Stack Overflow Server Fault Super User Web Applications Ask Ubuntu Webmasters Game Development TeX - LaTeX Programmers Unix Linux Ask Different Apple WordPress Development Geographic Information Systems Electrical Engineering Android Enthusiasts Information Security Database Administrators Drupal Answers SharePoint User Experience Mathematica Salesforce 14 Photography Science Fiction Fantasy Graphic Design Seasoned Advice cooking Home Improvement Personal Finance Money Academia 10 English Language Usage Skeptics Mi Yodeya Judaism Travel Christianity Arqade gaming Bicycles Role-playing Games 21 Mathematics Cross Validated stats Theoretical Computer Science Physics MathOverflow 7 Stack Apps Meta Stack Exchange Area 51 Stack Overflow Careers site design logo 2015 stack exchange inc user contributions licensed cc by-sa 3 0 attribution required rev 2015 5 28 2614 Theoretical Computer Science Stack Exchange works best JavaScript enabled"),
('Pairing tools and problems: a lesson from the methods of mathematics and the Entscheidungsproblem', "Theory Evolution Games Group EGG studies theoretical computer science evolution game theory Search HomeAbout HighlightsPublicationsReferences Posts Comments Reviews Books Commentary Models Technical Analytic Simulation Preliminary Meta Personal Short history iterated prisoner dilemma tournaments detailed update readership first 200 posts Pairing tools problems lesson methods mathematics Entscheidungsproblem March 16 2015 Artem Kaznatcheev 6 Comments Three weeks ago lot present weekly integrated mathematical oncology department meeting Given informal setting decided grab one gimmick run titled talk 2 overview two recent projects ve working double public goods acid mediated tumour invasion edge effects game theoretic dynamics solid tumours former considered two approximations limit number n interaction partners large limit n 1 two interacting parties numerology didn stop real goal highlight duality tools techniques problems apply domains use popular IMO talk live-tweeted many unflattering photos great paraphrase quote David Basanta presentation opening Artem don't follow pick best tool job mentality 1 2 mathonco David Basanta dbasanta February 23 2015 Artem rather pick best goal best tool 2 2 mathonco David Basanta dbasanta February 23 2015 Since rather sleep deprived preparing slides sure said exactly meant say something like following subscribe perspective pick best tool job Instead try pick best tuple job tool given personal tastes competences intuitions aim push tool slightly beyond prior borders usually incremental technical improvement also exploring variant perspective hopefully still grounded local language domain interest job tool march hand hand post want unpack principle follow little deeper philosophy science process touch differences endogenous exogenous questions draw examples work rely primarily methodological inspiration pure math early days theoretical computer science Boundary tools problem-domains begin important notice tool versus problem-domain distinction fluid often arbitrary One person tool another person domain Let look study living things nothing biology makes sense Dobzhansky 1973 reminds us except light evolution biology domain evolution tool evolution proceed Wright 1932 suggests walk along fitness landscape Evolution domain fitness landscapes tool lot different fitness landscapes say something structure making domain Wiser Ribeck Lenski 2013 might use long term evolution experiment experimental tool tell us convergence static fitness landscapes slow might use simplex algorithm Kaznatcheev 2013 theoretical tool explain see slow convergence local-fitness peak even without reciprocal sign epistasis Matousek Szabo 2006 could use tool probabilistic method combinatorics inform us problem domain convergence rates simplex algorithms paragraph see 4 levels nesting tools becoming domains encourage come examples course disclaimer argument principle One mindful fluidity tools still think us picking problem-domain first selecting best tool domain Even problem arbitrary prior one pick tool know question asking position real target principle post Pseudo-questions implicit explanatory framework sentences grammatically well formed end question marks aren quite questions shamelessly appropriate Chomsky 1957 furiously colorless green ideas sleep surface might even quantitative empirical question maybe ve already built furiositometer posing question built background framework auxiliary hypotheses much clearly nonsensical Even furiositometer could possibly tell ideas colorless green Unfortunately pseudo-questions clearly marked soul reside heart head perfectly well-formed question ancients even seemed empirical removing either pretty drastic effect soul ability control body reductionist basis heart brain intricate network connections rest body could argue issue translation instead soul instead written mind fact secretly hope reaction think real problem question assumptions underlying reside maybe Dan Nichol pointed conversation false dichotomy head heart maybe idea mind soul unity could philosophers mind spend volumes uncovering unjustified arbitrary auxiliary hypotheses implicit question point questions problems drag baggage explanatory framework point particularly novel example seen within Duhem-Quine thesis Durhem-Quine thesis states impossible empirically test isolated scientific hypothesis hypothesis requires background assumptions intellectual debt Duhem-Quine use technical term auxiliary hypothesis Except concerned trying falsify hypothesis testing question well-posed also restricting empirical statements think importance context applies questions problems also structuring thought terms Quine metaphor Web Belief given statement situated within given meaning relationship beliefs web individual communal different parts differ explicitness formality Continuum endogenous exogenous questions increase formality beliefs conscious tools limitations plus framework embedded ask question become aware auxiliary assumptions However asking question without mindful tool using answer free assumptions instead often make assumptions harder find importantly try ask question without explicit theoretical framework typically end substituting folk-theory basis instead scientific theory careful philosophical framework difference endogenous exogenous questions call question endogenous field critical thought science math philosophy motivated existing tools developed field slight extensions Given tools undergone critical scrutiny often formal well understood representations relatively clear expect answers look like framework opposite end spectrum call question exogenous field critical thought motivated frameworks concerns external field Usually external motivating framework accepted uncritically common culprits unarticulated intuitive natural folk theories forced us everyday experiences think folk-psychology folk-physics Although intuitively grasped frameworks often formal clearly understood representations fact understanding structure intuitive humans frameworks often active problem-domain anthropologists philosophers psychologists sociologists folk theories grip us example would guess folk-mathematics much weaker grasp us folk-physics folk-psychology especially talking mathematics untrained intuitions weakest branches near geometry two folk theories would future post argue folk-physics strong still much weaker grip us folk-psychology Although throwing stones judging gravity important us nearly important judging predicting often subtle behavioral cues people like try learn structure intuitive human frameworks also try learn stronger grip us case physics vs psychology expect evolutionary reason via social brain hypothesis Dunbar 1993 1998 comparison hypotheses see frog probably needs judge throwing tongue well need judge throwing stones given great jumping probably needs much better intuitive understanding gravity One main things sets humans apart animals richness intuitive understanding social structures individual place within organization expect richer understanding translate harder escape folk-theory Obviously endogenous versus exogenous distinction two strict categories specific question problem lays continuum two extremes Even mathematical questions complete endogenous suspect process inquiry completely endogenous questions although pure math seems self-generating divorced folk-theory even mathematician inadvertently ends prioritizing endogenous questions way closer ones imposed partially exogenous pressure intuition doesn simply write formal system start listing possible deductions fact deduction formal system almost never done practice Usually years training mathematician intuition tuned point imagine outline theorem want think prove might targeting existing conjecture outline seen earlier mathematicians try find rationalization theorem deduction leading statements already accepted community ones yet accepted process might end changing goals slightly tightening generalizing conditions conclusions intuitions shape target shaped experience formal framework thus specifically take account tools expects used answer question important criterion interesting conjecture writes Matthew Emerton math SE fitting well within known framework subject simultaneously extending framework new interesting way words stole principle pairing problems tools mathematicians consider good conjecture open problem However even mathematicians take careful steps form clear questions well understood theoretical frameworks auxiliary hypotheses ideal endogenous question led dead ends exogenous concerns dangerous often things like wishful thinking classic example would Hilbert Entscheidungsproblem problem arose ironically enough trying formalize method mathematics borrowing partical Hilbert formalists trying show mathematical reasoning could replaced deduction axioms dismissed formalists failed left us history learn popular anachronistic retelling typically hear introductory computer science courses Entscheidungsproblem innocent question algorithm determines logical expression valid satisfiable Unfortunately question asked Church Turing Post gave negative answer Hilbert Ackermann stated problem Grundz ge der Theoretischen Logik 1928 could envision anything like undecidability possibility procedure asked determines logical expression domains valid satisfiable Church Post Turing formalize notion algorithm replace exogenous idea procedure courageously suppose emboldened Godel answers procedure question malformed Herr Prof Dr Hilbert procedure exists solve Entscheidungsproblem Finally although undecidability result exciting real reason papers remembered Turing 1936 singled Church earlier work formalized exogenous notion procedure clarified formal framework understanding human computation Although Hilbert question asked misleading way close enough well understood framework tools mathematical logic clarification possible remember clearly stated problem Hilbert Leibniz Although latter flirted similar intuitive problem successfully constructing Stepped Reckoner calculating machine late seventeenth century Davis 2000 However Leibniz could ask question could find good problem-tool pair made question sufficiently clear Instead 200 years later Hilbert found problem tool pair Turing found slight extension tool corresponding change problem provide answer leave us increasingly useful framework Note saying pass silence questions formal theoretical framework justify reasonable answer Endogenous questions great inquiry sake inquiring goal pure mathematics reason expect close purely endogenous process lead us toward questions resemble ones wanted answer started inquiring vast majority theorems discovered tools developed pure mathematics never leave field suspect manage leave mathematics important tool kit good theorist theorist searches new pairs tools questions inevitably find problem-domain new pure math tools know applied fact trace conceptual metaphors closely find theories eventually grounded exogenous considerations folk theories forced us embodied existence Thus crafting good problem-tool pair balancing act need enough formal theory question precise meaning enough folk theory question meaningful us Finding good pair difficult often maybe even hopefully difficult proceeding solve resulting question Good luck search tuple dear reader biggest advice theoretician field science inquiry broadly importantly domain-less theorist advice P lya 1945 mathematicians solve problem easier problem solve find modify tools search mythical best tool job also change problem References Chomsky N 1957 Syntactic Structures Hague Paris Mouton Davis M 2000 Engines Logic London W W Norton Compan Dobzhansky 1973 Nothing Biology Makes Sense Except Light Evolution American Biology Teacher 35 3 125 129 Dunbar R M 1993 Coevolution neocortical size group size language humans Behavioural Brain Sciences 16 681-735 Dunbar R M 1998 social brain hypothesis Evol Anthropol 6 178 190 Hilbert D Ackermann W 1928 Grundz ge der Theoretischen Logik Berlin Julius Springer Kaznatcheev 2013 Complexity evolutionary equilibria static fitness landscapes arXiv arXiv 1308 5094v1 P lya G 1945 Solve Garden City NY Doubleday Turing M 1936 Computable Numbers Application Entscheidungsproblem Proceedings London Mathematical Society 2 42 230 65 Wiser M J Ribeck N Lenski R E 2013 Long-term dynamics adaptation asexual populations Science 342 6164 1364-1367 Wright 1932 roles mutation inbreeding crossbreeding selection evolution Proceedings Sixth International Congress Genetics 356-366 ads Share Click share Google Share FacebookClick share TwitterMoreClick email friendClick share LinkedInClick share RedditClick print Related Filed Commentary Tagged cstheory History philosophy math philosophy mind philosophy science Social Brain Hypothesis Artem KaznatcheevFrom ivory tower School Computer Science Department Psychology McGill University marvel world algorithmic lenses specific interests quantum computing evolutionary game theory modern evolutionary synthesis theoretical cognitive science Previously Institute Quantum Computing Department Combinatorics Optimization University Waterloo visitor Centre Quantum Technologies National University Singapore 6 Responses Pairing tools problems lesson methods mathematics Entscheidungsproblem Jon Awbrey says March 17 2015 10 36 remember similar discussion number times early days object-oriented programming least fadding crowd first latched onto might picture dyadic relation Objects Processes rectangular matrix entry indicating Process meaningful application Object process orientation amounts slicing matrix along columns object orientation amounts slicing along rows general orientation might consider possibility tuples naturally cluster different ways partitioning space shapes general vertical horizontal stripes Reply Sergio Graziosi says March 22 2015 10 44 Artem m struggling one time read post m tempted conclude somehow over-complicating main point danger clearly well-aware m inclined conclude m probably missing point ll summarise think saying hopefully clearing things validating hunch exposing m missing saying interesting problems ones allow expand existing theories trying solve problem Expanded little bit becomes problems come theoretical assumptions Well developed theories conceptual frameworks allow well-formed questions asked problems Conversely folk otherwise underdeveloped theories frequently allow ask badly formed questions questions allow correct answers even theory questions possible theory underdeveloped conceptual frameworks develop questions brushed aside ill-conceived time answers well formed questions become trivial e g interesting Hence interesting questions expose current limits given theoretical framework allow develop tool looking answer would add concentrating good questions defined allows get two results finding answer expanding usefulness theory one effort Given self-confessed theorist ethos isn surprise else would approach maximises utility know chosen mission statement natural approach hand people may option example day job evidence synthesis mostly policy-making business questions chosen elsewhere arrive funds attached generates understandable mainstream drive towards plain old picking right tool drive towards expanding accuracy applicability power existing tools indeed present surface counterbalanced drive towards re-defining questions receive make fit tools context primary consequent drives swapped around subtle differences priorities surely everyone appreciates manage produce good answers time devise methodological developments theoretical advancements ve said looks rather trivial generating natural intuition must missing something PS m also bit suspicious tooltheory equivalence wrongly reading text Reply Artem Kaznatcheev says May 14 2015 22 36 approach maximises utility know chosen mission statement natural approach completely agree would bigger problem didn align However making post also hoping win people mission statement approach also hope saying way best science theorist-ing trying say way ideal aspire hope join point may option case post might targeting although maybe still However know people option freedoms similar still stick best tool job mentality make matters worse often also view best tool job mentality acceptable one superior one fear especially problematic power policy-maker forcing question funding agency hold dogma summary points largely fair point would disagree clarify paint folk-theories negatively hoped Folk theories essential giving questions meaning projects purpose purely endogenous questions usually purely pointless tension striking balance One point would like touch sure OP question folk-theory cannot sure well-posed concept best tool job becomes moot question non-nonsensical trivial best tool answering cases choice tool becomes rather exercise fashion Sometimes bad sometimes lead development many school thought together enrich world course settings important single school asserts unjustified epistemological supremacy others cases important maintain plurality cases field also develops much less cumulative way fields like mathematics lesser extent physics view bad use loaded word like progressive instead cumulative want suggest hold negative judgement least anymore logical-positivist past-Artem probably Finally come back policy-maker imposed questions think surprise surprise computer science broadly construed also help Unfortunately part computer science know nothing software engineering far understand big practical concern people think running software teams interact client work coming well-formed actually-useful-to-them goals project assigning far understand simply let ask want since won know want reply things think want understand relevant software works actually want need art form managing could probably come useful modelers Reply Sergio Graziosi says May 17 2015 07 53 Artem Glad didn badly misinterpret main point bubbles inhabit different always stimulating glimpse Folk theories essential giving questions meaning projects purpose purely endogenous questions usually purely pointless tension striking balance Agreed ve glossed side summary m also firmly convinced end drives supply interesting questions form folk intuition Given one broad view world overarching epistemological approach certain problems pop-out particularly tricky trickiness makes interesting problems shared large portions humanity call folk others pop specialist approaches ultimately generate sustain plurality mention Thinking plural frequently irreconcilable approaches m slowly realising approach generates tension know one side strive welcome plurality terms intellectual growth research organisation terms society whole every single approach entail self-imposed limitations necessary always promote proliferation approaches cover each-other blind spots side escape allure coherence really get excited sniff way bring together two theories new encompassing view precise intention claiming epistemological supremacy argh Thus m actively trying reduce plurality D oh Depravity best could say context effort maximise coherence undermines twisted counterpart straightforward interdisciplinitis - amateur theorist like think tension managed focussing exploring limitations different approaches wrong learning recognise progressively pin-down weak spots given theory could offer way forward fear incoherence lurks ex-hypothesis also approach weaknesses self-imposed limitations Funny mention software engineering need produce sensible specifications context policy making less mentioned things make day job interesting think analogy client asks new software doesn really understand problem software address spot-on know nothing theory make client expectations converge towards achievable goal know practice iterative process seems work works facilitating emergence acceptable compromises suspect Reply Pingback update Theory Evolution Games Group gabogoren says April 22 2015 13 07 always find smiling screen reading philosophy-meets-modelling theorist approach One question d like ask relate endogenous-exogenous spectrum dangers interdisciplinitis interdisciplinary research common conceptualise situation one discipline contributing tools questions guess question becomes necessarily rather exogenous context use spectrum categorise interdisciplinary experiences good interdisciplinitis-ailed research Reply Leave Reply Cancel reply Enter comment Fill details click icon log Email required Address never made public Name required Website commenting using WordPress com account Log Change commenting using Twitter account Log Change commenting using Facebook account Log Change commenting using Google account Log Change Cancel Connecting Notify new comments via email Notify new posts via email Recent Posts Cancer bad luck pair paradoxes Operationalizing local environment replicator dynamics Misbeliefs evolution games positive case EGT Reading Group 46 50 photo detailed update readership first 200 posts Pairing tools problems lesson methods mathematics Entscheidungsproblem Short history iterated prisoner dilemma tournaments March 2015 M W F Feb Apr 1234567 891011121314 15161718192021 22232425262728 293031 335 622 views Follow Blog via Email Enter email address follow blog receive notifications new posts email Join 2 424 followers Contributing authors Abel Molina Alexander Yartsev Eric Bolo Forrest Barnum Jill Gallaher Julian Xue Artem Kaznatcheev Keven Poulin Marcel Montrey Dan Nichol Philip Gerlee Piotr Migda Rob Noble Sergio Graziosi Max Hartshorn Thomas Shultz Yunjun YangArchives Archives Select Month April 2015 1 March 2015 6 February 2015 8 January 2015 9 December 2014 3 November 2014 5 October 2014 5 September 2014 9 August 2014 1 May 2014 1 April 2014 5 March 2014 5 February 2014 6 January 2014 7 December 2013 6 November 2013 2 October 2013 11 September 2013 9 August 2013 6 July 2013 8 June 2013 8 May 2013 18 April 2013 6 March 2013 9 February 2013 1 January 2013 3 December 2012 1 November 2012 3 October 2012 7 July 2012 3 June 2012 7 May 2012 1 March 2012 4 February 2012 1 January 2012 2 October 2011 6 September 2011 12 CategoriesCategories Select Category Commentary 79 Meta 32 Personal 19 Models 76 Preliminary 56 Reviews 91 Books 4 Technical 88 Analytic 32 Simulation 23 abiogenesis Alan Turing algorithmic philosophy application theory artificial intelligence bayesian Bertrand Russell big data Biology chronic myeloid leukemia cognitive cost cognitive science collaboration compassion conference cstheory current events discrete vs continuous ecology economics empirical environmental austerity ethics morality ethnocentrism evolution evolution cooperation finance finite state automata fitness landscapes Gregory Chaitin Hawk-Dove History holey landscapes intelligence irreversibility Joseph Henrich Karl Popper learning Leslie Valiant machine learning Martin Nowak mathematical oncology matlab metamodeling multilevel selection mutation networks graphs optimization Paul Feyerabend perception-deception Peter Kropotkin philosophy math philosophy mind philosophy science population dynamics prediction presentation prisoner's dilemma public good quantum information processing rationality realistic model religion replicator dynamics research tools Robert Axelrod single cell organisms Social Brain Hypothesis Social learning social sciences spatial structure stackexchange TED TEDx video TheEGG CommunityJoin Community via Email Enter email address follow blog receive notifications new posts email Join 2 424 followers Top Posts Pages Three types mathematical models Defining empathy sympathy compassion Toward algorithmic theory biology Diversity working together cancer immune system microbiome Warburg effect evolutionary dynamics metastasis Generating random k-regular graphs Five motivations theoretical computer science Short history iterated prisoner's dilemma tournaments Posts LikeThe Rise Fall Radic BreastCancerTrials org BlogFeatured Philosop-her Subrena Philosop-her Blog WordPress com Enterprise Theme Follow Follow Theory Evolution Games Group Get every new post delivered Inbox Join 2 424 followers Build website WordPress com Send Email Address Name Email Address Cancel Post sent - check email addresses Email check failed please try Sorry blog cannot share posts email"),
('Promise TheoryWhat Is It?', "Skip Navigation Click subscribe Login Promise Theory Oct 24 2014 Mark Burgess inApplication Development Programming SysAdmin past 20 years growing sense inadequacy command control model managing systems Years front television remote control left us hard pressed think way making machines work us truth point-and-click imperative scripting remote execution scale well trying govern behavior large number things installations grow massive size data centers idea remote command control external manager struggles keep pace essentially manual human-centric activity Thankfully simple way dilemma proposed 2005 acquired growing band disciples computing networking involves harnessing autonomous distributed agents Imposing Obtaining Imagine want implement software design enact business process cultural reasons first thought want issue list instructions parts involved carry kind algorithm might best choice scale algorithm story tell envisage process minds Often try tell story computer team people form flow chart scripted language one way describing building processing design algorithm might involve lot detail take form step-by-step instructions approaches use parallelism non-linear stories lay job efficiently either case instructor assumes parts involved simply exactly instructed Alas necessarily true Remote parts system might unable comply instructions even unwilling comply depending nature circumstances command control model called obligation model computer science many problems One problems separates intent implementation creating uncertainty outcome place instructions determined place must carried instructor information conditions local work needs take place two different instructors start issuing conflicting instructions set parts would start conflict part system would able resolve none parts would information one place intent local point action instructors might even aware resolve conflict Figure 1 Obligation Model vs Promise Theory Luckily complementary approach looking design fixes deficiencies terms obligations terms promises promise-based design part behaves according promises makes others Instead instructions without behavior promised within Since promises made self human self machine self means decision always made knowledge circumstances implementation take place Moreover two promises conflict one another agent complete information circumstances conflicting intentions able resolve without ask external help promise-oriented view somewhat like service view Instead trying remote-control things strings levers one makes use ecosystem promised services advertise intent offer basic level certainty behave Promises expectation management knowing services properties help us compose working system doesn't matter get components system make kinds promises need separate problem Electronics built way plumbing commoditized construction methods buy components suitable supplier promise certain properties resistance capacitance voltage-current relationships combine based expectations circuit keeps greater promise like radio transmitter computer 1 2 3 next last ______________________ Mark Burgess founder CTO original author CFEngine Login save favorite View discussion thread Geek Guide Resources DevOps Toolbox Tools Technologies Scale Reliability Linux Journal Editor Bill Childers Get free copy today Sponsored IBM Webcast Resources 8 Signs You're Beyond Cron Scheduling Crontabs Enterprise Scheduler Demand Moderated Linux Journal Contributor Mike Diehl Sign watch Sponsored Skybot Subscribe Blogs Reviews HOWTOs Knowledge Hub Hep Tips Get Linux Getting Help Loading Trending Topics SysAdmin DevOps Security Cloud HPC Mobile Virtualization Web Development Webinar 8 Signs re Beyond Cron Scheduling Crontabs Enterprise Scheduler Demand Join Linux Journal Pat Cameron Director Automation Technology HelpSystems discuss eight primary advantages moving beyond cron job scheduling webinar ll learn integrating cron enterprise scheduler View LatestPopularRecent Comments New Linux Based OS Brings Internet Things Closer Reality May 27 2015 Non-Linux FOSS Bitcoin None Bloat May 26 2015 Dr Hjkl Command Line May 21 2015 Initializing Managing Services Linux Past Present Future May 20 2015 Goodbye Pi Hello C H P May 18 2015 Using Hiera Puppet May 14 2015 New Linux Based OS Brings Internet Things Closer Reality Initializing Managing Services Linux Past Present Future Dr Hjkl Command Line Non-Linux FOSS Bitcoin None Bloat Using Hiera Puppet Goodbye Pi Hello C H P Gartner Dubs DivvyCloud Cool Cloud Management Vendor Infinite BusyBox systemd It's Easier Ask Forgiveness Urgent Kernel Patch Ubuntu Free Training Integrating Linux Windows Enterprise Environment Enjoyed preview Get full course FREE Linux Journal Pluralsight First Name Last Name Address 1 Address 2 City State Zip Email Canadian Residents Foreign Residents Gift Subscriptions Customer Service Privacy Policy Digital Edition Subscribe Renew Pay Bill Customer Service Digital Downloads Gift Subscriptions Magazine Formats PC Mac Android iPhone iPad EPUB Kindle Store Stickers T-shirts Posters Back Issues Archive CD Us Advertise Author Info Write Letter FAQ Masthead Site Copyright RSS Feeds Privacy Policy Events Contact Us Copyright 1994 - 2014 Linux Journal rights reserved"),
("Results from SIGPLAN's recent survey on open access", "Owns Research Survey J Vitek J Gibbons SIGPLAN Executive Committee March 30 2015 Additional information raw data available http janvitek org 860 responses 54 respondents members ACM Membership higher North America 75 lower rest world 49 majority respondents Europe 53 followed USA Canada 37 geographic distribution responses shown following pie chart respondent divided academia 80 industry 19 relative seniority respondents measured time first publication summarized following pie chart following shortcuts appear document USA mean responses North America EU responses come Europe Senior respondent published first paper 20 years ago Middle first published ten years ago Junior authors published less 10 years ago ACM denote respondent members ACM Observations survey publicized email SIGPLAN SIGPOPS members virally social media personal connections One possible explanation higher response rate Europe issues open access considered important Open Access Moral Imperative question wether open access OA moral imperative 73 respondents agreed responses desirable features essential proportion respondents believe adopting OA necessity depends origin seniority following table highlights differences Respondents outside USA slightly favorable OA 47 Seniority seemed play big role attitudes junior respondents stronger feelings 37 striking difference Senior USA Academics Junior USA Academics former favoring OA 3 latter 11 Focusing ACM members propotion favor 66 groups majority views open access moral imperative Observation seems little question OA shared value community survey argued favor Gold OA SIGPLAN feels important paper accessible Green OA allows authors share papers relies authors make sure OA links remain accessible guaranteed won true older work authors web presence question fund OA divides respondents 28 favor author processing charges 41 argue increased conference registrations remaining suggestions funding OA listed end document number comments suggest Green OA model considered suggest models based voluntary donations similar Wikipedia governmental industry support increased ACM membership fees Several comments point arXiv example follow Lastly suggest cutting ACM expenses Many respondents feel strongly authors priced publishing respondents suggested achieved setting price OA low enough allowing exemptions authors unable pay asked whether would support ACM reducing expenses possibly scaling back Good Works fund OA 74 favor case author processing charge selected much would reasonable price USD paper 63 respondents willing pay 100 per paper additional 27 willing pay 200 following pie chart breaks price issue copyrights fairly clear cut 71 favor leaving copyrights authors next question wether look another publisher open access option available within ACM 2017 70 respondents favor Looking closer reveals interesting distinctions majority ACM members favor sentiments stronger Europe biggest difference opinion Senior USA ACM members almost evenly split slight majority favor Junior respondents strongly favor takes get OA Observation ECOOP conference able switch open access publisher leaves copyright authors within two months Two years feasible least clear plan transition comments OA bottom file 8 find discussion two options Gold Green little confusing model like LIPIcs fall Gold option special notion 'non-commercial' Gold don't know call thought said think Open Access absolute must way scientific publishing goes changing continue changing Let us start backyard CS conferences different set problems journals different set problems books 11 Open access scientific research must nominal fee charged institutions wholesome price made available cheap prices independent researchers 13 day age take given research publications freely available Internet ship sailed several years ago 14 Older math journals page fees paid authors grants could ignored otherwise would opposed charging authors unless reasonable plan waiving fees without grant support Otherwise rich could afford publish 15 Scientists say they're contributing world's knowledge without open access they're contributing small elite's knowledge 16 Seems like cost always raised issue good study report much cost exactly money goes improved transparency general would great strong supporter open access given world outside western nations unable access content without However would willing concede author processing fees knew money going getting paid would like information easily available decide causes ones want support 23 First let's get something clear ACM already publication charges conferences call conference registration fees chose increased conference registration costs piggybacked arXiv wanted pay way increased cost would order 5 per paper Compared current conference fees 5 rounding error I'm convinced would pay way many workshops publish proceedings EPTCS piggybacks arXiv AFAIK doesn't pay arXiv privilege Aside statement Green OA papers may preserved perpetuity centralized index isn't really true put papers arXiv Yes ACM's publication contract misleading intentionally misleading suspect language tries make think can't nonsense giving right post pre-peer review version right give take away ACM rights paper whatsoever sign agreement choose post post -peer review version one minute sign agreement ACM powerless stop 25 current mixed model Gold OA choice authors high price work example Max Planck Society strongly supporting OA paying publication fees OA journals fund ACM OA fees already paying DL subscription consider ACM OA fees double-charging either Gold OA articles reasonable cost switch ArXiv LIPIcs 26 lack Open Access already cost us Aaron Swartz one biggest barriers continued viability academia scholastic involvement 21st century People already dismissing role ivory tower academic organizations dated It's hard justify charging money access articles joe bloggs write post seems legit thoughtful content hidden behind paywall moral ethical issue future field present members ask would ok paying higher dues enable I'm sure many would say yes 29 green OA model perfect opinion allows authors disseminate work variety ways still allowing ACM make money overall think spend pretty well think long-term free repositories like arXiv important need focus ACM would definitely use publisher prohibits publicly sharing papers ACM providing full-fledged gold OA important 32 Gold OA major biases restricting submission authors afford also publisher put pressure reviewers accept papers since increases income 37 work de facto already Green Open Access publicly available co-author's webpage incentive pay overhead Gold Open Access -- mean interested Open Access strongly believe essential public research conclusion drawn lack interest paid Gold options deceptive 38 first tempted mark desirable feature first question realized majority papers reports research funded public bodies e g taxpayers money light unacceptable result freely accessible general public OA may even make research honest example everybody could easily check scientific studies quoted press less prone manipulation journalists Also authors might ashamed publish ton crappy papers I'm primarily thinking medicine I'm sure lots papers written sake incrementing publication counter 39 regular big increase digital library subscription fees put universities difficult position current model sustainable must evolve quickly Institutions universities already pay salary authors scientific work redaction work review work scientific committee work pay reminding library subscription fees work must put open access reminding work must done non-profit organization non ethical universities offer big profits commercial organizations 46 I'm generally happy policy SIGPLAN conferences Green open access seem meet open access requirements UK However LIPIcs open access 15 charge would much prefer conferences publish ACM 53 don't think hope SoCG back ACM may avoid conferences leave 58 ArXiv LIPIcs good example work 67 think it's important low barrier access possible everyone able check research private person researcher read story newspaper research want able check original source without paying can't educate general public critical so-called science distinguish real science pseudo-science general public access real science Lacking open access publisher think essential authors retain copyright least right self-publish results open access publisher preferrable peer review 69 strongly object explanation OA page led survey Apart incorrect respect generally accepted meaning OA see instance Wikipedia polemic absolutely place survey bother questions really want single question asking agree YES allowed choice use results survey explicitly explain survey starts redefinition meaning OA bogus inappropriate Please pretend neutral attempt gather information Even title owns research misleading since ownership research ownership article describes research right publish article right access publication 71 Free access scientific knowledge basic human right Gold open access direct way protect right Using funds raised non-open-access publications model fund things even good works agree worthy contrary ACM's mission indeed morally questionable 72 Main funding agency Sweden requires final version publications released CC-BY 2017 101 Essential letting research societal impact want practioners read research Therefore must available without paywall calls open access Peerj Usenix teaching ACM done line peerj expect membership costs cover open access publication peerj pay life ACM willing pay every year whic lot expect get least get peerj 104 Open Access becoming fact life traditional publishers ACM IEEE Wiley Springer Elsevier adhere affordable price authors authors go away newcomers market offering free charge open access solutions since research publication market changing rapidly view scientific research openly accessible times everyone one main criteria science reproducible refutable research freely accessible becomes harder reproduce accept happy Another important aspect take-up academic research industry making open access become easier companies access published material Otherwise incentive buy scientific papers 116 feel like ACM missing least tracking proper download statistics open access People research lab hit paywall either go CiteSeer scholar google ask one us personal subscriptions grab paper can't easily find via search mostly older journal papers ACM 120 Open access absolutely essential - unread research worthless research can't expect world whole join ACM pay DL subscription fees _check_ one paper per year relevant problems exists practice anyway various kinds unofficial preprints scattered around Internet practice undermines importance DL Finally research often funded general public public right particular keeping knowledge away fewest resources counter spirit scientific inquiry 122 open access reduces revenue publications also reduces cost component cost access control believe could keep publishing charges affordable also working funding agencies build support open publication venues grant funding matter course even possibly decoupled grants individual researchers would make lot sense NSF ERC etc negotiate lump-sum support open digital libraries lieu publication charges individual grant 123 Publishing used genuine community service made sense organizations like ACM participate real community building exercise longer true traditional publishing model hindrance community organizations like ACM get business focus things communities need today academic one goal people read work best way paper copies made complete sense ACM help goal printing distributing paper copies digital copies free traditional publishing model gets way goal erecting cost legal hassle barriers getting work read 125 economies scale open access mentioned AI two FREE OA journals JAIR JMLR operate shoestring primarily volunteer efforts AAAI similarly provides open access conference publications charge either author reader Authors always position pay publications charges 141 role academia supposed produce new knowledge share world researchers obligation general public Open access absolutely imperative embarrassed major publication venues send work support reason open access would expensive clear Authors take role writing formatting copy-editing work Reviewers work free Conference organizers journal editors work free Digital publication cheap paper publication increasingly unnecessary true costs distribution Knowledge priceless price-less 167 Usenix makes Open Access author-owned copyright available articles free can't ACM 184 Open access red herring -- need fair access see articles available free cost everyone Instead try ensure groups lack ability pay -- instance institutions developing countries students -- get discounted access ACM publications ways open access model proposed unfair current closed model Someone pay open access leads publication fees increased conference attendance fees effect imposing additional tax lack ability pay need think beyond binary choice open closed Visions ACM respondents provided 431 textual comments believed ACM role 62 responses members ACM 10 textual response indicate expect ACM avocate Computer Science well support community computing researchers practitioners broad goal seem controversial specific ways reach goal respondents main activities ACM facilitate organization scientific meetings 23 responses disseminate knowledge broadly effectively 24 responses comments suggest ACM could support volunteers organize conferences strive reduce registration costs knowledge dissemination respondent often equate dispensing paywall limits access DL number response indicated role ACM unclear 7 expressed frustration association 8 respondents seemed either feel ACM fulfilling role often linked complaints use DL funds many traditional functions association like ACM could better performed means also comments US-centric policy efforts good works 4 comments mentioned lobbying governmental agencies important role association 1 mentioned working policy matter 3 mentioned Good Works comments show high levels frustration organization disconnect ACM views members want representative comments listed next complete list bottom page 2 Good Works important That's say isn't bloat ACM organization maintains important activities 7 support computer science research advocate computer scientists society large Part latter role involves providing access actual research 13 Roles create centralized platform scientific material freely accessible anyone Unfortunately roles seem create centralized platform scientific material charge people want access material course paying back authors 14 ought scholarly scientific association whose running certainly must economically sustainable driven commercial notions increasing gross income etc drive come serving scientific community includes offering members services streamlined costs keeping mind community global diverse also financial capabilities constantly renewed influx young researchers Sucking public resources fund academic research world priority 23 provide safety net risky conferences update latex class files periodically association pretty must outdated model collaboration social networks researchers easily tap without membership professional organization 26 ACM exists organize activities disseminate information Research benefit organization -- researcher -- profits research isn't publisher it's profiteer ACM take role producer e someone pays worker work resold one charge dissemination research profit someone else's labor without remuneration 37 true role purpose institution actually primary role perspective take money money agency funding e taxpayers' money set fire ACM truly cared Good Works would stop trying run substandard version arXiv stop trying run Webinars people industry etc move donation model dues plus optional top-up donation fund actual Good Works don't think happen partly considered charity ACM's administrative overhead would laughably high 38 difficult identify single role Certainly one 2 significant publication conference brands ICT sector extremely important advocacy group sector although difficult ACM wants international organisation Note lot ACM's good works activities seem US-focused someone Oceania Australiasia region even mentioned survey influences view scaling back 43 enable dissemination science individual labs rest world also serves professional body set example ethical moral behavior stance currently odds publication mechanisms 48 That's good question don't know personal experience 'good works' mentioned experience ACM organizing conferences isn't always smooth one would expect way expensive casually attend without paper 84 become quite useless get drastically closer community E g organizing conferences ACM real pain changing financial model conferences journals ACM become efficient less expensive Credible alternative DROPS exist cost publishing high used 107 theory serve general scientific organization computer science manage awards funding conference journal management archiving unified way across CS practice get little bang buck ACM's resistance OA symptom 111 don't know ACM terrible job representing actual interests computer science academics ground guess it's professional interests e non-academic professional part labor organization part political party part library 130 could stop evil Put publications public domain put torrent data won't worry hosting 136 take unified strong position issues relevant scientific discipline computer science prioritizing scientific principles economic political concerns much possible 146 significant part current activity diminish go West field small need ACM greater field grew ACM grow continue performing functions time computers ironically made functions less necessary people self-organize communicate physical journals conferences longer way 160 see ACM umbrella organization managing coordinating different subfields CS providing uniform overhead support conference journal support way SIG doesn't need figure way publishing journals etc imagine ACM also seen computer science's maybe computer programming's professional organization like APA ABA certainly don't see way since don't really seem distinguishing characteristics ACM candidates elected office there's way vote people would represent _my_ views 161 role ACM make large profits conferences publishing work others stop stop ACM decide survive 180 believe open ACM best everyone Legal copyright challenges important pursue cases authors given due credit Outside push getting research many people possible goals disseminate widely possible publish make money 185 Represent CS research education societal impact Publishing means well functioning market done industry commercially reasonable high profit margins long publishing market malfunctioning ACM publish teach market lesson Making money publishing fund activities means publishing expensive member disagree existing practice 186 ACM professional organization computer scientists publisher Open Access computer science research former role funded membership fees revenue separate publication Publication aim public dissemination research funding activities 189 help organize facilitate animate scientific community - ensuring scientific quality publications facilitating review process providing venues publish new works update old ones - ensuring quality smoothness publication process significant proofing writing experts possibly assistance presentation layout typography ensuring process smooth reactive - assist conference organizers providing safe inclusive venues code conduct encouraging participation people diverse origins countering community-related biases 197 Assume financial risk conferences Ensure minimum quality venues operating label Lobby congress 208 Unclear Computing professionals e necessarily researchers would benefit professional association part treated actual profession like e g physicians Researchers different needs including publication results organization conferences I'm sure ACM trying looks like it's neither 210 freely disseminate useful results internet support conference journal administrivia run Grace Hopper etc get fuck way Everything else waste money 211 vampire sucking blood SIGs primary role ACM curate archive work long term 213 Organizing conferences managing online library publishing publications make research accessible e g ACM crossroads 7 years affiliated ACM regularly publishing top conferences e g CHI realized organization INEFICIANT would say IEEE progress innovation happen externally e g apps websites using ACM metadata like http confer csail mit edu definitely within ACM 234 WANT organization support research enterprise CS APPEARS industry group publisher 240 role used serving point contact among researchers That's outdated role don't need ACM play role organize conferences journals web sites thank ACM scale back focus things cannot well example could better job helping us sift bijillions papers published year find ones interesting useful addition could help funding entities easily make sense whether researchers real impact world outside academia could apply NSF grants boost efforts translate research teaching practice Think way academic research uncovered lots gems--ideas great value scientists students world large don't know organization currently focused discovering gems getting people need ACM could organization meantime I've seen far overly focused small ideas worried you'll protect market share rise open publishing you'll compete Think bigger role longer publisher conference organizer role develop new business model intermediary serves connection research impact ACM isn't going 246 Perhaps ACM could remain umbrella SIGs also wouldn't mind publishing CACM nominal price would delighted see ACM get publishing well hosting conferences 274 Association international scientific educational organization dedicated advancing art science engineering application information technology serving professional public interests fostering open interchange information promoting highest professional ethical standards Open interchange information mission organization real world open course different free Gold OA much better model achieve goal mission current one 301 Good Works part seems focus awful much US actually funded researchers world conference attendance subscriptions looks quite dodgy 309 Promoting Evidence-Based Research Computing working intermediary researchers practitioners b Providing key index like library literature computing c Setting professional ethical standards computer scientists RESEARCHERS d Don't get involved non-computing related stuff 310 Spread high-quality research public free since opinion scientific research results must accessible everyone everyone validate results possible help scientific field improve faster pace 311 ACM stick organizing conference making work broadly accessible much better 314 shocked learn ACM operates publishing profit ACM embrace advocate gold open access minimum possible barrier participation seems absolute first priority understanding ACM's mission idea good works increasing APCs subscription costs seems simply contrary important ACM's potential good Membership subscriptions hand entirely appropriate means funding good works 316 serve members ACM ought try get copyright make money members please don't forget put almost work free - writing reviews generating content organizing conferences etc 360 role ACM support promote field computer science related disciplines needs combine activities make money present conferences DL fund don't Good Works success DL allowed ACM become 1 society ahead IEEE CS yet DL cheaper DL especially subscribing consortium 361 Provide organisational framework conferences Represent CS community official capacity although clearly extent ACM actually debatable particularly nature community changed 'Good Works' although may worth considering division responsibility two things since supportive latter disagreeing ACM's role representative 405 Legacy paraphrase Clay Shirky Comes Everybody organization exists organization becomes higher priority whatever originally supposed case distribute scientific knowledge widely possible Obviously organization currently way goal papers public domain distributed Perpituity take care get way Place Journals Observation Conferences natural means raising money ask industrial sponsorship charge attendees registration fees thus conceivable conferences may self sufficient Journals hand clear funding model subscriptions sufficient cover costs asked important results appear 77 respondents indicate important results first published conferences Observation respect CS seems quite different scientific disciplines selectivity quality reviews even length CS conference papers often par disciplines would call journal articles asked wether published least one paper journal three years 36 answer interesting difference authors different seniority levels Junior authors much less likely published journal paper last three years Senior Middle authors Observation fact many respondent publish regularly journals sufficient conclude journals relevant raise question importance career CS 15 respondents read single journal paper 2014 interesting observe seniority play big role reading habbits 89 respondent published conference last two years numbers stable accross age groups Considering authors believe journals important results appear publish journal following pie chart gives main reasons journals favored allow long form results publish completed research also case respondent felt employer expects publish journals next set pie charts shows importance empployer expectation Overall 37 senior authors believe employers require journal papers 28 junior authors believe Focusing respondents EU numbers increase 47 34 respectively focusing European respondents authors journal papers 50 senior authors 41 junior authors believe publish journal papers career reasons Observation researchers confident employer educated treat journals conferences equally valuable contributions seems less true Europe fact senior European authors know requirements tenure believe strongly journals needed succsessful career suggests still bias towards journal publications 74 respondent favor publishing conferences special issues journals Focusing ACM members proportion favor 74 Observations SIGPLAN proposed ACM publish proceedings PLDI conference special issue TOPLAS proposal includes beefed reviewing model assurance long version PLDI papers submitted another journal even TOPLAS SIGPLAN hope proposal would reinvigorate journals erase artificial boundary respondent believe venue important results appear rest scientific community thinks norm State DL Observations Since DL big cost center ACM following question probe respondents feelings towards ACM developing maintaining storage search solutions ACM Digital Library splits respondents approximately many feel makes easy find articles opinions similarly split whether search facility part DL replaced commercial search engine respondents favor using system arXiv archive ACM paper rather maintaining dedicated one textual comments suggest quite frustration DL functionality fact behind paywall ACM role Comments 1 Supporting conferences 2 Good Works important That's say isn't bloat ACM organization maintains important activities 3 archive 4 Good question real understand ACM work e g set conferences done benevolents 5 bring computing community together n 6 make things cost don't seem actually anything else -- publish without organize conferences without 7 support computer science research advocate computer scientists society large Part latter role involves providing access actual research 8 Someone responsible verification providing trust paper high-quality authentic results fraudulent 9 Advancing field computer science 10 advertise CS 11 Sanctioning conferences journals employers 12 1 maintain digital library 2 back SIG conferences 3 fund Turing award 13 Roles nTo create centralized platform scientific material freely accessible anyone n nUnfortunately roles seem nTo create centralized platform scientific material charge people want access material course paying back authors 14 ought scholarly scientific association whose running certainly must economically sustainable driven commercial notions increasing gross income etc drive come serving scientific community includes offering members services streamlined costs keeping mind community global diverse also financial capabilities constantly renewed influx young researchers Sucking public resources fund academic research world priority 15 cost cutting Good Works high cost 16 Cretinous rent-seeking 17 primarily community practitioners believe library role hands institution charter 18 Support publication presentation leading scientific research area computer science 19 organize conferences 20 open dissemination peer-reviewed research -- authoritative current unbiased 21 advance computing science profession 22 Support dissemination research education computer science publishing articles sponsoring conferences workshops 23 provide safety net risky conferences update latex class files periodically association pretty must outdated model collaboration social networks researchers easily tap without membership professional organization 24 Advancing state art computing assuring widespread dissemination related knowledge 25 Publishing 26 ACM exists organize activities disseminate information n nResearch benefit organization -- researcher -- profits research isn't publisher it's profiteer n nThe ACM take role producer e someone pays worker work resold one charge dissemination research profit someone else's labor without remuneration 27 facilitate meetings conferences 28 curated list research papers editorial commentary 29 Promote CS knowledge nFight recognition profession studies every country 30 ACM's primary role accelerate computing science innovation worldwide 31 Organizing conferences 32 promote advancement computer science computing 33 Disseminate research results CS related areas Thus importance see making publications available everyone 34 Digital publishing 35 publish top journals conferences 36 Promote support computer science world large 37 true role purpose institution actually primary role perspective take money money agency funding e taxpayers' money set fire n nIf ACM truly cared Good Works would stop trying run substandard version arXiv stop trying run Webinars people industry etc move donation model dues plus optional top-up donation fund actual Good Works don't think happen partly considered charity ACM's administrative overhead would laughably high 38 difficult identify single role Certainly one 2 significant publication conference brands ICT sector extremely important advocacy group sector although difficult ACM wants international organisation n nNote lot ACM's good works activities seem US-focused someone Oceania Australiasia region even mentioned survey influences view scaling back 39 serve academic CS community n 40 Support scientific research 41 Promoting development Computer Science field 42 illuminate light scholarly analysis veritable cesspool anecdotal data passes research computer science providing venue community elevates level discourse pushes frontier 43 enable dissemination science individual labs rest world also serves professional body set example ethical moral behavior stance currently odds publication mechanisms 44 societal role per se mostly self-serving 45 support high quality conferences journals promote computer science research 46 Good Works describe Don't scale 47 sure one 48 That's good question don't know personal experience 'good works' mentioned nI experience ACM organizing conferences isn't always smooth one would expect way expensive casually attend without paper 49 agree ACM bylaws however many different ways achieve goals nACN scientific society may play stronger role 50 Representing interests computer science research governments private institutions 51 Digital Library sponsorship organization top-notch conferences general publications 52 society promote computer science informatics knowledge share maximum number people 53 promote american science 54 computing practise best way allow many people possible publish good work many people possible read work 55 ACM umbrella almost CS researchers gathered think main role ensuring high standards quality research published various CS fields addition accreditation programs also important provide way ensuring high quality prospective CS researchers software engineers future 56 Supporting organisation conferences 57 Promote computer science research 58 Making research available everyone 59 Animation community 60 CS advocacy 61 verify quality articles 62 Advancing understanding computer science it's usr public greater good 63 ACM support development field whole dissemination scientific results providing meeting grounds people sharing interest CS Generally speaking physical meetings 64 Fostering research ensuring quality publications 65 Representing organising community High-standards journals conferences extremely precious offer solid alternative private publishers 66 support CS research education 67 Certainly charge authors read papers papers others reviewed free 68 association represents computer professionals within society politics 69 bit unclear clearly seems add cost conferences capitalizing names due increased costs offer satisfactory digital library solution 70 diffuse science make little money 71 keep online bunch databases 72 Help research 73 Publisher 74 Insure quality conference thus selected papers insure access pulications large public 75 Diffusion science making money free work researchers 76 Ensuring quality published results nOrganizing publication levels structuring scopes journals nArchiving indexing providing free access 77 brand quality 78 Organising conferences associated publications 79 view professional programmer prevent browsing classic CS papers 80 support CS community academia industry making impact society's evolution 81 Nurturing original meaningful research selecting top conferences journals thus preventing proliferation useless publications 82 Promoting science computation free access science 83 support CS among disciplines instance thorough reviewing existing conference journal rankings organizations ACM would highly desirable 84 become quite useless get drastically closer community E g organizing conferences ACM real pain changing financial model conferences journals ACM become efficient less expensive Credible alternative DROPS exist cost publishing high used 85 Spam mailbox n nPS Put unit price question don't know currency talking 86 Organize scientific community policy topics 87 Conference organisation management 88 ACM acts library look related work find researchers working similar work 89 making money n nat least impression discussion yield nthe leave SoCG 90 support research Computer Science influence government policies 91 1 organize conferences researchers n2 organize training professionals 92 clear 93 Conferences 94 facilitate advance Computer Science scientific discipline 95 Provide assistance organization conferences 96 help scientific knlowledge general CS knowledge particular spread much possible 97 Serving computer science community 98 clear nIf copyright come least partially author People access paper data free normal numeric world publisher makes money give access paper whereas don't work layout review writing sure still need actor like ACM 99 provide common place sharing scientific technical knowledge competing sciences practitioners public 100 Lobbying greater good behalf computing discipline n nProviding support computing events 101 Provide framework researchers fund conferences organize reviews publications publish selected ones easily accessible 102 Supporting computer science research community conferences publication 103 facilitate widest exchange computing knowledge 104 professional organization computer scientists Like academy sciences 105 Bringing community together giving overall view scientific progress discipline disseminating results specialists non-specialists 106 organise manage venues computer scientists publish research 107 theory serve general scientific organization computer science manage awards funding conference journal management archiving unified way across CS practice get little bang buck ACM's resistance OA symptom 108 support researchers developers good works supported ACM also important 109 promote free open access reviews free n nfind another business model sure 110 act advocate discipline computing practitioners 111 don't know ACM terrible job representing actual interests computer science academics ground guess it's professional interests e non-academic professional part labor organization part political party part library 112 Community building especially conferences journals 113 ensure support certain standard quality CS research 114 support Computer Science community 115 promote research diffusion results fields related computer science 116 support members efforts research Computer Machinery 117 spread interesting ideas practices e g education nspread good works 118 provide centralized index 119 Bring together researchers spur new ideas provide appropriated vehicle distributing ideas widely 120 Learned society supporting academic industrial computer science n 121 Making scientific results known conferences publishing 122 promote science computing Open access integral part mission 123 Creating supporting communities researchers practitioners 124 NAME 125 scientific peer community spear-heading role CS larger human context 126 cheaper-than-Springer-but-still-bad publisher 127 serve computing community 128 association shall promote science sequestrate 129 Help authors researchers process information dissemination 130 could stop evil Put publications public domain put torrent data won't worry hosting 131 Freely disseminate computing knowledge 132 Provider Digital Library nConference organizer nJournal publisher n 133 Supporting improving computer science research 134 Nothing really useless organization beyond publication venues 135 open access research papers 136 take unified strong position issues relevant scientific discipline computer science prioritizing scientific principles economic political concerns much possible 137 Advancing computing science profession 138 provide venues publication 139 spread knowledge computer science 140 Organizational framework conferences promoting CS politics education industry 141 Hosting digital library 142 Good Works 143 Act quality guarantee papers authors committees acm must excellence 144 Act quality guarantee papers authors committees acm must excellence 145 advancement computer science 146 significant part current activity diminish go West field small need ACM greater field grew ACM grow continue performing functions time computers ironically made functions less necessary people self-organize communicate physical journals conferences longer way 147 Administering conferences awards forth 148 Providing online access published articles n nSide note survey currency indicated question highest acceptable author processing charges assume USD 149 foster exchange information among computer scientists 150 ACM founded advance science techniques computing best served open access ACM anyway providing access moderate price compared commercial publishers 151 Providing open access CS literature n 152 Advancing community including good works supporting conferences journals 153 ensure quality publications peer review process unlike example IEEE n facilitate organisation diffusion scientific work results n police guarantee accepted ethical standard 154 promote support computer science research 155 support computer professionals 156 NAME 157 give framework standard good work 158 select respectable conferences 159 Publish articles organize conferences 160 see ACM umbrella organization managing coordinating different subfields CS providing uniform overhead support conference journal support way SIG doesn't need figure way publishing journals etc n nI imagine ACM also seen computer science's maybe computer programming's professional organization like APA ABA certainly don't see way since don't really seem distinguishing characteristics ACM candidates elected office there's way vote people would represent _my_ views 161 role ACM make large profits conferences publishing work others n nThis stop stop n nACM decide survive 162 facilitate conference planning support volunteers work 163 ensuring integrity peer-review process disseminating results highest quality work computer science 164 Make concesus best practices based research results emerge sea published papers Help researchers find audience potential users research free dissemination 165 ensure happy existence single united community practitioners researchers educators policymakers etc 166 Protect computer science compared physics bilogy 167 officious 168 spread knowledge engage people scientists laymen alike 169 promote research computer science make widely available 170 Branding 171 discuss focuses issues research activity computer science vehicle ease collective thinking discuss research quality standards foster availability research material production material selected research topics CS disseminated among general public 172 Provide organizational structure computer science research worldwide 173 Maintain improve ACM Digital Library 174 Support conferences journals making available works 175 Putting conferences operating DL n 176 foster production good research help disseminating 177 advance field Computer Science supporting publication dissemination research 178 serve venue disseminating scientific results 179 Support development Science providing venues disseminate results research n 180 believe open ACM best everyone Legal copyright challenges important pursue cases authors given due credit Outside push getting research many people possible goals disseminate widely possible publish make money 181 Promote access good research Many practitioner colleagues ignore CS research altogether joined want aware scientific developments computing CACM alone worth cost dues 182 ACM umbrella conferences journals organized It's also ostensibly quality filter 183 Professional society Umbrella conference organization long-term health CS research technical activity Canonical place find articles record top-tier CS research 184 Make scientific results available everyone 185 Represent CS research education societal impact n nPublishing means well functioning market done industry commercially reasonable high profit margins n nAs long publishing market malfunctioning ACM publish teach market lesson n nMaking money publishing fund activities means publishing expensive member disagree existing practice 186 ACM professional organization computer scientists publisher Open Access computer science research former role funded membership fees revenue separate publication Publication aim public dissemination research funding activities 187 dissemination 188 veiled threat scaling back DL offers next value 189 help organize facilitate animate scientific community n n- ensuring scientific quality publications facilitating review process providing venues publish new works update old ones n n- ensuring quality smoothness publication process significant proofing writing experts possibly assistance presentation layout typography _ ensuring process smooth reactive n n- assist conference organizers providing safe inclusive venues code conduct encouraging participation people diverse origins countering community-related biases _ 190 support broader needs CS research community 191 foster advancements cooperation field computing machinery 192 Insuring conferences 193 support scientific development computing 194 cacm making conference booking registration easy 195 connecting computer scientists 196 n1 serve venue publication research n2 host curate publications n3 provide access publications 197 Assume financial risk conferences nEnsure minimum quality venues operating label nLobby congress 198 support organization conferences n 199 says charter operating public interest 200 promote discipline computer science related fields maximize beneficial impact 201 It's old boys network fellows preserve track computing's evolution applications promoting awarding refereeing adding brand quality 202 NAME 203 foster computing community don't see much ACM 204 Putting name things 205 curate provide access top-quality content computing related fields 206 trustworthy brand scholarly publication 207 Coordinate publication dissemination research computer science widely possible 208 Unclear n nComputing professionals e necessarily researchers would benefit professional association part treated actual profession like e g physicians n nResearchers different needs including publication results organization conferences n nI'm sure ACM trying looks like it's neither 209 provide organizational support advance state computer science disseminating knowledge 210 freely disseminate useful results internet support conference journal administrivia run Grace Hopper etc get fuck way Everything else waste money 211 vampire sucking blood SIGs n nThe primary role ACM curate archive work long term 212 Distributing computational knowledge broadly possible 213 Organizing conferences managing online library publishing publications make research accessible e g ACM crossroads n nBut 7 years affiliated ACM regularly publishing top conferences e g CHI realized organization INEFICIANT would say IEEE n nAny progress innovation happen externally e g apps websites using ACM metadata like http confer csail mit edu definitely within ACM 214 organize academic venues especially conferences workshops act kind quality assurance 215 advance computing science profession serving members computing profession public large openly accessible leading-edge publications conferences relevant resources 216 foster scientific community computing 217 bring together communities researchers advanced practitioners computer science primarily conferences 218 Conference organization outreach 219 Credibility vendors conferences journals workshops 220 provide access scholarly work 221 keep papers away practitioners widening gap academia industry 222 support encourage computer science scientific discipline strongly positive influence industry --- throughout world 223 facilitate creation new knowledge computing 224 Useless 225 Host conferences offer access knowledge digital library journals Also Advance society technological scientific progress 226 serve rendezvous point computer science 227 Support CS research maintain high quality publications 228 Honestly don't know 229 Disseminating research work think ACM fine 230 promote research development practice computing meet needs members things addition ACM responsibility society ensure equal access education products research 231 foster highest levels collegiality cooperation within CS community promote reward key advances researchers field e Turing Award make results CS research widely available possible 232 tbd 233 facilitate research unite members sharing results computer-related knowledge mankind 234 WANT organization support research enterprise CS APPEARS industry group publisher 235 think several including conference organizer promoter field also major publisher computer science research 236 Organizing connecting researchers practitioners information computing discipline 237 Distribute balanced peer-reviewed knowledge 238 Liberate make accessible publications world 239 conferences 240 role used serving point contact among researchers That's outdated role don't need ACM play role organize conferences journals web sites thank n nACM scale back focus things cannot well example could better job helping us sift bijillions papers published year find ones interesting useful addition could help funding entities easily make sense whether researchers real impact world outside academia could apply NSF grants boost efforts translate research teaching practice n nThink way academic research uncovered lots gems--ideas great value scientists students world large don't know organization currently focused discovering gems getting people need ACM could organization n nIn meantime I've seen far overly focused small ideas worried you'll protect market share rise open publishing you'll compete Think bigger role longer publisher conference organizer role develop new business model intermediary serves connection research impact n nIf ACM isn't going 241 guarantee quality research conferences DL maintaining level recognition profession Good Works 242 Advancing profession practice computer science understanding computing n nRelated later answers would like see ACM increase relevance working programmers thereby increasing professional membership use increased dues revenue fund OA publication 243 support goals computer science research community 244 bridge world academia industry 245 Organize activities academic Computer Science 246 Perhaps ACM could remain umbrella SIGs also wouldn't mind publishing CACM nominal price n nI would delighted see ACM get publishing well hosting conferences 247 encourage support disseminate computing research 248 Representing CS disseminating results 249 support research community 250 increasingly becoming redundant 251 Make sure people access best available research content 252 research education computing 253 Professional help conferences publications Advocacy Good works 254 facilitate dissemination minimize operating costs 255 Organize ensure quality conferences 256 Self-perpetuation 257 Holding conferences 258 I'm sure one anymore 259 Advocating ethical inclusive intellectual diverse field part via facilitation communication researchers industry scales general public 260 advance computing science profession particular includes contributing free dissemination scientific information 261 None 262 promote dissemination high quality publications research results supporting peer-review processes publishing journals organizing conferences 263 nice 264 support publicise work members 265 advance computer science far possible Naturally open access computer science papers one way 266 facilitating research 267 ACM 1- Organizer high-quality conferences 2- Publisher magazines CACM journals 3- Organizer focused outreach activities n nWhat ACM another Elsevier another Springer n 268 Unifying curriculum development political work etc 269 dissemination knowledge clearly achieving role today's digital society pay-ways basically keep world dark pre-Internet ages 270 supporting CS activities promoting under-represented groups CS girls women minorities third-world countries 271 organize computer scientists e help us achieve shared goals collective action Enabling public access research one goal hopefully it's shared rather broadly - 272 Governance common good quality assurance 273 promote science general 274 Association international scientific educational organization dedicated advancing art science engineering application information technology serving professional public interests fostering open interchange information promoting highest professional ethical standards n nOpen interchange information mission organization real world open course different free Gold OA much better model achieve goal mission current one 275 Sponsoring high quality conferences journals rigorous peer review used select articles publication 276 It's outdated role future 277 Brand name CV 278 Open Distribution publishing scientific works CS 279 promote lifelong CS education dissemination research 280 Disseminate knowledge computer network science engineering 281 support computing community helping grow diversify increasing breadth depth research education impact 282 1 brand supporting high-quality research n2 Ensure single point entry accessing publications n3 OA publications 283 Organization administration outreach CS research 284 independent high quality association promotion advance computer science 285 don't Know ACM 286 ACM focus spring computing community Male money running profitable conferences run line publications stop exploiting career aspirations young faculty 287 Organising conferences 288 clue 289 Provide valuable services members 290 idea guess organize conferences 291 Make sure paper on-line publications cope certain standards availability reading quality etc 292 Helping organizing conferences storing papers forever ACM cannot afford store papers become index Arxiv 293 Disseminate research 294 provide venues exchange ideas results support nurture young scientists establish ethical standards discipline establish maintain educational standards field 295 Provide access cheap editorial 296 central organizer thought leader computing field 297 Disseminate science give support authors publish research quality 298 Unknown 299 function centralized organized education organization research proliferation computing knowledge 300 Representing community broad sense rather held captive rigid ideology 301 Good Works part seems focus awful much US actually funded researchers world conference attendance subscriptions looks quite dodgy 302 support research community mission -- extend scope human knowledge disseminate research findings 303 provide networking resources publication venues CS fields 304 Make research available widest possible audience Support broad research community well sub-groups research communities good scholarship research 305 Publishing 306 Provide community pursuit knowledge computer science systems 307 ensures free access articles perpetuity OA nNote question would highest acceptable author processing charges per article nI prefer crowdfunding limit adapted financial resources author global society 308 Promoting computer science encouraging collaboration disseminating reseasrch results widely possible 309 Promoting Evidence-Based Research Computing working intermediary researchers practitioners nb Providing key index like library literature computing nc Setting professional ethical standards computer scientists RESEARCHERS nd Don't get involved non-computing related stuff n 310 Spread high-quality research public free since opinion scientific research results must accessible everyone everyone validate results possible help scientific field improve faster pace 311 ACM stick organizing conference making work broadly accessible much better 312 support dissemination scientific results computer area 313 main purpose ACM serve professional organization maintain common infrastructure conferences archive papers make widely accessible provide point contact direct government policy-makers subject experts n n 314 shocked learn ACM operates publishing profit ACM embrace advocate gold open access minimum possible barrier participation seems absolute first priority understanding ACM's mission idea good works increasing APCs subscription costs seems simply contrary important ACM's potential good Membership subscriptions hand entirely appropriate means funding good works 315 Dissemination current computing research best practices 316 serve members ACM ought try get copyright make money members please don't forget put almost work free - writing reviews generating content organizing conferences etc 317 primary role see organizing conferences publishing journals 318 never clear happens publisher prestigious conferences journals field occasionally see C ACM SIGPLAN plays immediate generally useful role ACM whole it's less clear 319 Umbrella org conferences 320 CS broad diversified often wheels re-invented often fundamental discoveries cross area boundaries slowing progress seems little communication SIGs would expect ACM foster cross-fertilisation different communities help promote best practices scientific development 321 unite professionals teachers researchers way share resources work together advancing field solving challenges 322 important role support research highest-quality conferences journals broader role computing community 323 Umbrella organization conferences journals 324 reference scientific society academic researchers computer science 325 Facilitating community organization disseminating published work 326 Conference organizing making publications available allowing authors submit papers somewhere made available without charge 327 Facilitate disseminate research computing 328 Support organization top conferences dissemination CS articles 329 Advancing computer science training networking dissemination results lobbying global level current ACM much US-centric although making progress recently n 330 Get research done Shortly communicate research also build inclusive community researchers support goal 1 331 promote advancement issue related Computing purpose OA key tool success endeavor 332 supporting activities would otherwise funded helping organize conferences 333 help ensure longevity top-ranked conferences journals provide professional body Computer Science Software Engineering amongst things reflects issues curricula etc 334 sorry know ACM well 335 professional society safeguarding credibility quality standards 336 grow support computing community help set community standards identity help promote image computing eyes public 337 Promote research 338 view ACM publisher provider conference services 339 promote health productivity computing research 340 promote maintain computing discipline support research education 341 self preservation 342 Institutional support SIGs policy development communication field whole 343 Currently another business based nice ideas seems like editors 344 support needs CS Community 345 Sharing knowledge access-free Internet archive Costs management high see ArXiv PLOS 346 serve computing community variety professional activities 347 Foremost ensuring good fast peer review less important assisting copy editing particular get reference lists citations correct complete author names page numbers 348 Promoting computing 349 enable broad dissemination science animate computing community 350 Make community exist end help researcher field example editing REALLY open access journals nobody charged author reader POSSIBLE 351 serve broad community computing users professionals including industry researchers general public 352 professional organization foster professional connections enable field advance Publication part sure stuff expect falls good works 353 professional body Computing academics researchers throughout world 354 foster advancement computer science contributing collaboration researchers dissemination ideas Also guardian quality good practices 355 help create disseminate new ideas CS n n support communities 356 Community building lobbying government publishing house 357 encourage computer science research disseminate results said research communicate non-research work industry foster communication members 358 foster diffusion development knowledge 359 ACM kind unification entity acts representative computer science world wide 360 role ACM support promote field computer science related disciplines needs combine activities make money present conferences DL fund don't Good Works success DL allowed ACM become 1 society ahead IEEE CS yet DL cheaper DL especially subscribing consortium 361 Provide organisational framework conferences Represent CS community official capacity although clearly extent ACM actually debatable particularly nature community changed 'Good Works' although may worth considering division responsibility two things since supportive latter disagreeing ACM's role representative 362 Facilitate knowledge 363 make available free 364 Organizing conferences 365 encourage improvements field computer science extent computer science well-defined field 366 Foster computer science community broaden audience 367 organise distribution knowledge throug organisation conferences management journal always help researchers active position academic institution nACM provides tools work exchange get money pay people make system e ACM researchers work nTheir role make money like big company act like association making enough money live 368 Coercing researchers paying ACM sell work keep profits 369 Information dissemination 370 ACM professional organization computer scientists facilitates advancing field disseminating research outreach programs aim increase diversity field bringing top computer scientists together conferences 371 socially represent legitime proffessional interests members 372 support computer science research community promoting research 373 Representing interests members 374 printed proceedings disappearing task clear anymore Primary role guarantee convenient access high-quality research 375 Promotion computer science profession inclusive academics industry professionals 376 act professional organisation computer scientists includes maintaining digital library 377 Help organize conferences Acting diplomat leadership etc encourage good practices 378 take peoples money charge exoberiant fees conferences 379 free database articles computer science 380 Organizing conferences providing publication venues perpetual archiving papers DATA done yet 381 Help spread knowledge computer science research 382 Speaking non-US researcher act high-quality publisher computing research suspect within US probably different opinions role publisher familiar ACM 383 Help people network publish paper free ie zero cost author zero cost reader 384 Supporting Computer Science research education 385 Support CS research education 386 don't understand question 387 Act repository papers academics Industry-types don't generally seem know care ACM's mission 388 establish maintain high quality publishing venues computer science research set minimum curriculum standards computer science undergraduate education 389 structural backbone research publication communication 390 serve members - headquarters staff n nI actually like stated goals seem somewhat misplaced efforts support organization rather members society n nIt hugely annoys volunteer work people done publications treated cash cow activities 391 run conferences 392 provide venue scientific research moved forward give back community scientific findings 393 Supporting maintaining enhancing digital library 394 None several prestigious useful conferences owned ACM even though could perhaps well independent n nPerhaps ACM relevant Americans others 395 Human knowledge belongs world 396 Developing computer science wider sense 397 organise disseminate research computer science similar areas 398 promote research use computers 399 Make research available masses conferences open access papers 400 Support creation exchange dissemination computer science 401 would agree pay bit ACM registration get access whole digital library free people third world countries 402 think primary role organize conferences Good Works happy pay membership fees conference fees support ACM things 403 spread knowledge computer science 404 ACM advocacy role external world well bringing professionals together via conferences publications etc Conferences enable professionals meet hence higher importance journal publications 405 Legacy paraphrase Clay Shirky Comes Everybody organization exists organization becomes higher priority whatever originally supposed case distribute scientific knowledge widely possible Obviously organization currently way goal papers public domain distributed Perpituity take care get way 406 lobby computer science software engineering issues politically increasing visibility understanding needs including influence education research funding political investments motivated needs job market societal security future needs 407 Providing benchmark scientific excellence field computing 408 Giving guidelines future directions informatics nPromoting informatics within academia industry nSupporting research teaching informatics 409 facilitating scientific exchange publication process 410 Organize CS community 411 Provide services members 412 organisational administration nbringing people together nlobbying body ncustodian computing heritage research n 413 Scientific research education 414 one primary role several critical ones support scientific research computing one key roles 415 First serve members information peer-reviewed research like news opinion n nSecond serve society whole 416 Collective voice computer scientists 417 Getting way 418 role ACM become unclear 419 primary though unique ACM service creating communication field conferences journals magazines SIGs 420 ACM serves entity organizes activities interest relevance computing professionals activities include publishing journals organizing conferences developing training educational materials curricula courses professional development courses etc representing computing community's interests governmental agencies funding legislative 421 Promotion computing science profession 422 Journals Conferences 423 view ACM primary supporter academic computer science respect publishing means help facilitate imperative create open access publications works 424 keep DL going ensure ongoing survival set research nTo ensure places new research show published 425 don't know n nMostly see managed get copyright paper authors stop posting papers homes pages arxiv etc n 426 promote technologies science sociality people knowledge 427 Dissemination scientific knowledge 428 development broad dissemination knowledge computers 429 marketing brand -- indication ACM-sponsored conferences good fact actual research communities matters could probably well without publisher 426 Levels OA Funding Comments 1 2 Sell archives 3 Solicit donations tech companies universities 4 Industry Funding since create business profits 5 care OA much 6 bit 7 don't see mutually exclusive options ACM dues grants NSF agencies etc 8 suspect civic-minded corporations Google would happy help fund 9 Either model problematic unless fees waived grants available pay 10 Philanthropic means shouldn't take much things considered 11 Adsense 12 Crowdfunding donation e Wikipedia 13 AdWords 14 share 15 government funding 16 funding agencies publishers 17 Cut ACM's budget 18 ensuring funding iinstitutional archives federated access model 19 relationships cloud based companies donate free storage Google Microsoft Amazon 20 sure definitely neither 21 Government corporate funding 22 Institutional library access archival charges 23 avoid midel moved burden science producers particular current days severe shortage research funding 24 combination sources author charges registrations ACM money public research funding etc 25 Voluntary support asXiv 26 University Government institution 27 governments UNO societies charities 28 Make use HAL arXiv 29 opinion 30 association fee 31 institution's fundings 32 options opinion added cost incurred authors somehow 33 Grants 34 academic institutions governments 35 institutions libraries like arXiv case 36 Green OA ArXiV 37 None Conference registration costs already high due prices proceedings part 38 arxiv model institutional support 39 gouvernemental aids 40 gouv 41 International funding 42 Voluntary institutional support 43 cost 44 donations 45 Logical Methods Computer Science' work Maybe haven't thought enough exactly needs funding archival process ArXiV servers 46 voluntary support 47 combination sponsorship membership fees low processing charges 48 international institutions 49 Public funding 50 reduced publisher costs 51 Avoid mass physical printing 52 Institution grants 53 inherrent part funding model 54 increased membership fees 55 free developooing countries 56 institutions universities foundations sponsoring archives minor editorial expenses attached dematerialized publishing 57 memberschips 58 archival non-profit volunteer 59 mixture author processing charges increased conference registration costs 60 paper elimination community service 61 membership associations 62 small subscription fee 63 Green OA public money Academic consortium 64 gold OA model 65 Online storage almost costless 66 scientific neutral assoc institutions 67 author chages attendance split cost 68 Institutional support 69 http arxiv org 70 public funding 71 public HAL archive 72 combination options plus potentially author subscription fee 73 use platform arxiv HAL funded public administration 74 reducing wasteful spending ACM activities 75 sponsoring 76 Means-based charge based institution like progressive tax Authors Harvard pay lot Eastern European university example 77 using cost-free platforms arxiv 78 repositories Hal ArXiv 79 use arXiv HAL 80 Boot Strapping Database Calibrated Peer Review 81 sponsoring corporations 82 sponsoring government 83 84 Institutional membership 85 lend real-estate ACM sites advertisers raise money advertisements 86 FREE See STACS FSTTCS 87 voluntary contributions user supplied resources P2P datastore MaidSafe net offering 88 Using free public-funded services hal inria fr 89 government companies funding 90 91 grants wikipedia model 92 Combination add revenue 93 like arxiv voluntary support 94 Voluntary support 95 government funding via public offer 96 institutional funding donations 97 think author-paid OA mistake green OA sufficient 98 efficient archival 99 author processing charges -- time subscription fees institutions dropped 100 libraries independent archives 101 advertising 102 already invest lot mostly govermental money research 103 learned societies' general budget 104 grants voluntary work 105 mix charge authors find sources e university support guarantee open access staff donations 106 don't consider archival paid 107 pay 108 fair require author pay publish paper 109 public funding paper archival expensive 110 Sponsorsips 111 Mix subscriptions donations author charges etc single method 112 storing pdfs isn't expensive 113 subscription research institutions authors affiliated subscribing institutution may publish 114 Stop publishing hard copies save money 115 government libraries 116 grant support like arxiv 117 separate funding like arXiv 118 paid universities institutions government currently pay journal subscriptions 119 Increased general membership dues cuts areas 120 arxiv 121 government grants national intl institutions provide indexing archival services Dagstuhl Leibniz arxiv IEEE ACM want money enter competitive proposals 122 Affordable individual subscriptions 123 PeerJ model 124 Public funding 125 government infrastructure like roads internet 126 Advertising Sponsorship 127 http arxiv org 128 conference registration costs could retargeted online archival instead book printing etc Don't see costs need increased 129 general membership dues inventors conference goers shouldn't hold entire financial burden 130 Government 131 Gov funding 132 Sponsorship public including libraries national archives private foundations institutions 133 existing conference registration costs cover online archive costs 134 Corporate Government Sponsorship 135 arxiv 136 arXiv library university national funding arXiv 137 Institution multi-institution managed online archives see HAL France example 138 JMLR JAIR operate without processing charges 139 author processing via grants proviso helping don't grant support 140 Voluntary contributions Look http wer inf puc-rio br WERpapers 141 sponsorship crowdfunding 142 focus less revenue cost containment go OA Green 143 Increased professional organization membership 144 charge membership fees 145 dontation advertising 146 green OA funded public institutions 147 membership fees give discount conference fees 148 idea burden fall authors already pay produce content 149 Grants donations 150 micro-payments 151 abandoning organizational structures purpose modern world 152 professional society membership fee increase 153 institutional fees subsidies donations 154 cooperative research institutions 155 propose OA journals archives paid reader subscriptions 156 membership fees professional bodies 157 0 1 countries budget higher education go international institution money covers costs participating state may publish free 158 159 tbd 160 Use arXiV cheap long-term archival Cut useless middle men e g Sheridan Possibly small 50 author charges 161 national international grants 162 institutions gov agencies 163 sign official version document disk could serve 164 tax money 165 cost millions dollars ridiculous 166 Lower operating costs 167 institutional support moderate costs lipics 168 cost anything Put web Done 169 public funds 170 tax money spent military 171 make companies pay reading articles monetise public research results 172 Grants 173 Associations absorve costs e g ACM IEEE 174 Public funding 175 176 posible free 177 don't know 178 institutions goberments charges 179 Voluntary support third parties 180 arXiv 181 reduced profits 182 reduced expenses public funding donations 183 crowdfunding 184 Voluntary institutional support non-profit backing Internet Archive backs entire Internet based donations volunteers alone surely ACM archive bunch PDFs 185 crowdfunding private institutional 186 charges author prevents publication independent authors propose university college flat fee even better support state country 187 public funds sponsorship 188 charges paid richer governments research institutions 189 Donations corporate governmental bodies 190 hard tell without knowing expected cost minimal archiving solution 191 Prefer green OA model 192 perhaps combination two 193 idea 194 authors may 195 196 arXiv model seems like good one Author processing costs acceptable low 197 reduce costs conferences meals expensive hotels coffee breaks etc 198 ArXiv 199 author per paper 200 Sponsorship 201 Retargeting millions currently spent providing access essential Journals Universities sufficient 202 ACM Membership Fees 203 p2p model 204 Either 205 wealth-of-life -ponderated periodic charges payed research institutions somehow 206 moderated fee 207 know 208 favour established researchers funding 209 not-for-profit organizations 210 reduced publisher profits 211 Green Open Access 212 institutional subscritptions 213 Ad 214 arXiv cheap way need charge anybody 215 Membership fee 216 public funding 217 Zero cost See LMCS example 218 mixture 219 Taxes reseracher's home country 220 see comment 221 XXX 222 plus increased ACM membership fees non-students 223 Voluntary funding combination academic government sources well author processing charges 224 voluntary work 225 less margin editors 226 Grants donations 227 Like research 228 don't know 229 require redefinition publishers' tasks example USENIX already able provide Gold OA reasonable fees 230 bittorrent 231 price 232 http arxiv org 233 source possible cost per paper LOW 234 Voluntary support institutions 235 copyright release important archive 236 Institutions' funding 237 fund raising external grants 238 learned societies sure archiving main cost publishing though 239 normal conference registration costs 240 don't think additional funds necessary 241 think one national legal deposit libraries provide pay suitable archive 242 Cost printing book journals 243 combination Author processing charges okay come waivers poor countries special circumstances 244 options may affect student authors need find ways 245 options may affect student authors need find ways 246 Institutional support archiving service 247 via grants 248 institutional funding 249 mix voluntary author processing donations 250 Put public domain happen automatically 251 reducing expenses 252 S3 doesn't cost much 253 government funds 254 combination author-charges conference registration seems reasonable 255 don't lock stuff away allow sharing 256 government 257 one-time author membership charge OA General Comments 1 I've always found odd go ACM Elsevier still foothold whatsoever CS 2 Authors upload papers online either way 3 sure Sounds bit like fad n 4 think copyright assignment authors essential addition clear licensing software artifacts related publication process e g conference journal LaTeX style files permissive license helpful 5 pays reader author 6 seems reported ACM publication costs ridiculously high 7 really Open people pay 8 find discussion two options Gold Green little confusing model like LIPIcs fall Gold option special notion 'non-commercial' Gold don't know call thought _ nThat said think Open Access absolute must way scientific publishing goes changing continue changing Let us start backyard CS conferences different set problems journals different set problems books 9 moral atrocity ACM conducts regard cares AITO conscience 10 alternative long term plan shameful 11 Open access scientific research must nominal fee charged institutions wholesome price made available cheap prices independent researchers 12 PeerJ CS looking really good 13 day age take given research publications freely available Internet ship sailed several years ago 14 Older math journals page fees paid authors grants could ignored otherwise would opposed charging authors unless reasonable plan waiving fees without grant support Otherwise rich could afford publish 15 Scientists say they're contributing world's knowledge without open access they're contributing small elite's knowledge 16 Seems like cost always raised issue good study report much cost exactly money goes improved transparency general would great n nI strong supporter open access given world outside western nations unable access content without n nHowever would willing concede author processing fees knew money going getting paid would like information easily available decide causes ones want support 17 Charging printed materials paper journal subscriptions physical artefacts even access non-scholarship prose book reviews editorials etc access materials short time suppose less one year might way continue using publications source funding without damaging culture profession's access knowledge research 18 happen whether existing publishers want 19 It's right thing want computer science prosperate 20 creative commons license would likely accelerate computing science innovation worldwide image female CS researcher India behind paywall 21 much favor open access also pragmatist understand bills must paid also appreciate effort expense goes running library opposed mere document collection strong proponent libraries librarians 22 much fraud open access model already broken would rather kill pay play publishers keep ACM's paywall intact 23 First let's get something clear ACM already publication charges conferences call conference registration fees n nI chose increased conference registration costs piggybacked arXiv wanted pay way increased cost would order 5 per paper Compared current conference fees 5 rounding error n nI'm convinced would pay way many workshops publish proceedings EPTCS piggybacks arXiv AFAIK doesn't pay arXiv privilege n n Aside statement Green OA papers may preserved perpetuity centralized index isn't really true put papers arXiv Yes ACM's publication contract misleading intentionally misleading suspect language tries make think can't nonsense giving right post pre-peer review version right give take away ACM rights paper whatsoever sign agreement choose post post -peer review version one minute sign agreement ACM powerless stop 24 academics institution required fund activities grant consulting income early career academics would struggle find funding open access fees 25 current mixed model Gold OA choice authors high price work example Max Planck Society strongly supporting OA paying publication fees OA journals fund ACM OA fees already paying DL subscription consider ACM OA fees double-charging n nWe either Gold OA articles reasonable cost switch ArXiv LIPIcs n 26 lack Open Access already cost us Aaron Swartz one biggest barriers continued viability academia scholastic involvement 21st century People already dismissing role ivory tower academic organizations dated It's hard justify charging money access articles joe bloggs write post seems legit thoughtful content hidden behind paywall n nThis moral ethical issue future field present members ask would ok paying higher dues enable I'm sure many would say yes 27 research needs available everyone see otherwise much goes waste 28 Copyright go publisher though either Public domain would better 29 green OA model perfect opinion allows authors disseminate work variety ways still allowing ACM make money overall think spend pretty well n nI think long-term free repositories like arXiv important need focus ACM n nI would definitely use publisher prohibits publicly sharing papers ACM providing full-fledged gold OA important 30 top priority CS research adjust mainstream scientific publication practice avoid considered weird lesser discipline compared classical disciplines stable publication pratices nSwitching open access model done care avoid making situation even worst 31 opinion green open access also viable option least venues 32 Gold OA major biases restricting submission authors afford also publisher put pressure reviewers accept papers since increases income 33 editor board important element 34 important thing everyone able freely access research believe morally authors retain copyright I'd prepared compromise readers free access research perpetuity 35 Open Access especially research conference journal papers given increasing rise Artifacts submitted accepted papers would OA also include Would issue researchers working industry 36 premise specious Green OA combined long-term archival perfectly possible See journal LMCS instance 37 work de facto already Green Open Access publicly available co-author's webpage incentive pay overhead Gold Open Access -- mean interested Open Access strongly believe essential public research conclusion drawn lack interest paid Gold options deceptive 38 first tempted mark desirable feature first question nThen realized majority papers reports research funded public bodies e g taxpayers money light unacceptable result freely accessible general public nOA may even make research honest example everybody could easily check scientific studies quoted press less prone manipulation journalists Also authors might ashamed publish ton crappy papers I'm primarily thinking medicine I'm sure lots papers written sake incrementing publication counter 39 regular big increase digital library subscription fees put universities difficult position current model sustainable must evolve quickly nInstitutions universities already pay salary authors scientific work redaction work review work scientific committee work pay reminding library subscription fees work must put open access reminding work must done non-profit organization non ethical universities offer big profits commercial organizations 40 It's necessity 41 OA fees usually paid tax payers' money used cover publication cost increase publishers' revenues cross funding activities n nI paying high OA fees promise perpetual free availability work Frankly don't believe organization position guarantee 42 Really authors work cost including reviewing editting publishing publications freely accessible 43 information free nature limitation information access immoral information already exists nature digits Pi discover 44 It's already happening don't say didn't see coming 45 Essential allow new countries enter research community 46 I'm generally happy policy SIGPLAN conferences Green open access seem meet open access requirements UK However LIPIcs open access 15 charge would much prefer conferences publish ACM 47 Open Access also access data e software experimental results Typesetting e preparation manuscript often underestimated authors causes costs higher people think 48 one requirements give relevance back academia 49 Articles put GPL type licence work based freely made available 50 Open access essential guaranteeing perennial access publications 51 strongly model authors pay published 52 Several times faced issue able access papers wanted 53 don't think hope SoCG back ACM n nYou may avoid conferences leave 54 OA nice idea principle However requires universal uptake otherwise academic institutions suffer double-dipping paying tor APCs subscriptions also requires changing funding models lines allowed grants cover APCs allowed present UK research funded grant Universal OA would lead huge shift costs away consume research towards generate needs managed 55 Scientific communities inclusive n n1 Access scientific results feasible anyone world independently financial situation institutional affiliation n n2 Publication scientific results feasible anyone world independently financial situation institutional affiliation 56 Open Access high priority 57 results research must available everyone freely forever maximise advancements research industry n nAuthors retain copyright since made works 58 ArXiv LIPIcs good example work 59 Information wants free Paywalls hindering progress mankind 60 Currently added value publishers academic publishing providing permanent archive OA fees support publishing edifice 61 case public funding work belongs citizen Open Access mean ensure access paid taxes nIn general case easing access knowledge help enterprises innovate avoid researchers reinvent wheel 62 Taxpayer funded research public domain 63 American I'd rather academics provide classes public free e free university tuition provide conference papers public free Open Access sense moral imperative weak one compared ones scientists champion 64 disagree initial comment top form like Green OA much centralised index necessary various repositories easily crawled 65 Open access must cost maintaining presence file associated meta-data Internet high especially mortised large number files one-time costs production metadata reviewing process Hence don't agree large fees proposed publishers 66 many versions Copyrights makes last question meaningless n nIt seems logical Scientific papers published Creative Commons non-commercial attribution e free reproduce non-commercial applications long proper authorship attributed 67 think it's important low barrier access possible everyone able check research private person researcher read story newspaper research want able check original source without paying can't educate general public critical so-called science distinguish real science pseudo-science general public access real science n nLacking open access publisher think essential authors retain copyright least right self-publish results open access publisher preferrable peer review 68 Open Access norm exception academic research funded governments it's absurd distribution knowledge generated freely accessible 69 strongly object explanation OA page led survey Apart incorrect respect generally accepted meaning OA see instance Wikipedia polemic absolutely place survey n nWhy bother questions really want single question asking agree YES allowed choice n nAny use results survey explicitly explain survey starts redefinition meaning OA bogus inappropriate Please pretend neutral attempt gather information n nEven title owns research misleading since ownership research ownership article describes research right publish article right access publication 70 higher APC acceptable long mechanisms supporting authors can't pay eg developing countries waivers APCs need kept low 200 rather 700 71 Free access scientific knowledge basic human right Gold open access direct way protect right Using funds raised non-open-access publications model fund things even good works agree worthy contrary ACM's mission indeed morally questionable 72 Main funding agency Sweden requires final version publications released CC-BY 2017 73 expansive OPEN Access solution even worse closed access labs pay twice ACM 10 work shall get 100 benefit 74 good idea mainly undergraduate students enough money pay publications 75 moral point view using public funds free software produce closed-access research theft public 76 Knowledge common good nScientific discoveries depend there's proof breakthrough could made developing countries 77 real issue publishers get money give dime authors continue better open access 78 Paywalls effective way stop would useful research effect real world 79 Open Access power accelerate research particular allowing participation scientists less advanced countries 80 think reader-pays actually makes sense creates incentive quality filters doesn't exist case author-pays 81 object scientific publishers profit excessively work authors reviewers charge unfair amounts individuals institutions read results obtained funding governments corporations n nI think ACM fits category n nI agree extreme position everything made available somebody else's expense idea non-organized non-validated non-authenticated repositories archival means arxiv n nI appreciate ACM's attempt find informed compromise 82 agree public open access public funded research case public also fund archival papers 83 someone pay - that's fact Servers access cost money 84 currently practiced model institutions pay twice -- publisihing charges OA subscriptions non OA material -- avoided 85 think it's great opportunity needs done carefully 86 Bad idea authors pay temptation increase fees accept papers creep 87 open access relic past days actual cost associated distributing papers n nNowadays Open Access mandatory n nWikipedia runs donations 88 move open access model inexpensive possible authors 89 let's put arxiv throw sensible amount money done nKickstarter-style donation support single fund - get past future years unlocked free forever author fees Also solicit donations big companies rich people etc - academics 90 would prefer Open Access material produce costs prohibitive 91 bothered current Green OA model However would upset went away 92 favor traditional publishing model institution pays subscription access papers need ACM IEEE Elsvier Springer etc 93 Authors retaining copyright highly desirable although strictly essential 94 understand publisher goes great deal effort output good work don't think ACM aiming make profit published works lots graduate students would willing volunteer helping publishing process free conference passes n nOur research scholars meant fields improve modern society Making available everyone next step 95 without open access per se notion paper can't share friends Twitter deeply weird 2015 96 Concerning copyright journals consequent job refereeing process consider version journal keeps copyright final version authors keep copyright submitted one reasonable n 97 it's future embrace become obsolete 98 Open Access means nothing author pay fee publish True open access result research institutions academic redirecting budget presently spend journal subscriptions support online journals whose publications must freely downloadable researchers may freely submit long affiliated supporting instution n nThe model would something like ArXiv editorial board peer-reviewing preferrably interactive version pre-print submitted freely downloadable anybody researcher supporting institution may post comments reviews possibly moderated editors meantime editors send paper referees may also post anonimous reviews wish designated referees turn review hopefully reasonably short period time editor decides whether paper accepted case status changes pre-print publication cases dowload keeps free everybody posting comments reviews keeps open supporting instiutions 99 sign copyright assignment forms I'm compelled sign still put preprint online free 100 Personally believe essential version record research results available small number stable well-known locations Fragmentation versions records across larger number publishers grass-roots sites like arxiv org detrimental field strongly support roles ACM DL IEEE DL unifiying go-to location find CS research results especially archival ones 5 years past 101 Essential letting research societal impact n nWe want practioners read research Therefore must available without paywall calls open access n nPeerj Usenix teaching ACM done nIn line peerj expect membership costs cover open access publication n nFor peerj pay life ACM willing pay every year whic lot expect get least get peerj 102 would best could make OA mandatory w fees scholarships cover hardship cases It's lot easier write something work don't think funding political causes elective luxuries 103 Open Access obviously even appropriate CS fields print-quality work produced free authors far tell 0 value added anyone working free today's CS publication system 104 Open Access becoming fact life traditional publishers ACM IEEE Wiley Springer Elsevier adhere affordable price authors authors go away newcomers market offering free charge open access solutions since research publication market changing rapidly n nIn view scientific research openly accessible times everyone one main criteria science reproducible refutable research freely accessible becomes harder reproduce accept happy n nAnother important aspect take-up academic research industry making open access become easier companies access published material Otherwise incentive buy scientific papers 105 must publicly funded research negotiation point 106 think open access papers extremely welcome broadest terms research advance humanity whole e everyone able use results unhindered 107 Open Access important 'right thing' research funded government grants opens work broader community increases impact n nMoreover need subsidizing publisher lifestyles upper echelons ACM NYC publishers add value work get real jobs 108 w r price -- think two two-tiered 200 max would personally pay graduate student 700 1000 reasonable grant funding believe comparable PLoS charges 109 strong opinion exactly level author fees acceptable feel minimized maximum extent possible charging authors publish instead charging general public read moves problem around selected 100 question select something 110 It's important everyone violating copyright uploading final papers personal websites google scholar works 111 Open Access lifeblood science currently hesitate bend rules order provide open access papers even publisher claims copyright n 112 Publishing open-access research good work good work ACM greatest comparative advantage 113 fad 114 Naive open access important it's impact pales comparison participatory open access e g wikipedia github 115 review open access journals always prefer OA publishing work whenever possible 116 feel like ACM missing least tracking proper download statistics open access People research lab hit paywall either go CiteSeer scholar google ask one us personal subscriptions grab paper can't easily find via search mostly older journal papers ACM 117 Check paper http journals plos org plosone article id 10 1371 journal pone 0023420 n Lack Consensus Meaning Openness Empirical Study 118 feel retaining copyright work essential option current ACM copyright agreement 119 Open Access good computer science arrangement since Internet 120 Open access absolutely essential - unread research worthless research can't expect world whole join ACM pay DL subscription fees _check_ one paper per year relevant problems exists practice anyway various kinds unofficial preprints scattered around Internet practice undermines importance DL n nFinally research often funded general public public right particular keeping knowledge away fewest resources counter spirit scientific inquiry 121 Open Access -- 122 open access reduces revenue publications also reduces cost component cost access control believe could keep publishing charges affordable also working funding agencies build support open publication venues grant funding matter course even possibly decoupled grants individual researchers would make lot sense NSF ERC etc negotiate lump-sum support open digital libraries lieu publication charges individual grant 123 Publishing used genuine community service made sense organizations like ACM participate real community building exercise longer true traditional publishing model hindrance community organizations like ACM get business focus things communities need today n nAs academic one goal people read work best way paper copies made complete sense ACM help goal printing distributing paper copies digital copies free traditional publishing model gets way goal erecting cost legal hassle barriers getting work read 124 student researcher immensely valuable access past works would gladly allow Open Access works others could share convenience 125 economies scale open access mentioned AI two FREE OA journals JAIR JMLR operate shoestring primarily volunteer efforts n nThe AAAI similarly provides open access conference publications charge either author reader n nAuthors always position pay publications charges 126 OA clearly desirable feature ideally goal ACM However issue consider inclusiveness discrimination large OA fees may hinder researchers unable afford fees thus creating artificial disparity haves have-nots 127 Open Access essential - research heavily funded monies supposed benefit entire societies Entire societies fully benefit information openly available 128 none 129 cost PDFs currently seems grossly expensive price poorly-motivated internet covered sites like imgur tumblr youtube soundcloud mention dozens others citing hosting fees papers laughable best must maintain development team sure disparity price even beyond funds explained going primarily Good Works Unfortunately Good Works nice idea paywalling ideas order help potential researchers seems worse giving papers away 130 Open Access form critical though current model think marginally acceptable could personally live non-OA model easily access charges reasonable convenient pay think disadvantages parts world ways n nA 700 processing charge seems high though 200 sounds difficult manage Something middle may OK haven't looked finances 131 It's way forward advance human knowledge fair way every student ever 132 Researchers would throw huge fit ever try prevent OA Green given OA Green going happen don't believe spin like OA Gold actually necessary Don't waste time You're thinking small 133 inability science freely turn tools upon output severely hinder advance science paid subscription limits benefit scientific inquiry wealthier institutions 134 work available open access authors reuse material appropriate CC license OK retain copyright Otherwise author retain copyright 135 believe issue source code also needs resolved along Open Access source code data used papers also accessible reproducibility understanding 136 Open Access desirable given university libraries suppose subscribe DL imperative Furthermore individual ACM members purchase DL access reasonable price Therefore view implementing OA necessary goal 137 Green OA funded public institutions moral imperative public funded research 138 Ensuring OA biggest issue field 139 Science works better open access 140 Looking forward Open Access must 141 role academia supposed produce new knowledge share world researchers obligation general public Open access absolutely imperative embarrassed major publication venues send work support n nThe reason open access would expensive clear Authors take role writing formatting copy-editing work Reviewers work free Conference organizers journal editors work free Digital publication cheap paper publication increasingly unnecessary true costs distribution n nKnowledge priceless price-less 142 Without free open access scientific information everyone everywhere progress science 143 believe open access totally bad reseach nothing like free lunch anywhere life Publishing journals maintaining online repositories costs money Somebody pay readers pay subscriptions publishers motivated sustain high quality journal repository solid selection process cost moved authors publishers motivation towards readers need contrary motivation towards authors accept much possible provided authors pay irrevelant whether authors pay personal money employers pay behalf n n 144 Good 145 think open access important government e public supports research also gain advantages 146 Green OA e g arXiV already works well gold OA solution ACM could offer would cheap significantly better green OA get accepted community n 147 Legal Open Access absolute must It's pity nowadays authors achieve de facto open access breaking artificially imposed rule like copyright law simply posting papers websites practice great legal 148 don't really get debate Papers cannot download Google Scholar exist make sure 1 copies authors' institutions' pages final archival versions 2 free copy guaranteed available somewhere net 10 years poublication What's hard providing two basic services 149 Somewhat embarrassing it's universal standard CS well fields 150 like idea open access essential opinion Authors choice publish work people know choose publish venues sponsored ACM IEEE make dissemination results possible reasonable terms working universities research labs usually provides free access DL subscription affordable otherwise rarely publish journals published commercial publishers tend lower stature impact field adopt open-access model expensive authors would simply stop publishing altogether Assigning copyright ACM bother terms use seem reasonable 151 Academia laughably behind 152 Providing open access scientific knowledge resulting form publicly-funded research moral imperative duty tax payer 153 OA Gold preferred OA Green better OA situation publishers favor ACM others 154 Fact Essentially scientific works books journals etc accessed freely national public university libraries Fx people go university libraries since 500 years read books freely n nWho fund OA say 100 years run OA PDF-servers technology still exists 100 years n nPublishers exist since hundreds years need make profit Unless scientific publishing done non-profit organizations always profit making involved AGREE profit publishing scientific works EXCESSIVE seems issue OA tries approach 155 research funded taxpayers make sense private companies make money b pay able access work colleagues 156 USENIX right model 157 way scientific knowledge available 158 OA doesn't seem hard worst case encourage authors put papers online free sites even exclusivity cause month two like like freelance journalists often post want 159 costs transferred authors 160 know 'Good Works' 161 Science 162 thing perpetuity sense readers take ACM easily disappear new administrations change rules practices extensive body work want future readers able read ACM place looking n nACM DL always keep mind content makes DL valuable provided scientists OA might seek ding publishing manner know payment nature publication free readers many feels like paying ACM monetize work n nI anti-affiliationist - identity researcher writer depend employs absence information affiliation might provide clue case parts scientific world separated connected web google etc Therefore favor approaches make individual subscriptions DL prevalent affordable Although employer subscription DL use use subscription find high value write lot philosophical essay-like pieces computing rely technical ideas works refer DL 10-20 week work independent employer 163 idealistic standpoint strive OA Science isn't done bubble though non-OA models suggest entire point science globally increase knowledge isn't possible without capability disseminate knowledge freely Putting paywalls hinder knowledge transfer Similarly putting cost authors discourages putting new knowledge pool n nThis well good except ultimately given medium refuses become OA scientists bind moral imperative may boycott medium medium high-profile self-destructive point career suicide anyone isn't already well-established perceived long-term benefits going OA model outweigh enormous short-term benefits sticking non-OA model 164 industries begun open research materials everyone favorable results opinions polls related efforts believe CS industry innovative field forefront research techniques publication processes 165 ACM authors retain copyrights 166 Open Access OA important junior tenure-track faculty cannot simply change publishers consider reviewing submitting work submitted major established conferences journals It's important OA come within organizations otherwise feel powerless towards helping OA take root CS research community 167 Usenix makes Open Access author-owned copyright available articles free can't ACM 168 really alternative open access 169 moral necessity 170 absolute imperative publish OA understanding ACM moving towards consistent imperative remaining issue cost afford - it's moral issue milking authors can't easily afford support good works may benefit would like see ACM taking lead 171 think idea charging authors produced work publishing ridiculous membership fees paying ACM already high enough expensive set web server somewhere hosts archived papers possible using tiny fraction existing membership fees - ACM much stuff seems non-essential including sending paper spam every 172 prefer green OA approach authors retain copyright provide free versions papers ACM DL also allows links free access authors' sites 173 moral imperative 174 requiring authors pay publish One many schools pay fees meaning look elsewhere importantly member promotion tenure committee years attest fact pay publish models much frowned upon general reason difficult distinguish reputable journals require fee publish ones publish anything long get paid 175 Highest acceptable APC depend quality peer review provided lightly-reviewed distribution cost much one reviewers expected analyze material closely perhaps even reproduce results 176 really two different issues open access published results age-old journals vs conferences debate ACM must OA policy meets requirements funding agencies e g RCUK clear fund n nW r second issue favor publishing conferences special issues TOPLAS 177 think open access cost infeasible practice make work would require seismic shift universities governments fund open access model directly rather funding libraries pay access n n 178 luke-warmly support open access think de facto already exists recent work people put papers home page n 179 Essential progress science Open Access first priority choosing journal send paper 180 It's tricky question I'm definitely OA given desire advance career PhD student need publish don't lot options sub-field studying computational narrative 3-5 conferences year work fits well 1 5 major journals think decision submit something really depends progress lines conference deadlines single factor Waiting six months year submit something order publish conference offers OA really option n nThat said think Green OA actually huge step forward OA institution happens digital repository make papers available perpetuity insofar that's possible everyone access service institution also places like arXiv available think many cases Green OA achieves result Gold OA end-user especially given search services like Google Scholar index across entire web someone publishes something know author's name title chances much greater can't access paper paywall it's freely available form can't find Obviously time goes unreliable hosting starts mean Green OA papers aren't available free there's problem model papers would presumably still available behind paywalls situation isn't worse no-OA situation authors retain copyright there's demand they'd able re-upload old papers 181 practical matter research openly available end online search read cited much permanent archive largely irrelevant order advocate research play effective leadership role field professional associations working toward 100 open access best work 182 Give authors option place work public domain 183 Research funded public money public 184 Open access red herring -- need fair access see articles available free cost everyone Instead try ensure groups lack ability pay -- instance institutions developing countries students -- get discounted access ACM publications n nIn ways open access model proposed unfair current closed model Someone pay open access leads publication fees increased conference attendance fees effect imposing additional tax lack ability pay need think beyond binary choice open closed 185 question authors retaining copyright simplistic question get rights E g OA repository right reproduce perform etc work hosts perpetuity royalty-free etc 186 Authors readers benefit OA really don't care ncommercial publishers die professional societies nACM it's harder absolutist USENIX shown npossible run OA-only society charges authors nMy sense ACM could reduce OA costs making nstaff efficient firing Sheridan Printing -- hate working nwith would nice see honest accounting costs 187 Creative commons licenses applied 188 Don't speak Open Access charge author open access readers Many people difficulties get enough money publish authors pay model kind racketeering 189 Authors funded taxpayers companies copyright rest publishing houses add value 190 Research good people planet freely available understand cost making work available funding research comes tax revenue believe tax revenue pay make work available public funded work funding comes private funds private funder make determination work shared 191 support idea Open Access principle find positions OA polarized impossible conversation n nWhat seeing massive move towards Gold OA opinion worse possible option see publishers including ACM entering game charging authors readers turning scientific publishing vanity press benefit n nToday really hard say actual measurable benefit OA research community Everybody else seems benefit researchers commercial publishers new source income predatory publishers live industry gets free access research results contrast department pay author fees papers published faculty would triple quadruple cost current subscriptions institution even assume would replace subscription obviously case today n nSo think OA good idea PRINCIPLE haven't found proper way implement yet think reasonable solution would following n1 Green OA institutional repositories recent publications n2 OA publications older years 3-5 years traditional publishers including ACM n nThis way get funding Green OA research institutions recent works ensure OA perpetuity traditional publishers kill Gold OA becomes useless Institutions would still subscribe DL get easy access recent works n 192 Absolutely essential extent orgs CS e g USENIX following approach makes ACM 'look bad' 193 important retaining copyright maintaining open access papers 194 goal knowledge computer science open access way - people access body knowledge body knowledge grow used many ways n nWhile academic institutions subscriptions services like ACM DL many developers industry access open access would help transfer ideas academia industry n nFinally think open access requires different view service publishers provide Internet age authors distribute papers effectively free posting website critical service peer reviews say paper worth reading disseminating Effectively acceptance peer review seal approval acts filtering criterion looking valuable papers area key question pay work goes seal approval process 195 Scientific information shared freely Much funded taxes meaning results freely available people paid taxes Furthermore science depends free exchange ideas severely hampered publishers hold copyright charge exorbitant fees access work 196 ACM duty preserve research published perpetuity authors ability provide free copies papers personal pages pages transient ACM archive paper forever n nI believe important ACM safeguard research publications behind paywall However realize paywall responsible large portion ACM's income sure organization would look like remove source income survey appears changing role journals would decent way decrease overhead step toward longer requiring funds paywall 197 Actual interest science dissemination mean adopt Open Access policy effort direction sure appreciated 198 way 199 Papers cannot indexed accessed easily free including via institutional subscriptions generally available many cases good thrown dust bin publishing Practically literature search today via Google full text must available click link paper impact 200 like current ACM setup especially new option authors retain copyright work ACM licence publish authors post paper institution's web site always post papers website far concerned research open access 201 Msot time open access wording used open access means authors provide papers pay published perverted meaning Author producing papers pay published nSo I'm happy open access used editors publishers It's marketing nTrue open access means access open free charge author possible costs drammatically decreasing n- writing done authros arealready paid n- reviewing done research community free that's part job supported free online tools Easychair Scienceconf etc n- publication done web open archives free open access paid institutions maintain n 202 Author retains copyright agrees creative Commons license ensure open access 203 USENIX seems decent job providing high-quality open access without ACM's excessive fees - bureaucracy 204 Open access good Retaining copyright good - authors made papers copyright ACM still earn something o keep black still provide venue pushing field forward 205 live complex world complex problems surrounding publication culture computer science software engineering Open access general seen another threat high quality ground breaking research results like idea publish paper one must pay fee reason first think hard write paper opposed select deadline imagine result might fit forum b time frame I'd hope would read less learn n n 206 Generally copyright owned employer author author doesn't copyright anyway 207 Information wants free freedom beer 208 long DL reasonably priced nearly anyone wants access paper ACM obtain 209 paywall fall apart Scientific publication available free possible find ways reduce cost publication process 210 Honestly fan call Green OA ideal scenario n nI submit paper ACM publication accepted nACM gets non-exclusive perpetual license publish paper online DL nAdditionally ACM gets exclusive limited-term 10-20 year license publish paper print nI retain copyright free provide paper online otherwise grant license others publish online n nIn scenario ACM could charge whatever wanted access DL print publications would fine work still available open access via site sites think people would still pay DL indexing paying DL would prevent finding specific paper via google n nSo summarize people paying ACM publisher indexing editorial convenience vetted high-quality publications one place well organized papers papers freely available ACM certainly doesn't make freely available doesn't want author retains copyright responsibility Likely would use something like arXiv duplicate effort one Wikipedia 211 Open access important especially start emphasising reproducibility etc 212 final question doesn't even admit proper answer neither authors publisher retain copyright work public domain 213 wave future Find way 214 Conferences LONGER formal proceedings - Open Access case always available low cost maybe conference registrations Conferences networking disseminating preliminary work journals count formal publications case costs publishing OA charged institutions authors belong Authors nevertheless must retain copyrights current journal vs conference system informatics adequate anymore fact led MANY bad papers formally published Also led researchers submitting many papers conferences hence lot time reviewing bad papers papers even authors think bad know OA anymore bad conference vs journal systems informatics 215 makes sense everyone apart publishers 216 like use also right place work ACM conference I'm sending ACM conference regardless publishing model 217 It's simply imposed UK researchers funding councils - alternative 218 It's essential retain copyright essential retain rights distribute work non-profit purposes e g researchers students exactly one version record multiple subtly different versions make scholarship much harder 219 certainly agree open access moral imperative academia sensitive fact getting may rocky road something field must work towards asap least self destructive way possible 220 Please provide Open Access 221 great need bear mind associated costs authors publishers 222 open access works favor authors making easy others find cite work 223 Levels DL Comments 1 Google scholar much better 2 useful Hard search statistics Best way get paper via author's webpage 3 Well done 4 preference whether archiving achieved via ArXiv long papers openly accessible reliably stored would fine ArXiv another host n nAlso find scholar google com far useful DL's search facilities reason would prefer DL search would search technology implemented using free open software managed transparent fashion 5 It's terrible n 6 DL maintains nice library articles however search features improved made accessible better documentation user-friendly features 7 It's good paper archiving rest unnecessary Google search need 8 Access free Individuals especially corporations encouraged make voluntary contributions 9 digital library pretty reasonable essential authors able post papers sites n nThe real problem going pay maintain DL expenses journals 10 computer science library search feature atrocious embarrassment entire association fantastically bad search exact titles get several pages unrelated articles Workflow know article exists page wait log university's library order get access download article Okay I'm site library's portal Search copy-pasted title Nothing Flip table find article author's website 11 critical mass could great place track comments reviews articles closed prevents ever achieving go old articles can't easily access Google Scholar CiteSeer 12 Overall pleased ACM DL except search functionality access ACM DL institutional subscription makes convenient appreciate open everyone point survey would useful ACM DL archive artifacts addition papers e g software datasets 13 usually find things inside DL using Google click link inside DL ACM's search engine joke 14 expensive many practitioners 15 ACM spends millions dollars running digital library nearly BibTeX entries conferences miscapitalize conference name even ACM conferences e g international conference Functional programming symposium Principles programming languages etc lost count many bibliographies riddled errors ACM can't hit shift key n nWe replaced DL arXiv decades ago better late never 16 access DL content exclusively means via google google scholar dblp etc 17 Google dblp CiteSeer much convenient finding articles 18 I'd love see Good Work money spent hiring plucky web dev team improve usability 19 like usually search using mechanisms follow links DL 20 must become free access soon become obsolete 21 DL 22 never use DL search interface directly Rather use Google Scholar searching often brings DL page 23 questions right ones major issues DL n- cover key CS conferences cover key conferences partially sometimes randomly n- count citations correctly n nWhat would really like would see DBLP ACM DL merge provide full coverage access papers citation counting 24 1 idea DL's archiving facility n2 Google Scholar go-to search engine publications 25 never use unless somebody redirects download paper DL 26 DL search irrelevant that's Google Google Scholar 27 Search needs improved lot personally go Google Scholar first find papers I'm looking 28 never use DL always go google scholar However would really prefer use commercial search engine 29 never use service requires non-academics pay fee access articles -- memories repeatedly denied access early studies stingy Author-izer service goes right direction don't see much benefits arXiv feel little loyalty organization uses position power force surrender copyright -- immoral n 30 DL convenient easy use archival service it's main benefits completeness consistency could preserved lowering costs 31 ability chase references great nThe bibltex entries cannot used DBLP better job respect nThe search facility arbitrary unpredictable briefly it's bad 32 DL great resource 33 serves purpose freely available 34 Becoming obsolete nGoogle attends tp today's needs 35 none 36 never even new existed 37 Define DL 38 Never used always go directly author's homepage 39 serves bibtex source bibliographic citations usually good n nThe references list article pages always contain link every reference available DL DOI link used 40 DL excellent resource needs preserved It's fantastic service research community far exceeds organisations for-profit not-for-profit 41 Good things DL n n - Good coverage old articles published ACM n n - Decent coverage additional materials articles recently published ACM n nBad things DL n n - never use DL search articles search function appears working example entering exact title article know DL sometimes doesn't include article search results n n - sometimes use DL download bibtex records quality records low extensively hand-edited become useful 42 paywall often prevents reading article 43 It's ok paywall makes things inaccessible people outside universities Companies may still able buy access individuals Papers freely available everyone preferably simple search interface ArXiv 44 one feature DL use bibtex export want cite paper 45 Archiving works great paywall makes DL cumbersome hard-to-use Open Access would solve problems snap 46 free 47 try avoid using it's unpleasant interface 48 think DL broader ACM publication process run inefficiently amazed see 0 8M spent marketing 33 24k members 1 4M staff costs overheads Looking ACM see lot value add work consider superfluous worked PC GC several conferences see processes cumbersome bureaucratic staff intensive n nA move OA considered alongside broader evolution replacement publishing system -- either within context existing DL within context SIG moving separate system isolation within context move new umbrella organization place ACM would make observations ACM broadly n nConcretely suggest n n Extend HotCRP handle processing needed collect material use ACM DL -- copyright approvals bibliographic information etc Pay Eddie someone similar programming expertise Switch sole way adding conferences DL Interacting easier PCs interacting ACM's current systems removing need e g publication chairs cut-n-pasteing different ad-hoc formats n n Review way DL hosted Comparing commercial AWS prices infrastructure costs look massive volume material involved -- machines ACM's expensive NYC HQ n 49 ACM great job scanning old articles making available DL Ideally open anyone it's unreasonable expect ACM free 50 Google 51 good value DL would good bibtex entries articles easy way submit corrections bibtex downloadable acm 52 It's complete utter embarassment 53 DL appear deliver good value money less expensive gold OA version DL would highly desirable requires rethinking funding funding via conferences appears feasible current infrastructure market DL removed 54 It's behind paywall rather use arXiv's RSS feeds Google Scholar's update option simply lists conference accepted papers keep up-to-date 55 DL 56 don't know 57 DL ever appears page download paper - search articles using DBLP mostly Google Scholar 58 Works fine access expensive I'm happy author archiving indexing DBLP Google main problem authors sloppy removing obsolete versions work n 59 It's much easier search Google search facilities dire 60 It's well-done except maybe search needs less pricey 61 ACM core mission run library 62 Definitiv storage search key 63 think DL makes easy find papers Internet 64 search engine algorithm could improved - quality results sometimes poor Google Scholar works better 65 Remove paywall liberate works make easy mirror 66 don't use DL's search engine Google gives page need n 67 currently use DL search discovery features though perhaps Google scholar fills role although conduct reasonable comparison functionality 68 needs serve papers google find 69 DL's search results poor quality doesn't follow solution outsourcing Google et al n n Replaced arXiv bit specific replaced arXiv something like much harder disagree 70 like DL much much IEEE Xplore 71 procedures workshop organizers applying DL authors submitting DL truly bad High ceremony high accidental complexity high workload DL staff workshop organizers workshop authors - something simple easy automate 72 Digital Library rich content functionality would useful integrate better reviewing system e g Easychair delay publication minimised 73 open insufficient CS literature coverage means never use DL finding CS papers n nI retrieve much much often papers arXiV ACM DL even though I'm paying latter 74 lot value ArXiv like miss bibliographic database info supplemental content 75 great ACM publications less good everything else notably Springer's LNCS series less important IEEE results computing 76 DL best library field Maybe social network features articles could build reputation would useful feel drastic changes required 77 big fan ACMs DL comprehensive well mentained -- e g meta-information usually good quality even case fixed within couple days submitting request corrections particular true hyper-linked list references citation makes easy find related work even search keyword would bring works thus hardly use search DL n nthe search functionality could imroved though searching keywords work well even searching complete paper title sometimes failes find paper however google often delivers links ACM DL anyways real issue -- collaborations several search engine providers would bad idea though n n n n 78 None 79 surprises every time search say POPL '97 DL doesn't turn proceedings POPL '97 n nI don't think use commercial search engine though---that means even less control 80 DL extremely slow unreliable However include nice meta-data e g papers' reference lists ArXiv include 81 DL includes citations without full text links isn't particularly useful 82 sciencedirect springerlink ACM DL user experience n n 83 DL 84 hardly ever use DL either Google article use DBLP n nComment survey ask nHave read paper published journal last year n nI answered yes never read paper physical-copy journal almost always read paper web either arxiv author's institutional web site hand-me pdfs retrieved others rely institution's subscription electronic version journal 85 usually use google find papers DL don't regularly peruse DL looking new papers read want know papers appeared latest POPL look conference website 86 exactly problem sued wrong author-izer open access CS research actually moral problem time worried ACM rather Elsevier 87 Google Scholar DBLP better job finding paper DL 88 ACM DL follow concepts IEEE DL 89 search engine needs improved 90 hate takes extra steps get DL I'm work computer 91 search facility ACM DL near-to-be joke Seriously Google looks ACM DL much better ACM self 92 Make arXiv CS 93 sad fact ACM DL links rarely top search engine results look articles understand somewhat control ACM much better luck searching DL directly best results using library's search engine 94 used subscribe don't I'm still ACM member mostly political decision ACM hangs closed access financial considerations can't help perpetuate would happily pay support DL open access 95 paywall unacceptable 96 find DL essential finding prior work knowing found version record 97 always search via google scholar nThen reach DL results avoid paywall nOnly preprint really need paper activate organizational vpn access DL 98 DL worse DBLP ArXiV CiteSeer Google Scholar respective tasks 99 arxiv google currently work better DL n nIn DL's defense works better IEEE Xplore unmitigated disaster things could worse n 100 It's obstacle accessing publications 101 would OK free As-is tricks authors thinking results sufficiently available case course IEEE non-ACM venues 102 put work arXiv DL awful closed access predominantly horrible search ask anyone used awful bibtex entries can't get capitalization conferences right n nI see ZERO value added DL arXiv fact people use DL important change 103 made much easier browse conference author name vast majority searches 104 would use directly better phone tablet app i'd like able read articles conferences cacm go current app terrible 105 DL archiving facility replaced ArXiv that's straightforward way move toward open access sure n n DL search facility replaced commercial search engine DL's search facility much better tuned job regularly use DL find paper commercial search engine find linkable version refuse principle link anything isn't open access 106 Google better job search dblp bibtex arxiv archiving 107 Don't ever use Google Scholar MUCH better job 108 Archiving cannot possibly big expense done sensibly I'd like know actual cost per year per paper ACM incurs 109 DL useful appropriate archive search indexing features control ArXiv Relying search engine like Google demonstrably dangerous recent Google product cancellations show long Google Scholar last 110 don't know much ArXiv 111 Can't use it's expensive 112 digital library carefully curated ArXiv makes valuable content discovery mechanism 113 hate DL It's compatible major ways accessing scholarly articles paywall infuriating adds several additional steps many fail frequently authentication also means can't easily share publications social media people access 114 It's terrible massive usability bug always hit login leave page instead requiring backbutton refresh dance get download link 115 It's sometimes useful navigating references tasks I'm sure could accomplished better lower cost means I've never even bothered try search 116 worthless piece shit useful pedantic academics stupid enough trust metadata self-serving ACM staff enjoy pretending anyone ever enjoyed using DL 117 It's fantastic everything especially old papers preserved available online damned hard find stuff 118 sucks big time nI use https scholar google com ideal aggregates articles without currate sources 119 typically find things DL search engines links typically authors' Web pages Google Scholar DL much better SpringerLink one paywalls think important role play permanent unchanging URI link URI note Web pages change time time often change employers practice though people usually link preprints various places sharing research important thing 120 questions interpreted commercial good ArXiv eternal archive service demonstrating enjoying public trust open access long-term viability 121 use ACM DL lot pay personal subscription yet search functionality complete disaster use Google find papers ACM DL try searching within DL always give go back Google hand use DL trace thread research back citations really want Good search good tracing citations Google surprisingly bad 122 annoys someone links DL rather copy paper directly means extra hoops jump download article Primarily campus institution like subscribes DL either jump hoops wait next time I'm campus read n nThis position ACM want DL continue exist happy someone provides link 123 provides useful stats conference acceptance rates 124 Search doesn't work seems fixable even without commercial search engine 125 think DL sometime inaccurate papers may IEEE may ACM can't remember Google better job n nWhen want unified front students go find papers class list DL links nice million disparate homepage links web ideal locally hosting pubs 126 DL 127 much paywall 128 DL 129 Google Scholar better job DL finding links references citations papers I'm looking also suggests paper may interest given past searches Overall using DL ACM IEEE eXplore complete bibtex entries papers already Google's entries missing information 130 I'm big fan putting things arXiv knowledgeable details archiving document don't know whether arXiv captures necessary metadata 131 like DL it's friendly well designed said I've never used built-in search functions always arrive DL via Google like arXiv's egalitarian nature theory it's become morass non-peer reviewed garbage Academics ignore garbage people press cannot tell difference I've asked comment many significant research findings came non-peer reviewed papers arXiv plain wrong 132 none 133 PageRank papers please 134 DL useful ACM channel money supporting arxiv helping create PubMed like entity CS integrating bibliographic information venues publications etc using DOI route right place I'd say DL almost search awful 135 tend use Google Scholar find DL occasionally useful haven't explored ArXiv 136 never accessed except links google searches 137 I've trouble searching ArXiv well think need something better ArXiv DL though may build upon commercial search engines ArXiv 138 It's best us privileged universities Students developing countries don't access It's unfair 139 DL mean 140 often find papers via scholar google com via DBLP prefer click DL authoritative version 141 Existing search engines DL Google Scholar Microsoft Research etc pitiful job helping actually find research making impact world best tell research highest citations know academia echo chamber certain extent Tell research used people researchers Tell research impact students industry government standards rest world outside little laboratories computing clusters 142 DL powerful hub computing research would like see DL open archive outsource arxiv 143 think DL fine repository nothing particularly special distinguish arXiv IEEE Xplore n nI currently primarily access DL via external search engines case mostly Google Scholar think wise try compete Google search engine efficacy also think would bad idea assume Google search engines continue provide good service long term 144 open access 145 great simplifying outsourcing Google Scholar ArXiv 146 DL searchable via Google use DL search try find something hardly ever turns right paper 147 Hard flip articles similar hard-copy proceedings 148 Get rid popup ads please 149 even Google decides kill Google Scholar 150 Confusing use DBLP entry point 151 It's particularly pleasant use full-text search Google Scholar better finding particular reference DBLP better long-term archival trust arXiV n 152 don't comment DL n n n nI live Australia Asia options given last question 153 digital paywall 154 publications open-access organizations communities switched quite time ago 155 It's great source authority usually search Google Scholar use ACM DL similar sites fetch official PDF copies BibTeX files n 156 age cloud computing could get creative provides actual storage service scientific papers Negotiating special deal cloud provider also allow certain degree ease calculating long-term storage access costs authors must pay system 157 Maintaining DL essential Commercial search engines interests policies guarantee provide unbiased information reflects high-quality peer review process Whatever deciced harm DL 158 Directory PDFs google would work better 159 usually geht via Google scholar 160 open 161 ACM DL outdated either modernised replaced system assumes open access supports pre-prints revisions favours community discussions publications pre-prints allows open access reviews relevant ties open-access-to-data platforms 162 don't care DL search long Google index presume ArXiv handle archiving cheaply favor save 163 technology around 100 years doubt 164 Waste resources effort Unless papers ate open it's useless find better results Google scholar including actual usable links papers 165 Dump 166 I'm always disappointed find paper DL 167 use DL time subscription even though employer one use google find candidates papers want read refer grab DL also affiliated educational nonprofit well-established conference program Hillside Group PLoP conferences - 3 6 year often co-locate Splash also publish proceedings DL academics get career credit publications DL sometimes welcomes us sometimes doesn - mainly occasionally decide believe wrongly Hillside industry promotional group rather legally registered educational nonprofit remind folks DL re-welcome us needs regularized vacillation publication policy groups like Hillside n nI believe non-ACM ACM-friendly conference venues part DL future Journals 168 use DL nearly every day find useful better sure I'm sure arxiv better place house manuscripts imagine tied open access decisions Also sure using commercial search engine would ACM quite bit metadata papers authors preserved better search tool great 169 One valuable archive provided ACM DL provided e g arXiv linked citation trails forwards reverse citations incredibly useful Google scholar find wading lot garbage results unlike ACM's curated 170 hell DL 171 Search ACM DL totally useless instance type PLDI search bar get list PLDI conferences sigh 172 find stuff via Google frequently leads DL likely author web sites 173 DL fine tool it's access restriction bothersome 174 DL one libraries allow complex queries feature kept nb DL include least metadata articles competing publishers soon possible 175 don't know DL 176 Meta data value implementation 177 DL search feature totally useless unless one knows complete title one needs use google find papers based keywords 178 example shoddiness DL particularly irks low quality Bibtex exports -- conference names even author names often mangled even ACM conferences 179 I'm sure DL forms part ACM's mission n nIt's acutely embarrassing work colleagues industry users research published ACM don't access DL serves index things can't 180 current search feature atrocious 181 Honestly days usually go Citeseer papers turn digital library forced 182 lack public access recurrent annoyance n nOrganised curation bibliographic information useful though DL bibtex data often errors n nOrganised bibliometric useful desirable view 183 use n 184 One ACM's best services community 185 I'd like see limited access e g 10 year DL included membership don't subscribe DL get publications paper really resent paying twice content 186 ArXiv indexed Scopus ISI may debated whether using bibliometric data based Scopus useful reality countries Italy granting agencies organizations increasingly relying promotions distributing funding across disciplines allocating grant money 187 DL mainly useful n n 1 finding old articles don't exist web n 2 statistics conferences submissions acceptance rate n 3 source bibtex lame reason it's convenient n nFor recent papers people put home page Google Google Scholar far better n n 188 It's insanely expensive really hurts student's ability research pursue leads exploratory stages research It's pathertic situation organization that's essentially taking extreme advantage members benefit 189 citation graph functionality remains superior Google Scholar's otherwise find core article-tracking activities - searching specific articles tracking activities researchers curating personal library references - better handled existing free software 190 works 191 I've never used DL search papers Instead use Google Scholar since aggregates across variety sources almost always find least trace I'm looking find result ACM DL elsewhere it's often elsewhere try get quality bibliography info host site sometimes use host site's search functionality find paper I'm looking Google doesn't direct link 192 DL provide excellent service However completely clear efficient service terms cost 193 desire publishers feature papers publishers papers means always search commercial engines happy DL archive function don't support archive compilations formatted text ArXiv 194 it's DL may well exist Even unindexed personal copies papers open web better 195 Would benefit better integration search engines e g Google Scholar 196 typically search articles Google Scholar think ways archiving articles cheaper DL instance suggested could replace DL's archiving facility ArXiv 197 impact CS broadens far beyond ACM community getting hard create bridges traditionally non-CS communities don't want publish DL don't want 198 Merge ArXiV ACM give ArXiV proportionate financial support 199 absurd reinvent wheel every field 200 institutional access it's fine previous job nsome colleagues access fucking pain nIf ACM could make DL entirely OA field would better 201 ACM DL still far far better IEEE's solution 202 clue DL stands 203 almost never uses sometimes search engine directs since really uneasy use 204 DL Google seems work perfectly well even without official badging - see reason ACM duplicate effort 205 mainly use search forward backward citations useful really dislike outdated classification scheme ACM papers -- papers seem fit categories can't imagine use scheme find papers interest say papers areas similar 206 google scholar supplanted research search indexing 207 problems DL -- except hard provide updates papers 208 people realize DL run shoestring It's surprising it's search engine terrible given resources put assume everybody knows search DL Google using site acm org query need ACM spend money using commercial engine 209 DL expenses could significantly reduced partnering providers similar services potentially part donation support goals ACM Furthermore DL could increase value community extending scope cover sources content CS e g conferences USENIX thus potentially bring revenue ACM n nTo extent DL could provide authoritative registry CS papers could value currently approach take find something DL immediately go Google look versions published authors accessible 210 I've rarely used DL anything official source paper citation tracking bibtex formatting poor comparison sources though e g Google Scholar Microsoft Academic Search dblp 211 It's useful repository papers seem almost everything I'm fortunate part university pays fees access DL campus otherwise everything would behind paywall n nGoogle also works well find papers hosted authors' web sites would primarily use university didn't provide DL access 212 familiar DL's search facility frequently use Google Scholar believe important decent way categorize catalog search papers DL n n DL fulfill role convenient portal find CS research results n nI voted '1' able use DL read papers home without configuring sort VPN proxy university opposite convenient 213 Good platform however Scholar Googe offers better search choices side offer close protocol like systematic review part search platform would added value 214 search algorithm result page need improvement otherwise it's great resource 215 people unable access DL without subscription fulfill role convenient portal Science limited academia 216 Typing conference acronym search box immediately bring archive conference jumble papers appearing conference different years citing papers appeared n 217 DL repositiory papers within open archive ArXiV others 218 Using google one gets link DL DL holds information indexing external 219 Relic 220 Make open access 221 bibtex data DL frequently wrong n nI don't think ACM DL search great - least it's far less bad IEEE Besides usually use Google find stuff value in-DL search low n nACM provides zero transparency technology underneath DL feel whether competent safe secure whether ArXiv better worse - least things open likely carefully scrutinized less error-prone 222 necessary 223 DL important source older publications funding allocated maintain future 224 DL great It's pity source income ACM rather run non-profit basis guess ACM needs income like organization Generally I'm happy DL 225 would nice would expand acronym DL assume mean ACM Digital Library n nI appreciate ACM Digital Library staffed real librarians rather search bots trouble archiving someone available help 226 like using DL valuable resource 227 think value DL indexing organization file storage arXiv could handle 228 main responsibility DL preserve articles perpetuity 229 excellent service -- pay 230 never found anything using DL search Google already provides good enough results require change n n Meta comment you're missing continent last question n 231 think hosting secondary DL moving Arxiv would reduce cost either Arxiv ACM would support 232 None 233 clear purposes DL serves archive role better served ArXiv indexing facilities significantly better DBLP 234 love DL far better computer related DLs 235 Don't use much 236 think making DL available sufficiently low cost education research institutions worldwide nearly achieves goals OA 237 DL great use everyday use get bibtex entries use citation facilities find relevant work use get copies papers use find people work particular areas etc n nIt indispensable saves time 238 DL done great job archiving history really poor job indexing view give Whether continue archiving pay ArXiv depends much costs something almost impossible discover n nIt would see quiet likely one competent web designer could 6 months create front end ACM uses Google search engine ArXiv storage repository save millions dollars 239 common open portal CS publications essential house search inconsequential long person use portal find CS work 240 may user friendly - ArXiv moral high ground lot less user friendly 241 convenient use 242 don't use unless shows search result 241 Levels Journal Comments 1 Supplementary 2 None waste time write review stopped activities years ago 3 currency journals scientific fields simply cannot buck system 4 need make conferences less important journals widely used 5 importance overblown certainly programming languages systems n 6 essential 7 Actually publishing papers conference special issue journal serves different purpose publishing volume proceedings different time scale different level finishing think good conference papers turned longer-lasting richer journal papers whether special issue also essential place journal publications papers well fitted conferences wider scope longer whatever _ Personally highly value journal publications evaluating application 8 Useless 9 Meh 10 expect journal papers thorough baked conference papers believe still play valuable role 11 Allowing authors explain work detail without artificial size limits useful providing better understanding work thorough reviews experts also helps ensure quality providing useful feedback authors 12 could good review process open 13 like model TACO2 PVLDB get best worlds n nIt unfortunate man CS researchers loose interest submitting conferences know think would good something people take easy route conferences 14 good mathy theorem proof-oriented work 15 less important used Plenty important results published informally web 16 Journals important present completed results conference papers often incremental several papers required see full result often notation changes papers still conference driven would good encourage researchers publish larger results journals n nThe biggest problem conference-only results details cannot checked referees either enough space referee time carefully check results 17 argument CS moves quickly journals bug feature flooded superficial crap later inundated unrelated superficial crap don't see commitments evaluate one's research point convincing people things write papers lack attention journals means community essentially rewarding researchers playing tinker toys punishing researchers taking time produce quality work 18 Archival long form papers always published eprint versions don't see journals useful anymore 19 word journal disciplines high conferences even workshops like PEPM name activities merely conferences workshops grave disservice younger researchers 20 used read journals 25 years ago nIn past 15 years usually find need free online 21 researchers perform cover cover reads journals likely use Google Scholar-like service hope ACM DL email us new papers published contain favorite keywords 22 don't see importance journals CS Longer form material made without conferences better job peer review Material I've reviewed journals typically 3rd 4th tier 23 least areas CS conferences important journals 24 wide availability conference proceedings think journals play secondary role Conference papers many advantages journals days n- opportunity present conference n- faster review cycle n- prestigious many fields CS 25 journals traditionally unimportant believe people slowly realizing conference acceptance semi-random grown discipline mature journals become important Confererences-as-journal issues perpetuates problem 26 Journals allow communicate results long form understandable scientists Conference papers tend announcement result explanation result 27 pressure publish journals employer major university paramount relative importance conferences CS something convinced 28 Journals help faculty members justify existence get paid practitioners unfamiliar latest proceedings journals related special interest topics Open access improve situation lowering barriers frontiers knowledge providing incentive curious community get involved 29 Journal publications help publication record look normal fields don't tend publish good work conferences good work conferences makes easy value research publications diminished eyes general funding organizations 30 Medium distribution important long term Journals probably don't future though 31 conferences best way get important results fast overall prefer longer format more-detailed iterative review process journals main complaint journals field PL SE absurdly long delay acceptance publication typically 1-2 years 32 don't see point subjectively identifying best papers reviewing process bad enough multiply effect n nBesides point republishing paper immediately conference Yes journal version could slightly longer general seems unlikely journal version features new insights need journal paper employer need fix employer course difficult rather hacking system make conference papers reappear journal papers 33 promotions committee Uni demands journals research colleagues 34 aren't important communicating ideas important bean counters 35 It's time make transition 36 Papers CS conferences deserve considered journal papers particular compared 4 page experience reports appearing eg Chemistry journals nBut conferences conferences cannot discuss thing simplistic terms zillions conferences CS top conferences regularly publish papers journal issues 37 work computer graphics computer vision first field papers major conferences SIGGRAPH Eurographics automatically published special issue major journals main advantage respect second field several years necessary get paper accepted journal papers published results date anymore 38 conference system broken submit much reviews often worthless use conference system -- submit reject submit -- bad version multiple revision rounds journal complain subject understands like conferences yet 6 months submission deadlines conferences 39 think main importance journals provide media publishing complete version conference paper mainly due page limit restrictions enforced conference papers obvious reasons reviewing time experience people usually go conference publications first ti push results maybe augment results proofs journal version 40 high number conferences associated short reviewing delays makes journal style deep many rounds long time reviewing necessary validate results n 41 pay attention journals journals gain importance discipline 42 important way publish complete fully reviewed results latter possible due conference timeline 43 Right underrated even high calibre authors choose publish conferences quick turnaround miss chance lean back contemplate results present full 44 multi-round reviewing process major difference conferences 45 Journals often abused publication venues immature work many workshop-level events special journal issues Journals high-quality completed research e future work section ongoing work thorough evaluations 46 think CS conferences magnified form math conferences Math conferences announcing results appear real journals CS frequently case conference papers cannot thoroughly checked correctness lack time full proofs aren't yet written journals seem essential papers don't fit conference format 47 Journals' articles allow writer give wider view subject 48 impression less important 30 years ago nMany important results presented conferences never written accessible manner pity nAn important role journals could take archiving experimental data e g virtual machines input files observations make results reproducible Many conferences authors already archived beyond publication date 49 importance conferences CS total nonsense Conferences shiukd invitation journal publication Conference reviewing heavy charge delays reviewing jounal prioritary 50 review process journals far better rigorous conferences don't blame anybody short review deadlines page limit conferences lead pay much attention quality results correctness proofs often put appendix omitted needless say carefully checked reviewers nFor reason think journals CS extremely important n 51 researcher differentiate journal conference papers 52 unimportant field 53 Seems historical interesting things find conference proceedings 54 conference proceedings actually good good journal issues journal issues actually bad mediocre workshop proceedings Journals CS forced find place regard dominating conference culture vice versa Journals need broader scope aggregrate important results zoo conferences 3-5 CS OA megajournals might enough PeerJ CS Journal EiCs need disclose income commercial publishers make conflict-of-interest transparent 55 Journals central place CS replace conferences main means disseminating science one use page limit excuse include full proofs published paper 56 Conferences taken way much importance individual assessments researchers 57 Journal papers papers intended last longer time conference papers although case field 58 journals don't provide open access die blogs essentially free operate 59 trying understand work journal papers help understanding work detail 60 Conferences journals serve different purposes field confuse two see merit publishing PLDI articles issues TOPLAS 61 Journals important allow publication final word piece research polished form However conferences important generally allow faster publication 62 many conference papers state results without proofs extended versions never appear 63 Journal scheduling length constraints conference proceedings would like see unabridged journal versions every paper even include new results Journal papers easier read pedagogical form stable base build research 64 fields view non-journal papers non-publications CS moves faster thus likes conferences internet era think ways publishing papers obsolete anyways Conferences great in-person interaction web takes care everything else 65 important However places prefer conferences due historical reasons 66 Important provided number conferences fail provide sufficient quality review processes allow publishing papers low quality 67 Overlay journals make sense CS field since journal form paper generally longer improved version one several quickly disseminated conference papers 68 three types publication matter CS topic-specific conferences may elite publication venues specialists experts field publish elite conferences e g ICSE SPLASH journals line latter two sufficiently blurry see point trying publish elite conference given amount work required journal paper 69 journals allows longer presentation results help reproducibility Indeed conference format allows present results nthere often enough room present crucial information needed reproducibility work 70 marginal importance areas CS SIGPLAN SIGOPS SIGARCH intersection e g ASPLOS publish students work pushed toward journal publications 71 think journals atavism 72 journal publications thing forces write work properly full detail opinion theoretical work like mine published conferences even remotely reproducible Work published journals least closer reproducible n nI also written several papers technical details involved reviewers basically said publish journal instead couldn't blame space limits conference paper simply possible explain really deep math detail n 73 UK RAE REF meant pattern publication swung towards journal publication even value every case means clear 74 Journal conference whatever -- want see less annual pressure produce produce produce I've shocked kinds mistakes ambiguities leak conference peer review system people's careers depend heavily regular paper publication guess understand sympathetic gesture 75 current system see two important roles CS journals---which necessarily played journals--- n n 1 archival completed important results gone thorough reviewing process n n 2 outlet less fashionable nevertheless well worked-out results 76 ever found journals useful long form papers results seen value journals collating significant papers one conferences e g special issues Unfortunately actual results published journals typically time persistence authors rather quality research 77 many CS areas eg systems distributed systems networking databases security conference publications count journal publications would never submit best work journal first 78 least field journals important Sometimes percieved important decision makers e weighted higher metrics practice conferences real research done journals usually summaries appear course value summary especially well-explored topics bleeding edge conferences important thing 79 Conferences rolling deadlines papers published PeerJ fast-ish journal 80 Journals publication complete presentations finished research careful review fact acceptance POPL PLDI etc highly competitive doesn't mean published papers equivalent journal articles style reviewing completely different work usually mature enough 81 convention longer-form journal papers good one maintain we've fallen practice slightly-extended-conference-paper journal paper that's counter-productive confuses readers dilutes citations hand there's reason limit long thoughtful journal papers scientific disciplines problem rapid-publication short-form journal articles - like conference proceedings fact - don't see ACM shouldn't encourage 82 Journals provide much better reviews conferences 83 need align rest scientific community journals important best n nConferences could multiple deadlines work appearing journal edition presented conference subject deadlines suitability 84 Important journals Programming Languages JFP functional programming I'm aware nothing similar outside functional programming 85 Journals important way make available researches main results found 86 main reason many European researchers publish journals employer expect hand conferences like OOPSLA almost 20-pages-long papers PLDI provide accurate reviewing process many journals think close gap conferences journals like idea publishing papers high-quality conference special issue journal long prevent submission extended versions future 87 results fit scope format available conferences Journals enable broader range results published 88 Journals under-utilized under-valued CS difference early presentation preliminary results full presentation results withstood maturing time current value system CS authors' best interests spend time effort publish good journal papers 89 need focus completed research vague ideas 90 Publishing conference proceedings journal fine direction important presenting journal publications conferences need get rid idea conferences primarily publishing new results Conferences presenting discussing need good conferences accept presentations papers published elsewhere journals need get rid idea among faculty management etc it's appropriate send junior researchers conferences they're presenting paper 91 Given typically journals longer cycles acceptance publishing think journals value CS per diffusion latest knowledge concerned 92 field best conferences important venues publish high impact research use journals scientific areas believe publication appear journal 93 field best conferences important venues publish high impact research use journals scientific areas believe publication appear journal 94 Journals less important really support pressure prompt many CS researchers need send papers De facto become venues publish results comprehensive way second time 95 explosion poor quality journals muddied waters still journals good reputation better review process conferences good reputation 96 might hassle it's worth prepare separate journal version conference paper special issue Ideally extra work original camera-ready 97 Journals gain importance relative conferences 98 Journals little used CS due long turnaround time nJACM particular notorious delays However think regain role main publishing outlet 99 important journals n- allow results presented full including proofs detailed experiments n- allow depth reviews possibility authors' comments n nJournals full open access review time 6 months primary means publication CS associated conferences asin pair PVLDB VLDB providing means informal direct exchanges 100 I'd like see journal-first models publishing journal leads presenting conference 101 seem important outside CS seems affect evaluation CS researchers n nThat said obviously compromise find timely publication three years TECS article long rigour peer-review many authors seem ignore recommendations reviewers approach using shepherds two three rounds deadlined reviews might good compromise Especially authors required provide running implementations mechanized proofs avoid review tedious papers full details better checked machine 102 think journals less important computer science fields necessarily good thing mainly consequence fast pace research field journals note cope Practically journal paper today available readers 2-3 years actual research done 103 need better - less parochial - reviewing general 104 indicated like publishing journals various reasons -- important better argued reviews possibility publish longer papers n nconference hand publish faster -- times time submission publication also strong social component much present journals n nboth styles important equally advantageous depending situation 105 need reflex advances development field 106 field High performance computing best papers published conferences nThe reason publish journal would employer employ computer scientist types scientists evaluates thinks journals better conferences 107 learn journal articles conference articles strive publish journal articles aren't merely better typeset versions conference papers n nI worry bean counting though one know openly admits I'm pre-tenure it's thing try think 108 don't think publish best conferences journals I've heard argument universities make hiring promotion decisions based journal publications puts CS disadvantage don't buy argument CS relatively well academia CS community succeeded explaining publishing model universities n nAll said strongly prefer journal-based publication model like ability submit paper it's ready looming deadline also think journals provided higher quality reviews average particular journals better matching papers subject matter experts Unfortunately don't think switch journal-based model likely ever happen 109 important 110 think today CS journal publications elsevier etc necessarily guarantee quality CS relatively new science compared physics mathematics etc consequence community organized around conferences journals CS publication POPL CAV instance better regarded publication CS journal nLots journal issues based best papers selected average CS workshops anyway CS journals exists business purpose rather scientific purpose nIn France government pay Elsevier large amount money get access papers published french researchers government funds outrageous 111 Conferences bad model take long submission decision Nature Science turn around 2 weeks there's point huge review cycle profs leave last minute anyway Make 1-month gap tell prospective PC members can't cope don't sign PC n nBest model VLDB - monthly journal interesting papers year invited conference Ensures decent research held hostage overlong overcompetitive conference review pipeline also appear conference considered high-confidence selection 112 They're useful lessons learned extra details space written Publishing good conf results journal wouldn't accomplish 10-20 new work criterion journal good one makes authors last mile cleanup could otherwise left behind since there's credit gained conferences 113 least Argentina main reason publish Journals CS make oneself ranks scientific institutions like CONICET national bureau science higher nOn hand reading conference publications usually suffer lack detail definitions proofs sometimes would see examples backing statement nI would prefer encourage publication conferences make institutions understand way work CS community foster researchers make available e g arXiv long versions published conference papers link long version included short one 114 Personally prefer conferences journals Journals fine summarize results publishing journal paper takes much time effort compared conferences option Waiting one half year publish results really ok 115 research contributions fit 12 pages 116 university care publishing conferences 117 thing feel strongly wrt journals people believe journals important conferences period regardless community norms therefore areas publish conferences less scientific publish prestigious journals morons n 118 Despite believe journals still critical Even best conferences level depth review much shallower biased journals Journals allow interaction authors reviewers ensure high quality research published Conferences important place take place journals 119 beancounting aspect seems necessary evil like PLDI solution pretty well though see problems e g conferences going become journals ones 120 Right field doesn't high impact factor journals big issue CS goes head head disciplines It's embarrassing really path high impact factor journals CS take best conferences reclassify proceedings journal publications completely crazy -- field publishes research papers -- much less highly regarded research papers -- collections tagged conference proceedings need fix asap 121 exception CACM one publications nearly computer scientists read see role journals increasingly irrelevant Conference proceedings hand continually source new exciting ideas conferences essential ingredient collaborations generate ideas need change name conference proceedings journals appease academic bureaucrats fine age digital publication distinction largely meaningless 122 difficult CS conference priority hard graduate students apply departments CS faculty CS department isn't aware routine downgrades research potential 123 reviewing process conferences shallow reliable unavoidable given short time reviewer prepare report remark holds fo n nJournals absolutely fundamental much reliable detailed proofs better writing less tiny results scary see hard find good referees less time detailed reports journals 124 think importance conference proceedings CS anomaly corrected Conferences serve means communicating sharing research Publications appear online journals relatively fast reviewing processes e 3 4 months something present conferences journals possibly selected PC conferences submissions would reviewed lightly instead n nThe online interactive system suggest favors conference submission would actually pre-print submitted online journal archive lightly reviewed conference PC conference selection papers goes final reviewing process accepted papers eventually become jpurnal publications 125 Journals may may important new conference journal hybrids e g PVLDB likely future 126 Journals relatively low impact sub-discipline CS appreciate capability longer complete papers journals enable switch electronic forms publishing don't see traditional tight page limits final versions conference papers essential going forward n nI think publishing conference papers pseudo-journals step backwards accommodate out-dated academia-specific concerns leaning forward dragging academia modern era n 127 long temr CS cannot afford different fields competing grants faculty positions follow compatible publication culture 128 Journals provide little benefit CS publication 129 depends domain CS software engineering example important conferences considered prestigious community journals nOn hand important cultural gap Europe US Canada many European universities journals continue considered much important conferences CS researchers sometime difficult publish conferences incentive evaluated well universities 130 faster review cycles would result faster dissemination make journals relevant 131 depends speciality suppose experience journals publication process ensures end results outdated authors burn paper they're trying publish got little none feedback compared meeting people related domains conference venue 132 don't find conference vs journal debate interesting n nA interesting topic would setting venues meaningful post-publication review research results 133 mixed feelings conferences becoming like journals think orthogonal issues open access 134 prefer publish extended even regular versions top papers journals like increasingly SIGGRAPH 135 think shifting emphasis journals would help shift emphasis quantity publications results quality 136 distinction conferences journals obsolete 137 Journals would matter lot could review papers reasonable time 6 months reasonable Science Nature 1 month submission review 138 could important would provide in-depth vetting submissions thus higher prestige Alas they've maneuvered corner straight journal result impactful prestigious straight DVD movie 139 Journals typically require increment added changed content say 30 accept work first appearing conferences Yet thing needed conference work thorough review careful editing perhaps additional figures didn't fit due page count nothing beauty contest conference acceptance original long-form journal article n nA second point journal articles longer follow advice length appropriate contribution -- it's unusual find short journal articles even ideas merit short presentation 140 Journals useful also provide archival code data 141 think need phase primary reliance conference publishing CS artificial deadline conference publication encourages people write many papers small increment research results 142 Journal papers often form result complete reproducible CS conference papers often incomplete seldom even correct n nThat said think order incorrect I'd prefer see complete work journal summarized conference rather listen half-baked conference version work isn't actually finished made publication bar year bar impacted chosen venue location anything related research 143 think need venues present longer larger complete work conferences journals fit niche nicely n nBy publishing conference papers journals would lose understand need pacify bean counters I'm sure would good compromise n nIMO already looks like larger research projects discouraged emphasis conferences Bringing journals closer conferences may make matters worse n nOf course authors already publish longer versions essentially conference-paper-sized ideas defeats point don't think let concerns isolated bad practices shape discussion 144 shrug don't care nice get thoughtful reviews waste much time compressing results 2 columns status quo nobody outside academia rich big companies access papers whether journal conference papers 145 I'll comment importance journals programming languages Journals play critical role preserving valuable results long form---important results cannot always chopped 12-page pieces least without losing essential knowledge However journals currently constituted failing audience Journals increasingly become boutique venue theorists publish long detailed technical developments parts subdiscipline appear abandoned journal publication completely n nFinally incentives publish work journal opposed developing new result prestigious conference 146 Journals need upgraded serve reliable archives validated research solid basis research 147 chief advantage journals multi-round reviewing looking hybrid timely like conferences provides rounds reviewing revision 148 Journals mostly irrelevant part CS n nOne certainly argue might healthy state affairs time it's way 149 Journals better reviewing model current journals mostly live promise 150 think conference proceedings effectively journal treated way think conferences continue permit in-person interaction concerning top results 151 don't read journals i'm made money 152 journal model allows back- -forth improved articles history reviews one revision preserved much appears conferences never gets refined n nI don't think issue conferences vs journals important elements review process journals matters PVLDB approach seems worthwhile large n nFunding agencies also viewing cost conferences travel registration etc grant sizes decreased many conferences may disappear 153 wide availability conference papers digital library author's website etc journals become less less important 154 important think conferences terrible venues 'peer reviewed' research -- use conferences meeting places publishing places 155 computer science importance journals artificial mainly driven editors publishers journals journal papers typically extended versions conference papers without additional scientific findings due rather long publication cycles often outdated 156 Journals provide higher-quality reviewing conferences primarily referees paper selected paper submitted contrast conference program committee reviewers recruited first papers assigned best match basis load balancing result conference reviewers often knowledgeable specific area computer science covered paper think conference reviewing could made match quality journal reviewing need infrastructure college reviewers make happen 157 importance mixed like freedom offer terms page limits looser deadlines However review process long work often feels stale time it's published really like idea ACM creating dedicated pathway conferences journals help expedite reviewing process 158 sure journals particularly important CS 159 Journals contain long-form writings intricate details present much precise discussions results useful seeing well-expanded ideas covering full versions sketches proofs results conference papers 160 Archival long form results Removes pressure noisy review process Publish review vs review publish 161 nothing frustrated current state CS journals reviewer crappy submissions reviewing mostly-previously-published work etc submitted extremely long turnaround time one reviewer dominating editor's decision low visibility 162 think they're almost irrelevant far tell people industry don't read means little influence practice Conferences fine alternative except need occasional paper doesn't fit conference format n nI think discourage republication expanded conference papers journals unless conference paper really deficient crucial way don't think it's good use reviewing resources n nThe longer reviewing cycle may benefit theoretical areas impression acceptance decisions unavoidably reward persistance much end even random conferences 163 important publish extended work can't fit within page limits conferences 164 terms archiving sciences started conference-centric except CS eventually transitioned journal-centric eventually happen CS It's part science maturing don't know whether we're point wouldn't sweat much one way happen happens worried shouldn't publisher anyway much curator research channel directing research toward impact 165 allow publish complete proofs require proofs refereed Conference publications provide 166 think would well increase use journals versus conferences 167 Rather CS start play journal game fields think CS needs aggressive pushing model quality conferences fields n nI cross-disciplinary research involving biology biology conferences attend terrible compared CS conferences real publication associated real peer review involved selection speakers 168 biomedical science one example journal submissions reviewed 2-4 weeks CS take one year single important problem journals CS today conferences still preferable Journals instituted initial pre-screen review 2-4 page abstracts guaranteed 2-week turnaround 6-week turnaround longer papers would change field 169 Journal articles allow present results full details particular proofs provided checked reviewers 170 journal papers considered important vast majority CS academics Assuming journal submission conference paper proofs artifacts n journal paper allows one present completed research One careful proofs artefacts One take time achieve elegance definitions implementations engineering n b journal submission refereed conference submission isn't n 171 Almost none moment academics need institution metrics understand journals primarily third-tier institutions 172 We've already won argument conferences key CS There's point switching back journals 173 undeniable shortcomings nearly major conferences CS journals suffer n - competition reviewers often gamed submitting multiple papers thus favoring large well-financed research groups n - direct competition papers single reviewer n - multi-staged reviewing process allows factoring comments helps improving papers n nConferences advantage faster turnaround times shortcomings mentioned true anymore least become questionable Since academic fields favor journals conferences believe read sign CS growing 174 important 175 CS conferences front-line innovation Journals publishing ideas 3 4 years old 176 Journals take role main archival option completed research conferences become safe space publish experimental work still valued highly institutions would benefit community feedback n nConference registration costs skyrocketing making harder publish papers conferences financial reasons 177 questionnaire includes lot demagogy unfair selection options titled owns research refer publishers research research results ownership certainly depends legislature researcher country generally logic prestigeous part ownership belongs researcher right use patent sell etc belongs institution paid research n n Gold model guarantee perpetual access Someone pay computer humand resources required perpetually n n Open access scientific results option select otherwise 178 Combined journal conf model 179 Journals offer great opportunities publish results don't fit conference format e g comprehensive accounts completed projects short notes However CS journals poor job n- many journals competing submissions _Nature_ _Science_ CS n- Excessive reviewing publication delays e g years instead months n- Incompetent editors think duty make authors suffer n- Occasional unethical behavior e g selecting reviewers obvious conflicts interest submission n nACM transactions particularly bad experience author treated much professionally journals Springer Cambridge University Press n nSo it's time reboot CS journal system entirely starting ACM's n 180 work Electrical Computer Engineering department importance journals seems higher historically 181 wish CS researchers would actually complete work keep churning half arsed conference papers impressive rate particular wish CS researchers would pay attention proofs quality reproducibility experiments Moving towards system Journals given fair amount importance could help achieve system completed versions papers get submitted journals would opinion best 182 many researchers around globe journals items considered CV funding agencies believe would help lot conferences allow quick publication special issues journals Perhaps directly e conf paper journal paper direct invitation author submit extended version work special issue conf like reviewing times reviewers needs review diff conf version extended one 183 lots crappy journals 184 way conferences refereed big failure room research across two research domains journal allows king transdisciplinary research always 185 really dislike fact survey conflating discussion open-access publishing models discussion conferences vs journals topics difficult opinion unhelpful combine 186 Commercialization universities ruins science seems point address Access education free qualified students 187 Public institutions resorted Journal Citation Reports JCR standard way measure quality researchers every purpose every field matter tradition CS Spain get papers published JCR journals want get funded make progress job 188 Depends area important areas best works conferences handful areas journals okay second tier venues areas write-only serving purpose paying cv author editors 189 main point allow publish complete work including experimental validations 190 ridiculous everyone read nDeep impact unintended consequences journal rank nBj rn Brembs1 Katherine Button2 Marcus Munaf _3 191 terribly slow process needs accelerated 192 think journals good research goes die They're long take ages write take ages publish often regurgitate already-published work feel completely pointless 193 Conferences good disseminating good ideas faster journals always though many's lack space reasons Besides conferences publications count journals many people finish work introduce validation thorough experiments etc asking validation etc conference papers make sense general see conference papers preliminary publication work prior complete paper contains ideas also proofs validation case studies etc 194 Journals done right provide kind review shepherding improve presentation results ideas Conference review moment part CS world live devolved rewarding incremental results founded several conference venues battle - one within ACM 195 Journals play important long-form long-range role CS believe simply publishing conference papers journals journals know disappear we're headed toward model promotes tiny incompletely explained incompletely developed results given less overall peer review minutes thought depth 196 Journals seen secondary conferences significance works presented primarily due delayed nature journals increasing interest digital distribution believe significance journals increase moving forward 197 decline journals tragedy field 198 Conferences preliminary versions papers journals final versions Conferences journals linked Every conference journal special issue every paper accepted conference subset accepted papers invited special issue conference typically page limit journal However stigma submitting conference paper unchanged special issue 30 extra material requirement journal paper regarded extended version conference paper final version may contain extra material beyond conference paper may way every conference paper get in-depth peer review journal provide 199 Journals experience provide better reviews n nInstead making conferences special issues get indexed Scopos already two citations forms DL conferences PLDI etc let's make even impossible correctly site work conferences 200 important 201 become important 202 Fading 203 computer systems SIGOPS community time review journals long quality reviewing process always good especially compared top conferences particular would prefer journals clearly identified reviewing boards insurance paper get reviewed members board rather individuals chosen editor think pVLDB model good combines well advantages conferences journals considered fields 204 CS conferences equally important - 205 Turning leading conferences journals largely measure make life easier colleagues smaller countries grant proposals CS often reviewed non-computer-scientists know CS publication model differs rest science Basically Journal POPL would make easier explain prestigious venue actually n nThe precise mechanics debate favor VLDB model ironically important thing actually change name 206 importance journals relatively low handful exceptions 207 think Computer Science harmed domination competitive conferences n criterion acceptance competitive rather merit science really poisonous - corrodes integrity PCs find judging papers rather improving n contrast best journals tight review deadlines enable re-review revised papers better result n nHowever CS journals developed poor reputation - slow turnaround weak reviewing would like see energy currently goes conference PCs redirected towards making journal publishing work better research community 208 fail see value journals modern times submit paper SOSP get back nine quality reviews Last time submitted paper ToN got three cursory reviews 'in-depth' review process journals supposedly offering conference papers archived journal papers personally know _anyone_ actually reads journals days Yes institution pays never see anyone go near library 209 Conferences CS provide de-facto final venue many scientific results often playing role journals disciplines creates confusion policy makers weakens area easy-to-understand publication model would assume one formal publication scientific result journals natural venue solve solution could create direct link selected top conferences journals ii always consider conference proceedings informal Publications top conferences would therefore lead directly journal version e g SIGGRAPH conferences would get back traditional role bringing people together providing forum exchanging ideas longer publication factories feed publish-or-perish syndrome 210 always thought conferences much important journals CS new exciting things show first However universities promotion tenure process point view place high value journals publications 211 except CS scientific fields mainly publish journals raises usual problem academic instituitions deciding money allocation among different disciplines 212 Papers published journals seem much thorough technical blog posts - highly important 213 Although journals important believe conferences important CS offer possibility networking f2f meetings 214 journal collection conference papers organize journals conferences like science domains Journals publication venues conferences networking venues conference publication model inefficient expensive authors unfair authors poor countries harmful planet would better journal publication culture handful global networking events last thing infect ACM journals inefficient conference publication model even widen gap CS science domains model becomes mainstream domain journal publications require one give presentations conferences 215 recently stopped building system bit order rush paper describing half-finished state opposed taking time finish system writing complete CS conference publications important work conferences much greater relevance journals know 1 kind behavior commonplace think real impact quality communication work n n 1 point worth emphasizing emerging otherwise marginal subdisciplines conferences usually first venues publication followed much later journals Computer science discipline fragmented enough growing enough directions conferences come dominate publication model 216 best role editorial board would collect conference papers specific topic noteworthy worth reading Today's ease publishing wide variety publishing forums means separating wheat chaff becoming pressing need community 217 come Physics conferences opportunity share research audience journals quality results printed decent peer review Moving CS find dominance conferences bizarre leading poorly presented works 218 accuracy journal refereeing process free deadlines gurantee scientific validity results 219 Journals value source archival articles However seems conferences effect journals fast turnaround time experience quality reviews flagship SIGPLAN conferences least good SIGPLAN journals Features like author response double-blind reviewing two-phase reviewing form reasonable substitute multiple rounds author-reviewer interaction supported traditional journal publication process believe eradicate artificial distinction journals flagship conferences 220 seem point criticality Conferences don't entirely cut there's good reason look journals particularly ability engage in-depth iterative review feedback vet important works hand WWW threatens replace peer-reviewed journals kind post-modern meritocracy good works question whether important work first appears conferences journals overlooks growth blogs non-traditional forums 221 understand many people hold power CS funding journal-focussed need appeased good nfield reality Operating Systems Networking nthat conference reviewing darned serious journals nbroken would hate push authors towards broken journals njust bureaucrats insist publishing high-quality nconferences journal issues seems like best option 222 Journals offer tolerant review cycle 223 journals important publication venues direct contrast employer requires journal publication fulfill journals often extended conference papers 224 remark biased question field important results first appear answer proposed open archives arxiv ECCC 225 CS journals sometimes well run I've experienced review publication delays 1 year I've also much better experiences journals shame journal model CS seems second-class terms visibility within CS communities journal publications expected disciplines biology show journal publication fast responsive competitive reviews within 4-6 weeks publication within 3 months CS journals like n nIn many countries outside US journals count perspective track record promotion means researchers often cannot justify submitting work conferences get appropriate credit within career progression n nI see reason model VLDB also adopted ICLP apparently PLDI cross-listing proceedings major conferences journal adopted broadly might better compromise expectations broader scholarly community needs preferences CS conference-centric 226 mainly value journals venue synthesizing mature work across several papers see value retrospective work available practice haven't read journal article time setting aside decade-old articles journals primary venue sense journals collecting conference papers makes less inclined look journals 227 Without requiring extension - papers long enough conference papers 228 importance journals provide deeper coverage topic area important part earning PhD 229 Allow combining multiple papers telling bigger end end story accessible people beyond immediate community 230 Statistics ACM DL show journal papers get way downloads conferences sense impact believe people fields trust journals conferences get lost number conferences it's hard know quality field nI think journals still role CS publish mature results reflect larger research efforts reported conferences 231 low fast-moving field high volume new content creation rarely look journals extent journals serve purpose repository extended versions selected papers clearly need part OA otherwise nobody look papers However seems reasonable journals charge fee authors wish publish extended paper 232 Little none 233 Things go fast journal contain outdated information still needed bureaucratic reasons prestige imposed hierarchy etc humanist reasons nStill journals useful used aforementioned objectives quite rare time people abuse system 234 see journals place archive significant results chance develop stood test time strikes different role fields journals normal publishing direction 235 publish journals understand others feel like valuable way publish longer-form versions papers others cling nostalgic notion real sciences built upon journal publications n nBut none us interested publishing journals top work published elsewhere clearly worth keeping journals current form budget addition it's important remember journals original intent preserve important scientific results electronic mediums preserve archive results disseminate low cost scientific fields field looking forward pushing science forward archiving papers software artifacts data sets cannot preserved journal publication 236 local study showed journal conference papers similar impacts Therfo n nhttp sccc ucv cl wp-content uploads 2013 04 Caracterizacion-de-las-Publicaciones-en-Ciencia-de-la-Computacion pdf 237 publication long-form articles survey articles fields promoted There's far much salami publishing minor incremental research results 238 waste time 239 Main importance relaxed reviewing procedure deadline discussions editors possible reduced page limits ACM journals specifically often competitive elitist publish papers make irrelevant general progress field n 240 field journals place publish capstone papers potentially joining together several related conference papers paper allows in-depth view topic page-limited journals 241 journal used idea properly evaluated Many results conferences end going anywhere 242 Given current system journals add nothing 243 Journals central publication strategy 244 Best summarized following quote want care people using research results projects reproducing research write journal paper details don't stick conferences assumes journals actually publish long papers 25 pages editors actually find good reviewers true many IEEE Computer Science journals 245 conferences prestigious publication outlets leftover good old times protected equally old people caring investments 246 seems vary field mine systems largely irrelevant vast majority interesting stuff comes conferences n nAs conferences move away printed proceedings length limitations seem matter less key potential advantage journals goes away n nDouble-publication conference journal generally bad idea people seem major revisions conference paper submitting journal n nMeanwhile ACM seems totally focused journals treats conferences second-class citizens Example provide support program committee publication chairs Nope charge 16 income conference associated Yup 247 absolutely none 248 need way integrate research one umbrella 249 would care open access conference proceedings much open access peer reviewed online papers like peerj Classical journals past let field jump ahead future 250 peer reviewed medium publishing long formats proofs detailed explanations 251 peer reviewed medium publishing long formats proofs detailed explanations 252 US universities largely get best research venues CS top conferences PLDI POPL university Europe promotion decisions made centrally CS faculty direct competition faculty departments best world difficult promotions committee accept CS conference publications high quality publications time discounting conference publications fields 253 Longer format better Longer lead time results better presentations 254 CS must switch journals point Conference publications numerous flaws due process without journals building foundation sand 255 read conference papers journal papers know field paper published journals already published part conference 256 think valuable completed research necessarily prestigious 257 areas would important rigourous review journals important 258 particularly relevant prestigious journals remain would consider publishing conferences usually provide significantly higher impact competition 259 regard publishing conference proceedings journals need conference already published archival form available means journal anything would favor merging two e eliminating journals allowing long articles conference proceedings longer turn-around times reviewing 260 strongly believe CS grow use journals way compete equal foot areas n nI believe promoting conferences journals helpful Conference results way often deadline driven hectic incomplete regardless conference acceptance rate 261 I'm theoretical computer science see paper published conference accompanying journal version reasonably sure substantive peer review due fast turnaround requirements omits proofs due stringent space requirements words little reason believe result correct unless personally know authors trust judgement makes reluctant use paper's results work 262 stated journals count formal publications Conferences play much less important role respect Conferences used networking presentation preliminary results - completed work journal review process one understands take time However one check times carefully conferences formal proceedings preparation process also quite long - sometimes long journal publications least 2 months review 1 camera-ready versions 3 conference takes places 6 months submission day work presented relevant scientific community efficient journal take much time fully reviewing paper 6 months clearly current conference vs journal system highly improved 263 think CS needs place publish works subjected resource constraints conferences e g limited number slots small page count journals could fit role 264 SIGPLAN proposed changes reviewing model PLDI proceedings conference appear issue TOPLAS without precluding resubmission longer versions PLDI papers journal nI think many conferences follow model 265 use journals publish rounded version older results never new results 266 relatively unimportant inside CS nvery important institutions non-CS specialists 267 long term switch journals processing could sped considerably would help synchronize fields academia 268 Journals worthless employer would like publish journals going take time prepare manuscript want present symposium know key audience browse annual conference proceedings rarely read titles papers journals get Even fast journals usually slow already got information conference n nI don't care conferences - special issues think wastes paper effort Even paper little different never substantial enough re-read n nTo journals old-fashioned corruptable opinion PC meetings much better job identifying quality papers n 269 It's variable different subdisciplines CS Conference review processes thorough don't quality assurance journals 270 Journals important Much work appears conferences checked carefully review load time constraints make impossible careful review Consequently conference review focuses novelty whether obvious flaws course page limitations due reviewer overload many important details cannot included 271 I'm old guy tenure counting publications does't matter matter department sand labs matter younger professionals names establish matters committees Computer scientists compare physicists really deal re-branding issue 272 personally view journals place long-form surveys research agendas span several papers Conferences certainly venue publications go don't preference importance one I'll comment changing priorities negatively impact chasing tenure without much foreseeable benefit 273 Journals good peer review shouldn't stop people accessing research 274 important research topics e g ones empirical studies involving human subjects receive better reviews 275 Journal publication expected institutions long form results rarely longevity found fields science 274 Levels Repeatability survey Google form summary responses available survey introduced following document intended provide context raw data CSV format R Mardown code produced summary including statistics Acknowledgments survey prepared Jan Vitek SIGPLAN EC input Mike Hicks Shriram Krishnamurthi Alex Wolf"),
('From Set Theory to Type Theory', "n-Category Caf group blog math physics philosophy Skip Main Content Enough already Skip content Note pages make extensive use latest XHTML CSS Standards ought look great standards-compliant modern browser Unfortunately probably look horrible older browsers like Netscape 4 x IE 4 x Moreover many posts use MathML currently supported Mozilla best suggestion thank surfing ever-increasing number sites web crafted use new standards upgrade latest version browser that's possible consider moving Standards-compliant open-source Mozilla browser Higher Stacky Perspective Chern-Simons Theory Main Two Dimensional Monadicity January 7 2013 Set Theory Type Theory Posted Mike Shulman discussion Tom recent post ETCS subsequent followup blog post Francois convinced time write new introductory blog post type theory ve listening people talk type theory time without ever really understanding re newcomer first ve heard type theory post especially used big proponent structural set theory although still like past years ve converted type theory instead lots reasons important won say much end Instead mostly want argue type theory mainly purely philosophical point view following discussion Tom Francois posts want emphasize things sometimes get lost sight sometimes lose sight heat discussion foundational systems based valid philosophical points view uses real reason preferring one foundation another practical Type theory course lots practical advantages including computational interpretation direct categorical semantics especially potential homotopical version foundational choices different practical advantages aside practical concerns philosophy interesting fun talk helpful getting used new way thinking trying learn new foundational system long try keep open mind focus understanding philosophy behind things unfamiliar us rather insisting must wrong re different re used goal post start material set theories like ZFC structural set theories like ETCS show type theory arise naturally attempt take best worlds end ll argue really resolve problems need univalent type theory basic objects ZFC ETCS called sets behave differently confusing use name clarity post ll call material-sets ZFC structural-sets ETCS lot differences two personally think one important one although kinds sets elements manner elements different XX material-set thing AA ask whether XA X statement XA X proposition logician sense something either true false assumed hypothesis proven conclusion negated combined propositions using conjunction disjunction implication quantified ZFC things exist material-sets AA proposition XA X must material-set However material-set theories include atoms sets elements material-sets Also material-set theories extensional material-set XX uniquely determined knowing AA XA X natural assumption available notion contrast XX structural-set things nature elements XX ETCS things functions domain 11 codomain XX thing given element XX isn element XX thing given element one structural-set statement XA X something would ever think proving two pre-existing things AA XX assuming hypothesis except time introduce AA new variable way saying sort thing AA maximally faithful usage mathematics XA X considered proposition illustrate difference consider statement like x x mathbb R x 2 0x 2 ge 0 mathbb R material-set statement may generally interpreted shorthand things xx x x mathbb R x 2 0x 2 ge 0 mathbb R structural-set quantifier x x mathbb R atomic operation logic since x x mathbb R proposition cannot hypothesis if-then statement Personally think aspect structural-set theory matches mathematical practice closely say x x mathbb R x 2 0x 2 ge 0 regard property every real number square nonnegative regard property every thing mathematics happens real number square nonnegative material-set theory reading one particular instance x x mathbb R x 2 0x 2 ge 0 statement monster simple group happens real number square nonnegative wouldn expect mathematicians naturally regard statement part content x x mathbb R x 2 0x 2 ge 0 hand sometimes mathematics make sense regard XA X proposition instance LL set complex numbers real part 12 frac 1 2 lot people would really like prove z z mathbb C z 0 zeta z 0 zz negative even integer z Lz L Note difference two uses statement quantifier z z mathbb C naturally treated atomic zz given complex number rather arbitrary thing additional hypothesis happens complex number hand statement z Lz L proposition might true false particular zz susceptible proof disproof z z mathbb C Thus statement see mathbb C behaving like structural-set LL behaves like material-set crucial observation LL subset mathbb C Thus since zz given element structural-set mathbb C ask whether happens belong subset LL situation generic gives us reasonable way combine structural-sets material-sets single theory Namely Material-sets subsets structural-sets Thus expression like XA X two different meanings depending XX XX structural-set XA X proposition instead way describing AA given hand AA given element structural-set ZZ XX subset XA X proposition might refer two meanings quantifier-bounding membership propositional membership experience way thinking captures vast majority usages sets mathematics perspective see awkwardnesses ZFC ETCS arise forcing one kind set mold ZFC structural-sets forcing us interpret structural membership expression terms material one hand ETCS structural-sets forcing us interpret material membership proposition terms Specifically define subset structural-set ZZ structural-set XX equipped injective function X Zi X Z 1 Za 1 Z element ZZ define Xa X mean exists element 1 Xa' 1 X ai circ a' Rather try resolve inelegancies directly however want argue merely symptoms deeper problem afflicting material structural set theories impoverishment mathematical objects ZFC everything material-set even elements material-sets ETCS everything either structural-set function elements structural-sets particular functions set theories different basic objects instance modify ZFC contain atoms well material-sets SEAR basic objects structural-sets elements structural-sets relations cases list short forcing us encode mathematical objects terms Sometimes encoding natural materially sometimes natural structurally sometimes unnatural either one one hand think power sets seem natural materially ZFC elements power set mathcal P mathbb N subsets mathbb N ask X X mathcal P mathbb N n n mathbb N whether n Xn X Note first two quantifier-bounding third proposition contrast ETCS elements mathcal P mathbb N intrinsically subsets mathbb N Instead codes subsets mathbb N relation mathbb N mathcal P mathbb N called membership expected properties hand think natural numbers seem natural structurally ETCS natural numbers object structural-set mathbb N equipped element 00 function mathbb N mathbb N satisfying laws induction recursion element mathbb N natural number structure contrast ZFC generally define natural numbers particular material-set emptyset emptyset emptyset emptyset emptyset emptyset emptyset emptyset dots emptyset emptyset emptyset emptyset dots case construct usual operations also unwanted results 0 10 1 consciously abstract away Finally gripping hand think function sets particularly natural either case ZFC define ordered pairs particular way b b b b define function certain kind set ordered pairs obtain set B AB functions two specified sets AA BB usually also want annotate functions AA BB Thus set B AB define notion application function element AA also unwanted properties contrast ETCS set B AB characterized universal property elements literally functions AA BB basic things theory ETCS codes get identified functions via evaluation function ev B Bev colon B times B try apply various band-aid fixes problems instance might augment ZFC atoms define natural numbers set atoms might similarly augment basic ordered pair operation basic notion function addition set would better principled solution solves problems Thus ought seek foundational system contains structural-sets elements basic things also subsets behave like material-sets contains structural quantifier-bounding membership material membership proposition allows elements structural-sets internal structure doesn force always particular kind internal structure elements structural-set different structure depending structural-set may material-sets functions ordered pairs natural numbers fact foundational system already exists called Martin-L f dependent type theory MLTT language use MLTT bit different set theory level informal mathematics differences really amount nothing changes terminology notation Instead structural-sets speak types Sometimes call elements terms quantifier-bounding membership written Za Z rather Za Z ZZ course type structural-set aa given element MLTT many different ways construct form types type-forming operation comes rules specifying elements type behave instance rule forming cartesian product types essentially says elements BA times B definition pairs b b Aa b Bb B pair-forming operation primitive defined terms structure contrast ZFC b b must defined terms set-membership ETCS b b characterized relative choice cartesian product diagram AA BB Similarly rule forming function types essentially says elements B AB definition rules associating every element AA element BB Formally mean expression denoting element BB contains specified free variable type AA x 2 1x 2 1 x x mathbb R resulting element B AB often denoted lambda binds appropriate variable x x 2 1 lambda x x 2 1 element mathbb R mathbb R defined expression x 2 1x 2 1 basic operation application associates every f B Af B every Aa element f Bf B expected properties e g x x 2 1 3 10 lambda x x 2 1 3 10 contrast ZFC functions must defined sets ordered pairs ETCS elements B AB codes functions rather literally functions several type-forming operations particular note former subsets Type theorists bear moment paragraph tad unusual Analogously function-types type AA may type mathcal P whose elements expressions form x x x phi x x phi x property involving free variable xx type AA relation elements AA subsets expected properties e g x x x phi x Leftrightarrow phi relation basic aspect type mathcal P defined terms anything else function application basic aspect type B AB Thus elements mathcal P literally subsets AA material-sets coexist right way structural-sets e types ambient theory fact usually type theory mathcal P defined function type Omega Omega type propositions truth values x x x phi x defined mean x x lambda x phi x membership relation reduces function application yielding exactly correct rules amounts defining subsets characteristic functions may seem natural category theorist like ignore problem type theory defines mathcal P directly described One last type-forming operation note universe type whose elements types combining dependent sums build types whose elements structured types instance type whose elements pairs AA type endofunction ability build sets sort ZFC think Francois calls using sets data structures ETCS way talk structured set pairing meta-level regarding quantifier groups abbreviating structural-sets GG functions m G G Gm G times G G axioms group hold type theory avoid infelicity use sets data structures either use data structures data structures point however may feeling type theory sounds complicated Lots different ways form types rules forming elements simplicity intuitiveness expect foundational theory Well first many type-forming rules fact allow rule schemas way ZFC axiom schemas separation replacement three dependent products inductive types universes One might add coinductive types fourth Certainly compares reasonably well half-dozen dozen axioms axiom schemas ZFC ETCS Secondly every type-forming rule conforms well-understood pattern part formation making new type part introduction construct elements type part elimination extract information arbitrary element type part computation introduction elimination interact uniformity makes meta-theoretic analysis type theory particularly simple allowing proofs consistency evaluation makes type theory essentially programming language time foundational system allowing easy verification construction proofs computers governs principled approach construction new models matches closely category-theoretic notions left right universal properties advantages shared structural-set-theoretic axioms describe universal properties category sets Even said however may still feel conceptual simplicity lacking ZFC concepts set membership ETCS concepts set function along identities composition axioms may say stipulate basic concepts behave fact one may argue foundational system encoding complicated concepts simpler ones even encoding turns somewhat unnatural instance fewer basic concepts deal easier prove consistency results construct new models old ones However claim conceptual simplicity set theories vis-a-vis type theories illusion material-set theories structural-set theories built top edifice first-order logic introduce formally therefore must first describe rules forming first-order formulas connectives conjunction disjunction implication quantifiers exists also rules governing inference tell us construct proofs formulas involving connectives quantifiers words ZFC ETCS theories sets theories sets propositions interplay sets propositions obvious axiom schemas replacement introduce arbitrary first-order formula also evident constructing new model set theory case one must first specify logical formulas interpreted contrast type theory built top first-order logic require imposing superstructure connectives quantifiers inference built start state axioms course type theory first-order logic necessity mathematics first-order logic type theory special case type-forming rules proposition merely certain type prove exhibit element type applied types propositions type-forming operations cartesian product disjoint union function types reduce logical connectives conjunction disjunction implication quantifiers arise similarly dependent sums products Thus type theory alternative set theory built sub-foundations instead re-excavated sub-foundations incorporated foundational theory faithful mathematical practice either kind set theory literally simpler well problem encoding however gone away entirely type theory see another aspect modularity software engineering instance usual definition natural numbers type theory inductive type generated zero successor However regard type theory programming language definition gives rise unary representation computationally inefficient Instead could define binary representation involving basic operations doubling doubling adding one Mathematically two definitions equivalent literally identical way emptyset emptyset emptyset emptyset emptyset emptyset emptyset emptyset dots emptyset emptyset emptyset emptyset dots solution problem univalence axiom concisely described saying isomorphic structures equal specifically says AA BB types proving BA B specifying isomorphism AA BB implies analogously structured types natural numbers objects groups rings fields etc equal isomorphic isomorphism preserving structure particular unary binary definitions natural numbers shown isomorphic sets monoids semirings whatever structure interested therefore equal Thus anything say one automatically equally true generally type natural numbers objects shown contain exactly one element speak freely natural numbers without abuse language natural numbers literally unique set theoretic foundations course could already prove two natural numbers objects isomorphic material-set theory conclude isomorphism-invariant property one natural numbers object carries another work usually case leave work reader proving particular property care isomorphism-invariant situation structural-set theory somewhat better structural-set theory presented carefully enough say isomorphism-invariant things approaches however eventually lead dependent type theory anyway way characterize isomorphism-invariant properties careful way present structural set theories Moreover univalent type theory prove statement properties invariant isomorphism directly rather observing meta-property theory Univalence made possible precisely incorporation first-order logic type theory basic level Since proposition BA B like proposition type proven giving element elements things appropriate structure AA BB types therefore elements universe type require elements BA B isomorphisms AA BB unworkable classical first-order logic propositions proofs exist different level sets particular proofs cannot contain information isomorphism AA BB used prove BA B retaining information essential say property structure isomorphism-invariant involves transporting along particular isomorphism Univalence require getting used since see equality univalent type theory behaves bit differently probably used Fortunately kinds concete mathematics funny behavior equality doesn arise best way think types general kind thing structural-sets types behave like structural-sets univalent type theory call h-sets However types type h-sets type algebraic structures sort higher h-level equality starts behave unusually ve done expand universe mathematics contain new things familiar object behaves differently used Posted January 7 2013 6 21 UTC TrackBack URL Entry http golem ph utexas edu cgi-bin MT-3 0 dxy-tb fcgi 2587 Related Entries Search entries Rethinking Set Theory Dec 18 2012 Universe Polymorphism Typical Ambiguity Dec 09 2012 Freedom Logic Nov 09 2012 Ax-Grothendieck Theorem According Category Theory Sep 10 2012 Gamification Higher Category Theory Jun 18 2012 Logic Invariant-Theory Jan 13 2012 Propositions Types Algebraic Nonalgebraicity Jan 12 2012 Weak Systems Arithmetic Oct 11 2011 147 Comments 1 Trackback Re Set Theory Type Theory Mike wrote instance LL set complex numbers real part 12 frac 1 2 lot people would really like prove z z mathbb C z 0 zeta z 0 z Lz L hope email poor people let know 2 0 zeta -2 0 Posted John Baez January 7 2013 7 35 Permalink Reply Re Set Theory Type Theory Fixed Posted Mike Shulman January 7 2013 8 10 Permalink Reply Re Set Theory Type Theory know kind late maybe fix even refer directly set NN negative integers would show explicitly proposition-membership may negated used hypothesis Posted Toby Bartels May 11 2013 11 53 PM Permalink Reply Re Set Theory Type Theory Sign type theory Rather gripping hand following link suggests forceful overriding two alternatives third language dialectics say aufhebung sublation overcoming Hegelian variety aspects initial proposal negation retained product Posted David Corfield January 7 2013 10 09 Permalink Reply Re Set Theory Type Theory Whatever like m spend time arguing language meta level Posted Mike Shulman January 7 2013 6 16 PM Permalink Reply Re Set Theory Type Theory definition gives rise unary representation computationally inefficient unary representation computationally inefficient natural numbers literally unique affect concept non-standard models arithmetic proposition B like proposition type proven giving element sounds weird also sounds like one main things know type theory give example proposition element explain giving element thing proving proposition Posted Grapr January 7 2013 12 23 PM Permalink Reply Re Set Theory Type Theory unary representation computationally inefficient Heck storage inefficient Would rather remember 3 6303 630 10001000 bits 3 6303 630 hatch-marks know provided 3 6303 630 available affect nonstandard models arithmetic model arithmetic set various maps among products simple properties natural numbers object set element map universal property w r sets element map would call former first-order notion latter second-order notion d phrase differently model arithmetic purely internal matter natural numbers object ambient external Posted Jesse McKeown January 7 2013 3 00 PM Permalink Reply Re Set Theory Type Theory Heck storage inefficient Indeed algorithm run faster stored data needs access model arithmetic purely internal matter natural numbers object ambient external seems reasonable way say also another sort nonstandard model may worth mentioning case someone confuses natural numbers unique within model set theory type theory pick different model ambient theory contain different natural numbers object may may even comparable one original model give example proposition element explain giving element thing proving proposition Sure simple one suppose PP QQ propositions proposition PP implies QQ identified type functions PP QQ type theorists usually write P QP Q element type operation transforms elements PP proofs PP elements QQ proofs QQ Thus essentially proof QQ assuming PP hypothesis intended meaning implication Posted Mike Shulman January 7 2013 6 30 PM Permalink Reply Re Set Theory Type Theory Thanks lot wonderful post really seems univalent type theory could actually become third major foundation mathematics first one ZFC second one ETCS references explain UTT depth particular explain concept univalence details description post rather vague well translate ZFC ETCS UTT somebody already working knowledge ZFC ETCS Posted Dmitri Pavlov January 7 2013 1 34 PM Permalink Reply Re Set Theory Type Theory try references nnLab homotopy type theory page Posted David Corfield January 7 2013 2 17 PM Permalink Reply Re Set Theory Type Theory also links references pages homotopy type theory web page Posted Mike Shulman January 7 2013 6 31 PM Permalink Reply Re Set Theory Type Theory Since endlessly argued thread let say like post great deal find Martin-Lof type theory hard learn though Though recently able make sense System F point view would implement Common Lisp Maybe would work Posted Walt January 7 2013 5 07 PM Permalink Reply Re Set Theory Type Theory agree easy learn One thing found hard learn equality treated intensional type theory usual formal layout terms formation-introduction-elimination-computation look like lot opaque symbolic gobbledygook basic underlying idea equality types considered inductive types came quite revelation get idea goes MathCamp notes Mike Mathematics strange even decades work high level even basic concepts understood new light idea mathematical equality seems basic know almost first thing learn yet learning induction equality felt begun understand strange indeed Posted Todd Trimble January 7 2013 6 47 PM Permalink Reply Re Set Theory Type Theory finally chance read Mike slides really great Thanks link seems pretty close second-order definition equality x yx y predicates P x P y P x leftrightarrow P y guess formulate definition dependent type theory definition aesthetically efficient Posted Walt January 28 2013 10 12 Permalink Reply Re Set Theory Type Theory future readers thread Mike MathCamp slides Induction Equality found Posted Stuart Presnell May 23 2013 7 54 Permalink Reply Re Set Theory Type Theory Could say words word choice univalent usually think word context vertices graphs really grok meant communicating context Posted Noah Snyder January 7 2013 5 12 PM Permalink Reply Re Set Theory Type Theory origin word univalent bit murky think comes way complex analysis least according Voevodsky originally attributable mistranslation English Russian However think good ex post facto explanation think uni-valent meaning single-valued far meaning complex-analysis Univalence means every statement operation respects isomorphism isomorphism equality words operation give one different result applied inputs appropriate sense Posted Mike Shulman January 7 2013 6 37 PM Permalink Reply Re Set Theory Type Theory Thanks writing Mike also opinion univalent type theory objectively better foundation set theory form However issue accessibility still unresolved saw HoTT crew starting look earlier post hope someday article spirit Tom article type theory instead ETCS Posted Fran ois G Dorais January 7 2013 7 28 PM Permalink Reply Re Set Theory Type Theory Wow vote support Yes re hoping one result IAS year something introductory elementary show people think mathematics univalent foundations mind actually much longer comprehensive Tom paper though start analogous sorts remarks perhaps even ve written post make Posted Mike Shulman January 7 2013 7 37 PM Permalink Reply Re Set Theory Type Theory Mike explanation function types post confuses say ETCS function set B AB characterized universal property would seem admit realist interpretations would like entertain interpretations B AB consists element representing functions particular set functions could uncountable say type theory elements function set B AB definition rules presented syntactically expressions denoting elements BB containing specified free variable type AA straightforward way read suggests set functions would countable would satisfy wanted entertain realist interpretations meant restrictive reading wrong Posted Kevin Watkins January 7 2013 10 10 PM Permalink Reply Re Set Theory Type Theory certainly countability implication m sure exactly suggesting countability maybe following help set theory function AA BB defined subset F BF subseteq times B property Aa exactly one b Bb B b F b F type theory function definition subset subset build function according rule Aa associate unique b Bb B b F b F many functions type theory set theory Posted Mike Shulman January 8 2013 4 22 Permalink Reply Re Set Theory Type Theory Kevin got countability idea element B AB finite-length expression finite set symbols interpretation remark Similarly rule forming function types essentially says elements B AB definition rules associating every element AA element BB Formally mean expression denoting element BB contains specified free variable type AA x 2 1x 2 1 x x mathbb R countably many things like Posted John Baez January 8 2013 5 09 Permalink Reply Re Set Theory Type Theory Ah okay point expressions also contain variables belonging type e parametrized certainly countable number elements B AB define empty context e contain free variables equally true set theory reasons instance context containing free variable f 2 f mathbb N 2 mathbb N usual diagonalization argument write function x f x x 2 lambda x neg f x x mathbb N 2 image ff Thus follows 2 2 mathbb N uncountable set theory Posted Mike Shulman January 8 2013 5 21 Permalink Reply Re Set Theory Type Theory consider 2 N consist functions define still get diagonalization suddenly choose interpret meaning 2 N uncountable Perhaps re dealing logical structural issue rather size issue Perhaps idea one-to-one mappings defining equal size another thing seem understand finite examples isn right concept infinite situations Posted Hendrik Boom January 10 2013 2 51 Permalink Reply Re Set Theory Type Theory wonder whether confusing uncountable within theory uncountable metatheory Even actual elements 2 N2 N definable could still true within theory 2 N2 N uncountable Cf Skolem paradox Posted Mike Shulman January 10 2013 3 45 Permalink Reply Re Set Theory Type Theory even striking perspective see work Hamkins Linetsky Reitz pointwise definable models Posted Fran ois G Dorais January 10 2013 5 50 PM Permalink Reply Re Set Theory Type Theory Let try time pairs instead functions contrast pairs MLTT pairs ZFC thus instance rule forming cartesian product types essentially says elements BA times B definition pairs b b Aa b Bb B pair-forming operation primitive defined terms structure contrast ZFC b b must defined terms set-membership say ZFC pairs defined concept pick interpretation primitive concepts ZFC set element-of know pair unrolling definition b b whatever doesn really matter Might reader come away impression MLTT option foreclosed definition syntactic one namely pair expression b b sub-expressions aa bb types AA BB respectively guess m stuck thinking MLTT definition syntactic one refers Aa aa type AA syntactic concept seemed even evident defining functions started talking explicitly expressions free variables Posted Kevin Watkins January 11 2013 12 09 PM Permalink Reply Re Set Theory Type Theory quite get re driving Like formal system type theory syntactic side least potentially semantic side syntax b b formal part syntax type theory symbol formal part syntax set theory construct model e semantics formal system specify interpretation piece syntax instance build model ZFC inside ETCS R specify sets interpreted certain well-founded relations relation interpreted existence embedding certain sort build model type theory category mathcal C specify two types AA BB interpreted objects B B two terms Aa b Bb B empty context simplicity interpreted morphisms 1 1 b 1 B b 1 B respectively type BA times B interpreted categorical product B times B term b B b times B like AA BB aa bb piece syntax interpreted unique morphism 1 B 1 times B whose composites two projections b b true type theory give option defining ordered pairs terms set-membership inside theory global notion set-membership hand build model type theory inside model set theory taking category sets model ZFC would specify particular categorical cartesian product set-interpretations two types point would probably make choice like Kuratowski doesn answer question maybe ask differently - Posted Mike Shulman January 11 2013 7 03 PM Permalink Reply Re Set Theory Type Theory Moving northeast little let tad clearer Kuratowski pair example x y y x y y set one whose elements sets whose elements c always sets uses unordered pair axiom thrice recipe pins particular point VV extensionality used thrice Recovering xx yy Kuratowski pair exercise moving bits around Yes Kuratowski pair definable parameters x yx y something else needed assert thing construction axiom main difference see MLTT construct pair x y X Y x y X times Y x Xx X y Yy Y type X YX times Y definable without reference constructor coq style Inductive product X Y pair X - Y - product X Y One four kinds axioms Mike mentions write-up allows define something like recovery xx yy x y x y really pairs plenty ways define types product types instance Inductive two left right Definition twoTypes two - Type Definition product' tt twoTypes forall two tt Definition product'' X Y product' fun match left X right Y One go prove product'' X Y product X Y weak homotopy equivalent happens assuming univalence two types identifiable canonically shouldn say Since univalence consistent even without assuming two types distinguishable got point probably worth noting structure product Type X Y definable assuming univalence sense within type spans Inductive span X Y make_span forall - X - - Y - span X Y component make_span X Y product X Y fst snd contractible parts span tell exactly underlying map underlying type standard product work equivalence at-most contracibly-many ways consistent MLTT Posted Jesse McKeown January 11 2013 10 15 PM Permalink Reply Re Set Theory Type Theory consistent MLTT thought question exact proof-theoretic strength univalence still open know conjectured conservative extension proven yet Posted Ulrik Buchholtz January 11 2013 11 46 PM Permalink Reply Re Set Theory Type Theory knowledge direct consistency univalence relative type theory still open question conservative least sense learned use word since axiom extension language Posted Mike Shulman January 12 2013 6 43 Permalink Reply Re Set Theory Type Theory Ah course conservative extension sense types inhabitable potentially doesn even make sense could types available univalence without dependent type theory adding axioms might actually extend language thinking might conservative relative class types instance Nat Nat mathrm Nat mathrm Nat types represent propositions first-order perhaps higher-order arithmetic Posted Ulrik Buchholtz January 12 2013 7 44 Permalink Reply Re Set Theory Type Theory open conjecture originally formulated Voevodsky every term type NatNat definable using univalence provably propositionally equal using univalence term definable without univalence hence canonicity propositionally equal numeral Licata Harper proved 1-truncated type theory one univalent universe h-sets giving form univalence computes satisfies canonicity far know case untruncated type theory infinitely many univalent universes still open Posted Mike Shulman January 13 2013 5 17 Permalink Reply Re Set Theory Type Theory good point ways constructing type homotopy universal property cartesian product rather direct inductive way non-canonical identification product product'' Posted Mike Shulman January 12 2013 6 45 Permalink Reply Re Set Theory Type Theory 1 re consistency claims apologies might well inflated simplicial univalent universe size imagine cumulative chain univalent Type nType_ns see something else subtleties doubt lurk foil elsewhere 2 auto-equivalence X gives auto-equivalence product X Y X separable things Y inhabited nontrivial equivalences underlying product types functors may use word equivalence product product'' certainly looks canonical consideration started though highlight interest functors ad-hoc constructions Posted Jesse C McKeown January 12 2013 7 19 Permalink Reply Re Set Theory Type Theory 1 simplicial model contain cumulative chain univalent universes model constructed ZFC shows univalence consistent ZFC stronger plain type theory 2 m sure point Certainly autoequivalences objects induce autoequivalences products doesn make isomorphism two different products less unique canonical Posted Mike Shulman January 13 2013 4 33 Permalink Reply Re Set Theory Type Theory re 2 think point thing re used product type useful type product structure univalence nice already pointed generality among things type product structure actually pin contractible thing mentioning mostly benefit Mr Watkins seemed grateful particluar pairings definable things ZFC tried line-up contrast ZFC various particular pairings defined names ordinary MLTT named pairs otherwise undefinable MLTT Univalence uniquely definable pairngs uniquely definable product structures Posted Jesse McKeown January 13 2013 5 23 Permalink Reply Re Set Theory Type Theory product type useful type product structure would said structuralist point view says type product structure good product type type theory even arguably longer true instance product type BA times B first component pair b b definitionally equal aa whereas type simply equipped product structure could assert propositional equality ZFC various particular pairings defined names ordinary MLTT named pairs otherwise undefinable MLTT Univalence uniquely definable pairings uniquely definable product structures Sure makes sense although think anything autoequivalences ZFC ETCS MLTT uniquely definable pairings uniquely-up-to-unique-isomorphism definable product structures sense univalent type theory uniquely definable pairings uniquely definable product structures really different since univalent equality isomorphism nonidentity auto-equivalence AA BB induces nonidentity auto-equivalence BA times B univalent type theory nonidentity auto-equality AA BB induces nonidentity auto-equality BA times B Posted Mike Shulman January 14 2013 6 14 PM Permalink Reply Re Set Theory Type Theory distinction m making mentioning type product vs type product structure distinction 1Z pi_ -1 Z ZZ dependent type ZZ distinction least highlighted fact first several ways construct product types MLTT useful way test equality even though Type Theory admits question gramatical even two product types underlying type may still different products really m driving m pretty sure sense getting m driving points natural already Kevin meant initially address seemed different concerns altogether Posted Jesse C McKeown January 14 2013 10 42 PM Permalink Reply Re Set Theory Type Theory Okay - Posted Mike Shulman January 15 2013 7 52 Permalink Reply Re Set Theory Type Theory write Personally think aspect structural-set theory matches mathematical practice closely say x x 2 0 regard property every real number square nonnegative regard property every thing mathematics happens real number square nonnegative material-set theory reading one particular instance x x 2 0 statement monster simple group happens real number square nonnegative wouldn expect mathematicians naturally regard statement part content x x 2 0 hand sometimes mathematics make sense regard X proposition instance L set complex numbers real part 12 lot people would really like prove z z 0 z negative even integer z L Note difference two uses statement quantifier z naturally treated atomic z given complex number rather arbitrary thing additional hypothesis happens complex number hand statement z L proposition might true false particular z susceptible proof disproof z Thus statement see behaving like structural-set L behaves like material-set saying silly talk monster group real number square positive since self-evident monster group real number thus apply 1 dealing mathematical object didn know point view current state ignorance could either real number monster group could validly say real number square positive would legitimate statement let say discover object fact monster group monster group knew unbeknown monster group previously made statement real number square positive silly time made remark real life would almost never circumstance dealing mathematical object didn know whether real number monster group plenty times might know object X Y X Y similar crucially different mathematical objects might make statement along lines X such-and-such true later find actually Y know actually Y previous statement talking X might silly hindsight valid legitimate statement time Whether sounds silly depends knowledge 2 far ve talking situation mathematical object could either X Y properties known could also situation know mathematical object X properties X yet fully known could recently invented mathematical object mathematicians still process discovering properties actually might also say X such-and-such such-and-such proposition might turn true reality never true even human aware fact original statement time perfectly reasonable statement learn suddenly sounds silly whether sounds silly depends knowledge seems guiding force choosing foundational system avoid silly sounding statements rejected material set theory supposedly allows silly sounding statements However whether statement silly sounding depends state knowledge observer change time vary person person subjective better try objective 3 make distinction based whether set subset set second example take premise Z member C ask whether also member L subset C say leads different way thinking problem first assume member specific set ask member subset However scenario equally true examples examples fact saying X member set Y also member set Z subset Y proposition true first example X - specific example number 3 monster group Y - mathematical object Z - real number - square positive second example X - specific example 3 2i Y - complex number Z - L set complex numbers real part 12 - z z 0 z negative even integer z L see cases starting set saying also member such-and-such subset such-and-such true reason didn think first example mathematical object broad set Well decides broad set broad doesn count set circumstances set complex numbers would broad number looking number beers refrigerator depends observer situations one person might think self-evident X category Y didn need stated therefore think like first example another person might think self-evident X category Y think stated therefore think like second example subjective whether given mathematical statement silly self-evident whether set subset another set post selected examples people would agree m sure cases mathematicians reasonable mathematicians general agree Posted Jeffery Winkler January 7 2013 10 37 PM Permalink Reply Re Set Theory Type Theory think re misunderstanding sorts silly questions make structuralists uncomfortable Perhaps better example proposition 3 3 pi ask analyst whether proposition true ll immediately say makes sense answer question nothing 3 pi things even things mathbb R question particular encoding particular universe truth proposition invariant reasonable notion equivalence weaker extensional equality m sure best express rest response something conflating notions XX satisfies properties XX set say Let GG group X varphi X mean something different philosophically say Let z z mathbb C z psi z Perhaps someone eloquent experienced pick turn actual response Posted Cory January 8 2013 1 08 Permalink Reply Re Set Theory Type Theory say Let GG group G phi G mean something different philosophically say Let z z mathbb C z psi z Interesting least m thinking like type theorist quantifier Let GG group means let G GrpG Grp GrpGrp type groups Let z z mathbb C means let z z mathbb C mathbb C type complex numbers course size universe issues considering type groups groups vs small groups arise type complex numbers doesn sound though mind Posted Mike Shulman January 8 2013 4 11 Permalink Reply Re Set Theory Type Theory understand Cory example former case could statement internal structure group without reference group latter case statement presumably complex number related complex numbers internal structure none perhaps view simplistic categorical viewpoint suppose group internal structure properties determine relates groups Posted Tom Ellis January 8 2013 7 30 Permalink Reply Re Set Theory Type Theory think least m thinking like type theorist heart Informally ask group m asking structure certain properties m asking element collection fact talk favorite word collection groups incidental would continue ask groups even couldn collect single set hand ask real number element group m asking something know lives somewhere particular Perhaps another way expressing think structures intensionally defined care properties structure satisfies think elements expect live extensionally defined collection feel ought able choose one element list Sure m type theory happen want group ll choose something type Grp issue formalization within particular system certainly think Let go type Grp grab element m everyday mathematics Extensional quotes isn quite correct m sure express better Posted Cory January 8 2013 11 35 Permalink Reply Re Set Theory Type Theory Isn interpret type GrpGrp materially think see Grp TypeGrp Type defined reason type declaration G Grp G Grp desire Posted David Corfield January 8 2013 2 09 PM Permalink Reply Re Set Theory Type Theory d love see Grp TypeGrp Type defined think ve treating type theory another set theory seeing might clarify intuition breaks Posted Cory January 8 2013 7 15 PM Permalink Reply Re Set Theory Type Theory interesting point Take type theory without universe really know m talking humor pretend like m saying something intelligible embed intuitionistic first-order logic type theory quantify whole universe statement like exists group blah blah becomes metatheorem statement elements theorem Even add universes internally prove things relative universe right Posted Walt January 8 2013 2 48 PM Permalink Reply Re Set Theory Type Theory interesting discussion think greatly clarifying mind issues involved seems two different things going Firstly question universes purposes post interest type theory without universes fact might well assume one universe contains types including Technically inconsistent assumption techniques allow us usually speak true Secondly importantly distinction things defined internally terms built versus things defined externally terms properties satisfy collections belong hesistate bit identify distinction material versus structural certainly close connection material set theory everything built somehow even choose ignore whereas structural set theory everything characterized externally always choose ignore something built consider specified collection properties know specified collection belongs think part Walt point mathematics structurally inside ZFC type theory types whose elements built internal structure use fact particular types like say G GrpG Grp means GG data structure consisting type usually denoted also GG using implicit coercion function m G G Gm G times G G element e Ge G axioms means GrpGrp defined something like G Type e G m G G GGroupAxioms G e m sum_ G Type sum_ e G sum_ m G times G G GroupAxioms G e m situation however complex numbers assume defined concrete way pairs real numbers z z mathbb C zz data structure consisting elements x x mathbb R y y mathbb R Similarly assume mathbb R defined concrete way xx yy data structures consisting stuff built rational numbers may choose ignore internal structure elements type may choose force ignore working abstractly regarding type element type defines less precisely instance rather giving concrete definition mathbb C working z z mathbb C might instead assume element C AlgebraicallyClosedFieldOfCharacteristicZeroC AlgebraicallyClosedFieldOfCharacteristicZero work z Cz C course CC data structure consisting type field operations type axioms writing z Cz C use implicit coercion data structures underlying type case break apart z Cz C real part imaginary part use structure CC specified concrete type belongs concrete construction mathbb C becomes proof type AlgebraicallyClosedFieldOfCharacteristicZeroAlgebraicallyClosedFieldOfCharacteristicZero inhabited course choose different signature interface depending need may may characterize elements uniquely sometimes may need AlgebraicallyClosedFieldAlgebraicallyClosedField times may want AlgebraicallyClosedFieldOfCharacteristicZeroAndTheCardinalityOfTheContinuumAlgebraicallyClosedFieldOfCharacteristicZeroAndTheCardinalityOfTheContinuum thing GrpGrp well mathbb C type GrpGrp underlies data structures belonging types BicompleteCategoryBicompleteCategory AlgebraicCategoryAlgebraicCategory SemiAbelianCategorySemiAbelianCategory even characterize uniquely EilenbergMooreObjectInCatForTheFreeGroupMonadOnSetEilenbergMooreObjectInCatForTheFreeGroupMonadOnSet instead defining GrpGrp concrete way merely assume element one types assumption G GrpG Grp doesn allow us break GG type multiplication unit axioms instead use structure GrpGrp obtain knowing type belongs sort process abstraction course basic mathematics Category theory differs perhaps tends carry abstraction one higher stage mathematicians comfortable idea characterizing mathbb C abstractly algebraically closed field etc less familiar characterize GrpGrp abstractly analogous way category theory useful thing think difference groups complex numbers Cory pointing intrinsic difference rather difference way mathematicians used treating One merits type theory allows us operate higher level abstractions sort way operate lower level ones fact really mathematical counterpart data abstraction programming Perhaps computer-scientist correct think one might say re talking difference particular types whose elements built specified way abstract types whose elements Material structural set theory trying deal issue different ways Structural set theory effectively abstract types makes process abstraction easy convenient cumbersome want talk particular types Material set theory better respect Francois Walt pointing MLTT particular types e sets define particular types whose elements abstract types e g ZFC-set G e m G G e m G set e Ge G mm function G G GG times G G satisfying axioms group problem want characterize something uniquely abstractly material set theory isomorphism carry around isomorphisms explicitly time verify everything invariant isomorphism one thing structural set theory trying avoid forbidding operations isomorphism-invariant univalence even better since allows abstract characterization truly unique two constructions complex numbers equal Posted Mike Shulman January 8 2013 7 31 PM Permalink Reply Re Set Theory Type Theory came thread think 3 3 pi negation real example correct even structural definition ZFC exists set certain operations element 3 element pi whatever properties determine exists set 3 3 pi set 3 3 notin pi ZFC doesn assigns definite truth value way 1 1 21 1 2 better example x x 3 x exists x x 3 vee x pi Posted Walt January 8 2013 1 53 PM Permalink Reply Re Set Theory Type Theory see makes question better example although certainly isn worse argument made question instances mathbb R x x 3 x exists x x 3 vee x pi exists instances negation holds actually point mathbb R ought defined structurally precisely question make sense far tell good way ZFC material set theory define mathbb R structurally two obvious constructions mathbb R set equivalence classes Cauchy Sequences rationals set Dedekind cuts rational numbers give definite truth values silly questions answers properties 3 pi mathbb R re properties encoding passing different encoding changes properties even though essential properties mathbb R preserved structuralists argument shouldn able ask questions aren structurally invariant Posted Cory January 8 2013 6 49 PM Permalink Reply Re Set Theory Type Theory Walt point ZFC construction mathbb R x x 3 x exists x x 3 vee x pi fails Since 33 pi must different empty set least one must element Posted Mike Shulman January 8 2013 7 33 PM Permalink Reply Re Set Theory Type Theory idea thought formula meant responded clearly misread terribly Posted Cory January 8 2013 8 59 PM Permalink Reply Re Set Theory Type Theory thing occured sort dialog often go help calculus students write something like arguments start writing definitions use student ask challenging notion may heard everything set whether 3 3 pi would start asking mean 33 pi would perhaps also mention symbol language fields though symbol real analysis real analysis careful write H H HH set V V mathbb R universe complete ordered field atoms Btw think gets something Mike wanted want real numbers atomic natural way expand language set theory even one isn awfully careful formulae x x 3 x exists x x 3 vee x pi still mean x exists x 33 pi student foundations may well reassuring provide set relatively large enough support complete ordered field structure reason internally 0 1 inf 0 1 times cdots inf externally V in_V close note back mean x exists x yes ZFC assert x x 3 x exists x x 3 vee x pi x x 3 x exists x mathbb R x 3 vee x pi Posted Jesse McKeown January 10 2013 6 47 PM Permalink Reply Re Set Theory Type Theory think basically agree everything Jesse revolution comes sentence die firing squad final words mean sentence die firing squad Posted Walt January 12 2013 9 39 Permalink Reply Re Set Theory Type Theory 1 real life would almost never circumstance dealing mathematical object didn know whether real number monster group plenty times might know object X Y X Y similar crucially different mathematical objects would easier respond like rest comment gave concrete examples situations sort think ambient structural-set Z X Y subsets 2 might also say X such-and-such such-and-such proposition might turn true reality never true even human aware fact Isn case false statements least subscribe marginally realist philosophy mathematics every false statement silly meaningless see known unknown properties X relevant However whether statement silly sounding depends state knowledge observer change time vary person person subjective better try objective disagree least silly-sounding mean ill-typed statement sort thing type theory rules Whether statement well-typed ought always evident least algorithmically decidable definitions terms involved every false statement ill-typed fact aren 3 However scenario equally true examples insist beforehand material-set-theory interpretation quantifier m saying different way thinking grant experience get used start see accurate way describing mathematics Posted Mike Shulman January 8 2013 4 13 Permalink Reply Re Set Theory Type Theory ve always puzzled univalence someone help One great advantages category theory given understand difference isomorphism equality univalent type theory making one concept Hopefully solution referred phrase equality univalent type theory behaves bit differently probably used explain Posted Tom Ellis January 8 2013 7 23 Permalink Reply Re Set Theory Type Theory Would make feel better said instead univalent type theory throwing notion equality least objects categories almost always want practice isomorphism instead re-using word equality mean isomorphism Posted Mike Shulman January 8 2013 7 38 Permalink Reply Re Set Theory Type Theory Yes Mike reassuring suppose type theory equality means something different used Posted Tom Ellis January 8 2013 8 33 PM Permalink Reply Re Set Theory Type Theory Thanks nice post Mike various things going say response One Kevin Watkins said functions expressions think ve cleared Another Tom said post said univalence axiom concisely described saying isomorphic structures equal hadn given context d called univalence skeletality generally seen distraction best evil worst gather something quite different meant reply Tom comment confirms find wanting ask questions Karol far broad exposition concerned redefining word equality seems terribly risky move Asking people change foundational outlook already enough big deal without playing meaning extremely primitive concept case won really understand going unless word equality used mean purposes explaining beginners said equivalent something instead equal would somehow give false impression Posted Tom Leinster January 8 2013 7 23 PM Permalink Reply Re Set Theory Type Theory wonder structuralism actually commits univalence whole point structuralism understand anything re supposed say make literally unsayable idea evil violates ask perfectly well three one-element sets category sets even though re supposed make unsayable since able write formulas object equality express two arrows composable next best thing would say one Posted Walt January 8 2013 10 14 PM Permalink Reply Re Set Theory Type Theory make unsayable since able write formulas object equality express two arrows composable Actually dependent types type arrows dependent type objects composition operation type x y z ObjArr y z Arr x y Arr x z prod_ x y z Obj Arr y z times Arr x y Arr x z doesn need equality objects Posted Mike Shulman January 8 2013 10 19 PM Permalink Reply Re Set Theory Type Theory Something needs turning upside-down Posted Tom Leinster January 8 2013 11 27 PM Permalink Reply Re Set Theory Type Theory think right maybe would clearer parentheses x y z Obj Arr y z Arr x y Arr x z prod_ x y z Obj Big Arr y z times Arr x y Arr x z Big Posted Mike Shulman January 9 2013 5 51 Permalink Reply Re Set Theory Type Theory last paragraph use word equal refer concept much complex average mathematician understands equality already words whose established meaning much closer intended meaning like connected path homotopic say equal B sounds like something either true false carries information e h-proposition fact arbitrarily complicated type comments post see linguistic issue creates confusion justification choice words Posted Karol Szumi o January 8 2013 7 59 Permalink Reply Re Set Theory Type Theory Karol Tom anyone else feeling way believe ve long time resisted calling thing equality exactly reasons give agree re starting better think homotopic isomorphic equivalent think words wrong way time ve converted believe long run people familiar univalent foundations mathematics also willing call equality First set-theoretic foundations need distinguish equality weaker forms sameness type theory identity types notion sameness Well definitional equality doesn serve purposes judgment rather proposition nothing stricter homotopic isomorphic equivalent need reserve word equality least re familiar system potential confusion using word equality particular means sometimes arguably even time want call identity type equality instance say x y x y mathbb R x y y xx y y x equals sign identity type type theory statement would type x y Id x y y x prod_ x y mathbb R Id_ mathbb R x y y x Given prevalence equalities mathematics means frequently pronounce identity type equals want mathematics look vaguely like traditional mathematics true cases identity type pronounced equals one behave less like traditional equality particular identity types contain one element extra information contained proof equality HoTT say identity types h-props mere propositions underlying type h-set might reasonably argue pronounce identity type equals special case lot reasons ve come believe otherwise m sure ll able think right ll give best shot maybe come talk others hopefully also chime course really important issue ll need think carefully exposit introductory stuff re writing good conversation Firstly feel reserving equals case h-sets may give wrong impression two separate concepts equality homotopy equivalence isomorphism fact really one concept Coming set-theoretic background one naturally expects addition notion isomorphism structures also notion equality case univalent foundations particular write strict versions higher-categorical structures Separating isomorphism equality linguistically seems liable promote confusion Secondly might surprised things even restriction would allow instance consider type natural number objects discussed N Type z N N NPeanoAxioms N z sum_ N Type sum_ z N sum_ N N PeanoAxioms N z type contractible therefore particular h-set Thus even restrict equals h-set case still true two natural numbers objects homotopic equal Another nice example type well-ordered sets since isomorphism well-orderings unique exists type h-set two isomorphic well-orderings wil homotopic equal hand relax conditions types longer h-sets seems strange pop back forth using words like homotopic equal really concept identity type Thirdly got used idea found tremendously freeing category theorist constant temptation write rather cong simeq m calculating long string isomorphisms equivalences know people least informal settings Fourthly haven yet read ongoing discussion find pleasing univalence make precise philosophically natural ideas look totally bizarre set-theoretic perspective Univalence really different way thinking mathematics feeling uncomfortable first good means re less likely carry wrong expectations Fifthly allow call identity types equality intriguing useful points contact homotopy type theory traditional propositions-as-types interpretation type theory instance homotopy type theory proposition type asserts type AA contractible isContr b AId b isContr coloneqq sum_ prod_ b Id_A b Read homotopically inhabitant type consists point Aa center contraction continuous deformation identity function AA constant function Aa read traditional propositions-as-types style type would assertion exists Aa b Ab ba b e assertion AA singleton definitions proofs HoTT also interpreted way gives interesting insight homotopy theory traditional type-theoretic perspective re willing also call identity types equality lastly even identity type h-prop doesn behave exactly like equality set theory Equality type theory primitive concept way set theory learn think differently treat differently even prior introduction univalence words already playing meaning equality passing set theory type theory way around telling people word equality means something different may good thing even scary first force come grips fact even familiar-looking cases equality behaves differently may used Posted Mike Shulman January 8 2013 10 12 PM Permalink Reply Re Set Theory Type Theory Thanks detailed answer want say level mathematics find arguments convincing exceptions discussed really mind practical considerations HoTT universally accepted foundation mathematics tomorrow wouldn resist nomenclature However best count coexists approaches really want notion equality compete traditional one afraid competition would alienate many potential users HoTT rather pessimistic point view comes observation differences two notions seem even subtler discussed far Overcoming subtleties requires lot motivation effort getting used new ways thinking Looking example see whenever read something HoTT need mentally substitute path equality path object identity type see going example read something like every two natural numbers objects equal need explicitly remind also means every two isomorphisms natural numbers objects equal every two homotopies also equal etc hand read type natural numbers objects contractible complete picture immediately pops mind need spend extra time understand statement think problem wrote statement formally HoTT would forced write definition contraction type natural numbers objects say informally English specification lost somewhere lines Another example phenomenon origin grammar word equal adjective used natural language mere proposition saying equal B refer type theoretic equality leaves lot implicit information derived reading statement traditional mathematics want precise say simply refrain using phrases like B isomorphic Instead explicitly define morphism f state f isomorphism B situation writing formally HoTT would force us write isomorphism explicitly hand informal HoTT innocent statement like equal B lot baggage attached given hint need remember baggage looks like formal HoTT handles situation explicitly design informal HoTT makes even worse unless way talking HoTT informally English handles baggage properly Let address specific arguments favor terminology feel reserving equals case h-sets may give wrong impression two separate concepts equality homotopy equivalence isomorphism fact really one concept happens mathematics important frequently used special cases notions given special names doesn seem create much confusion example use vector space refer module special case ground ring happens field Surely vector space module separate concepts situations work field often special flavor emphasized choice words ve never observed giving anyone impression vector spaces modules two separate concepts seems situation traditional equality homotopy type theoretic equality dissimilar definitions proofs HoTT also interpreted way gives interesting insight homotopy theory traditional type-theoretic perspective re willing also call identity types equality actually followed similar line thought order argue something opposite interpret language two different ways unnatural name concept differently two interpretations example binary operation language groups called multiplication interpretations addition others formal distinction interpretations choice words definitely highlights differences intended way using notion group Similarly since homotopy type theoretic equality much subtler classical one would say deserves given separate name highlight subtlety course also philosophical question whether homotopy type theoretic notion equality somehow better addresses mathematicians needs accurately traditional one Dedekind conception equality mentioned another topic linked suggests something like may case even true really want attempt foundational philosophical revolutions time feel trying overthrow traditional concept equality would hinder efforts promote type theoretic foundations hand admit resistance nomenclature may partially come fact m point think HoTT foundational system mathematics merely language homotopy theory Thus identity type homotopy theoretic concept foundational one Perhaps thinking things foundational terms would likely accept point view Posted Karol Szumi o January 9 2013 7 33 PM Permalink Reply Re Set Theory Type Theory whatever worth since changed notations coq HoTT ve reading p b let p identification b Posted Jesse C McKeown January 10 2013 4 50 Permalink Reply Re Set Theory Type Theory Thanks thoughtful reply m definitely open convinced back side m convinced yet think re right though two arguments replied specifically could cut ways really want notion equality compete traditional one think m saying get choice notion equality type theory different traditional one matter slice bite bullet call spade spade mix metaphors re equality logic different think one biggest hurdles get learning think Andrej calls proof-relevant mathematics type theory really thing something true every time assert proposition must give proof witness every time use assumption handling witness every proof write program executed transforming input witnesses output witnesses big part power type theory comes really internalized started seem perfectly natural could multiple different proofs different witnesses equality Univalence says important cases witnesses isomorphisms point really equality behaving nontraditionally whole system mathematics become proof-relevant equality particular manifestation words everything say call baggage attached need hint remind us fact always true course may happen sometimes every witness given equality provably equal witness e underlying type h-set think particular reason privilege situation special word importantly even case equality still proof-relevant may care particular witness even every witness equal instance assertion given function ff equivalence h-proposition witness fact includes data inverse ff often care inverse function think HoTT foundational system mathematics merely language homotopy theory may another hurdle important get especially since classical homotopy theory another stricter notion equality Posted Mike Shulman January 10 2013 5 54 Permalink Reply Re Set Theory Type Theory believe m slowly starting see re coming motivation particular choice terminology m still afraid resonate rather badly mathematicians type theory really thing something true every time assert proposition must give proof witness every time use assumption handling witness actually sympathetic idea see formalization certain good practice mathematics one referred isomorphic B example previous post surely fully understand entails taken extreme even equality made proof-relevant words _everything say_ call baggage attached need hint remind us fact always true Right matter remembering baggage present also specifying baggage actually issue deeper choice one word another seems English grammar simply insufficient proof-relevant mathematics would need invent new part speech adjective like roughly speaking general type proposition whose usage automatically entails specifying witness whatever describes may another hurdle important get especially since classical homotopy theory another stricter notion equality true find attractive HoTT language homotopy theory allow talk solely homotopy invariant ways really knew would gladly wave classical strict notion equality goodbye example would like ready use formalization general homotopy colimits HoTT moment know deal homotopy colimits specific models heavily rely traditional notion equality would even say main reason makes cling strict equality Posted Karol Szumi o January 11 2013 1 11 PM Permalink Reply Re Set Theory Type Theory optimistic take certainly since aren yet point univalent foundations offer many concrete advantages mathematicians believe get point sometime century pragmatism gradually take Probably large number people never accept univalent foundations eventually younger generations grow ideas revolution complete - intrigued idea inventing new part speech haven really found English grammar inadequate proof-relevant mathematics far though generally use propositional language e g aa equals bb care naming witness even though always implicitly present want name say something like pp equality aa bb Jesse suggestion pp identification aa bb nice could perhaps shortened pp identifies aa bb generally one say things like pp proof PP pp proves PP Posted Mike Shulman January 11 2013 7 11 PM Permalink Reply Re Set Theory Type Theory probably find kind analysis unattractively messianic really exactly resemble confident predictions revolutionaries 100 years ago New Socialist Man Something foundations makes people jump immediately personal enthusiasm desire convert entire world new world view level must recognize sounds like since ve joked revolution couple times already Posted Walt January 11 2013 8 18 PM Permalink Reply Re Set Theory Type Theory Sorry guess smiley face wasn sufficiently clear talk revolution entirely joke m actually pluralist revolution probably overthrowing view one foundation ought suffice mathematics Posted Mike Shulman January 11 2013 9 32 PM Permalink Reply Re Set Theory Type Theory whole first paragraph joke took smiley face applying final revolution complete need smiley face scoping operator remove kind ambiguity would called pluralist read Andrej blog post m sure mainly puts emphasis places find odd n different notions reals n different concepts conflict possible conflict illusion phrase different mathematical worlds put conflict center stage like decided call every ring integers said things like imagine world integer x 2 x 1 Posted Walt January 11 2013 10 36 PM Permalink Reply Re Set Theory Type Theory rest paragraph mostly serious shouldn scare description new abstract ideas percolate mathematics first new idea doesn offer much except maybe new way looking old things gradually people start see real benefits Regarding pluralism doesn sound like quite understood Andrej saying reals one definition reals behaves differently depending foundational system Actually course one definition reals also behavior definition equivalence class Cauchy sequences rationals become two different concepts behaves differently depending whether assume law excluded middle axiom countable choice Thinking foundational systems analogous rings good analogy case reals would replaced something definable relative ring like ideals Ideals behave differently different rings depending properties ring concept ideal still Posted Mike Shulman January 12 2013 6 27 Permalink Reply Re Set Theory Type Theory banal version analysis messianic version banal version would think techniques exciting think ll prove useful future messianic version Kruschev pounding shoe table UN shouting bury first one attractive like exciting ideas might prove useful future second one unattractive telling children children children homotopy type theorists whether like make peace try restrict making peace activities death politics keep mathematics m clear Andrej meant said suppose could another semantic disagreement unitary concept different examples would say rather ring certain properties thing ring maximize heighten semantic confusion would call pluralist yet think roughly one foundation mathematics foundation list formal systems agree consistent agree list consistent systems agree foundations may agree notation hey notation ring mean noncommutative associative ring unity start paper assume rings commutative assume rings 1 notation arguments foundations prove upon careful analysis arguments great unsung discovery logic metamathematics 20th century Brouwerian reals reals nilpotents sit comfortably inside big shared universe Posted Walt January 12 2013 9 08 Permalink Reply Re Set Theory Type Theory banal version analysis messianic version Well d go banal interpretation Going messianic interpretation invoking images Khrushchev banging shoe UN firing squads seems pretty silly close manifesting Godwin Law side note see also Time tell whether HoTT flash pan recognized scoring notable successes really see cause alarm Posted Todd Trimble January 12 2013 3 52 PM Permalink Reply Re Set Theory Type Theory alarm opinion homotopy type theory univalent foundations know much knew might think totally awesome m reading thread see find without going trouble actual work m actually little bit persuaded univalence Mike earlier arguments though issue raised mean equality seems little bit sticky first person ever invoke Godwin Law Internet Adolf Hitler True fact Posted Walt January 12 2013 6 07 PM Permalink Reply Re Set Theory Type Theory smiley scope suppose always invent something worry misinterpreting someone else says always heighten confusion using words differently everyone else smiley scope - Posted Mike Shulman January 13 2013 4 32 Permalink Reply Re Set Theory Type Theory m apologize Posted Walt January 13 2013 6 50 Permalink Reply Re Set Theory Type Theory Actually want apologize general Mike m probably falling trap reading comments context sum total foundational arguments ve read years Since aren actually responsible sum total foundational arguments unless really astounding number pseudonyms fair Posted Walt January 13 2013 8 49 Permalink Reply Re Set Theory Type Theory Thank m probably blameless either something subject seems automatically make flashpoint Posted Mike Shulman January 13 2013 5 32 PM Permalink Reply Re Set Theory Type Theory true take solemn vow discuss foundations Loglan something like Posted Walt January 13 2013 5 51 PM Permalink Reply Re Set Theory Type Theory Dear Walt way understand relativism pluarlism Paul Taylor claimed want make distinction like Mike describes Regarding reals vs reals given world mathematics isomorphism single object reals deserve called reals subscribe opinion never ever able use unless admit one mathematical world re banging shoe already actually two aspects realism pluralism mathematics relevant first one purely mathematical shall say meta-mathematical see different ways setting mathematical foundation classical vs intuitionistic proof-relevant vs proof-irrelevant set-theoretic vs type-theoretic etc see serve useful purposes one sociological people different ideas mathematics foundation set analyzed philosophised also useful Would G del done things Brouwerian intuitionist Would Martin-L f formulated type theory classical Platonist Would people invent proof assistants took Brouwer position mathematics must formalized two kinds relativism entangled various ways Keep mind two extreme points purely logical mathematical idea many foundations sociological historical idea mathematical activity humans uniform one might think magic learning able switch mind one another kind mathematics mean technical proficiency also mathematical intuition allows mathematician feel things less personal level mathematicians stuck single world mathematics benefit plurality worlds number ways like comparing experiences opinions man traveled around world comparison someone spent entire life town Midwest Let also explain take pluralism relativism two different things First observe even subscribe absolutist view say hard-core formalist type-theorist still able account worlds building models inside world pluralist stop say oh yeah many different ways math cannot really say one true one thought might perhaps grand unifying theory different worlds mathematics different worlds analyzed terms relate etc denial possibility relativism point view mathematics whole necessarily dependent world mathematics expressed cannot climb worlds get absolute view virtue using mathematical method make commitments filter view mathematical worlds view particular one like physics observer somewhere spacetime makes view observers relative One possible reaction might defatist Andrej Bauer saying mathematics never achieve harmony says necessarily mess matter opinion Another Hey need theory Wait says theory Hmm nice challenge logicians Posted Andrej Bauer January 13 2013 8 30 Permalink Reply Re Set Theory Type Theory Interesting m sure subscribe pluralism would depend understanding concepts like mathematical world little bit better m little fuzzy necessary concept guess forced say d say mathematical concept set symbols logical language set theorems produced logical language point view reals ZFC unique absolute object reals list compare interpretability finer relation like interpretable preserving algebraic structure whatever natural describe set theory type theory mathematical world big mathematical object good producing little mathematical objects like different notions reals seem mean something stronger Posted Walt January 13 2013 4 54 PM Permalink Reply Re Set Theory Type Theory d say mathematical concept set symbols logical language set theorems produced logical language realize said word set course notion dependent foundation mathematics choose - metatheory includes axiom like ZFC inconsistent course G del consistent ZFC set theorems prove ZFC going different otherwise Posted Mike Shulman January 13 2013 5 30 PM Permalink Reply Re Set Theory Type Theory realize said word set course notion dependent foundation mathematics choose - Isn famous argument W Quine fact applies system higher order logic fact went far argue logical systems lack properties soundness completeness qualify logic argument preferring first-order foundations mathematics skeptical higher-order systems think may Posted John Smith January 13 2013 8 04 PM Permalink Reply Re Set Theory Type Theory automatically translate everything set language like boast see translation Keats First Looking Chapman Homer Venn diagrams exquisite meant finite set symbols set formulas meant recursively enumerable list theorems computer program would generate logical rules Posted Walt January 13 2013 8 55 PM Permalink Reply Re Set Theory Type Theory Dear Walt translating everything set language assuming mean something like ZFC deprives beauty world reals embed natural numbers world cover reals intervals total length exceeding 0 42 world every set one complete separable metric world real functions differentiable habit worth immense beauty richness worlds Posted Andrej Bauer January 13 2013 10 24 PM Permalink Reply Re Set Theory Type Theory course depending whether ZFC consistent statement 0 10 1 might might appear r e list theorems ZFC generated computer Posted Mike Shulman January 14 2013 4 19 Permalink Reply Re Set Theory Type Theory matter Nothing proposal requires stand whether ZFC consistent mean X theorem Y entirely constructive sense actually produce proof axioms Posted Walt January 14 2013 11 11 Permalink Reply Re Set Theory Type Theory Well said previous comment r e list theorems assumed meant r e usual sense requires mathematical abstraction computer theorems list symbols atoms observable universe much hope physical computer generating whole list re realm mathematical abstraction list get depends assumptions make list might contain 0 10 1 depending world mathematics choose discuss abstraction Posted Mike Shulman January 14 2013 4 16 PM Permalink Reply Re Set Theory Type Theory whatever would least controversial choice Peano Arithmetic didn expect argument direction actually Ultrafinitists reject notion really large integers meaningful think mathematicians believe objective truth matter whether Ackermann unimaginably huge number unimaginable huge number 107 prime factors objective answer independent choice foundations even know formal system allow us answer question reasonable amount time Posted Walt January 14 2013 5 31 PM Permalink Reply Re Set Theory Type Theory meta-metatheory wish discuss question formulas asserted Peano Arithmetic theorems ZFC - ZFC inconsistent large integer codes proof 0 10 1 ZFC axioms PA sufficient verify fact ZFC consistent integer exists true many mathematicians seem ontological committment existence true natural numbers Post-G del ve never able figure even believe true natural numbers think fact retreat least controversial choice means absolute meaning something like theorems ZFC might choose convention particular meaning assign think part Andrej point trying enforce choice close potential worlds mathematics Posted Mike Shulman January 14 2013 6 06 PM Permalink Reply Re Set Theory Type Theory m really retreating PA thought maybe objection trying slip ZFC metatheory didn realize idea theorem formal system doesn absolute meaning since would said precisely formal reasoning gives us PA vdash 1 1 2 PA vdash x y y x etc know things produce proof witnesses metatheory needed way re mercy metatheory want prove something isn theorem formal system necessity statement original system original system plus system embedding say ZFC vdash 0 1 theorem PA way unconditionally prove 0 10 1 theorem PA Posted Walt January 14 2013 11 28 PM Permalink Reply Re Set Theory Type Theory know things produce proof witnesses metatheory needed Agreed particular theorems particular explicit proofs give absolute meaning theorem formal system way re mercy metatheory want prove something isn theorem formal system Well might also want prove something theorem without exhibiting explicit proof witness claim way talk collection theorems formal system without metatheory metatheory-independent set explicit natural numbers - Posted Mike Shulman January 15 2013 7 19 Permalink Reply Re Set Theory Type Theory agree think Language hard Posted Walt January 15 2013 12 23 PM Permalink Reply Re Set Theory Type Theory Great sounded like saying wanted view concept like reals ZFC unique absolute object determined collection theorems provable reals ZFC saying collection determined fix metatheory hence unique absolute object regard reals ZFC Posted Mike Shulman January 15 2013 7 11 PM Permalink Reply Re Set Theory Type Theory language hard really would call theorems formal system unique absolute object explicit function Proof X Y tells definitely whether X proof Y sounds like unique absolute object would mean exists function Theorem Y tells whether something theorem general much ask Posted Walt January 15 2013 9 47 PM Permalink Reply Re Set Theory Type Theory m saying cases meaningful notion unique absolute object single particular explicit theorem formal system considered start talking theorems sunk think exactly said seems implies unique absolute object characterize reals ZFC theorems true thought proposing However feel like argument starting repeat perhaps pity bystanders desist - Posted Mike Shulman January 15 2013 10 10 PM Permalink Reply Re Set Theory Type Theory agree mathematical points comes mean unique absolute object disagree course reasons think think reach point explanations position objections position coincide pretty much far go conception unique absolute object includes recursively enumerable sets Every objection would make position would concede would different formulations recursively enumerable sets recursive agree recursively enumerable sets recursive question correct meaning unique absolute object imagine way make progress wasn clear objection precisely point point view discussion worth Posted Walt January 16 2013 9 53 Permalink Reply Re Set Theory Type Theory Well m still confused sure doesn look though objections r e versus recursive perhaps using phrase recursively enumerable set mean would call program generates list elements set Usually set extensional object determined elements fact program interpreted different metatheories generates different lists means different r e sets different metatheories re thinking program rather output produces agree absolute object Posted Mike Shulman January 16 2013 5 57 PM Permalink Reply Re Set Theory Type Theory m still confusing - would say different metatheories think prove different theorems actual list theorems ones get translating proofs translation function Trans translates theorems proofs proof predicate original theory Proof1 one metatheory Proof2 recursively enumerable list theorems ones satisfy Proof2 Trans X Trans Y Trans X X original list wrote program generate X automatically program generate Trans X won set Trans might destroy distinctions existed original theory won bigger Posted Walt January 16 2013 6 49 PM Permalink Reply Re Set Theory Type Theory might case Proof2 X Trans Y Proof2 X' Trans Y X X' form Trans X Trans X XX might YY theorem second system suppose translation second system theorem second system theorem first system Posted Mike Shulman January 16 2013 7 07 PM Permalink Reply Re Set Theory Type Theory Right second system thinks something theorem isn theorems really theorems first system ones proofs first system translate second system second system prove superset theorems first system level recursively enumerable sets theorems first system translate recursively enumerable set language second system Posted Walt January 17 2013 10 13 PM Permalink Reply Re Set Theory Type Theory please precise first system second system Posted Mike Shulman January 21 2013 6 29 PM Permalink Reply Re Set Theory Type Theory Sorry missed m quite sure re asking Posted Walt January 27 2013 11 18 PM Permalink Reply Re Set Theory Type Theory couple comments ago started talking translating one system another Could specify exactly two systems relevant example know interpret One reason m confused first comment called two systems original theory metatheory usually think translating something object theory something metatheory things say metatheory statements object theory statements might also made object theory Posted Mike Shulman January 28 2013 12 40 Permalink Reply Re Set Theory Type Theory terms original topic discussion isn exactly ZFC directly prove 0 10 neq 1 theorem PA write model PA prove model 0 10 neq 1 translation interpretation symbols PA sets ZFC Posted Walt January 30 2013 9 17 PM Permalink Reply Re Set Theory Type Theory Thanks Andrej know whether m pluralist relativist used think first-order logic grand unifying theory learned type theory realized didn fit formal systems Posted Mike Shulman January 13 2013 5 26 PM Permalink Reply Re Set Theory Type Theory Mike providing us exciting blend considerations favour type theory satisfying existing requirements ought seek foundational system yet ii taking us somewhere new learn think differently allows story told previous systems material structural successful pointing us next chapter story haven followed things stretches beyond mere mathematics Urs great things type theory physics see e g Posted David Corfield January 9 2013 11 46 Permalink Reply Re Set Theory Type Theory nice way putting could see someone else concluding observations m confused inconsistent - fact really m still figuring best way present type theory mathematicians Perhaps always still figuring Maybe one best way either present lots different ways hope everyone find something resonates many aspects type theory ve moderately surprised discover recently sometimes even type theorists agree basic questions plus side means chance person find something makes sense open-mindend enough stick find minus side seems anything say also likely offputting someone - Posted Mike Shulman January 10 2013 4 47 Permalink Reply Re Set Theory Type Theory Mike fantastic pitched perfectly Thank Posted Emily Riehl January 9 2013 10 07 PM Permalink Reply Re Set Theory Type Theory Since talking presenting type theory general mathematical audience request spirit underlying logic type theory know really underlying built equal footing everything else default intuitionistic However mathematics done classically good way making logic type theory classical want discuss merits mathematics constructively m merely pointing type theory aspires capture everyday practice mathematicians make easy natural work classically know one sentence answers question d love hear discussion possible approaches well fit core type theory Posted Karol Szumi o January 11 2013 1 24 PM Permalink Reply Re Set Theory Type Theory think know one approach Axiom lem forall P hProp P P doesn fit core type theory sense destroys computational aspect since proofs get stuck axiom try execute course rules lots interesting categorical models care works fine think good number people using Coq practice happy axiom restricted hprops otherwise contradicts univalence thus seems especially odd proof-relevant point view Posted Mike Shulman January 11 2013 7 20 PM Permalink Reply Re Set Theory Type Theory one possibilities mind way want AC assume axiom saying every surjection h-sets section second approach thinking lambda mu-calculus reference know Section 3 2 rensen Urzyczyn Lectures Curry-Howard Isomorphism remember well works basically adds new type terms mu-abstraction handle arguments contradiction like idea treats law excluded middle equal footing rest type theory first approach throws additional assumption stands something odd course question whether reasonable interpretation general types HoTT Posted Karol Szumi o January 11 2013 8 13 PM Permalink Reply Re Set Theory Type Theory Another option work algebras double-negation monad BTW nice characterization HoTT Certainly anything form bot decidable types algebras Anything else Regarding lambda mu-calculus variations think appealing idea especially could restore symmetry fibrations cofibrations perhaps make higher coinductive types perspicuous far know non-trivial models lop-sided one way like models Call-by-Push-Value also relevant Posted Ulrik Buchholtz January 11 2013 10 07 PM Permalink Reply Re Set Theory Type Theory Mike gives one approach adding classical axioms approaches well Another approach add control operators term language type theory allow one prove classical results lot work area still studied today non-exhastive list classical type theories First started Griffen realization Felleisen mathcal C -operator could typed law double negation However subject reduction failed Much work followed fix Later Parigot invented lambda mu-calculus extension simply typed lambda-calculus adds mu-operator control operator straightforward prove law excluded middle proof see Rehof Sorensen define lambda Delta-calculus adds control operator whose type law double negation language enjoys subject reduction See Using lambda Delta-calculus Sorensen et al give classical lambda-cube know classical dependent type theory control Later Curien Herbelin define really cool type theory called bar lambda mu tilde mu-calculus makes dualities classical sequent calculus LK explicit use dual implication called subtraction Subtraction due Crolard work See Wadler didn care subtraction defined calls dual calculus implication defined See Curien Herbelin Wadler type theories used prove call-by-name dual call-by-value lot work things like delimited control list everything listed highlights body research lot work still needing done One main problem control operators canonicity hold part focus lot ongoing work addition notice work simply typed calculi Extensions dependent types still open problem really interested knowing control operators fit HOTT hope helps Harley Posted Harley Eades January 12 2013 1 38 Permalink Reply Re Set Theory Type Theory Thanks suggestions realized wrote last comment also know another way also involving double negation type theory idempotent monadic modality gives rise corresponding logic reflecting statements modal types necessary instance modality called diamond AA BB modal types e canonical maps AA diamond B BB diamond B equivalences AA diamond-and BB means BA times B since automatically modal AA diamond-or BB means B diamond B diamond identity types modal get propositions-as-types logic diamond hprop-reflection 1 -1 -truncation get hprop-logic One may argue best solution problem language types propositions work parametrically modalities much possible way combinators Haskell tend parametric monad one modality course double negation diamond equiv neg neg equiv emptyset emptyset Computationally like using continuation-passing style Note neg neg always hprop double negation logic coarser hprop logic Using type theory double-negation-logic classical certain sense instance LEM holds AA AA neg neg-or neg However exactly would get assuming LEM axiom hprops instance doesn satisfy law unique choice every Aa neg neg-exists unique b Bb B P b P b doesn follow neg neg-exists function f Bf B P f P f Aa identity modality hprop modality satisfy principle extensional impredicative world fix restrict consideration types neg neg-sheaves e right orthogonal neg neg-dense inclusions neg neg-sheafification another modality indeed lex modality subtopos working types modality classical behavior meant double-negation monad Ulrik However know whether homotopical predicative version neg neg-sheaves came recently another discussion calculi sound interesting learn AC yes assert surjections hsets sections surjection interpreted hprop sense really clear whether consistent useful extension AC says anything non-hsets Posted Mike Shulman January 12 2013 6 36 Permalink Reply Re Set Theory Type Theory meant double-negation monad Ulrik Actually meant double-negation endofunctor wrote monad monad-algebras rarer guess bring great points regarding predicativity double negation work internally continuation-passing style defined dn X Type X X mathrm dn Pi_ X mathrm Type X X lands next universe Posted Ulrik Buchholtz January 12 2013 8 06 Permalink Reply Re Set Theory Type Theory think excluded middle definable continuations polymorphic answer type since one level define function f dn f d dn dA begin array lcl f dn f lambda d dn d lambda end array Indeed System F show one half isomorphism AA X X X forall X X X ve always thought isomorphism looks morally like instance Yoneda lemma Nat Hom Id ANat Hom - Id simeq predicatively jump universe level less d expect think CPS fixed answer type 0 0 diamond triangleq 0 0 looks like double-negation doesn kick universe level either Posted Neel Krishnaswami January 12 2013 12 10 PM Permalink Reply Re Set Theory Type Theory Yes true thinking want instantiate particular answer type internally decide particular one advance need quantifier somewhere remember actually seen solution indexed monads see http mattam org repos coq misc shiftreset GenuineShiftReset html references therein Posted Ulrik Buchholtz January 12 2013 8 06 PM Permalink Reply Re Set Theory Type Theory confused category theorist calls indexed monads e monads 2-category indexed categories Posted Mike Shulman January 13 2013 5 27 Permalink Reply Re Set Theory Type Theory definitely almost instance Yoneda lemma thought needed add naturality condition order get isomorphism Steve Awodey Andrej Bauer working Andrej gave talk IAS last year big deal incorporate naturality coherence naturality types higher h-level fact even formulate isomorphism theory like system F without identity types Posted Mike Shulman January 13 2013 5 23 Permalink Reply Re Set Theory Type Theory homotopy type theorist curious stuff ve seen couple talks Voevodsky gave IAS noticed read computer proof assistant like Coq often used verify proofs seen statements HoTT resemble formal statements first-order logic seemingly written machine processing computer necessary mathematics HoTT possible write statements HoTT natural sentences reason hand mathematics today Although ve read several pages type theory still bit confused necessary computer verification would proving theorems fairly long proofs Posted Jason Polak January 11 2013 7 48 PM Permalink Reply Re Set Theory Type Theory interesting important question far mathematics HoTT done computer-assisted way However one ongoing projects IAS year initiated Peter Aczel ve mentioned develop style styles informal mathematics HoTT well idea would way writing mathematics stands relation computer-formalized HoTT everyday written mathematics nowadays stands say ZFC think ve made good progress ll hopefully ll good stuff share soon Posted Mike Shulman January 12 2013 6 40 Permalink Reply Re Set Theory Type Theory enjoyed description type theory made feel might understand subject day wanted ask question hope off-topic main interest foundational studies concerned inconsistencies arising mathematics would like understand applications computer science specifically design systems computer algebra combinatorics 1 read various postings computer science automated theorem proving lambda calculus None unless missed something covers object oriented languages logic object oriented languages 2 sage-combinat following Magma Categories Parents Elements according documentation implementation concrete categories suggests naive mind could useful foundation expect list axioms would longer alternatives already discussed see per se drawback seems causes headaches implementing coercions Posted Bruce Westbury January 14 2013 7 07 PM Permalink Reply Re Set Theory Type Theory main interest foundational studies concerned inconsistencies arising mathematics think true practically everyone think one two people ve ever heard might seriously believe may inconsistencies mathematics logic object oriented languages basic level objects Sigma-types syntactic sugar get fancier stuff gets complicated may interested blog post Bob Harper Part IX book Practical Foundations Programming Languages could useful foundation mean foundation concrete categories Concrete categories easily definable pretty much foundation m sure re envisioning Posted Mike Shulman January 14 2013 8 51 PM Permalink Reply Re Set Theory Type Theory agree potential inconsistencies issue clarify issues understand two reasons getting involved discussion One pedagogical aim give foundations presented students laudable think understand criteria judging various proposals reason try capture mathematicians much less clear assess different proposals find intriguing Let concentrate issue trying encapsulate mathematicians traditional approach look research literature top approach leads work automated theorem proving automated proof verification alternative look contemporary computer systems incorporate significant parts mathematical knowledge bottom approach feeling current computer algebra systems struggling scale vision concrete categories comes position ignorance accept reasonable foundations allow implementation concrete categories added easy subjective mind asked write definition concrete category would use set several times several meanings think would regard set objects material set hom-set structural set would lead foundation would incorporate aspects would unsatisfactory pedagogical perspective would unnecessarily complicated However may closer working mathematicians currently large scale software Posted Bruce Westbury January 15 2013 12 20 Permalink Reply Re Set Theory Type Theory One main points post type theory natural way incorporate material-sets structural-sets single foundation find unnecessarily complicated although course also subjective quite simple define concrete categories type theory way objects morphisms carry appropriate internal structure concreteness instance category groups type objects given Grp 0 G Type e G m G G GGroupAxioms G e m Grp_0 coloneqq sum_ G Type sum_ e G sum_ m G times G G GroupAxioms G e m types arrows given Hom Grp G e m G e m G G e e x y G m x y m x y Hom_ Grp G e m dots G' e' m' dots coloneqq sum_ phi G G' Big phi e e' times prod_ x y G phi m x y m' phi x phi y Big Thus Grp 0Grp_0 material sense elements internal structure tuples consisting type group structure type Hom GrpHom_Grp material way elements actual functions together witnesses homomorphism property say would make hom-sets structural morphisms concrete categories generally concrete objects hand structural sense belonging typing judgment rather proposition really know much modern computer algebra systems implemented know something computer proof assistants seem least important mathematicians viewpoint many successful indeed built type theories Posted Mike Shulman January 15 2013 7 51 Permalink Reply Re Set Theory Type Theory Tom post interests personally mostly pedagogical perspective Eugene noted nice know okay introduce functions primitives take-away message find similarly okay tell students statements like x fx f x Ax cap even make sense think xx real number ff function subseteq mathbb R m thinking students say first course linear algebra may need reminded add scalar vector Sometimes savvier student class introduced idea everything set objects basis therefore x fx f x Ax cap perfectly meaningful even re irrelevant present class rather say Yes true better ignore fact respond informatively may may true depending foundations since want answers linear algebra questions depend matters better take statements meaningless Posted Mark Meckes January 14 2013 7 58 PM Permalink Reply Re Set Theory Type Theory nice point good counterargument ZFC-ist claim yes dumb things ZFC technically lets one would silly enough Maybe practicing mathematician silly students routinely make type errors useful foundational system shows Posted Mike Shulman January 14 2013 8 58 PM Permalink Reply Re Set Theory Type Theory two threads persuaded something wrong everything set idea gets taught way actually damaging idea axiomatic set theory write system primitives possible believe consistent represent mathematics function primitive ZFC equality isn even primitive definable terms epsilon people come away notion take functions primitives bad take kinds things primitives want ZFC-ist objection idea expressions naturally types even idea type theory objection idea must use types commit tightly-controlled set formulas Set theory represent typing information unary predicates used conjunction ordinary logical connectives example sentence x scalar x vector seems perfectly intelligible x either two-element set function Z R Work type theory shown need ability say prove bulk theorems mathematics intuitively would find odd couldn Posted Walt January 15 2013 12 09 Permalink Reply Re Set Theory Type Theory Based say analogy set theory type theory assembly language high-level language seems close Assembly language small number primitives easy implement debug processor sufficient represent programs doesn prevent using high-level typed language writing assembly free things like multiply together two memory addresses set theory everything set assembly language everything bit sequence think analogy also useful understanding advantages type theory Yes assembly language carry around typing information hand remember register AX currently memory address register BX ASCII code much better use programming language typechecking type errors get caught automatically compile time give ability say things never rarely want say practice anyway exchange prevented mistakenly saying lot things often say accident intend hand analogy breaks inspection argued main post set theory actually contains fewer primitives type theory Membership primitive set theory also wedge vee forall exists etc coming framework first-order logic set theory built Type theory uses logical primitives extended operations types rather merely operations propositions even goal reduce mathematics fewest primitives possible type theory good set theory Posted Mike Shulman January 15 2013 7 37 Permalink Reply Re Set Theory Type Theory Material set theory classical first-order logic requires four primitives bot Rightarrow forall Everything else encoded using Posted Toby Bartels January 15 2013 8 25 Permalink Reply Re Set Theory Type Theory Three actually merge bot Rightarrow Sheffer stroke P QP uparrow Q better known days NAND course barbarian would regard mutilation logic improvement Posted Neel Krishnaswami January 15 2013 2 00 PM Permalink Reply Re Set Theory Type Theory always bothers little bit read Boolean algebras defined single binary operation NAND since would seem allow Boolean algebra empty book Boolean algebra always constants bot top possibly equal one point past one never considered empty domains least considered ungentlemanly attitude definitely seems belong past Posted Todd Trimble January 15 2013 3 04 PM Permalink Reply Re Set Theory Type Theory think directly result category theory signature symbols empty set initial object reason rejecting empty carrier bunch tautologies first-order classical logic implicitly assume non-empty carrier example xA xA forall x implies exists x tautology non-empty sets think something similar holds intuitionistic logic know less Posted Walt January 15 2013 3 36 PM Permalink Reply Re Set Theory Type Theory Categorical logic something recognition correct handling empty domains logic intuitionistic classical generally speaking recognition acceptance empty structures mathematics something much broadly cultural statement referred nothing particularly category theory assertion made variety Boolean algebras find literature wrong according universally accepted definition model theory constants theory empty set carries unique model structure Posted Todd Trimble January 15 2013 4 17 PM Permalink Reply Re Set Theory Type Theory general agree Todd ve never understood would take xA xA forall x Rightarrow exists x tautology non-empty sets reason rejecting empty sets rather simply realizing xA xA forall x Rightarrow exists x tautology However case question material set theory classical FOL two operations allow us define closed formula like x x x forall x x x define formula bot using NAND usual way agree Neel though defining bot x x x x x x forall x x x uparrow forall x x x mutilation logic Posted Mike Shulman January 15 2013 6 58 PM Permalink Reply Re Set Theory Type Theory issue even pronounced urgent extrapolate reasoning inside topos example classical tautologies fail domain XX well-supported meaning map X 1X 1 regular epi happen time example sheaves space doesn refute exact words comment ll freely admit x x x top coloneqq forall x x x hadn occurred reason ashamed admit - Posted Todd Trimble January 15 2013 7 19 PM Permalink Reply Re Set Theory Type Theory Tautology function logical system x x x exists x x x axiom system axiom system like law excluded middle agree minimal logic shouldn impose real reason imposing classical FOL rules converting formula prenex normal form valid empty domains Since analyzing formulas terms alternating qualifiers central technique classical predicate logic people throw empty domain rather handle special case know argument intuitionistic logic seems like wouldn cost anything Back high school student therefore prone make impulsive decisions tried read Principia Mathematica local library second edition contains section wonderful Sheffer invention Sheffer stroke everything formulated terms long time looked formal logic Posted Walt January 15 2013 8 45 PM Permalink Reply Re Set Theory Type Theory real reason imposing classical FOL rules converting formula prenex normal form valid empty domains Okay fair point Posted Mike Shulman January 15 2013 9 12 PM Permalink Reply Re Set Theory Type Theory Yes mentioned post type theory presented three primitives universes inductive types dependent products competing fewest primitives anyone get two - really point main thing meant point thinking everything set successful reduction single primitive bit illusion whole structure FOL hiding background whatever primitives choose present terms concede pedagogical purposes may make students happy comfortable told everything set since speaking first-order logic whole lives without realizing won see substantial structure underpinning everything set However think advantages teaching students think typed way among fact simultaneously teaching write computer programs prove theorems prove theorems programs write programs implement theorems outweigh advantages giving somewhat-illusory warm fuzzy feeling - Posted Mike Shulman January 15 2013 7 06 PM Permalink Reply Re Set Theory Type Theory article latest issue AMS Notices tangentially relevant Raymond Boute Calculate Proofs Bridging Cultural Divide pdf link article worth reading emphasis rigorous logical reasoning aided symbolic manipulation similar style inteactive proof assistants naturally support Unfortunately Boute advocates na ve set-theoretical formalism includes may considered severe drawbacks instance notation uses function abstraction operator v p e combines ordinary lambda abstraction subsetting domain set satisfies predicate p v authors define curly brackets image function v p constant function restricted subset satisfying p v order recover sigma-like operator v p point-free definitions perhaps even confusing see foundational issues fairly severe drawbacks otherwise good article Since Boute proposal intended improve mathematical education practical sense including extent high school math m thinking someone expertise conceptual foundations write Notices pointing confusing issues article perhaps exploring kind simplified type theory potential solution concerns Posted John Smith January 15 2013 5 20 PM Permalink Reply Re Set Theory Type Theory Mike brilliant post Many thanks elusive feeling oh yeah knew got totally bored confused discussion summarizing main questions answers new post Posted Valeria de Paiva January 25 2013 3 00 PM Permalink Reply Re Set Theory Type Theory m sure think discussions really worth trying summarize hope helpful people involved weren interesting didn make sense m little doubtful summary would different might worth reading comment guess summarized ideas d come foregoing discussion Posted Mike Shulman January 26 2013 7 48 PM Permalink Reply Read post Category Theory Homotopy Type Theory Weblog n-Category Caf Excerpt category theory homotopy type theory allows us satisfy principle equivalence automatically Tracked March 5 2013 4 20 Post New Comment Access Keys 0Accessibility Statement 1Main Page 2Skip Content 3List Posts 4Search pPrevious individual monthly archive page nNext individual monthly archive page"),
('Faculty size and growth in the top 20 Computer Science departments.', 'Bryan Ford Faculty size growth top 20 Computer Science departments Yesterday Yale Daily News ran article CS department faculty shortage generated discussion among CS colleagues Yale CS faculty shortage really news example another YDN article year ago made basically point probably wasn first Setting aside Yale particular however interesting notice broader trends CS department growth couple charts recently put together first estimates number tenure-track faculty top 20 CS departments ordered accoring US News current rankings Major caveat faculty size data completely unofficial approximate based purely number apparent ladder faculty members listed respective CS department web sites Obvious potential sources error include example faculty positions split across departments clearly labeled adjunct courtesy appointments combined CS-and-EE departments always obvious faculty CS EE represent best guesses based publicly available information reasonably accurate best knowledge CRA folks put together Taulbee Survey probably better official data data orange line indicates across left half chart indicates CS departments top 10 appear average 67 ladder faculty Carnegie Mellon MIT Georgia Tech far largest Princeton smallest top-10 around 35 faculty yellow line right side indicates departments next 10 category appear average around 39 ladder faculty None likely much surprise anyone familiar CS academia interesting look relative faculty growth past decade broken way baseline numbers derived corresponding CS department home pages captured Internet Archive around September 2004 average growth CS departments currently top 10 relatively modest 8 since 2004 sense top-10 departments hiring aggressively more-or-less continuously past decade mainly filling vacancies regularly created faculty get sucked away industry positions startups departments haven needed grow much hey re already top heap picture next 10 category looks interestingly different faculty size growth past decade appears around 21 average Unless m mistaken USC particular nearly doubled size period majority departments category grew least 20 Might say departments bucking top 10 worth warranties yadda yadda Comments corrections inaccuracies welcome Related Posts 16 Nov 2014 Delegative Democracy Revisited 23 Nov 2004 Individual Representation 27 Oct 2004 Cache Directory Tagging github com bford twitter com brynosaurus'),
('Coredemia - Discover and discuss interesting research papers', "Coredemia Home Submit Paper Login Discover research papers interest Join community start discussing asking questions sharing papers Automating Formal Proofs Reactive Systems 5 0 Length 11 Pages Published 2014 Implementing systems proof assistants like Coq proving correctness full formal detail consistently demonstrated promise making extremely strong guarantees critical software ranging compilers operating systems databases web browsers Unfortunately verications demand heroic manual proof effort even single system approach widely adopted demonstrate technique eliminate manual proof burden verifying many properties within entire class applications case reactive systems expending effort comparable manual verication single system crucial insight Submitted BmoreDaniel Jul 21 2014 Anatomy Large-Scale Hypertextual Web Search Engine 3 1 Length 10 Pages Published 1998 paper present Google prototype large-scale search engine makes heavy use structure present hypertext Google designed crawl index Web efficiently produce much satisfying search results existing systems prototype full text hyperlink database least 24 million pages available http google stanford edu engineer search engine challenging task Search engines index tens hundreds millions web pages involving comparable number distinct terms answer tens millions queries every day Despite importance large-scale search engines web little aca Submitted alixander Jul 14 2014 Computational Complexity Algorithms 2 0 Length 22 Pages Published 1965 celebrated paper 1 M Turing investigated computability sequences functions mechanical procedures showed set sequences partitioned computable noncomputable sequences One finds however computable sequences easy compute whereas computable sequences seem inherent complexity makes difficult compute paper investigate scheme classifying sequences according hard compute scheme puts rich structure computable sequences variety theorems established Furthermore scheme generalized classify numbers fu Submitted alixander Jul 14 2014 Mathematical Theory Communications 2 0 Length 55 Pages Published 1948 recent development various methods modulation PCM PPM exchange bandwidth signal-to-noise ratio intensified interest general theory communication basis theory contained important papers Nyquist1 Hartley2 subject present paper extend theory include number new factors particular effect noise channel savings possible due statistical structure original message due nature final destination information Submitted alixander Jul 14 2014 Introduction Quantum Computing 1 0 Length 33 Pages Published 2007 Quantum Computing new exciting field intersection mathematics computer science physics concerns utilization quantum mechanics improve efficiency computation present gentle introduction ideas quantum computing paper begins motivating central ideas quantum mechanics quantum computation simple toy models move formal presentation small fraction finite dimensional quantum mechanics need basic quantum computation Central notions quantum architecture qubits quantum gates described paper ends presentation one simple Submitted iamaquantumcomputer Jul 22 2014 Reflections Trusting Trust 1 1 Length 3 Pages Published 1984 extent one trust statement program free Trojan horses Perhaps important trust people wrote software Submitted alixander Jul 14 2014 Every Computer Scientist Know Floating-Point Arithmetic 1 0 Length 94 Pages Published 1991 Paper presents tutorial aspects floating-point direct impact designers computer systems Submitted hdd2k Jul 21 2014 Ethereum Secure Decentralised Generalised Transaction Ledger 1 0 Length 25 Pages Published 2014 blockchain paradigm coupled cryptographically-secured transactions demonstrated utility number projects least Bitcoin project seen simple application decentralised singleton compute resource call paradigm transactional singleton machine shared-state Ethereum implements paradigm generalised manner Furthermore provides plurality resources distinct state operating code able interact message-passing framework others discuss design implementation issues opportunities provides future hurdles envisage Submitted alixander Jul 14 2014 Fast Minimal Memory Consistent Hash Algorithm 0 1 Length 12 Pages Published 2014 present jump consistent hash fast minimal memory consistent hash algorithm expressed 5 lines code comparison algorithm Karger et al jump consistent hash requires storage faster better job evenly dividing key space among buckets evenly dividing workload number buckets changes main limitation buckets must numbered sequentially makes suitable data storage applications distributed web caching Submitted alixander Mar 16 2015 Even Faster Integer Multiplication 0 0 Length 28 Pages Published 2014 give new proof Frer's bound cost multiplying n-bit integers bit complexity model Unlike Frer method require constructing special coecient rings fast roots unity Moreover prove explicit bound O n logn Klog n K 8 show optimised variant Frer's algorithm achieves K 16 suggesting new algorithm faster Frer's factor 2log n Assuming stan- dard conjectures distribution Mersenne primes give yet another algorithm achieves K 4 Submitted alixander Jul 15 2014 Page 1 2 Copyright 2014 Terms Privacy Login Username Password Forgot password Create Account Username Email Password Confirm Password"),
('If anyone wants to discuss Godel, Escher, Bach, we have a read-through of it going in /r/rational. Join us!', "jump contentmy subredditsannouncementsArtAskRedditaskscienceawwblogbookscreepydataisbeautifulDIYDocumentariesEarthPornexplainlikeimfiveFitnessfoodfunnyFuturologygadgetsgamingGetMotivatedgifshistoryIAmAInternetIsBeautifulJokesLifeProTipslistentothismildlyinterestingmoviesMusicnewsnosleepnottheonionOldSchoolCoolpersonalfinancephilosophyphotoshopbattlespicsscienceShowerthoughtsspacesportstelevisiontifutodayilearnedTwoXChromosomesUpliftingNewsvideosworldnewsWritingPromptsedit subscriptionsfront-all-random gadgets-sports-gaming-pics-worldnews-videos-AskReddit-aww-Music-funny-news-movies-books-history-food-philosophy-television-Jokes-Art-DIY-space-Documentaries-Fitness-askscience-nottheonion-todayilearned-personalfinance-gifs-listentothis-IAmA-TwoXChromosomes-creepy-nosleep-GetMotivated-WritingPrompts-LifeProTips-EarthPorn-explainlikeimfive-Showerthoughts-Futurology-photoshopbattles-mildlyinteresting-dataisbeautiful-tifu-OldSchoolCool-UpliftingNews-InternetIsBeautiful-sciencemore reddit com rationalcommentsrelatedother discussions 2 want join sign create account seconds Englishlimit search r rationaluse following search parameters narrow results subreddit subredditfind submissions subreddit author usernamefind submissions username site example comfind submissions example com url textsearch text urlselftext textsearch text self post contentsself yes self include exclude self postsnsfw yes nsfw include exclude results marked NSFWe g subreddit aww site imgur com dogsee search faq details advanced search author subreddit post submitted 16 Mar 201552 points 90 upvoted shortlink remember mereset passwordloginSubmit new linkSubmit new text postrationalsubscribeunsubscribe2 977 readers 18 users nowA subreddit dedicated discussion works rational rationalist fiction general description genre listing major works found TVTropes page Characteristics Rational Fiction Nothing happens solely 'the plot requires it' characters don't something must plausible reason Factions defined driven conflict beliefs values good evil characters solve problems intelligent application knowledge resources rules fictional world sane consistent Rationalist Fiction well main character uses tries use rationalist scientific methods demystify seemingly mysterious phenomena story shows rationalist techniques applied readers story like puzzle readers reach solution characters using information provided earlier story information encourage practise wise reading occasional reposting can't bump old posts use spoiler tags you're posting something might spoiler B Posting Tags use tags attempt make reddit's search function useful Please add submission fit - don't feel post doesn't fit tag unwelcome posting story RT rational RST rationalist something we'll like you're writing something WIP work progress BST brainstorming something else posts might META subreddit Q questions anything D general discussion stories optional genre tags including HSF hard scifi HF hard fantasy DC deconstruction EDU educational MK munchikinism TH transhumanism FF fanfic etc Related subreddits r hpmor r OfficialHPMOR r qntm r parahumans LessWrong community blog r LessWrongLounge r rokosrooster r VoluntaristLWBookClub r PunchingMorpheus created centipeeda community 5 yearsmessage moderatorsMODERATORSeaturbrainzHomura nothing wrongPeridexisErrantput aside fear courage death lifeabout moderation team discussions r rational X10 points 18 comments RT FF Pok mon Line - Chapter One15 points 42 comments features perfect platform hosting fiction would perfect community website writers look like 18 points 9 comments DC Using Gentle Repose spell merchants transit make trade profitable4 points Artists All-Call take II14 points 30 comments useful precommitments 4 points RST FF Ginny Weasley Methods Rationality Chapter 2 Nerve Issues HPMOR fanfic 12 points 51 comments Munchkining Buffy 2 points 3 comments deal writer's block 11 points 39 comments Q Anything interesting rational ist war-on-Hell story 3 points 10 comments BST WIP Ender's Bae Not-Teaser515253GEB Discussion 1 - Introduction Musico-Logical Offering self rational submitted 2 months ago xamueljonesWorking FAI save us poniesG del Escher Bach Eternal Golden Braid discussion themes questions concerning Introduction Musico-Logical Offering dialogue Three Part Offering post list several main ideas appear introduction well starting questions answer concerning idea Strange Loops first problem discuss Strange Loops self-referential statements come help provided definition strange loop arises moving upwards downwards hierarchical system one finds oneself back one started Examples sentence punctuation sentence number occurrences 0 1 1 11 2 2 3 1 4 1 5 1 6 1 7 1 8 1 9 1 restrict sentences either Think ideas Escher paintings Play around format subreddit comment one false reply reply true parent comment Recursion second problem understand concept recursion One relevant definition recursion already know recursion remember answer Otherwise find someone standing closer Douglas Hofstadter ask recursion recursion differ concept self-reference Paradox third problem discuss concept paradox paradox statement seemingly contradicts might true Note paradox thing contradiction Paradoxes invalid arguments seemingly valid assumptions lead invalid fact contradiction Types paradoxes veridical paradox produces result appears absurd demonstrated true nevertheless Thus paradox 21 year-old man celebrated 5 birthdays resolved birthdate February 29th falsidical paradox establishes result appears false actually false fallacy supposed demonstration various invalid proofs e g 1 2 classic examples generally relying hidden division zero paradox neither class may antinomy reaches self-contradictory result properly applying accepted ways reasoning example sentence absolute truth true sentence absolute truth come paradox discuss difference self-reference recursion paradoxes idea infinity paradoxical Hilbert Hotel good example paradox involving infinity Dialogue questions dialogue found stolen searching online notes GEB Escher print Achilles refer beginning dialogue print look like b M bius strip print Achilles refer c relationship hole flag M bius strip d Zeno sixth patriarch isn Achilles think e story recreated dialogue f ways dialogue self-referential g understand crux paradox Achilles paradox Zeno relates h familiar Dichotomy paradox Tortoise refers significance positioning Tortoise upwind Achilles j anything wrong Zeno's argument Wikia links chapters Introduction Three-Part Invention Coming next March 18th Chapter MU-Puzzle discussion next chapter posted Official Schedule Please comment think posting done different way reading check Lecture Notes pages long works quick comprehensive understanding what's going chapter 55 commentssharecancelall 55 commentssorted besttopnewhotcontroversialoldrandomq 19283123The Vile Offspring 21 points22 points23 points 2 months ago 0 children Inspired yesterday's reading tried make strange loop themed drawing - man imagining general ideas reading inspired one imagines Bach's intention Bach indubitably also relished implication process could go ad infinitum perhaps wrote margin modulation rises may King's Glory Implicit concept Strange Loops concept infinity since else loop way representing endless process finite way parts reminded Middle Ages Catholic philosophers theologians tried come proofs God ways describe God sounds kinda similar trying represent endless process finite way Maybe it's accident even G del tried prove existence God believe certain types artists goal art describe unreachable infinity God Samsara etc section kinda quasi-spiritual vibe Maybe reason Eliezer adores book much thinks it's beautiful book ever written human species subjects book inspire kind feelings closest believers think God I'm sure it's related studies say among mathematicians number people believe God slightly higher disciplines Russell's Whitehead's attempt create artificial multilevel system get rid self-referencing reminds attempts get rid anxiety sounds funny I've huge problems self-reference induced anxiety It's interesting issue cause problems formal systems real people start reference much thinking like thinking walk keep hands posture etc become really really anxious become really awkward lose capability almost anything one several problems put mental asylum last year Slate Star Codex described particular issue self-reference guy named Wegner conducted famous psych experiment asked bunch participants sit room alone try think bear sunglasses course pretty much could think seem gotten feedback loop desire think bear sunglasses - thought bear sunglasses - frustration - stronger desire think - thoughts seems element anxiety disorders Someone goes outside something bad happens Next time go outside feel anxious usual STRONG BARRIER conditioning upon internal experience AWOL reason patient finds experience becoming anxiety negative therefore belief going outside leads bad things justified Eventually anxious possibly becoming anxious stay house time Btw here's Bach's endlessly rising canon permalinksavereportgive goldreply 19283123The Vile Offspring 11 points12 points13 points 2 months ago 4 children link links permalinksavereportgive goldreply QuillwraithQueendom Sol 4 points5 points6 points 2 months ago 3 children Hmm It's uncommon internet link link page links back it's also uncommon connections one way Still given much pages link linked expect webpages part many longer loops Might use metric shortest loop page back comment make thread's autoproximity 1 comment 2 - back permalinksaveparentreportgive goldreply deleted 5 points6 points7 points 2 months ago 0 children Well know Wikipedia page Philosophy loops back clicking first non-italicized non-parenthetical link Kudos thread hype readthrough advertise r math r physics maybe talks sort thing though I've never actually seen come fruition permalinksaveparentreportreply alexanderwalesMetropolitan Man 5 points6 points7 points 2 months ago 0 children It's terribly useful metric given majority pages autoproximity 2 many autoproximity 1 believe every comments page reddit link actually - link post currently says 23 comments proliferation small mundane strange loops internet byproduct they're programmed - there's use page link page created programmatically it's useful page link specific general sometimes page permalink comment context expanded comment chain permalinksaveparentreportgive goldreply paladinneph 0 points1 point2 points 2 months ago 0 children wouldn't call loops consider perfect city cartesian coordinate plane made roads go one end city back loop fair say given intersection part loop imagine links way- road link intersection page real internet page links far four others instead grid it's like web hence name suppose strictest sense is- define loop end linked beginning yes everything linked everything else fact there's game illustrates this- N clicks jesus- start random page try end wikipedia page jesus clicking N links less permalinksaveparentreportgive goldreply lakechfoma 4 points5 points6 points 2 months ago 0 children Ah left copy uni break otherwise would pick join would also make 4th time I've tried read GEB I'm sure can't read find interesting get sucked density makes pace crawl take break couple months happen I'm hoping graduation I'll little relaxed willing brave I'm wondering chapters get easier mean initial learning curve permalinksavereportgive goldreply NowWeAreAllTom 7 points8 points9 points 2 months ago 5 children first read-through allegedly life-changing book I'm curious see fuss far idea Basically I'm getting far Recursion Paradoxes things sure weird neat aren't lot dancing around G del's Incompleteness Theorem without clear sense it's important interesting matter even really means it's proven frustrating since I'm sure others sub already familiar topic famous Zeno's paradoxes unfunny jokes realize haven't even properly started first chapter someone reassure gonna get good yeah permalinksavereportgive goldreply xamueljonesWorking FAI save us ponies 3 points4 points5 points 2 months ago 3 children Well Godel's Incompleteness Theorem explained Introduction gets good fast permalinksaveparentreportgive goldreply NowWeAreAllTom 3 points4 points5 points 2 months ago 2 children Well Godel's Incompleteness Theorem explained Introduction satisfaction assume detailed explanation forthcoming extracurricular reading recommendations permalinksaveparentreportgive goldreply ShareDVIThe singularity right myah 2 points3 points4 points 2 months ago 0 children really get explained well 2 3rd book illustrated dialogues next chapter might little math-hardy tries explain formal systems that's ok permalinksaveparentreportgive goldreply xamueljonesWorking FAI save us ponies 1 point2 points3 points 2 months ago 0 children I'm sure much Godel's Theorem covered since haven't read surprised doesn't appear considering Godel's name title Also GEB known it's frequent references previous ideas talks new topics recommend making judgement whether continue reading chapters 1 2 3 permalinksaveparentreportgive goldreply itisikeDragon Army 3 points4 points5 points 2 months ago 2 children Question I've already read book years ago okay comment without rereading think could still add discussion permalinksavereportgive goldreply xamueljonesWorking FAI save us ponies 3 points4 points5 points 2 months ago 0 children Sure aren't going sticklers meant nice discussion something everyone's interested permalinksaveparentreportgive goldreply MoralRelativity 0 points1 point2 points 2 months ago 0 children permalinksaveparentreportgive goldreply NewfurCrazy like fox Literally 5 points6 points7 points 2 months ago 3 children Strange loop idea actually pulling bootstraps Holding corporations nontransitively Recursion always points case simpler hits end eventually even you're working infinite well-founded objects paradoxes truth truth perfect seeming paradox truth's way pointedly telling map imperfect glasses lenses dirty - need figure way say things correctly Infinity isn't paradoxical far removed human intuition requires special rules handle correctly permalinksavereportgive goldreply broconsulate 1 point2 points3 points 2 months ago 2 children fast fractals recursive mathematical objects base-case permalinksaveparentreportgive goldreply mcgruntman 1 point2 points3 points 2 months ago 1 child case fractal base starting point simplest case start iterating Sure 'final product' stopping point speak infinite directions least permalinksaveparentreportgive goldreply broconsulate 0 points1 point2 points 2 months ago 0 children oh yeah guess that's kinda true permalinksaveparentreportgive goldreply socraticpain 4 points5 points6 points 2 months ago 2 children Edit Sorry long post wouldn't write nearly much normally got bit excited TL DR liked introduction Hey people know I'm little late party - found hours ago - I've planning read ages would like contribute discussion however start introduction GEB worried sense degree seemed content merely sensationalist exploitation paradoxes order make book seem exciting interesting degree introduction Escher made worse didn't seem like strange loops actually pertained anything particular anything people would call loops definition strange loops provided definition strange loop arises moving upwards downwards hierarchical system one finds oneself back one started seemingly makes worse doesn't seem anything deeper superficial comment behind It's loop one could say - Escher drew they're special soon got Godel introduction took drastic turn better don't know whether simply arrival in-depth understanding simply didn't truly understand mathematics questions discussed suddenly became far interesting find truth mathematics fascinating topic seems like concept strange loop crucial also makes sense entity unto rather loop interesting thing define strange loop depending Godel numbering used order deliberately create statement proves cannot proven seems counter-intuitive wrong somewhere clearly isn't I'd highly recommend research recursiveness Godel's incompleteness theorem interested mathematical side importance theorem mathematics whole seems incredibly impressive effect Hofstadter claims simple loop way perceive logic sets computing fascinating especially mathematical system based axioms ever prove everything always questions look Given entire mathematical study since Euclid based axioms seems crucial m hoping gets backed later GEB claim strange loops self consciousness arise understand Hofstadter saying AI capable redefining rules based must strange loop involved currently feels incomplete whole remainder book explain really hope rationalist perspective interesting narrative currently without evidence m excited see says backs terms strange loops general think notice personal favourite try think currently thinking love recursive strange loop always seems lead interesting tangents thinking nature human thought try outthink strange game strange loops inherently interesting us people Look inception example watched times film effectively asks recursive loop end reality dream way meaning shows choose reality ignore others say decide interestingly enough inception makes ask questions real world film One course different level reality film film become part dreams obviously dream back Escher Bach finished introduction m happy presence book clearly see relate central thesis book terms representations strange loops analogies Without evidence doubt ll see Bach Escher lot analogies - find hoping Hofstadter develop give evidence fanciful claims deep connection human condition Finally think book interesting relates relevance us people Paradoxes recursiveness inherently interesting us look inception true understanding consciousness experience far interesting Hence introduction take quasispiritual level u 19283123 says possible rationally explain mind possible look far deeply philosophy think book life-changing m really looking forward permalinksavereportgive goldreply 19283123The Vile Offspring 0 points1 point2 points 2 months ago 1 child m hoping gets backed later GEB claim strange loops self consciousness arise understand Hofstadter saying AI capable redefining rules based must strange loop involved currently feels incomplete whole remainder book explain really hope disappoint far remember doesn't really prove thing bugged last read GEB permalinksaveparentreportgive goldreply socraticpain 1 point2 points3 points 2 months ago 0 children OK that's interesting Well hopefully derive enough interest book anyway finish Thanks letting know permalinksaveparentreportgive goldreply rspeer 3 points4 points5 points 2 months ago 0 children hope readthrough successful Justin Curry Curran Kelleher cool dudes put together good course don't call official university course Set expectations appropriately summer course high schoolers taught undergrads There's notes first chapters might find useful GEB Wikia two us editing far hope Pro-tip Wikia turn adblock ads atrocious EDIT - permalinksavereportgive goldreply makemeunseeMock turtle 2 points3 points4 points 2 months ago 0 children mechanical strange loop https www youtube com watch v Z86V_ICUCD4 also I'd interested reading people's answers questions dialogue I'll post mine bit later time write longer comment permalinksavereportgive goldreply Hazlzz 2 points3 points4 points 2 months ago 0 children like lot - I've meaning read GEB Thanks helping getting around think lot people infinity recursion seem like inherently paradoxical concepts - I've heard several times people misquote Russell's Paradox set sets contain understandable - don't think infinity seems paradoxical idea something infinite described finite number letters word infinity example pretty mindblowing really enjoyed discussion word heterological seems comes words much moreso set theory maybe I'm much familiar words set theory division words autological heterological somewhat false dichotomy sounds reasonable words either describe - can't solve paradox simply allowing third category whose self-describing status undefined reminds paradox riddle I've heard - village one barber men village either shave get shaved barber shaves barber seems obvious even though claim men either shave get shaved barber surface looks like neatly sorts men two groups paradox shaves barber shows dichotomy quite real Incidentally Googled Sixth Patriarch Zen arrived Huineng apparently important figure Zen Buddhism Wiki article sadly lacking combination Platform Sutra based teachings feel like learned interesting - relevant - stuff Huineng strong opinion meditation strive toward thoughtlessness reflection quote Platform Sutra teaching seated meditation one fundamentally concentrate mind one concentrate purity motionlessness one concentrate mind mind involved fundamentally false really interesting I'm reading purity thought comes deactivating mind concentrating 'purity thought' basically find trick stop thinking you're trying achieve thinking recursive problem interpretation Huineng sees recursion real problem avoid would much like hear thoughts Achilles Tortoise original paradox Zeno permalinksavereportgive goldreply 0v3rk1ll 2 points3 points4 points 2 months ago 0 children bit Haskell generates series Figure Ground inverse xs go xs 1 go x xs y ys x y y go x xs ys x y go xs ys otherwise error Ordering invariant violated -- inverse evens odds -- inverse fibonacci 4 6 7 9 10 11 series 1 3 7 drop 3 zipWith series inverse series -- series 1 3 7 12 18 26 -- inverse series 2 4 5 6 8 9 10 11 -- series Figure -- inverse series Ground permalinksavereportgive goldreply markus1189 2 points3 points4 points 2 months ago 0 children Computer scientist found self-referencing part interesting one thing immediately came mind Haskell programming language r haskell using lazy evaluation make use self-referencing quite neat ways One thing learned recently Allison's Queues good explanation link used implement breadth-first traversal without explicitly mutating e g queue creating self referential queue paper linked p 5 figure 3 trace evaluation note queue defined queue tree explore 1 queue might little deep end non computer scientist found might interesting permalinksavereportgive goldreply SleeplessinRedditle 1 point2 points3 points 2 months ago 0 children I'm excited I'm currently finishing Xenocide though finish I'll return I've tried read book never got past chapter 4 5 permalinksavereportgive goldreply NewfurCrazy like fox Literally 1 point2 points3 points 2 months ago 1 child Would appropriate discuss you've already read book permalinksavereportgive goldreply xamueljonesWorking FAI save us ponies 0 points1 point2 points 2 months ago 0 children Yes Please join discussion point simply enjoyable time talking book motivate rest us hasn't managed finished book permalinksaveparentreportgive goldreply TotesMessenger 1 point2 points3 points 2 months ago 2 children thread linked another place reddit r VoluntaristLWBookClub x-post r raitonal GEB Discussion 1 - Introduction Musico-Logical Offering follow links respect rules reddit don't vote Info Contact permalinksavereportgive goldreply deleted 0 points1 point2 points 2 months ago 0 children Yayy Crossover two favorite subs D permalinksaveparentreportreply ahel 0 points1 point2 points 2 months ago 0 children expected r raitonal ad-hoc subreddit GEB permalinksaveparentreportgive goldreply polardogeLessWrong usual 1 point2 points3 points 2 months ago 0 children help provided definition strange loop arises moving upwards downwards hierarchical system one finds oneself back one started mean life strange loop start existing exist age increases go back existing guess isn't since don't existence look forward die sense you're really back exactly started permalinksavereportgive goldreply Ty-Guy6 1 point2 points3 points 2 months ago 4 children also found intriguing author connected idea paradoxes number 0 hope goes detail later thoughts truth falsehood compared positive negative numbers perhaps paradoxes 0 seem hard think truths 'more true' others e containing true useful information less false information seem paradoxes like 'this statement false' contain useful information whatsoever - seem rather analogous 0 remember shown certain things 'uncomputable' via Principia Mathematica Perhaps authors PM simply left 'logical 0' system much like ancient Greeks left 0 symbol number system also recall computing theory class took Turing's proof Halting Problem undecidable proof goes could write program could tell given program B input whether program B would loop forever could also run program certain tricky-to-explain ways make paradox remembered even mind understood proof heart never quite figured mattered made sense real world terms suppose 'missing 0' Turing's computational theory Could need paradoxes make sense remember include '0' systems permalinksavereportgive goldreply autowikibot 0 points1 point2 points 2 months ago 0 children Halting problem computability theory halting problem problem determining description arbitrary computer program input whether program finish running continue run forever Alan Turing proved 1936 general algorithm solve halting problem possible program-input pairs cannot exist key part proof mathematical definition computer program became known Turing machine halting problem undecidable Turing machines one first examples decision problem Jack Copeland 2004 attributes term halting problem Martin Davis Interesting Computability Microsoft Terminator Chaitin's constant Machine always halts Parent commenter toggle NSFW delete also delete comment score -1 less FAQs Mods Magic Words permalinksaveparentreportgive goldreply xamueljonesWorking FAI save us ponies 0 points1 point2 points 2 months ago 1 child don't think explanation justice Halting Problem Godel's Theorem applicable real wold one needs understand social context Godel thought revolutionary idea 1931 Godel people thought every theorem mathematics logic would eventually discovered possible potential knowledge proven true false Godel proved sufficiently powerful formal system always true false statements cannot proven within system heart-breakingly devastating world time couldn't trust laws logic science rational thought capable proving everything Furthermore never could even absolutely certain system consistent Godel proved system inconsistent holds contradiction proven inconsistent could never prove system consistent guaranteed permit true theorems fact mathematics found inconsistent centuries gives weak evidence consistency Halting Problem viewed application Godel's Theorem computer science given sufficiently powerful computing machine Turing Machine possible isomorphism mathematical formal system axioms number theory able compute possible functions another isomorphism onto theorems provably true mathematical system Even though I'm atheist viewed Godel's Theorem forbidden fruit Tree Knowledge knowledge learned everything knowable all-knowing ultimately fail permalinksaveparentreportgive goldreply Ty-Guy6 0 points1 point2 points 2 months ago 0 children may explaining well hope maybe relaxed assumption things must True False admitted paradoxes aka trivialities logical vocabulary whole thing would sort may devastating scientists thought Principia Mathematica perfect learned lacking proper solution accept missing piece go Instead proving system consistent least prove it's consistent across meaningful aka non-paradoxical aka non-zero expressions theist posit didn't understand yet all-knowing meant real terms permalinksaveparentreportgive goldreply ShareDVIThe singularity right myah 1 point2 points3 points 2 months ago 0 children chapter discusses word 'ricercar' another word 'recherche' mentioned almost Escher-Escher permalinksavereportgive goldreply mafidufa 0 points1 point2 points 2 months ago 11 children would like would hard get ahold copy read somewhere ebooks available author doesn't like ebooks Sigh guess look around unofficial version permalinksavereportgive goldreply 19283123The Vile Offspring 2 points3 points4 points 2 months ago 6 children It's unauthorized here's copy GEB online http www physixfan com wp-content files GEBen pdf permalinksaveparentreportgive goldreply xamueljonesWorking FAI save us ponies 1 point2 points3 points 2 months ago 4 children Little warning though it's full minor grammar errors permalinksaveparentreportgive goldreply daydev 0 points1 point2 points 2 months ago 3 children similar problem almost ready give found better scan actually reddit http www reddit com r GEB comments 2ng7nl geb_ebookpdf permalinksaveparentreportgive goldreply SleeplessinRedditle 0 points1 point2 points 2 months ago 2 children scan much better it's worth filetype can't seem open tried install plug open ran couple issues permalinksaveparentreportgive goldreply daydev 0 points1 point2 points 2 months ago 1 child I'd say yes pdf find everywhere full typos couldn't get past half first page probably could effort it's pretty horrible especially non-native speaker version doesn't seem significant typos pictures over-contrasted don't really know what's problem djvu Standard Ubuntu Document Viewer Android PDF reader don't problems permalinksaveparentreportgive goldreply SleeplessinRedditle 0 points1 point2 points 2 months ago 0 children pain I'm going try find used copy guess really isn't ideal ebook format anyway permalinksaveparentreportgive goldreply mafidufa 0 points1 point2 points 2 months ago 0 children Thanks permalinksaveparentreportgive goldreply MaxIsAlwaysRight 0 points1 point2 points 2 months ago 3 children reason ebooks great deal book's content specially formatted ways e-readers wouldn't able reliably reproduce permalinksaveparentreportgive goldreply WhackAMoleE 5 points6 points7 points 2 months ago 0 children e-readers wouldn't able reliably reproduce they'll die suppose permalinksaveparentreportgive goldreply mafidufa 1 point2 points3 points 2 months ago 1 child read one posters emailed Douglas Hofstadter got reply Hello -- Sorry there's electronic version GEB one don't like e-books hope good time reading GEB best co-readers -- Douglas Hofstadter http www goodreads com topic show 891961-june-july-2012---godel-escher-bach permalinksaveparentreportgive goldreply MaxIsAlwaysRight 0 points1 point2 points 2 months ago 0 children Huh stand corrected said still feel like current gen e-readers wouldn't able reliably reproduce formatting lot chapters permalinksaveparentreportgive goldreply Ty-Guy6 0 points1 point2 points 2 months ago 2 children one qualm otherwise engaging book quintessential strange loop would seem spiral strange 'loops' may seem certain contexts Escher's well-known optical illusions finite spiral rules metarules etc going solve problem GOFAI 'true' AI book far seems hold false thesis disputes innate connection Life Intelligence one runs seeming paradox Computers nature inflexible desireless rule-following beasts Fast though may nonetheless epitome unconsciousness intelligent behavior programmed Isn't blatant contradictions terms One major theses book contradiction doubt machines may intelligence author 'imbued' way much Internet seems offer 'intelligent' answers questions searches must remembered intelligence machine cannot exceed creator mere echo reflection electronic banks data written much like ink book echoes may give rise echoes two mirrors may reflect one another on-and-on nothing change nature echoes reflections self-editing program however fun interesting still neither living self-intelligent permalinksavereportgive goldreply 19283123The Vile Offspring 1 point2 points3 points 2 months ago 1 child must remembered intelligence machine cannot exceed creator mere echo reflection electronic banks data written much like ink book Deep Blue played better chess creators Watson better Jeopardy creators intelligent narrow domains can't also apply general case permalinksaveparentreportgive goldreply Ty-Guy6 0 points1 point2 points 2 months ago 0 children don't believe Life Intelligence innately connected understand might reject basic premise specific cases Deep Blue Watson shown less intelligence belonging creators could go detail I'll point plow faster tilling ground bare hands it's blacksmith would doesn't mean plow intelligent even set work independently Chess Jeopardy turned domains well-suited kind sophisticated pattern-matching computers tools good job expect see continual improvement upon algorithms programs belong computing naturally render computers capable assisting intelligence domains Watson seems helping clinical decision support lung cancer improvements naturally flow progression science computer technology hard evidence contrary Life-Intelligence correlation permalinksaveparentreportgive goldreplyaboutblogaboutvaluesteamsource codeadvertisejobshelpsite rulesFAQwikireddiquettetransparencycontact usapps toolsAlien Blue iOS appreddit AMA appmobile betabuttons 3reddit goldreddit storeredditgiftsreddit tvradio redditUse site constitutes acceptance User Agreement Privacy Policy Genitive 2015 reddit inc rights reserved REDDIT ALIEN Logo registered trademarks reddit inc Rendered PID 16778 app-125 2015-05-27 17 37 08 899229 00 00 running 8944350 country code"),
('Type Theory in 15 Minutes', "infinite cardinals collection things Menu Skip content HomeAbout Type theory 15 minutes ve posted couple things homotopy type theory far times hinted giving actual introduction Since finally feel justified work little bit ll go ahead wanted cover dependent type theory takes longer thought ll start less ambitious type theory simply typed lambda calculus Mathematics construction Type theory arises attempt formalize L E J Brouwer notion mathematics activity mental construction traditional way formalize mathematical discipline lay logical language intended lay statements true false meaningfully expressed posit axioms intended capture basic truths system mathematics proving certain statements true others false foundation logic mathematics built top foundation Brouwer viewed inversion actual state affairs notion mathematical construction basic logic sort mathematical activity must built top formalize intuition instead presenting valid statements basic truths must posit basic objects basic constructions chose may interpret certain objects logical statements certain objects logical proofs present type theory must determine basic objects basic constructions interpret logic even begin answer questions need think little construction means Mathematical constructions types judgment Intuitively construction say something like given object x may form object c x example Given natural numbers x y may form sum x y Observe statement requires x y natural numbers makes sense form sum green whiskey group natural number constructions make sense objects given type object virtue existing type attached call objects terms write term x type x also express English x inhabitant said virtue existing meaning doesn make sense present object without type opposed ZF set theory object taken universe must say object introduce expression x typing judgment proposition propositions part logic haven gotten far yet Similarly prove judgment infer valid inferences given inference rules always take form Given judgments may infer judgment far seen one sort judgment x However even make judgment must know type express judgment Type analogy typing judgments seems saying Type type analogy harmless another form judgment somewhat subtle Introducing sum x y us good unless compute unless say term x y means introduce equality judgments give judgmental definitional equality write x y mean x judgmentally equal y Judgmental equality supposed capture idea two terms different words meaning one term may substituted another without change meaning example President United States Head State US mean thing However even though Barack Obama President United States cannot freely substitute Barack Obama President United States demonstrated nonsensical George Bush Barack Obama President United States Since x y meaning type x y makes sense x y type wish clear type question write x y analogy also B Type Typing judgments x Type Equality judgments x y B Type Presenting types Intuitively type collection objects certain constructions make sense Since need introduce basic objects basic constructions means type need say basic canonical terms inhabit type introduce inhabitants type basic constructions may perform terms type eliminate inhabitants type basic constructions behave basic terms compute basic constructions given 3 sorts rules called introduction elimination computation rules elimination computation rules capture idea type completely determined canonical inhabitants suffices define constructions defining canonical terms reasons become clearer discuss dependent types need fourth sort rule called formation rule says conditions form given type Usually obvious condition possible type defined 4 sorts rules unlike sets defined totality members type defined formed canonical elements basic constructions admits basic constructions behave first example functions Since present rest types reference function types start Intuitively function types represent type valid constructions take terms given type return terms another Function formation Given types B Type B Type may form type functions B written B Function introduction mean basic function B Since functions represent constructions whenever way construct B arbitrary may construct function Somewhat rigorously whenever case given x may construct b B function x b B called lambda abstraction usually read loud lambda x dot b Intuitively supposed function returns b applied input x subtlety b term may contain x free variable example x 1 term type N type natural numbers order actually determine term means must first know x means x x 1 function takes x N returns x 1 also type N Function elimination Given function f B term x may apply f x get f x B example function x x 1 may applied number 0 return 1 fact captured Function computation given arbitrary x may construct b B term x b means b x replaced write x b b x Using example function x x 1 0 0 1 actually 0 1 defined see fact judgmentally equal 1 brief note might look technical scary ve really said nothing interesting far ve said rule constructing object certain type whenever object type mathematical object captures construction Moreover object behaves exactly expect Functions multiple arguments Crucially definition function type accepts single input define function takes multiple inputs abstract multiple arguments E g formally unsatisfying intuitively clear function x y x y type function Well takes x N returns y x y turn takes y N returns x y x y N y x y N N finally x y x y N N N function takes N returns function N N often called Curried function Haskell Curry Since write functions multiple arguments lot omit brackets assume associates right N N N means function takes N returns function N N N N N function takes function N N returns N rest simple types types included simply typed lambda calculus depends purpose authors function types base type others add sums products N ll stick need encode propositional logic functions sums products unit empty unit type supposed one element type may well call 1 may always form 1 introduce unique canonical term let say 1 mean eliminate term type 1 elimination rule supposed say define constructions 1 Since construction 1 thing function 1 need know define function Intuitively select term type unit elimination Given type Type term function 1 unit computation empty type supposed type never construct inhabitant call type 0 1 always form Since want inhabitants introduction rule elimination rule set theory want unique empty function 0 type given type function 0 since introduction rule 0 computation rule nothing compute Product types supposed capture Cartesian product two types product B terms b b B gives us formation introduction rules Given Type B Type may form product B Type given b B introduce b B elimination obvious choice projections little better construction B correspond function B C type C function two arguments Recalling back curried functions function B C explicitly Product elimination Given type C Type function f B C function f' B C behaves like f pairs computation rule f' b f b define projections p1 x y x ' function defined elimination x y x p2 x y y ' Checking works p1 b x y x ' b x y x b y b first equality definition p1 second computation rule products third fourth computation rule functions Notice replacement last one since y doesn occur expression Finally want sum types write B form type conditions product function types correspond disjoint unions set theory unions cannot arbitrarily throw objects new types set theory need tag terms real home given types Type B Type term term inl B likewise given b B inr b B inl read left inr read right Notice two introduction rules define function B C need know left terms right terms words need two constructions f C g B C allows us construct function f g B C computation rules one introduction rule f g inl f f g inr b g b Encoding logic wrap already long post let look encode logic According Brouwerian intuition prove proposition corresponds construct object logical proof part mathematical activity mathematical activity constructing things seems natural think proofs given proposition type type proofs proposition encode propositions types say proof proposition term corresponding type start two obvious propositions true proposition false proposition Since truth corresponds inhabited obvious candidate true 1 since false things never provable false proposition inhabitants let take 0 Implication implies B means true B true proof construct proof B exactly B describes Conjunction show B true need know true B true words construct proof B need proof proof B exactly B Disjunction prove B need either B hopefully guess exactly B Finally negation usual way show something false show leads absurd consequences true proof conclude something false e correspond 0 summing True 1 False 0 B B B B B B 0 compare introduction elimination rules types corresponding introduction elimination rules Natural Deduction see except product elimination correspond exactly 0 elimination principle explosion Moreover usual elimination rules conjunction exactly projections prove elimination rule products natural deduction derivation ND B C open assumption B C One thing re missing double negation elimination intuitionistic constructive propositional logic Brouwer Good Thing proving true showing false doesn give us actual witness true example usual presentation Euclid proof doesn necessarily give us actual prime tells us must one somewhere worth theorem constructively valid need careful present proof constructively reasons good thing course reasons bad thing ll leave another day ads Share TwitterFacebookLike Like Loading December 23 2014Cory Post navigation Closure Operators Monads 15 Minutes Type Theory 2 thoughts Type theory 15 minutes Matrix AI MatrixAIBox says March 13 2015 6 23 exactly negation type context something like Haskell would encode use something like 0 Reply Cory says March 13 2015 11 21 Haskell negation doesn exactly exist since Haskell doesn empty type bottom inhabits every type earlier part mentioned double negation A- 0 - 0 element type A- K - K continuation output K element double negation type somehow continuation output Regardless m interested type theory variety logic programming language negation probably important Haskell programmer Reply Leave Reply Cancel reply Enter comment Fill details click icon log Email required Address never made public Name required Website commenting using WordPress com account Log Change commenting using Twitter account Log Change commenting using Facebook account Log Change commenting using Google account Log Change Cancel Connecting Notify new comments via email Search Recent Posts 15 Minutes Type Theory Type theory 15 minutes Closure Operators Monads Cantor Diagonal quick rant Cantor diagonal argument intuitionism Archives May 2015 December 2014 October 2014 August 2014 June 2014 May 2014 April 2014 Categories Forcing HoTT Set Theory Type theory Uncategorized Meta Register Log Entries RSS Comments RSS WordPress com Create free website blog WordPress com Syntax Theme Follow Follow infinite cardinals Get every new post delivered Inbox Join 213 followers Build website WordPress com d bloggers like"),
('Teaching and Researching PL at a Liberal Arts College', 'Programming Languages Enthusiast Developments PL matter Main menu Skip content HomeAbout PL Enthusiast Post navigation Previous Next Teaching Researching Programming Languages Liberal Arts College Posted March 16 2015 Swarat Chaudhuri tenure student professor many talks offering career advice graduate students talks focus careers research universities industrial research labs leave discussion institutions liberal arts colleges primarily concerned undergraduate education unfortunate many liberal arts colleges highly selective institutions offer exciting careers mix research teaching albeit different way careers research universities One way reduce information deficit liberal arts colleges report experiences work one present post Specifically interview Steve Freund professor computer science Williams College ranked US News top liberal arts college America Steve highly successful PL researcher known significant contributions analysis concurrent programs result great position give PL Enthusiast readers view like teacher researcher liberal arts institution Tell us bit background research currently Professor Computer Science Williams College Williams small selective liberal arts college 2 200 undergraduates Western Massachusetts began academic career undergraduate Stanford University quite formative years terms research trajectory eventual career path spent many quarters section leader introductory computer science courses exposed challenges satisfactions teaching early also motivated work Eric Roberts programming environment designed specifically introductory students project turn led interest programming languages continued study Stanford graduate student John Mitchell defending thesis spent several years Research Scientist DEC Compaq Systems Research Center Palo Alto moving Williams 2002 Since time focused primarily software reliability program analyses enforce various correctness properties concurrent programs including example race freedom atomicity cooperability draw static dynamic hybrid techniques work typically involves theoretical study new analyses well implementation validation teaching Williams different top-tier researchers field tend work research universities industry labs time education entirely research university Stanford made decide go Williams Liberal arts colleges even radar finished PhD knew existed didn really appreciate sense life would like research university especially since father brother professors research universities research universities didn feel like right environment led join SRC already working consultant knew d continue great time collaborating many excellent colleagues lab time SRC quite productive many ways wasn long began miss academic environment One day occurred call Kim Bruce ask teaching college like Williams many years chatting began think school may offer career balance closer wanted namely ability pursue research also teach work closely undergraduates part teaching felt excited Williams hiring year things worked well could hoped many ways Kim thank demonstrating full potential career liberal arts college encouraging pursue experience working liberal arts college like Williams compare working research university core mission liberal arts college educate undergraduates broadest sense possible particular emphasis critical thinking communication reasoning skills graduate program eight faculty department quite small department research university standards among largest liberal arts colleges shouldn surprising spend lot time teaching working undergraduates place heavy emphasis direct interactions students faculty providing personalized learning opportunities However research play central role Beyond enabling advance state-of-the-art conducting research helps maintain perspective field stay engaged material teach train next generation researchers Since graduate students need careful follow research agenda feasible within time resource constraints far hasn real issue say maintaining external collaborations really important since moving Williams Since m PL person town collaborations prevent feeling isolated larger research community like small department relatively small institution able foster welcoming vibrant academic community enjoy daily interactions faculty students across entire college size however necessitate everyone pitching maintain program community end taking many service activities around department college expectations Williams balance teaching research Williams m able maintain fairly healthy balance teaching research roughly equal amounts time energy spent course year research time concentrated summer months breaks since teaching daily activities deadlines end consuming attention classes session However even busiest semesters usually carve enough time research completely lose momentum though take discipline attention time management Sabbaticals also key recharge batteries teaching also immerse research long-term planning extent hard attain even summers terms research output expectations goal produce highest quality research possible obviously rate colleagues research universities priorities may different graduate students assist work Publishing perhaps one two nice results year like think terms long-term productivity experience matches personal expectations faculty liberal arts colleges like Williams well college expectations advancement tenure Excellence teaching research highly valued play significant roles hiring promotion decisions Williams true many liberal arts colleges relative importance research teaching vary lot school school external funding Funding external grants necessary many research universities definitely make life bit easier providing support travel equipment research students etc spend time writing proposals managing grants fairly small fraction work compared faculty running larger research programs universities also note liberal arts college preclude applying funding NSF sources indeed number funding opportunities specifically faculty liberal arts colleges Williams many faculty also seek funding opportunities universal necessarily required classes teach half classes teach introductory level typically either first-semester programming course second course data structures Teaching introductory classes lab sessions keeps pretty busy classes also lot fun really enjoy working students starting discipline also teach upper-level class programming languages years well tutorial compiler design Tutorials Williams modeled Oxford one signature educational elements small classes ten students lecture seminar component Students explore material independently meet pairs hour two week meetings two students work problems stuck explore alternative approaches discuss topics larger context since tutorial compilers build large compiler semester well Tutorials sort high touch teaching experience think distinguishes Williams types institutions m also starting think new software methods engineering course students early major well involve undergraduates research Yes providing research opportunities preparing students carry original research important faculty department typically work one students summer part sciences-wide undergraduate research program summer projects often relatively self-contained pieces whatever problems m thinking summer experiences often lead year-long honors theses much substantial open-ended projects entirely student design Motivated talented undergraduates make great contributions type research conduct gratifying see many research students choose continue studies PhD programs think research experiences m able provide substantially benefit students regardless whether bound graduate school endeavor advice graduate students may wish follow career path similar First cast wide net look broadly opportunities Talk people various types colleges universities ask ended spend time single right way career computer science academia may end excited options didn know existed Also think might like teaching working students try Volunteer give lecture two class re TAing offer mentor undergraduate interested area etc things pique interest try find opportunity teach entire course take larger mentoring responsibilities necessarily expect job candidates already exceptional teachers expect show potential enthusiasm history engaged teaching sorts experiences help demonstrate comes time write teaching statement also guide informed decision comes next regardless may still remember several people telling d throwing away career took job Williams Others considering liberal arts colleges told hearing similarly dire warnings hear sentiment recognize people different priorities measures success careers liberal arts colleges indeed good fit others however offer exactly set challenges opportunities impacts satisfactions may looking Share TwitterFacebookRedditGoogleLinkedIn entry posted Education Interviews Research Swarat Chaudhuri Bookmark permalink One thought Teaching Researching Programming Languages Liberal Arts College Peter-Michael Osera March 16 2015 3 30 pm said someone entering world SLACs soon highly recommend people thinking pursuing career path attend SIGCSE http www sigcse org events symposia conference network people liberal arts institutions found invaluable see liberal arts mindset like well scope current job market Reply Leave Reply Cancel reply Proudly powered WordPress Theme Duster Automattic'),
('A Fast, Minimal Memory, Consistent Hash Algorithm', 'Cornell University Library gratefully acknowledge support fromthe Simons Foundation member institutions arXiv org cs arXiv 1406 2294v1 Search Article-id Help Advanced search papers Titles Authors Abstracts Full text Help pages Full-text links Download PDF Current browse context cs DS prev next new recent 1406Change browse cs References CitationsNASA ADS DBLP - CS Bibliography listing bibtex John Lamping Eric Veach Bookmark Computer Science Data Structures Algorithms Title Fast Minimal Memory Consistent Hash Algorithm Authors John Lamping Eric Veach Submitted 9 Jun 2014 Abstract present jump consistent hash fast minimal memory consistent hash algorithm expressed 5 lines code comparison algorithm Karger et al jump consistent hash requires storage faster better job evenly dividing key space among buckets evenly dividing workload number buckets changes main limitation buckets must numbered sequentially makes suitable data storage applications distributed web caching Subjects Data Structures Algorithms cs DS ACM classes E 2 E 1 Cite arXiv 1406 2294 cs DS arXiv 1406 2294v1 cs DS version Submission history John Lamping view email v1 Mon 9 Jun 2014 19 30 12 GMT 370kb authors paper endorsers Disable MathJax MathJax Link back arXiv form interface contact'),
('A Proofless Introduction to Information Theory', 'Math Programming Navigation Skip content HomeMain ContentPrimersResearchProgram GalleryProof GalleryAbout AuthorSupport Post navigation Zero-One Laws Random Graphs Hamming Code Proofless Introduction Information Theory Posted February 16 2015 j2kun two basic problems information theory easy explain Two people Alice Bob want communicate digital channel long period time know probability certain messages sent ahead time example English language sentences likely gibberish Hi much likely asphyxiation problems Say communication expensive problem come encoding scheme messages minimizes expected length encoded message guarantees ability unambiguously decode message called noiseless coding problem Say communication expensive error prone particular bit message erroneously flipped known probably errors independent question one encode messages guarantee high probability ability decode sent message called noisy coding problem actually many models communication noise generalize 2 models based Markov chains going cover simple example noiseless problem Say sending binary digits messages know string 00000000 eight zeros occurs half time eight-bit strings occur equally likely half would make sense encode eight zeros string 0 prefix strings 1 distinguish zero would save average bits every message One amazing thing two problems posed solved paper Claude Shannon 1948 One byproduct work notion entropy context measures information content message expected compressibility single bit best encoding extremely dedicated reader blog note differs Kolmogorov complexity re analyzing compressibility string rather compared distribution really think domain distribution compressed string Claude Shannon Image credit Wikipedia Entropy noiseless encoding state Shannon theorems define entropy Definition Suppose distribution finite set ll use denote probability drawing entropy denoted defined strange think sum abstract let suppose biased coin flip bias landing heads plot entropy follows Image source Wikipedia horizontal axis bias vertical axis value algebra graph see entropy maximized minimized verify calculus prove uniform distribution maximizes entropy general well saying high entropy measures incompressible something low entropy gives us lots compressibility Indeed message consisted results 10 coin flips close 1 could able compress lot encoding strings lots 1 using bits hand couldn get compression strings would equally likely Shannon famous theorem shows entropy distribution actually matters quick notation set binary strings Theorem Noiseless Coding Theorem Shannon 1948 every finite set distribution encoding decoding functions encoding decoding actually works e expected length encoded message Moreover encoding scheme better Item 2 last sentence magical parts words know distribution messages precisely know long expect messages know hope better title post says aren going give proof Wikipedia proof re really interested details Noisy Coding noisy coding problem interesting certain sense solved Shannon still studied today field coding theory interpretation noisy coding problem want able recover white noise errors introduced transmission concept called error correction restate said earlier want recover error probability asymptotically close 1 probability errors intuitively clear without encoding blowing length messages Indeed encoding blow message length single error confound since many valid messages would differ single bit question encoding exist much need blow message length Shannon second theorem answers questions Theorem Noisy Coding Theorem Shannon 1948 constant noise rate encoding scheme following property message sent Alice message received Bob e random noise function addition denote entropy distribution error single bit choosing guarantees existence encoding scheme scheme exists smaller theorem formalizes yes answer noisy coding problem moreover characterizes blowup needed scheme exist deep fact depends noise rate word proof probabilistic Shannon proved encoding scheme exists picking random function finds nonconstructively string number bits different minimized number bits differ measure called Hamming distance showed using relatively standard probability tools scheme needed properties high probability implication scheme exist probability even positive sharp threshold takes bit work want details check first lectures Madhu Sudan MIT class non-algorithmic nature solution opened door research question surpassed encodings work interesting algorithmic cost constructing encoding became question complexity computability Moreover guarantees people wanted strengthened worst case guarantees words guarantee 12 errors encoding scheme allow always recover original message high probability One imagine message contains nuclear codes bank balance d definitely want 100 recovery ability Indeed two years later Richard Hamming spawned theory error correcting codes defined codes always correct single error theory expanded grown last sixty years days algorithmic problems coding theory deep connections areas computer science including learning theory cryptography quantum computing ll cover Hamming basic codes next time move Reed-Solomon codes others Share Share FacebookClick share Google Click share RedditClick share TwitterMoreClick email friendClick share PinterestClick share LinkedInClick share TumblrLike Like Loading Related entry posted Computing Theory Discrete information theory tagged coding theory compression entropy error correction hamming information theory mathematics probabilistic method shannon Bookmark permalink Post navigation Zero-One Laws Random Graphs Hamming Code 4 thoughts Proofless Introduction Information Theory jay February 16 2015 9 24 Reply neuroscience information theory fad occupying smaller smaller corner research really big attempt quantify neural information reading neuroscience studies never clear statement using information theory offered something couldn get classically using probabilities Since H D sort two sides coin speak never felt one elucidated way might find many math problems invoking duality feel like must missing something LikeLike j2kun February 16 2015 9 26 Reply entropy distribution characterize distribution re implying dual concepts reasonable sense familiar LikeLike SanguineEmpiricist February 16 2015 10 21 pm Reply Jay information theory seems relatively successful statements quite strong see evolutionary theory used time many probabilistic concepts information theoretic derivations Information theory must precede probability theory based N Kolmogorov Kolmogorov 1983 LikeLike Chris Aldrich April 7 2015 9 27 pm Reply NIMBios hosting workshop Information Theory Entropy Biological Systems week streaming video lot application information theory broad array disciplines past several years though find researchers actually spend enough time studying field mathematical one prior making applications often results left wanting Perhaps might also find answers information Mendeley Group Information Theory neuroscience https www mendeley com groups 2329601 information-theory-for-neuroscience LikeLike Leave Reply Cancel reply Enter comment Fill details click icon log Email required Address never made public Name required Website commenting using WordPress com account Log Change commenting using Twitter account Log Change commenting using Facebook account Log Change commenting using Google account Log Change Cancel Connecting Notify new comments via email Notify new posts via email Github Repository Medium blog Twitter Feed Facebook Group Google Community Friends Adventures Analysis Baking Math Logical Tightrope RSSRSS - Posts Create free website blog WordPress com Confit Theme Send Email Address Name Email Address Cancel Post sent - check email addresses Email check failed please try Sorry blog cannot share posts email d bloggers like'),
('Big-O Misconceptions', 'ren Sandmann Pedersen Big-O Misconceptions October 2012 computer science sometimes mathematics big-O notation used talk quickly function grows disregarding multiplicative additive constants classifying algorithms big-O notation useful lets us abstract away differences real computers multiplicative additive constants Big-O difficult concept seems common even people know better misunderstand aspects following list misconceptions seen wild first definition write f n O g n f n le M g n sufficiently large n positive constant M Misconception 1 Equals Sign Means Equality equals sign f n O g n widespread travestry take face value deduce since 5 n 3 n equal O n 3 n must equal 5 n 3 5 expression f n O g n doesn type check left-hand-side function right-hand-side exactly help found definition says write without concerning fact write total nonsense way interpret right-hand side set functions O f g mid g n le M f n text M 0 large n definition world makes sense f n 3 n g n 5 n f O n g O n equality involved make bogus deductions like 3 5 however make correct observation O n subseteq O n log n subseteq O n 2 subseteq O n 3 something would difficult express equals sign Misconception 2 Informally Big-O Means Approximately Equal algorithm takes 5 n 2 seconds complete algorithm O n 2 constant M 7 sufficiently large n 5 n 2 le 7 n 2 algorithm runs constant time say 3 seconds also O n 2 sufficiently large n 3 le n 2 informally big-O means approximately less equal approximately equal someone says Topological Sort like sorting algorithms O n log n technically correct severely misleading Toplogical Sort also O n subset O n log n Chances whoever said meant something false someone says worst case comparison based sorting algorithm must make O n log n comparisons correct statement Translated English becomes worst case comparison based sorting algorithm must make fewer equal M n log n comparisons true easily come comparison based sorting algorithm makes comparisons worst case precise things types notation disposal Informally O Less equal disregarding constants Omega Greater equal disregarding constants o Stricly less disregarding constants Theta Equal disregarding constants correct statement lower bounds worst case comparison based sorting algorithm must make Omega n log n comparisons English becomes worst case comparison based sorting algorithm must make least M n log n comparisons true correct non-misleading statement Topological Sort Theta n lower bound Omega n upper bound O n Misconception 3 Big-O Statement Time Big-O used making statements functions functions measure time space cache misses rabbits island anything nothing Big-O notation doesn care fact used algorithms big-O almost never time primitive operations someone says time complexity MergeSort O n log n usually mean number comparisons MergeSort makes O n log n doesn tell us time complexity particular MergeSort might would depend much time takes make comparison words O n log n refers comparisons primitive operation important point big-O applied algorithms always underlying model computation claim time complexity MergeSort O n log n implicitly referencing model computation comparison takes constant time everything else free fine far goes lets us compare MergeSort comparison based sorts QuickSort ShellSort BubbleSort many real situations comparing two sort keys really take constant time However doesn allow us compare MergeSort RadixSort RadixSort comparison based simply doesn ever make comparison two keys time complexity comparison model 0 statement RadixSort O n implicitly references model keys lexicographically picked apart constant time also fine many real situations actually compare RadixSort MergeSort must first define shared model computation sorting strings k bytes long might take read byte primitive operation takes constant time everything else free model MergeSort makes O n log n string comparisons makes O k byte comparisons time complexity O k cdot n log n One common implementation RadixSort make k passes n strings pass reading one byte time complexity O n k Misconception 4 Big-O Worst Case Big-O often used make statements functions measure worst case behavior algorithm big-O notation doesn imply anything sort someone talking randomized QuickSort says O n log n presumably mean expected running time O n log n say QuickSort O n 2 probably talking worst case complexity statements considered true depending type running time functions involved measuring Contact soren sandmann gmail com Archive First Class Goto Celebrities die 2 7183 time Radix Heap Porter Duff Compositing Blend Modes Big-O Misconceptions Translucency Gamma Correction vs Premultiplied Pixels Fast Multiplication Normalized 16 bit Numbers SSE2 Twitter sorensandmann Feeds RSS Atom'),
('P vs NP Problem in Relationships', "CTP200 Comic Transfer Protocol - 200 OK Whatever girlfriend's problem probably NP - What's wrong honey - Nothing - something - - tired - - something happen work - imagine life P NP - Hey honey know upset morning asked liked pancakes made paused second answering thought don't appreciate came conclusion don't love anymore that's true wanted make arranged romantic dinner favorite restaurant tonight - Aww Richard forgive Alright back real life Things get real tough isn't NP - What's wrong baby - Go away - - LEAVE ALONE RANDOM Share Share Share Share P vs NP Problem Relationships Upload 16th March 2015 2 months ago Permalink http ctp200 com comic 6 Image URL http ctp200 com comics comic_5507082ab1d32 png Share Share Share Share Follow CTP200 Subscribe CTP200 Newsletter Follow ctp200_comic RSS Atom Comments Please enable JavaScript view comments powered Disqus RSS Atom CTP200 http ctp200 com licensed Creative Commons Attribution-NonCommercial 4 0 International License"),
('Simple Rectangle-based Functional Programs for Computing Reflexive-transitive Closures', "PDF-1 3 rules 4 0 obj stream x m Ao 8zL 6 R 8 b 6 f F 80 W rP p EO o R K 9 ' 7 M k C_ d x f ' N b n dE DPx 9X mh M6 2 q P 7Lu _ n o e ' 9 T2 0 'DvZb P V Z G o 6 B yI 6M 8 b eu zk W h f pS o bC _ W endstream endobj 1 0 obj endobj 3 0 obj endobj 2 0 obj endobj 12 0 obj stream x Wmo F _ U N W 6 k w U f 4 o 1' uJ Z b2 H 0 B M qp e Z X P 5E zU 0F U Y H D 1 u L j f h m mGLR F w 8 'KO E K C 9 - W E H 8 ar 7b b k b Tt Pec 8 AGA J D11D YyG S' - 3 7 h 8 8 V 5 L9- V GH n - Qf 3 j r SU l c l Lmo x 5T 4 H g 7 '7U 9 f D d 3 S'z 0bv M ' V z Z J y x Hz x D P 6 _ nbee m BHL g mM u u bUvLTM O 4 W 8 ' Sl z r xT GLe g ' Z rsP 0W h4 u Lu z V Y Y 0 0R O zN O GF b nR7i u M Y qF u7 r N6Bb J g o ' RC 0l K cJ 1M q hP M F 7 6 q Y e' Y VU -endstream endobj 9 0 obj endobj 11 0 obj endobj 10 0 obj endobj 25 0 obj stream x Wmo 4 Y qBuHm Yt'uJ y N o lzI J 3 3 e c L 8 r k o z l wVlk U Y h v ' 9 ' ThS 3 V Z k U l O K O6 V O q Y _ B N G 4 j D8 7 Qk 9 sU B U 1 9 g v 7N 2 p j 727 v5 U Ihl wf O MA g 6 p K q N H 7 p n gI f ko ' g7 8 r K G dD V 0 1 V JV_-L_ z j 5 4 Lp 2c ' o cP w 4p_ bb H l Z q h jc Nf ny e D r D h p v w v q l N Xs F 5 qx Nd I- e ' G e 7 r U v wc pr M 5 2 2 y u n -b kP f 1 nYBN pw 1 g dQ V Q DD H G 70 sPT MX cZ 0 N v J' g yW v ' y BI P F 2 endstream endobj 22 0 obj endobj 24 0 obj endobj 23 0 obj endobj 29 0 obj stream x V 6 p 0p c J 1 x 8 IU X_ _ k Q jE E40K g x W y B D8Q gq 5 _ V U c 8 ' Y Bp R Lo Q J kY 5c n V NV w h 4 c 6 W L S4 K u k nQ6 k 74 8 8 -1 o y 1 Z IC BbE 9 c N Qk 0j 5 N1a ft R j ho M2W D rL l W 6EY XO K H _ F7 1 e - - o P j U Qj O M r Y z l o X Z gH 8s 6 D 8 P7 fq0 w P g4 5 L C2 Nju F xF FZ p b k - ZTP oA h BK ' 6 O H 9 r e 'r C l C 8Y 8 8 H4F1 p O 6 w K z p Pd Kqh R 2v C bz4 4 j fH v c m F M Y _c endstream endobj 26 0 obj endobj 28 0 obj endobj 27 0 obj endobj 34 0 obj stream x X o 6 N zY t- vb P DJ D kJ qJr7N 4F c 2 dx4 b 6 H j 0y5 2 e 7 7Og x p f5_A dxJ f ' g N Uk 6W zy 4 R 5 IU d 8 6 7 l KD k c p hU 6 B D p _ g Y 6X- mX 9 jg z4 J 8 2 q p oE 5 NU r o b K v Z k X c N 5 m _ P vLAD Zf Fa cfT Lo 8 C R1 F b Y 7 hb v yj j d u n C B h F sb l M j W - VExn L x jE q 2 8 z' 8 Uwqrb Xu j v j L N H Z p 8 Ab2 wQ n4 Xf yL V 1 cY Z r d U ZT N-k5X l x x5 X o B 9 CL F U- e - P 1 1 k u MU Y W R Ue tv06 1 1F bT e3 a4 e aF c 1 P 0 Np 7Z b P G2 e c b 0 1J Yw P 0F r OQ V h O V f ' _ O KM f f l _ Gp v J P b l RwG ' l - vj D r n y E f 7 _' N p F wD 9 8 q y j c F 3 F YZ q CY W d n0a y l4 K 7 c0X O G W k j V U 0 e1 g sV endstream endobj 31 0 obj endobj 33 0 obj endobj 32 0 obj XObject endobj 47 0 obj stream x o l b z G j je w E 9 gwe E g CJ - SmU 5 4Cx 6 V g m u x U b u p W guu L 1S sCe B F uxPW r v vw 6W e X 8z Y nH h mz wep e w J iu J n o l v z3 w Dw z w w m jw - u v 6 b l b GBW W ' h L VK9 r kf gk Vr Ht m 3 n O R x ' M V z ck HG m s6s f N6 k w gN l4p akk M 4 OB B K jQ_ F H 6C w 64 fk qR 9 dt g x22 1 AU 2 l 4 2 L K1 M H6 L b r x r x r O u 9 m K d - mD x e L0 1 hb gco MEz 4 y8 N rOV p OV2 QA F d P F d u 693 O H 9d r x P r qZ m gpE 9 l 2 h 3 d2 p HF3 L41' x2 x62 x6 Q x2 d 6 d m d1 d C 9 W Td 2 _ 9 - x 7 gpM k U j H q 3 G 1 b R0q w XH Mxd H CE r Q HNdjY V k nQ U 6E BzX M qe iZ '6 M 3Na w 3 4 X M Mk q O 3 7 0 uU 5u z J BP c f q j 5 X v e W 7S O 8u n oC Wcm qX _215f n zm n ew z p V8 6 n r b 1 VW3 LO hPx OD L xV L hR3x K lUSx LK l SH r Dk k 5 bXd f r KGAlG E 0 C 1 h Q fS l - b - pf H b8 4 la - I- - I- - 0 pT fX 4 - Lm dd bL l2 mA GQ - R lK 4 m Q Gf c prfS9 Q Yd 2 R f - Q 8 Q 8 9dKF X 2 B 2 Rg d - L G3 PZ BA Ba h Ge2 G1 lK mA G3 -H J e 8 m - _ 3 1Sc 4 - E lK p h J R Ea Z Q Z Q C L mz34 4 Ro 6e _ ' 4 O 8x O- SWO O8 izJ c O gxr 2M o z q z K hP h Cz 4 L f k9 BoCDo X P 42V H L 1Hyb V j a- J bXd z 1 2 OQX X4GqX tGsH Y8 k Ce Q Yd 2 e 7 KA W E aI0 C G 0c - ' L c KF d - lR mIA N e 0 9lq D V R9 Q Yd 2 eD 7 KA W E aI0 C G 1 l 4 hP d2a4H b d f u 8 Q 8 9dKF d lK - b - mA g '3fp 3 q ak -V lm X X l 9l k dj g hP d2a4H b d f u 8 Q 8 9dKF k w 5 8t N k r' 5p O 5pmc d ' F 6 5p r 5p 9h 4L j H 6 r 2 r 8 L z c jj m C K r C Y 'a E b g j H j lj I-O9 G kk V p y q 1r _w n49 k 9c o ' qd l f v 6 Y L pE M 5x k H Aw 7 B 7 w C b q fC 7 - w u _ x W7 _ _ u ysu 6 x mc K _7 6endstream endobj 44 0 obj endobj 46 0 obj endobj 45 0 obj XObject endobj 58 0 obj stream x X o 6 X DR xK nE ypl DI D B H k vh 8q j Y 3K _ 0 Q w n 4 ir 03 n D ' iL z lfXO pw 3P U6Wo D 7 y x 1 y Q H N q u hP 0 g Ko- w oPT Yta o gpSIg gt q E x 9 L vh y n X w t18 _q1 e u Zj zz j c O 5 9 iM M Cb 1 GumX YP Sl 8 ' U r p lPe lU X w W b D E l2 Oz sB zr t1 p d z PH d lU OM3 lG MO 1QN fy x YT u n 1 4F M e - e 2 l c b9C 9 JT lX r k CD 8QD n R 7U i62 Q xee cT g E 4 L lL 3 r j L h 4G D Z k R Qu-WUD W 8 N' qU EQS02x ZnE F Z q 9O'' N w F 2 W f P z- - z2 9 W Q 4 UK P rR Q k 8 v 9 K L U aB k - q 2 Y mbY- ' endstream endobj 55 0 obj endobj 57 0 obj endobj 56 0 obj endobj 63 0 obj stream x o e 0k k o X n-v 8 q M g ofeDd 1 X Lvvh y o 4s m 9 f n u N 7 w 0 z J _ m ah Q g C3 f vo m7 M d 1_ N o w O w c b O M 9MX W9 r O p gO 'Ke w rI 6 Y u z x w8 N oe K XB M fY 6 W Y U u B3 uz nz e r Nj O oob m 6 c 6 O n g C fv w _ N 5 Ca 0z vb rM q P 5 KS v m P 5v lj P1 Ma ' l j qFP D 9 o Y5R ZnO9 iV L 6 H D xV hBK Dr D H HN K 5 jR ZVa b 3 Dr B Wq9aO F w V x u XG u P Ib F QYG mBJ U Q 3I1 0 aJ0 P M Z G0 cH r c _ 3 'o b R 3 d 1 f f C f h 9 dS f B b d a3J JN g ' h G0r JD d'Jk E'' 9 Dt k ELD 9 J YJ8' k tY Y Jb G AL 06 m B W j -u 3 x 6k r OH R 3 J2Vsf d Z C b k iY m o yM z M O h u ' C y vh Y _ m c J l rJk X ka u k 9 5 l C ay L K X MzxX q7 R e u 7 n b e wh x w Y v y fR D ' r 9 W yF d xm 6 b IsU S1 DFu b iw 4 4Eiy 21 ZF 2H Lh6 e CX u ms f g b 3 7 f 7 V 4 d ei 7 0 c g 2 f o NhF Lv 1 j dG AH z1 qsB2V f N C X X mu sB2 3 P' xFvB mNH Q 3 0' aN0 P W K r 3 h C 0 glNh V'4 U iq R aNH Lv 3 e dG v C- K 4 g C d_ 3 G c m 0K H l N DbE L DQ R U H tQ R q JFN7 _ 8C D Qg p 3 Y 1 B D X mf c G4 f u SG3 S3 N C y 5 1 L e g e P 5 3 3C 5 3 3e KF3 h 7 awq w cv 4s n hG n wM Vn 5 N T8 M 7 Dw HG 3I 0 8Z ' hi K 9 V 8 r m d Xiu 9 D Qg p 3 v g 8 G d X' Gf c Agi X 6 XB r TR f PL8 rDda JNU y y 8O P R x Y H x f EkZaIO h 4 ps 8 b W E1 R K m 3 u 4 P h V 68Y VHv Hu Z H 1e c vh g gd 9 8 L c p 3 OW l D Y B 1g 0i 9 B C19tG 4 Y 1 Q p 3 Y 1 B D X mf c 4 p q f g 8 N c zF K'w G O Y 3 l o ' 3T 9C z 8 c _ F o 3 Rc 6 M3G X 1 QK L V Q J C ' X J 3 p Yi 0K u 8Z ' hi K 9 V 8 r m d c h J Y Du R H ab F Zl B p-Wq h 0w XoP _ u 8sZj pJ X U r zA nqX2 p P Xq h J0 9 U 8 g 0I 9P m RZ Q c h J Y 3 W 8 VH H AK Y H D 1g c h g p Yi 0K u 8Z ' hi K 9 V 8 r m d 0gX g V r 3 8 q B D H 8 3 L 9g 0I 1 J 8em' Ek fR - 8 dd F D fT0 J l1F D VJ 1 Y Kb0K ui xza gp9 N zJ' k' K' 6 ' vm YP tc 5 gQ 08y 9 r y n e w e 4 L Hh B h D--2A 3F F Z J c C q dT aL 5W SYd d KysNRVW WS4 d d k D SY x - 4 b h YaI F VX f _ 8D z 0 jyu B fVX b 6 0s 0 U9 k d r E K L 2 y - 3 pl B Wj Z D x y FFV2 H Yb F Hj p-Wq f u UN u mQKt3r Y z uJ z Q V 8 d sOc R D 3FPg K 9 g 0KsF9 Lf 6V2q K 3 B 9 D _ D z 3 U Y8 Z -2 L y8 J n n u_9 8 Yg 2 7P D J U y f NY 4 N k n9c Z8u 5 - - _ 0 3 Y k'Ht dCz 9 U k n 8 G O LJz j jvs NV 0 wZ j R o 7 3 P v 78 g y m B o qw u o aj_ wO y xw endobj 62 0 obj endobj 61 0 obj XObject endobj 68 0 obj stream x o F W4 M 6 _6 F Jf bsA H6 X wwtA Y p8 6C U o f M W m f lWOm j n e u z 4 p o W m 1 k q 9 l n8 6 l zh u bl Q C3 E L z l m 6 tZ - _ sv r w 8x j 7 B u 5 LyG qv H 5 POC C 7 j- 5V tu 3 w u e5 7 n HY c wK r p M z v M3 X L _ dt 0 SqW 9 U l r Wz O G o Ww X W n z 2 l Gj f x U x mw E j B 0m C _ fs2a C 6 7 G l Z ' c C X ' X L X d r _ M g M q X L 3 4 6C 6R coA Z d Dc h 3 L M2 b D Cen WN h '3R M 2 f 9 D 9 B K 8 p D NR h Gf cD H ' F 6 X Q c d eZ MH v Y CH P R Q 2Q3y g Nf DY d2QWy- g 3 Ad 4G j fpu d H SH LH G P E1 7d o F 2 7R d 7 G H n v Z 0 J v lSg h d L0V 3 l92 zy g HA u f 0 G2a L M o W 6 LEm0 boA d q HYN1d2 z C 2 L4V1 H G lW m d2 6 u NS 8i isSXn p g _ O rQ q M m vM z YC c Q 4 k ' U 0 w 8 Q k 1 O 8uU R f k j sVxq M zGuys W k P D 2 ty OL wV Nq n9cX x M q r e 7 v 4r X 9 n 0w n8 q w O O - c 6 J 7 N X 7 w4 mS F3 0 f A7 z oM_ Zg w W b G d j A9w N d v c R G H OO qm j si 6 Cm ' x W Fv Dx 4 c u Pg 1 P 7 C 0 2 C r0 v IeveR N W Q 2 Nv' ew 0 g g h d0H 9 q RJ pp Rq nx V s9 R Ha r IM B Ir L z NE6UR6'Eq iyC 2Q EakR Q 2 E dRQCI -Q TT0R c R Go qHU G6 j V Yz_ ZEaU X- U Dv jy Y 2 2u KN E RV 8 pf Bp 6j La F HV o Fn BJ w8 2Z 0 h d N B aw 3Z e e u 0 tq tq K F uq vQ v _ V x 1X P y L N r H U k O v5 4os O y 3 W 7 C VM o 7 F C7 y' O 8 H ES d p V6 X j La JF 5 d R QI JF X Q Q9 fwP Eaw pIS P pf4CpX R Ha JF 5 d R QJ O hX d 0 8 2q r zgWfP c 11 g 0Ia wN fNv r 9 6 J h wR M 1 7wQ1 3 x 1 D z Fd TTQQ E dRQC O hS aHE M r H 7 q c AnPPPRX8 b7 qV J Y- DaW uIaY y u r pfKp A- 3 r pf Hp Q G w N au MShD0 - 8D G p l TRq Bn o o 8x M B R f r k ez P V _M u F k O k _g U 7B Wr k 6 v uGv tL 5v 3 c O u 9z fw j 6 K q K endstream endobj 65 0 obj endobj 67 0 obj endobj 66 0 obj XObject endobj 72 0 obj stream x X o 6 B Yi C b l H C1L Xww b Z 0D G H4 _e1 7 3 j n -J M gb d1 p 0 r XS n Su cZ m vr yc 2F _ R 4B EH Y N F Y b N Ihw w3 C EhF Tr K C P Y v n kso lg ' b V L o 5'R 0 N Kl 4 O p G r Z h vG Y Ui zN 6G _ v r H Z b c N n9iL b JG c qd u L f 7H WpY p Z k xb_GWkf m 9 D ' P ' 8 m f k h eu o Cn n u 1t P 6 O zs ec zxw M t- W Pu kh V fVbn G o _ P k _ 7 i8 82f h N 1 PD Bp X H O 4 O8 Hh K k Lf 7 c o b k H Q 4tj O9 1 nu 9 P L C Y 4 W - 4 R-k 4Jk F Ql K Y Ae V B y p n 3H W_ X 3 1btq W Q E J k o endstream endobj 69 0 obj endobj 71 0 obj endobj 70 0 obj endobj 76 0 obj stream x XYo F y H H d 1 C w m9 8 z5 0 5 pQa 7 b K Pd r X Ph m v LoJ o d fv nx 0 X h Qz 3 _r lP J VGGf q j U W f h m yJW k w V 2 4V - u _M q2i TE 3 n V 6 6 d Tt 1HP EL J p F H 5 'm Z 7 o Dv R 4 h 5 R x C Ic b gn g l B w O _ J CuR Q K_Z 6 Zo 9u ab7 de O N W 8 Gv M Z R Hn M h teh1 bP O d Ns O C jym 8 yP vqu8G Z o1Dy L 9 9 o7 Z 8 M Fu 5 0 f L 1 C 0 JY X o 2 3 E mP p X M z4 E u g 8 e y 3 z K p e o U G q E B q f G Xhypt 4 b 4 K q m 8w f_l n z 1 F - PD 6 B3 D f p_ j B 6 us M Y endstream endobj 73 0 obj endobj 75 0 obj endobj 74 0 obj endobj 80 0 obj stream x 3 L k yh y N J Dg 9 2q IWt C sB o NH x J r 6 _ c - 8 bf 0 P e z x Pt FuG _ J5 2 x 7E X 0 5D 7 GY ib3 v z N 8 M KF giM l b 5 F yl h8 d1z _KR 3 zz nk u d E z W 'Z k F 5 gU L 9 p E e x u M Gg E D Hw 9 X k 8f L b 8 3 Mom pn g x O BM2 W 3 D Y z 7 j wk Nm 5 u 5B ' ZXr m Fcab E Aw g 6'9u U qi l 9D e b R 5 d H r 4l 9wg m o kE G u 4 V k 6z g x k 8 U -l o ya O H r L f z c w 1c B M P m e 5Wm n u g v g 5 2 k 8 4 w XH _1Yr F x n K oj _S c M z YCsFz 17 F w 3 9 p 63 U J g x 0 LW 8 Lc 2N E 3 7 8 8Y 9 0n 1n2 9S y 9 nf D x w y oh u X aD u f4Tg H M m L QW g W v k 4 P oNWg zb V 6Y w V O D 7 9 w2qB f_06 3 l q N6U 0n L9g g q R ' rN P O p q 0' O B OK B AY 6 eY B N j 9 Y P Dd WBaN 'qBV p 1 Z 0' 8 q J j9 R 9 O BX B Ev3 j q F X KA' q c sCA V B 2 p ' 0' O B OK B ' ' sPV- l 4CA 4W R q P D B N b p P O 88 2 P D B OKi P NLs 'r q K 0 Hs B E p Yu _yH O D P9' e B N BaN 8 8 P N B N ' p 9hc 2 r 91F 2 ycIRJW E1 K Zp 5I iZd F4V Z mNV R v 9 kv' H 8 F Bf x M j 2 nAq Un X lL 7Q 1eEp m p Th 7b Wn u1 z PO L J j o g P f Y x W p u 1 lRendstream endobj 77 0 obj endobj 79 0 obj endobj 78 0 obj XObject endobj 84 0 obj stream x X o 6 d fy C_Z G l u0 h 9 J - Z O v R b zqI 4K dW M O bU 9M w vS b -_O Z Lb ' H 1SI L k1_dV K m C E LTn h B U w Y u B m M Yh Q 7 p 2 L nV w e 3 2 K v gnp 7 cX w EQ M VP K j Em gM D j r 'K w R ux WX O U m B Q M O k E O q W M _ K KOf Ux m j Z DV m u Eh Z l 3 B k o f 42 aQ h l K e U 5 8 o R 6 e 4 c u F DXJ Ak 6Z d ch q hqZ b 4 O YvJ ' 61 1 rJ k y N E g Ezr c h Y - tM _ 3 6 b mo aC4 G 2 - M3 Z z b w m L Q P Oc 9 F z X 37 3_ k o 1 mY7n uV n uV V w 9 h _92 endstream endobj 81 0 obj endobj 83 0 obj endobj 82 0 obj endobj 89 0 obj stream x Y o 6 P d byI9 C - eR qbY x 8K 7 e w 7 hpE 9 O vD 4 b 8 e GB n o __ U x6 2 y eqED HSsVc Q Eq - - DZ W _5 ud b5 CM j 05 k 8b Z5W 0 rF R Ivh JT z L Z rvLxC 594Itk- tW Q j O v SL MhC o W e nd P F F W g 7 ti 3 4 X Z4 R N n fET Y f M J o 3t D Nf D8 k6C -o P ' b o 2k 6D sT 6PW k tnWo' 5 Uc K 3 U M bA4C2 k'l_ 0 H J 9 - o m k v e L 9n M9 qq h z kI m P kk V R 6mB V U e 6az gi D o F pU v 8 g W kW P E N lk m Rv NA h oH k w8EZy 6p m o C_6b4 u X JD J ' k e x B l V h7X h D p V D BF2 J Y y pP 2C d X vO LYS F WT Kj dG 9 X R 1 3 8 M K Mp h C L e 0 VA 3D gi H 2 W 2 tT Lb 0_- j 5 7p h YOendstream endobj 86 0 obj endobj 88 0 obj endobj 87 0 obj endobj 95 0 obj stream x XMo 8 W 7 X v7 - Xi Q m Er8 f P P - V X Q 2nHj v hrM r l w q za K h O h yJ bF N f 8 rG yo l H vr fnz Z F Qv6 K Fzh f b 8 Y 1 VJ Q KT yR h6B UV Uu6 9M 4 1 h R d m DW 0 L R pr kP C8 N e g y 5A 4 J v e 9 kH1 z _C4 tXf 2 Vx h 5 x o kFy M v q DJ iJ CiH wr - q p sf 9 1 - _ EA Y F y o P ' m 4W v5- d mw h c d l AP x N 9q5 o- H b B Sa r o 2 CM8h 4Q 8 _ e P p kK hs J r Xe ZI Ws r z0v ' bUo V PM O n' ' c E Q 7_ J U v P e 6 ioG X 6W Py B Y m F R f S_ ej tb Hg ' X E bI v c C kH z pk c q w Fv mm wh_ x X Ao IX RRy u B U Qm O L 6TQ _I8 n N ' q k7o 1 Q G GO F 9 d W h - D9e l 3 9 z mn j n3 B Q endstream endobj 92 0 obj endobj 94 0 obj endobj 93 0 obj endobj 99 0 obj stream x X o 6 d v n KH s' 0I c l -h 0 b y A_oV 8I hU- P Gh G C G 2 q Xt jj k z ae z e 0 KC ej R c-xu e vz g l J V SC m Ym3 F f 0cgQ l X rY2 1 u fM h 7 e Xp W IC U Z Jc z8u N P e z vD 1 B w 1e p Gs v7B N1 3z tA R C uN 2 P 6 4UDf SKV ' lu n HUq- mru q4 Z N q s2 Eup R v1 qb 6 VF 1 KR O zjw g f 3 g s_h P Xy Re jF v O p VB 6 w 37 cV O b nk L O o_ w ' m r 3 3 yQ W N oIci r z W SU d cQY ' v ID eC M c IwF J l M h 5 C sh D 9n R N P K _ Y Ip v C z M l 4 cc0j5 lendstream endobj 96 0 obj endobj 98 0 obj endobj 97 0 obj endobj 103 0 obj stream x VYo 6 _ G X lt x K m 5 73 D M p '8 y ObI DT L 0cA u r 6 8c 8 Y bqP e p kj ug 2 o Y 0 m2 y nk uBL C k XB _ 4 HV Gl k 3 C V 1d y - e1 w x 6 B y6N n n NC v z b TT K aa J1 8 n B' CJ _TU FN 3 d8 cC 7 m kU Y4 NWjJ Y m x Wn W - 8 OG YH h7 5 n O je o n ii e I9 v q F X 8 U _h 2 o r o H mQA X j 0 F q 5endstream endobj 100 0 obj endobj 102 0 obj endobj 101 0 obj endobj 107 0 obj stream x V 6 _ 1 J 3C 3 D L PL w 7 H R N Nl QB K ' V K QO D'Ai d '-A q0 E Di fu V V myO R K Z 7Bg Z e 2q 8S nn 1Q V M U v P X j 0 H 8 rz1 -1 3f 6rM nv w os M p l kfH _ J L e f Mb R63 Cu W v o -Km Z u QT e N l g W w 3 H Q L P D sS1a j sP YK 69f q j 58 M C h 7 F F W e R 3 k 0 Q GU G0f 7 R lx u U l m l FxQ W m df 0 y X d B QL q 8E 1 y q 9 C L X P Ro 4o A7 K Ln m 9 o ' 8 7 xendstream endobj 104 0 obj endobj 106 0 obj endobj 105 0 obj endobj 111 0 obj stream x UM 6 W CR W 8' F m6e 2v P e C Eg 2Lr V y f 9 GU U eQ 2 nI7 G1 fy - U o 'h 0 8c k QB u DY Y Y z 7 x DR j e l SXRC el 9 89 C 7 G - M m p _K O g Z Y Iaf _ Z _t5 SX O p 8 aF F C e d HLx _ g 8h Ks k 6F m Bdwr z W_wHZ ' x gl D2 1 f m U V K n USQQ h U C 6 J u w V g 0 n 9 YP 6Z Pn 8q L V raR V jC P 4 P w-2 z u g 0 q NH4 HY N X e h n FC endstream endobj 108 0 obj endobj 110 0 obj endobj 109 0 obj endobj 116 0 obj stream x 0 47 U- ' n J r b J H MQ Oye H X 8 v f K 6 c C R WN n qyB C 1 b J o R o G _L b U D e r k x g Mz vH d U V 0 B EQ L H x l Q D 3 Y gv 5 9b eS 3 9 e C Z H fV J TIT n B J n g wk7E uk3 B N M x4 j 7 fB Z Q ' pc w x0 xu_L 6A q m X1e q c h X 1 Ql CT endstream endobj 113 0 obj endobj 115 0 obj endobj 114 0 obj endobj 120 0 obj stream x UMo 8 W 7 X K E K F QJ E Qj7 ea3 f Vw 4 98 dV kT D Mret uJr N J U yk 9 ' y u 2x zP h u N _ D j J c d S2P5 F e O h 5 Y 'iY h dS v ki c1 Da 0 - Z F z Nb 4Hm e h 1 X 5 W N' 1 K2E d Z - Sz 6 e V Cy k7 bI Su 3S _ 2 9 G 9hJ gA 7 8 - L C 2 ZT c B n'jO8 o L p hm yQ _v DlC 2 J F 1f Q o B OA 5 2 J 8 D v g g eR y U Mp n Y f 8 vn g X G QQ fw J 1 nendstream endobj 117 0 obj endobj 119 0 obj endobj 118 0 obj endobj 124 0 obj stream x SMo 0 d 2 zkVM D Js n H 4 d yx 7 8 Q d b n 0 M Av bT yW IK h C v O xr llT z _ kd D0z0 p 7o9 SP 1M g Q 9p o G yi AA Z6g- E b N 3 M e k -F 6Uv 3vh _ 2 J Dj r E N R z fCp Jf mu 9 k u z 0 9 Y C K _ V- Yj z 1 y 1jU 8q q IOP FI w x endstream endobj 121 0 obj endobj 123 0 obj endobj 122 0 obj endobj 5 0 obj endobj 126 0 obj endobj 125 0 obj stream x W Tg jDD v jb D ' - Mo o46M jD C b 3' 5 pID c 33 z ' 1Bn r C HHgG 9 E i9 q 2 96 F R M W r m z 636 v e f XD X NH Db H RO ML 4 f B b 2 XN XI B b- ' BD4 U Cf 94 O z q O ' 5 y zF x22 r ' c 4 jC q u Q j 8 bI M V W u Q X3 Q l g d f 7 8T _D _F l Q M R y X 0 o N d N7 1 Ez D N 2 k v R c daO3 K 1 M 'F 0 RzY e 3 9 q OE SK L 8 6 Yi o fw H AFu Gp R Z d q N G wx x X uS E 2 4 3zS F l 3i B eq D 8CAy z D 7 lS b 5 7 Tlc 3 z X L H ' n c d_ HUj Y0 ' ocuF E En6l 4 X c X 0 4 X wK 7 J x F_ LB j l k z Uo q _ 4xLA B W UW 0 0 8 8 Q L L '_ SYl u Y j 2 8H n N _R H D d LV P Q gdM5 1x F E W w Q P u w x 2 2 9 8 D fO w o p 6emV Y 9 ND0 B jm V L 9 y 8xh q q k MM x K j d6H NE QbQ X n - t0 h 6c 8I V Y o A' E 4 y 7 Z Y 8 5 CK3v 7 u v 9V gc 10 b c Z DUj fJ D sU l 8W 4 d 'j 5 Xk _ u o BV m6 4 p ekZO u O C o Z NQ c E 2 gWv 7 q l sn l B Ex O M k 5 k d3 3d B M YN d g U p U d CWYg d X e P v U E e g L57 _ d r 5L u 7g aU F Qq j h e 0 pQ9 Ug V z c P 7o x sc Z mh Z 4 6 Y 9 xM 8 iV m 7L k h l c q 0 b - G 45 C KG d 8h m e Y igI N 0g 6 Gq nM C p Q0 6 P2g x m QYY FdUV r 7 Ed r r' _ H L j 2 r Yx h u 0 k 3 8q9h wi 88d fB oKxI r v E d9e jd m0 zI YsR 1 9I O 0 oB Q T11 2 5 6 Cem 3 K Z P C K NjS Tx W DnUm q Z 0 2 U 3Lb Quw F 1 W 6 v7 X m 0 K HL kI-S j -V tf U G pS X q O m _J 't zn R 8 U L2 j O D M Zw 9 mpo ao j td 6 U 'C Bg x O EQ h Hv U g n7 1 K q 6 R 3 V 3W H 2i 8 r' CNv GB v 69N j LcV r w 5 f x d H P 'w 2O j O t2 kL YZ V96 0w Z Q X Zg bmaq R - uN 4 O qy5 C o endstream endobj 127 0 obj YBEYAK cmssbx10 endobj 128 0 obj endobj 6 0 obj endobj 130 0 obj endobj 129 0 obj stream x W TS poBP b V Z 8 d 2EPQ U 4 2Xc Rm l Zo Y' o R Q wrw 4 15u X D q K x 7E J 93 c 5 9 e K l 8 91 eQ V rNH H 3 kRb 1 V cR D F6 H 1 g Ps LQ ZL B 2E H P_ 4 4 h C h qh D W R L f BP C 4 u zjdc blkTj Jb W h K HO d d L cM g L 1k5 6 0 b X m1 9 O r R z 4p m_ tcV hW O 1 7 4R e o 3yx 0 M b Y L h H m d F ' C 3 7h J 1- Z RUh - Ha F SU K IVB 3xS Ye - X X 0 3 H M eH P pP 1- 0v h 8 HMm 1 9g F U B ' M5 j 4R Qr C 4 X1 o F l Y p ZO O q5 O2 U Q QBH4 4T3A F x- z OoK N l _ L kR y ZT r po 0 3 Si H 9 i8A Nn w X B 1 OaLz 8 E V K Ju 3 x m X 7 R j l n - P yU C q x6 J XE B4 - r Z psZ o k aq L k 8 8sx O 4 j - Gp v J c n k G X g UO u0 c x 8niL m7 v2 0 JE 7e aR xz xu b7 e Z E rj' ZvR 4RWt N 1 Q a0 c A0 -6 X g Y gI K P - P uZ CAe YK 'h K D 5 QW H D VD O vd w N ' M P 1 e WW G 5 9 w n R Y r C f wH L _ 2 wJ y' Hr K' d 2 R zl X 3v jN P Hy - P 0 - - N OP v CoDx P p_ L KOjoO BsIisp j j X J y _ 2 epA _kag 'W q Rv5 sR l 6 w C8 M MZ H- X jw 66 F F tf Y l V h FN aV3 K_ Z 0 u ' ' zp f M 3 R LnC e Fc J 0 b ' G Pt m p lYe c W jL e d E 7r W6 4 L - z x e xw q U K bKR g qY - Y h UZ ci h6 g ' F p mT r IWF B G w O6 V j Kc vv f H 7 0 Q l R m ' KZ X - Z b K3 v p V-n x X J 9 sb F d8 F _ _ g W ZC p qp98 F B6 G sl W g C m wfD p lZ x 8M 7S Y _ Y rUAv 4_ R- H Z E p W G U ST y yQy s7 e n Z q tV Y zu N y vx 4 P cs u - Cc Sp g Y r 3T Q w Dc m uax 9 b C zYM Q r d C GoIO jN g d v 3WE L G yy Pkm q E BfCT FK dILg H 7 5 ' p m MeT O u5xS k r2 z U PT AFg U ' ' Z - M 6 j 23 n33 Oz endstream endobj 131 0 obj DUEAOF cmss12 endobj 132 0 obj endobj 7 0 obj endobj 134 0 obj endobj 133 0 obj stream x 6 vj U kD AX Q2 R QV Sj C uQ 1 V Q u w aQa_ 6 5w Zo G 4Y 4Q Mvr U D Y K _ ed g U j Lmnry QE EsT99 v Z r Z 6 u n V K W D g FA D bQ LKeR r BJ4MCh Cs Q Ea E e E C H P Q j 4 f 0G l 4 m k J 1 W uHzKK P 2 k g m B p 9 K 6 1 8 'j L g g0 O J m 9 4 xs8p x n ZlcL v qvL w ' 3 7 _ y w FR V C w p -ims cb 8w tM d iCG u w0m x x 6 db W y k l w V SX u g8Y 02 v z 'SD w 4- m i2z 7 u R 1 0og 6QI _Z D V 6 P - z4 - ebU X W Rz y nW B ' u N 5 hm 3 v j UZ iow C' L XHy f o W Wt 2 _ z KC 30 y Y TTr M g D G XE X - Bq l 0 k K 7 CZv sy b k X UD g yY l f l 2 _ V e nz Z z _ Iz d - 2 8 38 y 182 n pi Oe UO V o R m F k C0S g6m 4 fNo Z w q CL uk oM 1 b n k f lC6 Q p 4p 6 ' K 8 U' r g u197 sgS L q c yB 6 y bv 6 v9 aEyy - 9 K Z _ VW u -M fp' c 9 6 Er C z Y R QG hK Y v endstream endobj 135 0 obj LQLHHL cmss10 endobj 136 0 obj endobj 13 0 obj endobj 138 0 obj endobj 137 0 obj stream x W tSe RC PFD 5 67 DG E e y 83 y y9 w 2B p u m 'L -Z Z L O - li biEANVI iqV jA g U V iJs EY Y V E2 x9 AR1 U J d2 B E ed G6 G G 1 D F 3 M 1Y' L 6 h X3E SgL LK 8 E 1 cx U _ 3 lD B G l6 g 3 jPmP 5 Yp R xi c M J2YI oc q n wxp5 ryCYg p h- W7 J u P K 7 v Ez P 4 V n Jo w Gp z v 0 gyp - AU w k E Li F3 ' 5 DR h Q B g 6 j d J P M Lj H o aJ O Pt C bB- L 6 8 v Z v K J -b RV y w F pvQ f Sn 0 3 7 p p p GnuI Y KP Z E l 2 g Q 3 eu h G j p h -6 G v9 9 8 p N N F c W p e B 95 Rn N l O ' f g n 1 E Vab 9 wK p ps r xf m1S _ Q H g U f 9Z 2 g NM L _ f t8 m qx x Bk Z p6E 4Y o 8E MSF N 3 z R N U UT h rNY k u 6 g 6 F k l 06 X g D n 0 7w N 8a d Q w YYl CL7Dy 9_cP p G CTET uMF R7 n -e L NLmc 6 Di O x 9 j f L Dd 03 w M op z g - GM 6 m 8 Dc E G m F 6 K L R p v hD9 VC- ED Q j l xcl q qU t9g j EPJ 9 v h QT mfpH u x N bwZ _ 8 Z p L O 8 M v un UZm6 V 2 x ocu e 3 hB fx 7 M U o H h D io W B l 2M D yq'f-a1H v b o E 36fz h v j z G m w V pQ VS cy 4 q Yo x H Z P sE Xq 4 e Pr u8 ' q5 VQf 1n OS k v o N cG1_ yM - B U7 6 1 b Q aQ MX9 9 GxMB ts 8 2 X w J e _ e CU BTE9 N 2 M k F E Qy ouG q_ 7 H x_ LQ tA7 Z zg h 6 R eaS K H xv OJ C CG c 9f j n X H D C h M q K Y Yj 8 Wy 3T h '_BG _X U o- f 1d J O D 5 cn y y D zw w m p f Z6 Tl YV L W g ' v x p e q6ER K 1 PW u qad z J- g1 _ u VO r O lD E G KYA vbkE L e m r 10D q G 4 g E s2U 9 E G 4 _ i_ c r r 9 -gEE B K p g g RS p bv Dud n t9 Z Y Q4 F 0 lh W e Q _ cB q_ _ y m e hV N k zi k Aa D v wf w d B z U 1_r ' X 4 9 Din H Du nehJ l x SV u0 Sh p F b m Z SLbW o 7 LM d 8 lN 3 q n7 k Ud _ e L TQX r e D 7 w P O 6 Cn g ia endstream endobj 139 0 obj KKLEXT cmmi12 endobj 140 0 obj endobj 14 0 obj endobj 142 0 obj endobj 141 0 obj stream x UkPW f G ' 4 q5c4 u 3df G P u6YCRZ q Z U q n w 9 sq 5 qX j 9 3Kx YO r _ FM J N y j R m RQS J 1 B oH 7 NE 8 uMm N U 4 B h m W 1 Ar B Q v Z U j UZ 0YU F O J P d_ 5 g 3 r V x5 p bR O k M N Y 8 Y' 9x k 8 8 O L f3 hT 9 h4 n BEb n P P IA bc k r _ xw L f - 43 c - D n 4 U 1 2 - t0 l vv 9H 814 fW X rG b 6 irs w O 0 rN G 2 c Y n2- P 4c l 43 V 4 0v 0 k ' L h 7 E - v k 6d e X B 5 FxQ vf rX1 4m U F v _ Ph G 4Zt4 2 K o C ep4 h 6l 'Y n oM6 N 8 VJ 9 W d l YZ o1 QZ _ gp g CC v L O G ' Bzt 8 n 2 K 30 1 HrRz B O K a' h -tb Ll X m z uL 6 N 1 d gD q J' Z Xg v v Bz d YV u wu9 NW 2 _v1 e y f D g N v q b L G u1 k x p 4 MG e 0B J8M 8 N 'c uM Jnj H 7 7 _ m fm 0 K d ' B Y 2 f lS CV Uf0 v z n y W RS C 7 8 n 2 H Q -- 6 Y W 5 C ' 5 Q TF C M vo 0 pI 2 B 5 3g W DiU B H VC76 o H fK x k 7 tGG wn 2 L x D1 u _ h GB 2 ver endstream endobj 143 0 obj YWPFFB cmsy10 endobj 144 0 obj endobj 15 0 obj endobj 146 0 obj endobj 145 0 obj stream x U PW f P2 q G DL 7 2r r Lw 7 1 ZQQ xa k DM M VWu H Y 92K o v2 7 E G gT M Z 1 D - wI h3 u w fC II wRBr 6 yiRtLJ f 2b9 H F XH O O B02cWaD8 p1 R O G M K R w J m j 8 q D Lv n q r u m MUY c m Q7h c KU P R U0 4 e fI WZR W _J 2s SA hk' G 0 F 4 G W G p E q8x 9 E BN K 2 MjI F N P Fq p 4C 05 f H B w0 7 e j 5 1 zD r K B y 7 G _ _ N Pr J2 Rwn ' - v ts n l X 7 9 B W Em p CTvHZ8 u y x C r c 5 O b 74 w _ W4 9 - g jq V 1 k Qh w M j r l O wo 2 M m5Ic m 3 4 B C z J X Xi M 9 g r Bh U w tI 5 f l O ks uBU d 5 Xn6 w Pv Q OK 6 Z E1 Nv x4 G F n B 6 vLv tg V j h qmF Pl 9 K 7 h 1 Ng 9 0 3 E _- 9 Y X d Y R x r MNm ' w X _ 3 jUl _ j n W n y Ih IW xZa nx C 8 hw w x z E mG qpP M 5 Wx g o vl k j d 8U V O w o h eW 4 d bt8 vc r O m CD o B D v f 8 5 0 t0 O uY w6W B Q O S- h '1 q L Z V 2 L J m 5 v W u g rS3b ouhQ4V C 9 x F k 4 R eA F -q Q Yl Ol e aLz o v D e7c2W o 0 LR fO xo 8T 2 ohX P C1m 21 W Fa R XU Ey TV b m V 4 9v 3 G endstream endobj 147 0 obj TOSGSG cmssi12 endobj 148 0 obj endobj 16 0 obj endobj 150 0 obj endobj 149 0 obj stream x OMl D NC q ' d f m1k eM Tn o g y O 7 C q d lD Sa Ox ' IWw 1 B H V 7 - H - JTy q u C Y b2 X qL 5I m P 3 7 B G W pt Vn e wJO Z k ' F V Q C ' V rw uc M p f l F 0 B u Z g H- e z h K 3 R RPcG_ Z J6Y g0vrv z K c endstream endobj 151 0 obj CBAAAA cmsy8 endobj 152 0 obj endobj 17 0 obj endobj 154 0 obj endobj 153 0 obj stream x uUkTSW Z ft H8 R 2V c R P j Ng xhg u 13 Yk 1 l w cZ y q w Li d q E j _ D 4 H c r y xF u R 3 c dl 6 tl Fc31 Va l F56 'q8 f 3 6 N Q d D 4 X7 b m R Qd El O6 R MJ iop023 d f h8 Q r R s1U o l G M 3 B C MyF m V rg H YL U e 7BzP2 _ A2 1 C I2 jY E X6 7 P f zc 8V f 8 E g Y KiK lUX B4A I6 u ZE4v X o W r x k O ucF F G hn P g n kZ z L g 'h Sy 6 ' ADf P P tJ 5 o 5 x Ep _ W 9 1 jZZS uy 9 X pU w E r X2s U vg 5 N jd D 0 6 y J U y wS u mez 0 L LS IsDF L b u O 0 Ki sTs k e 8i vi G 1E z G 4 ' ' v Rg o sq 5Lm Em z C C 8 n _ 4L x bM l z 1 ' 4A 4 C Od F W - v Dg B 8 y f o 1 g b H j m L V ma f G H kU G ' v e '1cl B 0y d - C 7 v Z JK 9 _ WB B wD rlXb C EuyT N cm G L ' sym c x f vJ E y 7 7R 2 3 n ' 4 ob E EV X E E ds m K yJ Uk U9Z4 e j zFE e0U m E w ZbYd 3 0 y F Ii 8 M b b X yAl v I0 n - F T2 endstream endobj 155 0 obj HYWHBQ cmr12 endobj 156 0 obj endobj 18 0 obj endobj 158 0 obj endobj 157 0 obj stream x UP_HSQ p zv L0 M Z mW F Y w 8 v B X D R G B l H Q 5 8w 0 G G E z 8 c W X B O ' G 4 0 g L p e XJ D C M J G bZR gR nz dYr F L8 q q 6 - 0 u XBR ic g X 94 EY K C w N Z H Ok r i3 Z D 3O 7 Q e p u m -4 2 Q P C m IK g bY9 WI Z BsU endstream endobj 159 0 obj LAGAAA cmex10 endobj 160 0 obj endobj 19 0 obj endobj 162 0 obj endobj 161 0 obj stream x Kq R idiz aC _ msl v 2 uHM x y P jU Ef b c kY Z o2 0 F 5 mS au M q 0 Z qd J VSa r mP 8 K K xF L K 17 E 4 tW W r g 3 F f H N' E U u E r b wt y 0N Izj Dd ' Imo L w B H x z f v B9P z - -6 Ig 9 wa u 7 _ x X c NG ELX w o 0 rO o 0K7y h -E u R GP6 Kms 5 hq U 8 R ' endstream endobj 163 0 obj LLAAAA cmmi8 endobj 164 0 obj endobj 20 0 obj endobj 166 0 obj endobj 165 0 obj stream x G PPEAAA cmr8 4 g E R IM 1 0Copyright C 1997 American Mathematical Society Rights Reservedcmr8Computer Modern P L l H w u tt u u tt u v j _ -o gB WI x v z0 GP 1 vF j pcbVs j f hj h ' r Gl w Y x Fv b Q DfVT h kpozc M 1 Q f k u Ena mlt N x v cj 8f tj v o 7 Gxendstream endobj 167 0 obj PPEAAA cmr8 endobj 168 0 obj endobj 21 0 obj endobj 170 0 obj endobj 169 0 obj stream x eUkT q L DP J PP o X 0 EC zB Y f 9 o 3 ' fdL L 8I mR x g0 KB ' X 8V 1u U f 3 5 L e -1E C gi e bU 1 m l 4 9a PL Hl4 M ' b X6 b l 87 8L U G 8KKvH J j RB z 5 O 6 m 4 z n jk e 4 N e'su O - eYF _ Q v 2 d c l m u O q 5 B' al u 22 AX P H g TEN V 4 7 qa 1 6 8D ' 9 ER W uDh z Tv g LY qd oQV ve Lm M 0 D Q t7 B K 2c H l N 1 3 P M7 7 7 0Z mt Ho B _ r f V V Zquq ae p HiDM 8 z 28 w v Q _ 3rEI d u k U ea g 1 W r 7 d XN 9YN p K M C EB g V Q _ 5 lv r uSy M om 5 N 3IHDEWg N '3 1FDI _ Q 2 E OZ j 0 rD 9H g e grp 'W h R m d - x q GE J M d_ N B U 9 G E C4 E 4 3 _b fN h8 8t G Y f f7 0 p eUJ-W - 484R D D G ui n0 2a _ 3B D 0 pL X RA VSb W X Y 4 5xAoJ DA9j g U 9 3 Nv G XA 5 Y Q 6 C 0L4 CL 5I ZH nx m pH _ uGxr7 w tXT O5 x bqUN zsv 6 W gE p C BN x 5 V n 0 w J IiU H U b 0 0 ppce0 F5 K 1 qS kJ 1U q -w UVc Bg 5 U zU jr V B R d dS M _ g GLMb x x 9 RH N c k x B oE4 uH N'F oL js D BD B u C- K 2 27 1x o 0 l O j Y r H 1 7 dd dH O 4 xa jf v 5OZ K L mX M _R g w g o _ P u Uee_c c N' q K K mj - B L E zy LJ 5 h n f e B 3 h d l Ft fQ d wI GX w 4 Y m457s ' 5 f 4 C c f m mwZc _N M m1 B Y c m ZcDg w E g B_ C Om d Q - z -_ endstream endobj 171 0 obj RYSHNG cmss8 endobj 172 0 obj endobj 30 0 obj endobj 174 0 obj endobj 173 0 obj stream x e _L U d L B f1 4 87 1B Vz B7 R Fp ct H c 9_ GS 7 fs E - 5 Q R Y Un Q d g q JK 7 j 4 DG W5 k x c Z6 0ov 3E m f G qP D u j 9B Q' V O M U Q axe Z fG DW B 0 Rj 9rq o 2 axl e P J 1 x y_N D H2 c s5 4 f pZ N c S-dJ' B ii-rY 7 -G W 4 r ' r ZpR 4 F k cDoC z 2 0 4cW Q L -2 ' z H bU c4 i5 v y- 8Dnm 6 oA4 Dx 5t z bG D k k 0 V l GRR 2 9aZZFs B y P W FR 2 w 8L U4 j o c v I4 O r 1 b 2m K l o ' F 3endstream endobj 175 0 obj NWIAAA cmcsc10 endobj 176 0 obj endobj 64 0 obj endobj 178 0 obj endobj 177 0 obj stream x _HSQ J E 7 0 js 6 u r D j C sD C 6BH m 1o 2 K4 G Vn 1x y V hd E2 8 y6 q mZ 9 H 8 S8 L gp c85 D W pA z 9rU mq k ' W g 5 R rh ks 64 U vx o G g wZ o D N p z 4 H16 1 7 z u B kKw Z Z H Z n 1 8 Z 2E F endstream endobj 179 0 obj IUBAAA cmbx12 endobj 180 0 obj endobj 90 0 obj endobj 182 0 obj endobj 181 0 obj stream x WkTSW bu m u bk o o H ej Z Xg j t_ 3sC gG lC Y1I h N 1B jq X b 32 p VG 50 U p K b 1Q Q H O U z V N'0 5M M O Nx HL 4 1 f E D H w B U jb ' FbA 0 8 B N WO - F G E u 6a 7 w ' q 6 e nA N Z gd P Xo 0 xxiDz P Q -n _ 68 o Y9pa r v d X K h 0 9 d U m- r Z TqbF L b 4 1 q N l SU b M dND9 M J 7DB b 2 '' k V TL uO V28 E O 9 b Y d 5 u gj s5 r l lmz Nifm q HY93 8' 'w LAC6t y 7D9 j 6S UkKQ z b Y W VA e x YB p lJDy O Q Q 9 Z VTQ Uy Mm 8 PQAQ F Mo kd t5 2TW3 W2-c 0S 8 4 P 3sU dH y Lfdla 4 H Qu c M L wA Jl 7 E g g 2t Lvu W m L O g - 6 f 1 _ M 4o tL zO cA 06g -H d d N N W 0 z Q 9 U K b Fl c dJ9u P nU K hz 6 BP L h - R b1 E HI 9 f U VZ f2Y B 8 8c 3o Zk h z Ud k L G vH9 R oy K 3 C RVT R XUp ' zS 9 n v YCVPZm 2 f - 1 m LA 5 kKB3 6d B 7L U K wf U g J V2 q nz V p X G Im K R B e 3k eK b 6 D K E Xrcx v 1 q o V ' F F 0 X p 1 ' 3-g k jmA n 3 O Rc RS Zl 0l w q x9 k 6 Q 7 e x 6 X d N R QQ p C nf un U Z mWE 6Y M c q Sj uI m H l y O G m X v o 6 - c w Fa 1b - L OZR tB92 E cpV O h G P q X 5 N ' _ r qT y aa NbIF X Bpb l BnQF 2 7 j MG zX y C 1 X j Lz 6 0 g w oV V N Y rb HF8Er l c B WV m j aI xq h 9 n euviZ e 4 J v r 8 Q_ 3 4 e P hw k X6- K h f G 3 _ e - Y P o r W E B h fG 3 7K D h iG Y _ c Y E N e R k0 qF 1 u vq v 9anZ XRW mO oFS MW U'm jR 3 j Z sJ_WQ 5 Ub QIeF ' H _ z zd 7s _ 9 u H 3 - OO W7 2endstream endobj 183 0 obj CDYSGB cmtt12 endobj 184 0 obj endobj 91 0 obj endobj 186 0 obj endobj 185 0 obj stream x O u l v 9 L Atd Ci RN 9t g xaSd 8c 7 x h U K Eg sN 8 G O Xv o 6 V n Eg u Q 7 9 -e ' L B u 3e 5 Gr 9 H bwXI p 2 B H g g D X z x FB e PR 5 n M J 6 y R R c X Sng w f 4 E k sssn fg' 1 N q y M 14 o I4 0sk AB v 1 k4 O 4 4 W h x Gws R 'T Ww QT H8 O v PT B 0O fv W - 5 _ M W odhp0 V g E9c Xs W B 7 d0H F y Y l F 1 x p x 8 B c 5 zk r Y 0 o Q BME c x E 2 d R hS ' M u tR h F n l W Xo Pz j X tn y - b M z N y G E fendstream endobj 187 0 obj TDFAAA cmti12 endobj 188 0 obj endobj 8 0 obj endobj 59 0 obj endobj 85 0 obj endobj 112 0 obj endobj 189 0 obj endobj 54 0 obj stream x M 0W C qn H R p xK v b 2 4 Z e5 n 8 1 Te V c 49 N k Ggl 0 -N _4NZ z Al D f p M p cI4 F Z F X '_ lf endstream endobj 53 0 obj stream x P o D - xJ p M 0 1K x ti z - d N p z 6 p b endstream endobj 52 0 obj stream x M 1 0 f 5 J 8 G ZOO k9 0 d z rm m F kf ' J DFU z OU 9P yoZ K nJ YcP N L g CwE f FYZk ' 5 bb 5 endstream endobj 51 0 obj stream x u C HG P c h 8 yUx f H h K k J Kl P d O wP k6 ' 7 G CS U LhTNP0 MIT 5 B H A' u nendstream endobj 50 0 obj stream x 0 D 6 q R nQ 'e tAvA 3 r z 1R g N Dendstream endobj 49 0 obj stream x U H R 2 f 7 'G M 2u qi w 4 C n b 5 0 qD w R x nm Ru X n f c Q Dd 5 7 qc v endstream endobj 48 0 obj stream x E 1 0 _y Q n UCl' N G 3 n L j F 5 U_ sl G Eo 7 5w 86 v h u l uSi X U 6 5 c T3 U f 6 r endstream endobj 43 0 obj stream x c b 6 - gI YP U 0ba1ca ca ca U YXXD 6 X endstream endobj 42 0 obj stream x Dq Kb M P ' h B H e G 8 u O Q J O Y _J Q 6 - 5 u KE m ' u 3 X N Y vz 0 yendstream endobj 41 0 obj stream x J 1 4J B m j E T1 Ay 5 q69 V UB - Soendstream endobj 40 0 obj stream x m Q nD e u f vx 4 5 4Bj7 w p C vsZ k U4X Y H L O R YVD F J XE endstream endobj 39 0 obj stream x 0 ' VQ 4 H 3 FB U JeE pF 0 p CIt H ' N R j B Z 7 Vk oh 7 j endstream endobj 38 0 obj stream x 0 l p wp- rv M E H ' dw 3H 3 2 w Q H 0 5 e7 O n o endstream endobj 37 0 obj stream x u 1 O hL q U 0 5J J 2 ' E Y 7 7 L o h a2 '6 r7 vhe -l C3 O ' 7 8 m KG H L a0 2 f o endstream endobj 36 0 obj stream x 1 0 o R Jr c Br4 G D U - U lTLd4Vd H BU IZ j a01l O y CqB e 'KgTr GJ- n l f O G e 7 p K Z endstream endobj 35 0 obj stream x 1 0 C0 J'j ' Sz B X W endstream endobj 190 0 obj endobj 191 0 obj endobj 192 0 obj endobj 193 0 obj endobj 194 0 obj endobj xref 0 195 0000000000 65535 f 0000000480 00000 n 0000000615 00000 n 0000000535 00000 n 0000000021 00000 n 0000044311 00000 n 0000048869 00000 n 0000053624 00000 n 0000092045 00000 n 0000001809 00000 n 0000001951 00000 n 0000001868 00000 n 0000000711 00000 n 0000056566 00000 n 0000061687 00000 n 0000065063 00000 n 0000068415 00000 n 0000070005 00000 n 0000073140 00000 n 0000074965 00000 n 0000076702 00000 n 0000078590 00000 n 0000003328 00000 n 0000003471 00000 n 0000003388 00000 n 0000002145 00000 n 0000004685 00000 n 0000004828 00000 n 0000004745 00000 n 0000003640 00000 n 0000082285 00000 n 0000006774 00000 n 0000006917 00000 n 0000006834 00000 n 0000004950 00000 n 0000097897 00000 n 0000097519 00000 n 0000097148 00000 n 0000096834 00000 n 0000096467 00000 n 0000096103 00000 n 0000095813 00000 n 0000095411 00000 n 0000095154 00000 n 0000011146 00000 n 0000011289 00000 n 0000011206 00000 n 0000007197 00000 n 0000094763 00000 n 0000094384 00000 n 0000094074 00000 n 0000093709 00000 n 0000093318 00000 n 0000092992 00000 n 0000092582 00000 n 0000013079 00000 n 0000013225 00000 n 0000013141 00000 n 0000011659 00000 n 0000092153 00000 n 0000018828 00000 n 0000018972 00000 n 0000018888 00000 n 0000013395 00000 n 0000084245 00000 n 0000023600 00000 n 0000023744 00000 n 0000023660 00000 n 0000019343 00000 n 0000025481 00000 n 0000025625 00000 n 0000025541 00000 n 0000024126 00000 n 0000027058 00000 n 0000027202 00000 n 0000027118 00000 n 0000025783 00000 n 0000030102 00000 n 0000030245 00000 n 0000030161 00000 n 0000027383 00000 n 0000031796 00000 n 0000031940 00000 n 0000031856 00000 n 0000030627 00000 n 0000092263 00000 n 0000033583 00000 n 0000033726 00000 n 0000033642 00000 n 0000032121 00000 n 0000085809 00000 n 0000090036 00000 n 0000035454 00000 n 0000035595 00000 n 0000035511 00000 n 0000033955 00000 n 0000037017 00000 n 0000037160 00000 n 0000037076 00000 n 0000035812 00000 n 0000038353 00000 n 0000038502 00000 n 0000038415 00000 n 0000037377 00000 n 0000039752 00000 n 0000039901 00000 n 0000039814 00000 n 0000038649 00000 n 0000041025 00000 n 0000041175 00000 n 0000041087 00000 n 0000040073 00000 n 0000092375 00000 n 0000042008 00000 n 0000042158 00000 n 0000042070 00000 n 0000041323 00000 n 0000043187 00000 n 0000043337 00000 n 0000043249 00000 n 0000042258 00000 n 0000044073 00000 n 0000044223 00000 n 0000044135 00000 n 0000043472 00000 n 0000044979 00000 n 0000044901 00000 n 0000048625 00000 n 0000048659 00000 n 0000049570 00000 n 0000049464 00000 n 0000053384 00000 n 0000053416 00000 n 0000054307 00000 n 0000054240 00000 n 0000056326 00000 n 0000056358 00000 n 0000057263 00000 n 0000057182 00000 n 0000061444 00000 n 0000061476 00000 n 0000062662 00000 n 0000062349 00000 n 0000064820 00000 n 0000064852 00000 n 0000065774 00000 n 0000065714 00000 n 0000068171 00000 n 0000068204 00000 n 0000069163 00000 n 0000069078 00000 n 0000069763 00000 n 0000069794 00000 n 0000070712 00000 n 0000070657 00000 n 0000072901 00000 n 0000072932 00000 n 0000073963 00000 n 0000073822 00000 n 0000074723 00000 n 0000074755 00000 n 0000075679 00000 n 0000075624 00000 n 0000076460 00000 n 0000076491 00000 n 0000077411 00000 n 0000077356 00000 n 0000078351 00000 n 0000078381 00000 n 0000079299 00000 n 0000079244 00000 n 0000082045 00000 n 0000082076 00000 n 0000082994 00000 n 0000082939 00000 n 0000084017 00000 n 0000084050 00000 n 0000084966 00000 n 0000084901 00000 n 0000085567 00000 n 0000085599 00000 n 0000086515 00000 n 0000086460 00000 n 0000089797 00000 n 0000089829 00000 n 0000090743 00000 n 0000090688 00000 n 0000091802 00000 n 0000091834 00000 n 0000092476 00000 n 0000098143 00000 n 0000098548 00000 n 0000098587 00000 n 0000098625 00000 n 0000098693 00000 n trailer startxref 98890 EOF"),
('A Theory of Changes for Higher-Order Languages [pdf]', 'PDF-1 5 16 0 obj stream x'),
('Functions that feel polytime.', 'Crunchy Type Thoughts types complexity Menu Skip content HomeAbout Functions feel polytime Polytime functions many useful properties chief among property polytime string checking polytime property equivalent checking polytime property light say function feels polytime polytime properties translate polytime properties Formally exists strings Equivalently feels polytime polytime functions feel polytime functions feel polytime polytime Theorem uncountably many functions feel polytime Proof Let enumeration let enumeration string functions construct function feels polytime Let equivalence relation defined relation partitions equivalence classes based membership pigeonhole principle must exist pair strings Thus define construction Also construction disagrees finitely many inputs Therefore feels polytime arbitrary enumeration shows enumeration functions contain functions feel polytime Corollary exist uncountably many permutations feel polytime whose inverse also feels polytime proof inverse Exercise Show group permutations polytime ways normal subgroup group permutations feel polytime ways March 7 2015fmota Leave comment Blog WordPress com Syntax Theme Crunchy Type Create free website blog WordPress com Syntax Theme Follow Follow Crunchy Type Get every new post delivered Inbox Build website WordPress com Add thoughts optional Post Cancel'),
('Edge Detection in Computer Vision', 'Skip content AboutArticlesKnowledge Articles Edge Detection Computer Vision Posted February 17 2015March 14 2015 Austin Edge detection one important concepts computer vision pretty straight forward idea running edge detection image output edges similar sketch goal explain edge detection works clearly also provide new easy way improve edge detection significantly minimal work obtaining edges many computer algorithms become possible edges contain majority least lot information scene example remember Windows XP background green hill blue sky brains try make sense scene know grass pretty uniform see sky clouds one objects separate edge majority information scene important concept computer vision reducing image edges becomes much easier many algorithms identify learn process scene Edge Detection Filtering majority edge detection methods based filtering general filtering act removing example filter water removing parasites Similarly trying find edges trying remove everything except edges difficulty removal everything isn useful edge leaving appropriate edges know useful edge example run Canny edge detector Windows XP background see little blades grass kind obnoxious doesn really provide useful information Even clouds really clear perimeters set Canny edge detectors setting threshold non-maxima suppression edge meet labeled important Rather diving thresholding Canny edge let bit general build filters Edge Detection Gaussian Filters One basic filter edge detection gaussian filter others ll use throughout article gaussian filter name hints filter based gaussian distribution looks like parabola except 2D Gaussian filters applied pixel via matrix multiplication accomplishes blending making center pixel minimally based neighbors example run evenly distributed gaussian filter image image cat get following Picture cat Mew Gaussian filter applied picture cat Mew see image blurred gaussian filter took every pixel made component pixel value based neighbors order make useful edge detection take derivative gaussian terms x y 1 may sound counter intuitive way head view images dervatives gaussian becomes clear take derivative respect x y components gaussian large peak trough created know derivatives take second consider case come pretty quickly Due large changes magnitude gaussian coming peak peak trough occurs code relatively straight forward least Matlab Python View code Gist one lines get gaussian take derivative respect x y Edge Detection Applying Filters two gaussians apply image also use non-maxima suppression process setting pixels zero part local maxima words remove noise code apply filters follows View code Gist apply image cat get following Basic edge filters applied black white image cat interesting also apply method RGB images get colored edges well Basic edge filter applied RGB image cat images represent difference color pixel neighbor color image three channels RGB black white image one channel Edge Detection Orientated Filters limit filters absolute x absolute y direction Let build oriented filters method more-or-less comes paper Freeman Adelson titled design use steerable filters 2 idea aim gaussian filter several direction Essentially take gaussian filter angle different directions create different magnitudes based angle edge associated gaussian example angle gaussian 45 degree angle image edge 45 degree angle much higher magnitude used gaussian zero degree respect x y case generated several different oriented gaussians top row x derived components bottom row y derived components various gaussians produce filters 90 45 -45 22 5 degrees respect x y components produces variety different magnitudes edges though filter detect nearly edges code used almost exact single filter instead merged differently looks bit messy decided try make clear possible making explicitly clear run filter View code Gist loo closely see differences magnitude especially wrinkles merge images get slightly better edge detection cat isn much difference oriented non-oriented filters possible see small improvement multiple orientations Edge Detection Improving Color Spaces past two years done ton testing experimentation different color spaces Specifically Lab color space put simply different way describing image example know RGB gray images perhaps even know YUV space Lab color space similar reason fascinated Lab color excellent ability generate edges scene Lab color space letter represents L Luminance alpha Red Green b beta yellow blue fact color channels perfect finding gradients yellow seems rarely appear next yellow naturally similarly red green although yet prove outright Lab color space strong correlation humans perceive luminance color Lab color space luminance separate channel making better handle differences color opposed RGB luminance connected color put action takes minimal extra coding need convert input image Lab color space optimizations make one extra step significantly improve appropriate edge detection View code Gist convert old old Windows XP hills image Lab get following Lab space Windows XP background image apply filters without non-maxima suppression get following clear visual grass clouds dividing line grass sky Edge detection Lab color space hills image Finally run non-maxima suppression get much better representation edges Canny edge detector beginning article Lab color space edge detection hills image average method improve precision edge detection basic method 10 determined running F-measure tests Berkeley Segmentation Dataset Benchmark Edge Detection Closing Remarks infinitely many ways edge detection methods described means best easiest implement even easiest explain explained using methods personally found interesting Plus part assigned homework CS543 course UIUC Computer Vision re course COPY CODE made implementation minute key components course available Github including OpenCV implementation C However want take images cat alright Recommended Articles PCA Principal Component Analysis Everyday Algorithms Pancake Sort Using Computer Vision Improve EEG Signals Introduction Markov Processes Cache Multithreading References 1 Canny John computational approach edge detection Pattern Analysis Machine Intelligence IEEE Transactions 6 1986 679-698 2 Freeman William Edward H Adelson design use steerable filters IEEE Transactions Pattern analysis machine intelligence 13 9 1991 891-906 Categorized Today Learned 2 thoughts Edge Detection Computer Vision Yi Han says February 23 2015 7 36 pm Thanks sharing cat really cute LOL Reply Oliver says February 24 2015 2 44 pm cat Mommy want sleep tonight Reply Leave Reply Cancel reply email address published Name Email Website 1 nine Comment characters available Post navigation Building Kickstarter LearnedAnalyzing Email Data Search Term Search Search Random Random Categories Categories Select Category Achievements 7 Goal 11 Interest 8 Programs 6 Projects 27 Thoughts 37 Today Learned 72 Uncategorized 5 C C Tutoring Go Tutoring r OptimizingLife Desktop Site enjoyed article subscribe via email subscribe via RSS'),
('Why Do We Care About Getting Asymptotically Good Algorithms?', "Skip content Windows Theory Research Blog Home Theory Seminar MSR-Silicon Valley RIP Erd Book Asymptotic Religion January 12 2015 Boaz Barak undergraduate algorithms class learn algorithm high level way describe computer program running time algorithm number operations takes inputs particular size- smaller better even Barack Obama knows implement Quick-Sort running time would run faster -time algorithm Bubble-Sort However pick recent algorithms paper things become little murkier Many papers feature algorithms running times even even linear-time algorithms hidden constants make want run bed hide covers Asymptotic analysis become applicable technology improves inputs grow people may still question practical relevance say -time algorithm seems feasible trivial -time brute force algorithm care getting asymptotically good algorithms Every TCS graduate student able recite party line answer happened problem shown polynomial time people managed come algorithms small exponents e g quadratic reasonable leading constants certainly truth see example case Ellipsoid Interior Point algorithms linear programming underlying reason pattern simply collection historical accidents Paul Erd envisioned God holds book elegant proof every mathematical theorem famous quote said believe God believe Book Similarly one envision book best efficient elegant right algorithms every computational problem -time brute force algorithm book essence conjecture exhaustive search algorithm fact best algorithm problems researcher shows cumbersome impractical -time algorithm problem point code use solve problem practice Rather point existence proves one problems brute force optimal significant piece information since tells us Book algorithm much faster brute force indeed non-trivial algorithm given problem improvements often follow researchers get closer closer true Book algorithm ve seen enough Book know algorithms either time still inherent reason Book algorithm non-trivial exponent best algorithm problem say -time reading page Book understand right answer possibly solving boils running brute force algorithm smaller domain intuition holds hardness results well famous PCP theorem thought reduction task exactly solving problem SAT task solving approximately apply original PCP reduction smallest known hard instances SAT several hundred variables resulting instance would large fit even NSA computers meaning reduction issue also arises cryptography people like point often reduce security cryptographic scheme hardness problem reduction guarantees security key sizes much larger d like use practice still care reductions answer ruling algorithms run much faster natural exponential-time one reduction gives least evidence particular approximation crypto-breaking problem might one problems exponential-time algorithm Book algorithm indeed like case algorithms time people often able come increasingly efficient reductions Another way think goal theory paper solve particular problem illustrate idea- discover paragraph book main reason care measures asymptotic running time approximation factor due importance serve keep us honest provide targets won able reach without generating new ideas later useful many contexts Erd quote holds true theoretical computer scientists well physicists need believe book laws nature make inferences based past observations Book algorithms makes TCS loose collection unrelated facts example wonderful essay Russell Impagliazzo right neglect non-Book scenarios -time algorithm young science know snippets Book believe eventually even statements would seen mere corollaries much grander computational laws nature Updated 2 25 minor rephrasing Share TwitterLike Like Loading Related Uncategorized FOCS 2014 videos online Tips future FOCS STOC program chairs 8 Comments leave one vznvzn permalink January 17 2015 1 43 erdos one greats nobody like ahead time various ways research seems uncanny 20-20 hindsight significance TCS see also erdos 100 tribute brilliant contrarian Reply Danny Kale permalink January 19 2015 7 00 pm Nice post Gives general high level orientation things complexity Reply Vijay D'Silva permalink February 26 2015 3 29 Boaz might interested community suggestions entries book Reply Boaz Barak permalink February 26 2015 4 59 pm Thank pointer think people take Book metaphor slightly differently mean see Book mathematical analog Occam Razor certain observations example problem NP hard problem non-trivial algorithm believing Book corresponds believing beautiful economical explanation observations e optimal algorithm elegant simple course elegance simplicity well defined terms important part progress science thought learning God measures elegance example people got used quantum mechanics understand better started appreciating mathematical elegance even wasn immediately apparent Book algorithm first paper subject last one results AKS primality testing Gentry Fully Homomorphic Encryption amazing breakthroughs Book algorithms Reply Vijay D'Silva permalink March 8 2015 4 38 didn see reply till first reading post interpreted notion entry Book view explanations Book rather strict notion proofs Book Although imagine distinction explanation proof debatable one especially since proof one imagines Book explanatory value cstheory stackexchange entries quite different notion algorithms Book lot entries succinct clever variety necessarily type exposed fundamental underlying structure Eric L permalink April 17 2015 3 00 Insertion-Sort O n 2 m pretty sure Bubble-Sort bit worse Reply Boaz Barak permalink April 17 2015 1 57 pm difference running time bubble sort insertion sort multiplicative constant 2 believe run time O n 2 Reply Trackbacks Shtetl-Optimized Blog Archive fight online shaming campaigns Leave Reply Cancel reply Enter comment Fill details click icon log Email required Address never made public Name required Website commenting using WordPress com account Log Change commenting using Twitter account Log Change commenting using Facebook account Log Change commenting using Google account Log Change Cancel Connecting Notify new comments via email Search Blog RSSRSS - PostsRSS - Comments Twitter windowsontheory Recent Comments Aleksander Madry Turning STOC 2017 Dorit Aharonov Turning STOC 2017 Gil Kalai Turning STOC 2017 Thomas Turning STOC 2017 profarora Turning STOC 2017 Authors Alex Andoni Raghu Meka Boaz Barak Ilya Mironov Ittai Nikhil Srivastava Kunal Talwar Moshe Babaioff Omer Reingold parikg Guy Rothblum Udi Wieder yaelism Sergey Yekhanin Recent Posts Turning STOC 2017 Theory Festival DIMACS looking associate director 2015 Swedish Summer School Computer Science apply soon NSF mandates sort open access Tips future FOCS STOC program chairs Archives May 2015 April 2015 March 2015 January 2015 December 2014 November 2014 October 2014 September 2014 August 2014 July 2014 June 2014 April 2014 March 2014 February 2014 January 2014 December 2013 November 2013 October 2013 September 2013 August 2013 July 2013 June 2013 May 2013 April 2013 March 2013 February 2013 January 2013 December 2012 November 2012 October 2012 September 2012 August 2012 July 2012 June 2012 May 2012 April 2012 March 2012 February 2012 Blog WordPress com Vigilance Theme Follow Follow Windows Theory Get every new post delivered Inbox Join 299 followers Build website WordPress com d bloggers like"),
('Folks, anyone you recognize in this video?!', "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ Smile UofT Trailer utorontoTV SubscribeSubscribedUnsubscribe857 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Statistics 1 386 7 Like video Sign make opinion count Sign 8 1 Don't like video Sign make opinion count Sign 2 Loading Loading Loading Rating available video rented feature available right Please try later Published Mar 13 2015 Spreading smiles one face time Music Bensound Cute http www bensound com royalty-free- Producer Thilini WalgamageCo-producers Malsha WalgamageMichelle ChenCamera Tom Drechsler Patrick DoocIvy TangVideo Editing Thilini Walgamage Michelle Song Category Education License Standard YouTube License Show Show less Loading Advertisement Autoplay autoplay enabled suggested video automatically play next Next International Students Talk University Toronto - Duration 5 36 universitytoronto 9 084 views 5 36 Play nextPlay Brave - University Toronto Students Smile UofT - Duration 4 42 utorontoTV 6 248 views 4 42 Play nextPlay 2014 University Toronto Admissions Interview Video Class 1T8 - Duration 17 43 1T8 University Toronto Admissions Video 12 767 views 17 43 Play nextPlay Map Room Sessions 7 - Los Caballeros del Son - Duration 18 00 utorontoTV 1 021 views 18 00 Play nextPlay University Toronto Boundless - Duration 5 01 universitytoronto 82 423 views 5 01 Play nextPlay Week Review - February 6 2012 - Duration 9 52 utorontoTV 785 views 9 52 Play nextPlay Try Watch Without Laughing Grinning REACT - Duration 4 32 REACT 9 915 623 views 4 32 Play nextPlay UTTV News - UTSU Sports Kony 2012 Coverage - Duration 9 16 utorontoTV 510 views 9 16 Play nextPlay Get Involved Fair - Duration 5 42 utorontoTV 166 views 5 42 Play nextPlay Shit UofT Says - Duration 3 54 utorontoTV 162 859 views 3 54 Play nextPlay UFashion interview University Toronto Fashion Show - Duration 6 48 utorontoTV 98 views 6 48 Play nextPlay Hearts Science - Episode 001 - Duration 12 18 utorontoTV 3 039 views 12 18 Play nextPlay University Toronto Dorm Tour - Duration 4 16 Ayoub Laaziz 28 431 views 4 16 Play nextPlay University Toronto vs York University - Girls Read description - Duration 6 26 BilalHabibTV 338 679 views 6 26 Play nextPlay WATER Spongebob Promo - Duration 1 32 utorontoTV 177 views 1 32 Play nextPlay University Toronto Tour - Duration 6 19 stuffwithben 29 874 views 6 19 Play nextPlay Time Travel App - Duration 1 28 utorontoTV 104 views 1 28 Play nextPlay UofT - Mayoral Candidates - Duration 4 39 utorontoTV 201 views 4 39 Play nextPlay Campus Eats - Episode 004 - Chestnut Residence Jaco's Wings - Duration 7 00 utorontoTV 1 037 views 7 00 Play nextPlay 'Engineering Failure' University Toronto - Duration 4 20 eb221364 30 734 views 4 20 Play nextPlay Loading suggestions Show Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists"),
('The Limits of Quantum Computing [pdf]', 'PDF-1 4 1 0 obj XObject ProcSet PDF Text ImageC ExtGState Shading Properties StructParents 1 endobj 2 0 obj'),
('1ML - ML core and module united', '1ML core modules united Description 1ML reboot ML starting first-class modules unifies core module layer one small consistent language described following papers Andreas Rossberg 1ML core modules united Submitted 2015 Andreas Rossberg 1ML core modules united Extended Expanded version including Technical Appendix 2015 abstract paper ML two languages one core types expressions modules signatures structures functors Modules form separate higher-order functional language top core practical technical reasons stratification yet creates substantial duplication syntax semantics reduces expressiveness example selecting module cannot made dynamic decision Language extensions allowing modules packaged first-class values proposed implemented different variations However remedy expressiveness extent syntactically cumbersome alleviate redundancy propose redesign ML modules truly first-class values core module layer unified one language 1ML functions functors even type constructors one construct likewise distinction made structures records tuples viewed way round everything mode use modules Yet 1ML require dependent types type structure expressible terms plain System F minor variation F-ing modules approach introduce explicitly typed version 1ML extension Damas Milner-style implicit quantification Type inference language complete argue substantially worse Standard ML alternative view 1ML user-friendly surface syntax System F allows combining term type abstraction compositional manner bare calculus Download simple prototype interpreter allows playing small examples Version 0 1 need OCaml 4 02 Make build Please see README file basic documentation 2015 andreas rossberg courtesy mangrigdesign'),
('There is No Now', "Current Issue Past Issues Topics talks 2015 Applicative conference online Distributed Computing March 10 2015Volume 13 issue 3 Problems simultaneity distributed systems Justin Sheehy time elapsed wrote word read least couple weeks kind delay one take granted don't even think written media room instead spoke aloud might greater sense immediacy might intuitively feel hearing word exactly time spoke intuition would wrong instead trusting intuition thought physics sound would know time must elapsed speaking hearing motion air carrying word would take time get mouth ear Even held sign word written looked perception image would happen moment light carrying information sign would take different amount time reach us things computers virtual still must operate physical world cannot ignore challenges world Rear Admiral Grace Hopper one important pioneers field whose achievements include creating first compiler used illustrate point giving students piece wire 11 8 inches long maximum distance electricity travel one nanosecond physical representation relationship information time distance served tool explaining signals like metaphorical sign must always unavoidably take time arrive destinations Given delays difficult reason exactly means computer systems nothing theoretically preventing us agreeing common idea though carefully plan ahead Relativity isn't problem though tempting distraction humanity's current computing systems share close enough frame reference make relativistic differences perception time immaterial NTP Network Time Protocol 14 used synchronizing clocks systems Internet works part calculating time messages take travel hosts travel time known host account adjusting clock match authoritative source providing precise sources clocks based continuous measurement atomic radiation network able use NTP synchronize computers' clocks within small margin error satellites making worldwide GPS contains multiple atomic clocks single clock failing doesn't make satellite worthless GPS protocols allow anyone receiver long see enough satellites solve variables determine receiver's position also time excellent precision understood protocols decades would easy believe overcome class problems ought able build systems assume clocks synchronized Atomic clocks NTP GPS satellites provide knowledge equipment account time takes information travel Therefore systems anywhere able agree share common single view progress time whole categories hard problems networks computing would become much easier systems care exact perception time many problems become tractable even hosts involved failing Yet problems still exist dealing continuously active area research also major concern building practical distributed systems might look mature mechanisms available understanding time believe researchers system builders huge amount unnecessary work try solve problems assuming clocks may differ know synchronize instead use right combination time sources protocols make clocks agree move past problems One thing makes implausible makes problems important also necessary face head everything breaks real problem theoretical notion information requiring time transferred one place another real problem physical world computing systems reside components often fail One common mistakes building systems especially distributed-computing systems commodity machines networks assuming escape basic physical realities speed light one reality one pernicious universal cannot make perfect machines never break combination realities asynchrony partial failure together make building distributed systems difficult pursuit plan account failures individual components guarantee failure combined systems One important results theory distributed systems impossibility result showing one limits ability build systems work world things fail generally referred FLP result named authors Fischer Lynch Paterson 8 work won 2001 Dijkstra Prize influential paper distributed computing showed conclusively computational problems achievable synchronous model hosts identical shared clocks impossible weaker asynchronous system model Impossibility results important guide away going dead-end path designing system also provide snake-oil detector feel justified suspicion anyone claims product something know impossible related result better known FLP developers today CAP theorem consistency availability partition tolerance first proposed informally Eric Brewer 5 later formal version proven Seth Gilbert Nancy Lynch 9 distributed systems theory point view CAP theorem less interesting FLP counterexample beating formal version CAP assumes even weaker adversarial model world FLP demands even achieved within model one exactly subproblem FLP stronger interesting perhaps surprising result researcher already familiar FLP might find CAP idea bit boring would reasonable though think perhaps value CAP approachable easily understood steeped literature distributed systems would laudable worthwhile past several years shown dozens articles blog posts many badly misunderstand basic idea idea CAP sadly easy way today's developers come terms reality programming distributed imperfect world reality whether point view CAP FLP world must assume imperfection components use building blocks theoretical impossibility result CAP FLP innately tied system model theoretical model world result depends result doesn't really say goal consensus impossible general rather impossible within specific model extremely useful practitioners developing intuitions paths might dead ends also misleading learn result without learning context result applies real problem things break literature referred FLP dealing systems components expected fail problem don't use things don't break build better systems components assume robust Quite often past couple years Spanner system Google referenced justification making sort assumption 6 system uses exactly techniques mentioned earlier NTP GPS atomic clocks assist coordinating clocks hosts make Spanner minimizing measuring eliminating uncertainty differences clocks Spanner paper along system documents often used back claims possible distributed system single view time Despite appeal pointing Google using argument authority everyone making claim wrong fact anyone citing Spanner evidence synchronization solved either lying actually read paper simplest clearest evidence claim Spanner paper TrueTime component Spanner provide simple unified shared timeline Instead clearly provides API directly exposes uncertainty differences perceived time system clocks ask current time give single value rather pair values describing range possibility around TrueTime opposite fixing fundamental problem takes brave fascinating choice confronting directly explicit uncertainty instead pretending single absolute value meaningful across working distributed system Within production environment Spanner clock drift moment typically one seven milliseconds best Google including corrective effects GPS atomic clocks eviction worst-drifted clocks order minimize skew Typical x86 clocks vary speeds depending kinds unpredictable environmental factors load heat power Even difference top bottom rack lead variance skew best done wildly expensive environment like Google's live uncertainty several milliseconds us assume clocks much Another claim often made justifying pretend it's fine approach distributed systems design sufficiently high-quality equipment doesn't fail least fails rarely don't need worry claim would understandable though incorrect coming makers equipment usually users gear designers distributed database software heard making claims designers GPS Spanner others rely certainly didn't subscribe kind claim almost 30 GPS satellites need see four system work satellites multiple redundant atomic clocks continue functioning one breaks One common variants claims network reliable context local in-data-center network Many systems undefined likely disastrous behavior networks behave poorly people want sell systems justify choice ignore reality explaining failures extremely uncommon customers double disservice First even events rare wouldn't want understand system would behave occur order prepare impact events would business Second worse claim simply lie bald-faced lie fact first classic eight fallacies distributed computing 7 15The realities failures well-documented previous ACM Queue article 3 evidence clear present anyone justifying software design choices claiming network reliable without irony probably trusted build computing systems true systems networks might failed way given observer could notice would foolish base system's safety assumption never fail opposite approach waving-off physical problems assume almost nothing counted design using formal models adversarial world asynchronous model FLP proved adversarial model build working system certainly world much hostile developers believe systems running thinking goes world model worse world run things succeed model possible real world implementation Note distributed systems theorists models harder succeed including possibility Byzantine failure parts system fail much worse ways crashing delaying truly adversarial network system model could see example either symbolic computational models used cryptographic protocol theorists world system builders really assume network get context assuming world bit worse think really operating best-known protocols consensus coordination Paxos 12 designed essential building blocks distributed systems useful know provide important guarantees even world working designer arbitrarily losing messages crashing hosts example Paxos related protocols most-emphasized property safety guarantee different participating hosts never make conflicting decisions Another area work logical time manifest vector clocks version vectors ways abstracting ordering events idea generally acknowledges inability assume synchronized clocks builds notions ordering world clocks entirely unreliable course always strive make everything including networks reliable possible Confusing constant goal achievable perfect end state silly Equally silly would purist view well-founded perfectly understood theoretical models sensible starting places building systems Many effective distributed systems built worthwhile elements map perfectly common models distributed computing exemplary building block would TCP nearly ubiquitous protocol provides useful properties exact set map exactly typical network models used developing theoretical results FLP creates quandary systems builder would foolish assume reality something like TCP designing cases puts tenuous position try understand exactly distributed systems theory applies work Zab protocol forms essential part popular Apache ZooKeeper coordination software fascinating example attempt walking middle road 10 authors ZooKeeper knew existing consensus protocols Paxos decided wanted protocol additional features ability processing many requests instead waiting proposal complete starting next one realized built TCP advantage underlying system provided valuable properties could assume protocol example within single connected TCP socket sender producing message followed message B safely assume receiver reads B receiver previously read prefix property useful present asynchronous model concrete example advantages available looking research field specific technology actually available build instead ignoring either trying pragmatic though one must careful let pragmatism become strange kind purity excuse sloppy work Zab protocol implemented inside ZooKeeper de facto reference implementation never accurate implementation Zab protocol designed 13 might call pragmatist note software also doesn't match formal specification thus might say nothing unusual worry would wrong two reasons First role ZooKeeper similar software used like software precisely provide essential safety properties forming bedrock rest system make powerful assumptions Second problems safety properties protocol like appearance problems possibly dangerous subtle easy miss Without strong belief implementation reflects protocol analyzed reasonable user trust system claim system's good-enough correctness proven popularity nonsense casual user cannot evaluate correctness pick ZooKeeper fact ZooKeeper one highest-quality pieces open-source software genre many excellent engineers continually improving recent analysis fares far better stress anything competes 1 pointed ZooKeeper example necessity pitfalls taking middle road regard theory practicality Mapping theory practice extremely challenging Another example middle road hybrid logical clocks11 integrate general techniques logical time timestamps physical clocks allows users apply interesting techniques based view imperfect still useful physical clocks across whole system Much like Spanner pretend create single unified timeline allow system designer build best available knowledge time perceived communicated across cluster different coordination systems including Paxos Viewstamped Replication Zab Zookeeper Raft provide ways defining ordering events across distributed system even though physical time cannot safely used purpose protocols though absolutely used purpose provide unified timeline across system think coordination providing logical surrogate used way however protocols cost resulting something fundamentally common constant communication example coordinate ordering things happen distributed system best able provide response latency less round-trip time two sequential message deliveries inside system Depending details coordination system may similar bounds throughput well designer system aggressive performance demands may wish things right find cost constant coordination prohibitive especially case hosts networks expected fail often many coordination systems provide eventual liveness make progress times minimal trouble Even rare times everything working perfectly however communication cost constant coordination might simply high Giving strict coordination exchange performance well-known tradeoff many areas computing including CPU architecture multithreaded programming DBMS database management system design Quite often turned game finding little coordination really needed provide unsurprising behavior users designers concurrent-but-local systems developed quite collection tricks managing enough coordination example RDBMS field long history interesting performance hacks often resulting far less ACID atomicity consistency isolation durability might guess2 exploration techniques general distributed systems beginning exciting time subject make tradeoffs distributed systems design starting studied seriously One place topic getting attention deserves BOOM Berkeley Orders Magnitude team University California Berkeley multiple researchers taking different related approaches understanding make disciplined tradeoffs 4 breaking new ground knowing safely decide care thus pay costs coordination Work like may soon lead greater understanding exactly little really need synchronized time order work distributed systems built less coordination still providing safety properties needed may faster resilient able scale Another important area research avoiding need worrying time coordination involves CRDTs conflict-free replicated data types data structures whose updates never need ordered used safely without trying tackle problem time provide kind safety sometimes called strong eventual consistency hosts system received set updates regardless order state long known achieved work certain properties commutative associative idempotent makes CRDTs exciting researchers field16 expanding understanding expressive within limitation inexpensively work providing rich set data types work shelf developers One way tell development topics beginning existence popular distributed systems prefer ad-hoc hacks instead best-known choices dealing problems consistency coordination consensus One example distributed database last write wins policy resolving conflicting writes Since already know last meaningless term reason simple value across whole system really many writes chosen unpredictably lost policy wouldn't sell many databases would Even state art still rapidly improving anyone able better Another example terrible writes lose database strategy choice solve cluster management via ad-hoc coordination code instead using formally founded well-analyzed consensus protocol really need something one well-known consensus protocols solve problem solve hint don't minimum ought ZooKeeper Zab implementers document goals assumptions clearly won't save disaster least assist archaeologists come later examine remains exciting time builder distributed systems Many changes still come truths however likely remain idea simple value meaning across distance always problematic continue need research practical experience improve tools living reality better Acknowledgments would like thank provided feedback including Peter Bailis Christopher Meiklejohn Steve Vinoski Kyle Kingsbury Terry Coatta References 1 Aphyr 2013 Call maybe ZooKeeper http aphyr com posts 291-call-me-maybe-zookeeper 2 Bailis P 2013 ACID ACID Rarely http www bailis org blog when-is-acid-acid-rarely 3 Bailis P Kingsbury K 2014 network reliable ACM Queue 12 7 http queue acm org detail cfm id 2655736 4 BOOM http boom cs berkeley edu papers html 5 Brewer E 2000 Towards robust distributed systems http www cs berkeley edu brewer cs262b-2004 PODC-keynote pdf 6 Corbett J C et al 2012 Spanner Google's globally distributed database Published Proceedings 10th Symposium Operating System Design Implementation http research google com archive spanner html http static googleusercontent com media research google com en us archive spanner-osdi2012 pdf 7 Deutsch P eight fallacies distributed computing https blogs oracle com jag resource Fallacies html 8 Fischer M J Lynch N Paterson M 1985 Impossibility distributed consensus one faulty process Journal ACM 32 2 374-382 http macs citadel edu rudolphg csci604 ImpossibilityofConsensus pdf 9 Gilbert Lynch N 2002 Brewer's conjecture feasibility consistent available partition-tolerant Web services ACM SIGACT News 33 2 51-59 http webpages cs luc edu pld 353 gilbert_lynch_brewer_proof pdf 10 Junqueira F P Reed B C Serafini M 2011 Zab high-performance broadcast primary backup systems http web stanford edu class cs347 reading zab pdf 11 Kulkarni Demirbas M Madeppa D Bharadwaj Leone M 2014 Logical physical clocks consistent snapshots globally distributed databases http www cse buffalo edu tech-reports 2014-04 pdf 12 Lamport L 1998 part-time parliament ACM Transactions Computer Systems 16 2 133-169 http research microsoft com en-us um people lamport pubs pubs html lamport-paxos 13 Medeiros 2012 ZooKeeper's atomic broadcast protocol theory practice http www tcs hut fi Studies T-79 5001 reports 2012-deSouzaMedeiros pdf 14 NTP http www ntp org 15 Rotem-Gal-Oz Fallacies distributed computing explained http www rgoarchitects com Files fallacies pdf 16 SyncFree https syncfree lip6 fr index php publications LOVE HATE LET US KNOW feedback queue acm org Justin Sheehy site leader VMware's Cambridge MA R D center also plays strategic role architect company's Storage Availability business three recent positions joining VMware CTO Basho Principal Scientist MITRE Senior Architect Akamai Much career focused resilient distributed systems build apply solve business problems related scalability availability Justin found Twitter justinsheehy 2015 ACM 1542-7730 14 0200 10 00 Originally published Queue vol 13 3 see item ACM Digital Library Tweet Related Andrew Brook - Evolution Practice Low-latency Distributed Applications Finance finance industry unique demands low-latency distributed systems Daniel C Wang - EDVAC WEBVACs Cloud computing computer scientists p n Davidovi Kavita Guliani - Reliable Cron across Planet stopped worrying learned love time Anil Madhavapeddy David J Scott - Unikernels Rise Virtual Library Operating System software layers virtual appliance compiled within safe high-level language framework Comments JF Thu 26 Mar 2015 15 15 18 UTC interesting article Thank another system deals problem operating even extreme environment yet still reaching distributed consensus look Bitcoin Granted doesn't reach consensus milliseconds rather order 10 minutes interesting nonetheless Leave field empty Post Comment Comment Required - 4 000 character limit - HTML syntax allowed removed 2014 ACM Inc Rights Reserved"),
('Great educational video about operating systems', "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ operating system Aaron Bauer SubscribeSubscribedUnsubscribe Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Transcript Statistics 263 views 8 Like video Sign make opinion count Sign 9 0 Don't like video Sign make opinion count Sign 1 Loading Loading Transcript interactive transcript could loaded Loading Loading Rating available video rented feature available right Please try later Published Mar 10 2015A interesting things consumer operating systems explained detail possible short youtube video Operating systems hide nasty details hardware application developers help applications share CPU Homepage https homes cs washington edu awb Music Lachaim Kevin MacLeod incompetech com Licensed Creative Commons Attribution 3 0http creativecommons org licenses b reading Operating Systems http en wikipedia org wiki Operatin Device Driver http en wikipedia org wiki Device_d Process Management http en wikipedia org wiki Process_ References Silberschatz Abraham Peter B Galvin Greg Gagne Operating system concepts 8th ed Wiley 2008 Tanenbaum Andrew Modern Operating Systems 3rd ed Prentice Hall 2007 Category Education License Creative Commons Attribution license reuse allowed Remix video Show Show less Loading Autoplay autoplay enabled suggested video automatically play next Next Mobile OS Android Binder BeagleBone Black - Duration 1 08 00 hendersa 5 360 views 1 08 00 Play nextPlay Computer Programming hard learn - Duration 9 16 Tech Science Society 134 506 views 9 16 Play nextPlay WHS Graduation Speech '07 - Duration 6 03 Aaron Bauer 2 161 views 6 03 Play nextPlay Science Documentary Creating Brain Systems Quantum Computing Quantum mechanics Consciousness - Duration 2 09 30 ScienceRound 3 655 views 2 09 30 Play nextPlay Second Chance Algorithm - Page Replacement - Operating System - Duration 9 46 BBarters 9 020 views 9 46 Play nextPlay Jean Yang Axiomatic Basis Computer Programming - Duration 1 04 32 PapersWeLove 921 views 1 04 32 Play nextPlay GATE - CSE - Operating System - Duration 4 19 BTECHGURU BodhBridge ESPL 6 110 views 4 19 Play nextPlay Introduction Operating System various functions - Duration 3 41 Dr Chandrakant Sharma 683 views 3 41 Play nextPlay External fragmentation O - Duration 2 46 education4all asia 1 296 views 2 46 Play nextPlay Deadlock Wedlock Operating System Concept - Duration 3 04 Vishwa Raj Sharma 512 views 3 04 Play nextPlay Computer Languages Operating System - Duration 8 21 SuccessCDS Education 16 605 views 8 21 Play nextPlay FACULTI - Computer Science - System software support hardware efficiency - Duration 7 55 Faculti Media 491 views 7 55 Play nextPlay Sudo You're Wrong - Duration 1 11 21 Michigan Usr Group 6 641 views 1 11 21 Play nextPlay Quantum Computing Operating System Developed Powerful PCs Coming Soon - Duration 2 16 Beyond Technology 36 views 2 16 Play nextPlay Study Economic Science Chapman University - Duration 1 58 Chapman University 5 410 views 1 58 Play nextPlay Big Data Fast Data Need Memory Database Technology - Duration 1 12 51 O'Reilly 524 views 1 12 51 Play nextPlay Batch OS Demo - Duration 1 55 Blake Lucas 374 views 1 55 Play nextPlay Introduction Operating Systems - Duration 12 38 Mike Murphy 117 571 views 12 38 Play nextPlay New Era Operating system - Duration 6 27 george hanna 1 139 views 6 27 Play nextPlay Deadlock Operating Systems - Duration 12 56 ronak shah 8 939 views 12 56 Play nextPlay Loading suggestions Show Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists"),
('So You Want to be a Game Developer? Tips for Coders', "LatestVideosReviewsEverything escapist quizzes groups video galleries forums Gaming Discussion Off-Topic Discussion Game Industry Discussion Featured Content News Room User Reviews Forum Games Role Playing Religion Politics Advice Forum Code Conduct join sign Sign-in Escapist account enter contest post comments simply awesome member Register video games LatestVideosReviewsEverything movies tv LatestVideosReviewsEverything comics cosplay LatestVideosReviewsEverything tabletop LatestVideosReviewsEverything science tech LatestVideosReviewsEverything Browsing Options Background Color Reading Font Lato Alt Sans Roman Reading Size Aa Aa Aa Experienced PointsSo Want Game Developer Tips CodersShamus Young 10 Mar 2015 19 00 Experienced Points - RSS 2 022 last week tried talk going Game College marching jaws AAA meatgrinder I'd hate see talent go waste place doesn't value creativity burns you're 30 leaving crippling load debt say shouldn't learn make video games medium isn't going anywhere demand quality games high ever really possible earn living It's avoid following crowds along obvious routes advice applies coders artists realize articles blurred line two it's important note pretty big differences people make art people write code Coders demand demand usually un-fun jobs exists artists always faced tough climb securing steady work culture loves consume art hates paying doesn't change talking video games lot amazingly talented artists mopping floors living advice you're going technical side things 1 Figure REALLY want want make games grand vision game Lots people usually lose interest realize vision think work fun Take Coding super-fun bringing product way concept product gets really tedious end want next Notch world-famous billionaire Protip lottery better odds important step figure you're really help decide far go much risk take 2 Don't wait graduate secret priesthood Anyone learn stuff it's never early start started coding 12 frankly could started lot sooner I'd access computer want Code Make 3D models Design characters Try little everything help find love show talent importantly give good big picture view creative people You'll find lot easier work even lead team someday rough idea everyone else I've frustrated working programmers didn't understand art pipeline usually created needless extra work people chain years graduation perfect time dabble lots different things see like 3 Consider general Computer Science degree I'm entirely self-taught route isn't everyone people would rather someone else guide learning depends finances learning style Also it's really hard get real job degree you're going self-educate you're going need make something special inventive get foot door going go school it's probably much safer get generalized degree one aimed game development compsci degree get game development it's hard leave game development get regular job degree focused games 4 Go Indie Yes indie developer risky truth going AAA route least go indie you'll fail love instead fail working corporate conveyor belt anyone indie developer don't need spend thousands dollars four years life get started never better time indie developer Unreal Engine free Source Engine 2 Unity royalty-free RPG Maker dirt cheap wikis tutorials articles blogs ever Mobile games Steam making easier small teams individuals bring game market YouTube made marketing nearly free huge libraries textures models cheap free whole thing tough get people pay art Big gaming sites giving page space indie titles early wave indie darlings like Minecraft Braid Terraria Octodad Banner Saga Papers Please invigorated public's interest indie scene say jumping indie game development easy even good idea it's less bad idea time past it's possible despite risk it's actually safer bet taking job EA Activision 5 Go Hobbyist might safest route Find career live maybe even enjoy little work indie masterpiece evenings weekends advantages going indie apply route well tools cheaper education easier obtain barrier entry lower ever Best doesn't pan still job roof head 6 Don't listen I'm middle-aged guy yet ship title Although game might hit Steam Greenlight month industry moves supersonic speeds compared disciplines Even good advice experienced successful lead astray road worked 10 years ago might dead end time get smart work hard you'll make think people realize isn't strictly true it's still really good advice smart work you'll chance That's us ask Don't get discouraged Good luck Shamus Young programmer critic comic crank read work Related shamus youngexperienced pointsgame developmentvideo games 22 Tweet RELATED CONTENT Non-Player Counselor Minecraft Steve Can't Stop Building Firefilm 18 Comments E3 2015 Bethesda Teases Impending DOOM Gameplay Reveal Conrad Zimmerman 48 Comments Garwulf's Corner Riding Waves Controversy Strange Case Loot Robert B Marks 31 Comments Beginner Expert Ultimate Diablo 3 Reaper Souls Guide Rhykker 14 Comments Take Money Tomorrowland Best Disney Sci-Fi TrishaHershberger 6 Comments Dark Dreams H P Lovecraft Father Modern Horror Devan Sagliani 37 Comments Game Hardcore 001 Insert Coin koobismo 43 Comments Comments POPULAR ARTICLES8 Superheroes Deserve Video GameMinneapolis Comic Con 2015 Cosplay Gallery Best Heroes VillainsEverything Need Know Avengers Age UltronAvengers Age Ultron - Great Fun POPULAR COMICS 017 InspirationValve Ruined Joke Art DayCorporate Responsibility Kills Humor 006 Sim-ultaneously POPULAR FORUM POSTS LATEST VIEWS COMMENTS 110Let's Talk anti-GamerGate ProblemsAelinsaar 28 May 2015 17 5441Poll Open discussion rude rulessky14kemea 28 May 2015 17 539First look Batman Suicide SquadArmadox 28 May 2015 17 47109Too much diversity PapaGreg096 28 May 2015 17 4644Twitch Bans Streaming Adults Games - UpdateMatt Dellar 28 May 2015 17 44124Supergirl pilot leaked it's absolutely terribleMarxie 28 May 2015 17 40READ MOREBACK TOP Check Escapist Contests LockerDome LockerDome Staff Twitter Justin Clouse ThyNameIsMud Unaz found something cases storage room http co g01oI4XIMA Alexander Macris RvLeshrac Yes that's more-or-less premise book I'll report detail soon Alexander Macris Playing Hatred lets us hold mirror see truth Apparently don't cast reflection WTF http co AM7P4Um8On Jose Mireles Good enough isn't good enough GraphicDesign Erik Jacobson escorting high priority target can't biosculpt entire team look like http co woRcHTps7u cyberpunk Alexander Macris currently reading Free Trade Doesn't Work Ian Fletcher committed free trader life it's interesting stuff Alexander Macris Nasdaq89 I'm sure actually would odd - seems like trademark fight Janelle Bonanno Flying Atlanta today encaen MomoCon It's first time I'm super excited you're attending let know Erik Jacobson RT dakami friendly neighborhood white hat defends offensive research -- knowing what's flammable reliable way ge Erik Jacobson RT rickasaurus SourceForge jumping adware business spending trust they've earned years like currency http FOLLOW US TWITTER STORIES MIGHT LIKE CONTACT Submissions Tip Us Help Contact CONTENT News Features Reviews Videos Comics FIND US Facebook Twitter YouTube Pinterest RSS IRC INFO Us Ethics Policy Press Releases Terms Use Privacy Policy CA Privacy Policy 2005-2015 Defy Media LLC site part Defy Media Gaming network"),
('The Ghost in the MP3', "Ghost MP3 updates follow soundcloud facebook download uncompressed audio rpm7 bandcamp com album the-ghost-in-the-mp3 Overview MPEG-1 MPEG-2 Layer III standard commonly referred MP3 become nearly ubiquitous digital audio file format First published 1993 codec implements lossy compression algorithm based perceptual model human hearing Listening tests primarily designed western-european men using music liked used refine encoder tests determined sounds perceptually important could erased altered ostensibly without noticed lost sounds sounds human ears hear original context due universal perceptual limitations simply encoding detritus commonly accepted MP3's create audible artifacts pre-echo music codec deletes sound like work presented techniques considered developed recover lost sounds ghosts MP3 reformulate sounds art II MP3 Compression MP3 standard designed early 1990's Moving Pictures Experts Group become interesting object critique contemporary technology studies Sterne 2006 standard subtly reduces audible quality soundfiles remained place despite massively increased bandwidths storage capacity impressive highlights foresight fortune format's creators Regardless MP3 always appropriate format given task critical evaluation technology limitations warranted Many listeners today listen exclusively MP3 files even settings gains higher fidelity format would clearly perceptible lossy compression codec thus come dominate unanticipated listening spaces Despite highly touted performance listening tests MP3 compression codec generate audible artifacts remove perceptible sonic information especially implemented low bit rates example white pink brown noise compressed lowest possible MP3 bit rate sounds different original random signal Example 1 White Pink Brown Noise - Uncompressed Example 2 White Pink Brown Noise - Lowest Possible Bit Rate MP3 8kbps comparison low-frequency sine tones sound quite good MP3 encoded 320kbps MP3 Still material left behind upon examination quite interesting Example 3 Sine Tone Chords - Uncompressed Example 4 Sine Tone Chords - 320kbps MP3 Example 5 Sine Tone Chords - 320kbps MP3 Ghost III Finding Ghost Using Bregman pyo pydub libraries along LAME MP3 encoder begin uncompressed WAV file save MP3 file 128kbps example quite well chose 128kbps examples high-quality bit rate used original MP3 development listening tests music I've made moDernist etc using process I've used 320kbps MP3's Example 6 Tom's Diner - Verse 1 - Uncompressed Example 7 Tom's Diner - Verse 1 - 128kbps MP3 Example analyze compare take difference files Example 8 Tom's Diner - Verse 1 - 128kbps MP3 Ghost Example two files similar information original audio largely preserved MP3 However corresponding time-frequency bins differ significantly two files betray spots information altered deleted Different extraction techniques possible leading slightly different output Example 9 Tom's Diner - Verse 1 - Ghost extracted via masking Example Different ways handling phase estimation also lead slightly different results Examples 10 11 Tom's Diner - Verse 1 - 128kbps MP3 Ghost Examplewith without phase estimation IV Artistic Overview Background previously stated MP3 codec refined using listening tests designed european audio engineers featuring music chose sense songs acts resonant filter every file encoded MP3 format Tom's Diner Suzanne Vega Fast Car Tracy Chapman Haydn Trumpet concerto songs carved space sounds could successfully encoded MP3's end songs represent kind best-case scenario MP3 encoding anything encoded well format files yet files leave residue behind encoded MP3 Exploring sounds helps define boundary case MP3 salvaging V moDernisT preliminary foray codec ghost composition creating series pieces based songs used original MP3 listening tests Today I'd like briefly discuss treatment Tom's Diner compressing original audio 320kbps MP3's begin analyzing song structure interpreting music text attempt arrange interesting recovered material via framework case study techniques I've used I'd like discuss two verses detail Verse one finds narrator bustling diner making observations environment focus text external it's author opposed later verses exist subjective internal space Using different settings harvest lost material able isolate clear pitched content ephemeral transient signals Using python library headspace reverb model small diner began construct virtual 3-d space Beginning fragmenting scrambling transient material applied head related transfer functions simulate background conversation one might hear diner Tracking amplitude original melody verse applied loose amplitude envelope signals Thus remnant original vocal line comes amplitude contour constructed background prominent pitches original melody appear disappear located variously virtual space ephemeral sounds hint familiar melody playing aural memory imagination flickering apparition hovering border consciousness Example 12 moDernisT - Verse 1 Verse 5 finds narrator noticeably different psychological state Instead buoyantly attending activity room lost thought remembering Example 13 Tom's Diner - Verse 5 Accordingly given material space less fragmented constant background conversation receded virtual space drawn closer feels internal external Key phrases snippets melody emerge clearly outro arrives obscuring familiar melody hinting it's former presence hear mostly transients internally might fill rest Example 14 moDernisT - Verse 5 VI Future Moving forward planning series related compositions constructed first songs involved listening tests probing space MP3 compression different ways attempting highlight even explicitly filtering effect codec songs used developing MP3 codec notable music cultures hip-hop dance music nothing prominent low frequencies nothing particularly noisy outright aggressive sounds nothing lo-fi Rather sounds broadly institutionally accepted conform accepted standards production recording technique MP3's invaded contemporary listening spaces class privileged sounds format inadvertently creates become apparent Originally developed suboptimal listening environments MP3's heard everywhere home streaming stores public spaces high-fidelity car stereo systems format become curator spaces allowing great deal wonderful sound yes exclusion vast territory available sonic terrain Composing sounds injecting back contemporary listening spaces one possible act resistance one available mode cultural critique VII Conclusion conclusion composing MP3 files attempt derive interesting material sounds rejected many contemporary listening spaces MP3 ghosts artifacts difficult predict provide externally generated material react work composer limiting freedom artist arrange alter interpret sounds Investigating particular format aesthetic possibilities inspired musics built around previous technologies- tape music example see format music contemporary analogue practices reading involved technology way found extremely fruitful question explore limitations technologies find intertwined hope also found interest questioning limitations Special thanks Tara Rodgers Aden Evens Larry Polansky Michael Casey Matthew Burtner many othersfor help conceiving realizing project Read full Ghost MP3 Conference Paper 2014 Sound Music Computing International Computer Music Conference Works Referenced Brandenburg Karlheinz MP3 AAC Explained Audio Engineering Society Conference 17th International Conference High-Quality Audio Coding 1999 Brandenburg Karlheinz Gerhard Stoll ISO MPEG-1 Audio Generic Standard Coding High-quality Digital Audio Journal Audio Engineering Society 42 10 1994 780-792 Cascone Kim Aesthetics Failure 'Post-digital' Tendencies Contemporary Computer Music Computer Music Journal 24 4 2000 12-18 Miller Vincent Understanding digital culture Sage Publications 2011 Demers Joanna Listening Noise Aesthetics Experimental Electronic Music Oxford University Press USA 2010 Evens Aden Sound Ideas Music Machines Experiences Minneapolis University Minnesota Press 2005 Manovich Lev Language New Media MIT press 2001 Oswald John Plunderphonics Audio Piracy Compositional Prerogative Wired Society Electro-Acoustic Conference 1985 Pras Amandine Rachel Zimmerman Daniel Levitin Catherine Guastavino Subjective Evaluation Mp3 Compression Different Musical Genres Audio Engineering Society Convention 127 2009 Sterne Jonathan MP3 Meaning Format Duke University Press Books 2012 Sterne Jonathan Mp3 Cultural Artifact New Media Society 8 5 2006 825-842 heartbeat"),
('The genetic algorithms explained', 'Skip content Maker Maker Approach Artificial Intelligence Primary Menu Home GitHub RSS Contact genetic algorithms March 9 2015March 9 2015 atrilla genetic algorithm GA variant stochastic beam search involves several search points states concurrently similar shotgun approach noted former post somehow combines features according performance generate better successor states Thus GA differs former approaches like simulated annealing rely modification evolution single state GA search state aka individual encodes problem information usually binary array GA begins set randomly generated states called population iterates chain evolution determined number rounds see Figure 1 described follows Fitness evaluation state scored wrt effectiveness criterion higher values better states Selection states randomly sampled specific probability according fitness value Crossover selected individuals randomly shuffled combined specific point Mutation child individuals may flip bits one independent probability Figure 1 Chain evolution genetic algorithms Chain evolution genetic algorithms advantage GA comes ability crossover combine large blocks bits e state information evolved independently perform specific useful function However successful use application GA requires careful engineering state representation encoding addition common optimisation parameters like population size number evolution rounds deep impact performance algorithm Figure 2 shows example objective landscape state-space number represented binary array 5 bits unsigned integer Figure 2 Genetic algorithm applied one-dimensional state-space landscape described example objective function Genetic algorithm state-space landscape GA belongs family metaheuristics algorithms designed tackle ill-defined functions clear definite objective impossible use GA adequate black box search processes Figure 3 implements GA algorithm Note explicit objective function given Instead initial population fitness function passed begin search optimum Figure 3 Genetic algorithm -- Genetic algorithm -- -- PRE -- population - set individuals table -- fitness - evaluate individual function -- -- POST -- solution - solution state table -- -- individual state binary array -- Population ordered best worst according fitness -- must greater one -- Fitness normalised 0 bad 1 good local function sort_population population fitness local function comp x y return fitness x fitness y end return table sort population comp end local function random_selection population fitness local fit local sumfit 0 1 population local fitIndi fitness population table insert fit fitIndi sumfit sumfit fitIndi end fit 1 fit 1 sumfit 2 fit fit fit sumfit fit i-1 end local x y local rx math random local ry math random 1 fit rx fit x population break end end 1 fit ry fit y population break end end return x y end local function reproduce x y local point math floor math random x 1 local child 1 point child x end point 1 x child y end return child end local function mutate x 1 x math random 0 1 x math abs x - 1 end end end function genetic_algorithm population fitness local solution epoch 1 100 sort_population population fitness local new_population 1 population local x y random_selection population fitness local child reproduce x y math random 0 05 mutate child end table insert new_population child end population new_population end return population 1 end GA algorithm suggested AIMA posit similarity real world reproductive systems though reasonable prevent inbreeding nature close genetic relation results disorders issues discussed seem much impact function optimisation purposes particular case mutation may add value creating new individual Finally regarding computational complexities GA space complexity given number individuals population time complexity given intermediate processes evolution chain guess one critical points ranking individuals according fitness value sampling former implementation Lua table sort function based quicksort used However would expect overall tractable amount instances Depending fine respect specific problem several options may fit Use sensible plausible bound test Posted Optimisation Post navigation simulated annealing algorithm closer look problem state encoding genetic algorithms electronics 3 thoughts genetic algorithms somkoala says March 10 2015 22 11 Could please expand detail careful engineering state representation resulting implications crossover Thanks Reply atrilla says March 17 2015 00 26 encode problem specific-information binary array represent trivial regarding strategy GA less able find optimum m working new post ll applying find optimum resistor values amplifier hope shed light somewhat obscure topic Reply Pingback closer look problem state encoding genetic algorithms electronics Maker Leave Reply Cancel reply email address published Required fields marked Name Email Website Comment may use HTML tags attributes href title abbr title acronym title b blockquote cite cite code del datetime em q cite strike strong Search Recent Posts Artificial Neural Networks point Gradient-based methods closer look problem state encoding genetic algorithms electronics genetic algorithms simulated annealing algorithm Follow ai_maker Facebook AI-Maker LinkedIn SubscribeLeave Blank Change email Categories Electronics Optimisation Search Uncategorized Archives May 2015 April 2015 March 2015 February 2015 January 2015 December 2014 Proudly powered WordPress Theme Plainly Chris Rudzki'),
("Array '15: array-oriented programming workshop at PLDI", "ARRAY '15 ACM SIGPLAN 2nd International Workshop Libraries Languages Compilers Array Programming Saturday June 13th whole day Co-located PLDI 2015 Portland Oregon USA Invited talk David Padua Link ACCEPTED PAPERS Focus Description Array-oriented programming powerful abstraction compactly implementing numerically intensive algorithms Many modern languages provide support collective array operations used increasing number programmers non-programmers data analysis scientific computing workshop intended bring together researchers many different communities including language designers library developers compiler researchers working numeric languages R MATLAB general-purpose dynamic languages Python JavaScript statically typed languages Haskell Scala C aim workshop foster cross-pollination concepts across projects research communities explore new directions Expanding scope array programming encompass wider range data types computations Transparently utilizing parallel hardware multi-core SIMD GPU FPGA leveraging implicitly parallel semantics array operations Simplifying embedding array constructs within existing languages weren't designed numerical computing Connections array abstractions models dataflow programming stream programming data parallelism High-level compilation optimization techniques array-oriented programs Compilers virtual machines frameworks array-oriented programming languages Important Dates Paper submissions Monday March 23rd 2015 may update submission Wednesday March 25th 2015 Anytime Earth Please note several groups asked couple extra days make final versions submissions Thus authors may Wednesday March 25th submit final submissions Please make initial submission original deadline know many papers review Notification authors Monday April 20th 2015 Anytime Earth Submission camera-ready copies Friday May 15th 2015 Anytime Earth Workshop date Saturday day June 13th 2015 Submissions Submissions four six-page papers ACM SIGPLAN proceedings style Submissions may one following research paper topic related focus workshop tool description reporting tool relevant topic workshop case tool description workshop presentation include demo tool submission include short appendix summarizing tool demo appendix information PC part published paper count six page limit Papers submitted using EasyChair Publication plan apply permission accepted papers published ACM Digital Library Schedule workshop span Saturday day morning Sunday Schedule details available review submissions Organizing Committee Laurie Hendren Chair McGill University Canada Hidehiko Masuhara Tokyo Institute Technology Japan Mary Sheeran Chalmers University Technology Sweden Jan Vitek Northeastern University USA Program Committee program committee includes members organizing committee plus following members Manuel Chakravarty UNSW Australia Andreas Kl ckner University Illinois Urbana-Champaign USA Clemens Grelck Universiteit van Amsterdam Netherlands David Grove IBM USA Alex Rubinsteyn Mount Sinai Hospital USA Luke Tierney University Iowa USA Special notes students SIGPLAN PAC funding ARRAY 15 sponsored SIGPLAN eligible apply SIGPLAN PAC funding presenter co-author paper PLDI 2015 Student Research Competition Maximize visibility get trip PLDI 15 ARRAY 15 entering PLDI 2015 Student Research Competition Previous ARRAY workshops ARRAY '14 co-located PLDI 2014 Sponsored"),
("Greetings all, I'm trying to ID the textbook on the bottom of this picture. Can someone help? I think it's a computer related textbook.", ''),
('Who Owns Your Research - SIGPLAN sponsored survey on Open Access', "WhoOwnsYourResearch OWNS RESEARCH survey sponsored SIGPLAN intended shed light position scientific community respect open access publishing scientific results CS go survey survey closed results Open access OA refers unrestricted access scientific works provided publisher without charge reader Gold OA models exist Gold OA ensures free access articles perpetuity alternative Green OA depends authors posting copies published version institution's web pages may preserved perpetuity provide centralized index Open access Digital Library DL would financial implications Understanding requires brief look ACM finances ACM's financial statement indicates two largest revenue streams publications 20 3M conferences 27 1M expenses 11 2M 24 6M respectively Publication costs break follows Journals 2 1M magazines newsletters 0 8M DL operational expenses 2 6M DL sales marketing 2 3 distribution costs print 2 1M Conference publishing costs 1 7M separate paid registrations ACM surplus 11 7M distributed follows SIGs receive 5 8M general activities area receive 5 9M 3 7M used called Good Works Good Works programs associated revenue curriculum development accreditation university CS programs K-12 education education policy public awareness initiatives women computing under-represented minorities individuals disabilities technology policy international initiatives Alternative financing models include Author processing charges high 5 000 Elsevier low 15 LIPIcs ACM Gold OA priced 700 1100 per conference journal paper Voluntary support arXiv funded combination grants voluntary support user institutions Costs 1M yr million papers stored perpetuity Author lifetime subscriptions PeerJ OA publisher requires once-in-a-lifetime subscription 299 per author per paper charge Several conferences recently switched LIPIcs OA ECOOP ICALP CONCUR Copyrights traditional publishing models authors transfer copyrights work publisher exchange publisher making authors work broadly accessible OA models authors retain copyright e g Creative Commons licenses CC-BY 4 0 Journals v Conferences journals account significant portion costs may worth reconsidering role Conference label sets CS apart fields work published journals Journal means varies greatly journals provide fast feedback single round reviews others long lead times multiple rounds reviewing SIGPLAN proposed changes reviewing model PLDI proceedings conference appear issue TOPLAS without precluding resubmission longer versions PLDI papers journal aims erase artificial boundary journals conferences continuing improve quality conferences communities allow journals conferences mix e g PVLDB journal VLDB conference Published Google Drive Report Abuse Updated automatically every 5 minutes"),
('Deep Learning for Natural Language Processing', "CS224d Deep Learning Natural Language Processing Course Description Natural language processing NLP one important technologies information age Understanding complex language utterances also crucial part artificial intelligence Applications NLP everywhere people communicate everything language web search advertisement emails customer service language translation radiology reports etc large variety underlying tasks machine learning models powering NLP applications Recently deep learning approaches obtained high performance across many different NLP tasks models often trained single end-to-end model require traditional task-specific feature engineering spring quarter course students learn implement train debug visualize invent neural network models course provides deep excursion cutting-edge research deep learning applied NLP final project involve training complex recurrent neural network applying large scale NLP problem model side cover word vector representations window-based neural networks recurrent neural networks long-short-term-memory models recursive neural networks convolutional neural networks well novel models involving memory component lectures programming assignments students learn necessary engineering tricks making neural networks work practical problems Course Instructor Richard Socher Teaching Assistants Peng Qi Francois Chaubard Ian Tenney Namrata Anand Rohit Mundra Milad Mohammadi Detailed Syllabus materials Piazza forum Class Time Location Spring quarter March - June 2015 Lecture Monday Wednesday 1 00-2 15 Location 320-105 Office Hours Richard Wed 2 15-3 30pm Gates 200 research project discussions TAs Francois Thu 6 30-8 30 Huang Basement Peng Mon 3-5pm Gates B26A Gates Basement Ian Tues 4-6pm Gates 200 Milad Tues 6-8pm Gates 200 Namrata Mon 5-7pm Gates B26A Gates Basement Rohit Fri 2 30-4 30pm Huang Basement Grading Policy Assignment 1 15 Assignment 2 15 Assignment 3 15 Midterm 15 Final Project 40 Course Discussions Stanford students Piazza Stanford students Online discussions Reddit Group non-Stanford students Twitter account CS224d Assignment Details See Assignment Page details hand assignments Course Project Details See Project Page details course project Prerequisites Proficiency PythonAll class assignments Python use numpy tutorial aren't familiar Python lot programming experience different language e g C C Matlab Javascript probably fine College Calculus Linear Algebra e g MATH 19 41 MATH 51 comfortable taking derivatives understanding matrix vector operations notation Basic Probability Statistics e g CS 109 stats course know basics probabilities gaussian distributions mean standard deviation etc Equivalent knowledge CS229 Machine Learning formulating cost functions taking derivatives performing optimization gradient descent Recommended Knowledge natural language processing CS224N CS224U discuss lot different tasks appreciate power deep learning techniques even know much work done tasks related models solved Convex optimization may find optimization tricks intuitive background Knowledge convolutional neural networks CS231n first problem set probably easier cannot assume took class 3 lectures overlap content use time dive deeper aspects FAQ first time class offered Yes entirely new class designed introduce students deep learning natural language processing place particular emphasis Neural Networks class deep learning models recently obtained improvements many different NLP tasks follow along outside We'd happy join us plan make course materials widely available assignments course notes slides available online may provide videos won't able give course credit take course credit cred basis Yes Credit given would otherwise earned C- audit sit general open sitting-in guests member Stanford community registered student staff faculty courtesy would appreciate first email us talk instructor first class attend work groups Final Project Yes groups two people question class best way reach course staff Stanford students please use internal class forum Piazza students may benefit questions answers personal matter email us class mailing list cs224d-spr1415-staff lists stanford edu combine Final Project another course Yes may couple courses concurrently offered CS224d natural choices CS224u Natural Language Understanding Prof Chris Potts Bill MacCartney taking related class please speak instructors receive permission combine Final Project assignments Webdesign Andrej Karpathy"),
('64 Bit Programmers Calc -Control Word Size', 'Programmers 64 Bit Calculator Tweet dec IEEE 754 floating point number representation float hex 0000000000000000 Click edit bits 63 0000 0000 0000 0000 47 0000 0000 0000 0000 32 31 0000 0000 0000 0000 15 0000 0000 0000 0000 0 Signed 64 bit hex ASCII NULL D E F B C 7 8 9 4 5 6 1 2 3 0 M - Back CE C - RoL RoR MOD X Y X Y XOR NAND XNOR Close Add Clear 63 0 62 0 61 0 60 0 59 0 58 0 57 0 56 0 55 0 54 0 53 0 52 0 51 0 50 0 49 0 48 0 47 0 46 0 45 0 44 0 43 0 42 0 41 0 40 0 39 0 38 0 37 0 36 0 35 0 34 0 33 0 32 0 31 0 30 0 29 0 28 0 27 0 26 0 25 0 24 0 23 0 22 0 21 0 20 0 19 0 18 0 17 0 16 0 15 0 14 0 13 0 12 0 11 0 10 0 9 0 8 0 7 0 6 0 5 0 4 0 3 0 2 0 1 0 0 0 Close switch bits 0 1 clicking Mantissa IEEE 754 Sign IEEE 754 Penjee com learn program fun way Play Binary Bonanza fun free online game learning binary'),
('Designing a Better Judging System', 'cat var log life Anish Athalye Home Archive Contact 2015 rights reserved Designing Better Judging System 07 Mar 2015 Competition judging hard Coming fair methods select rankings difficult especially hard design judging methods large-scale events attendee many hackathons organizer HackMIT wanted figure way improve quality judging hackathons large-scale competitions general Sometimes poor judging result neglect lack organization However judging methods inherently flawed possible lot better trying design good judging system large-scale events particular pose unique challenge events large single judge judge entries fact HackMIT average judge looked 5 projects challenge figure data collect combine data come good overall judging results Given size event number judges amount time judging take place fundamental limit much data possible collect question given constraints produce highest-quality judging results possible turns radically change judging model instead judges produce absolute scores ask judges perform pairwise comparisons Using statistical inference methods possible take data form produce high-quality judging results method pairwise comparisons actually works pretty well practice relied method judging Blueprint HackMIT high school hackathon re thinking using form judging method starting HackMIT 2015 well Averaging First Attempt Perhaps straightforward judging method numerical scores average really easy judges assign numerical scores entry judge average scores per entry rank entries average score method easy implement wonder common vast majority events use something like However method deeply flawed mean judge gives entry X 7 10 judge B gives entry Y 4 10 mean X objectively better mean judge B particularly harsh one many problems method Normalization Step Right Direction situations possible improve averaging approach normalizing judges scores method used judging MIT BitComp system account variations judging scores normalized mean 0 standard deviation 1 Given raw scores single judge compute normalized scores computing expression step right direction However approach still flawed one given way numbers lot large events individual judges look tiny fraction entries Normalizing judges scores could harm good entries could also give undeserved boost bad entries Fundamentally Flawed System Judging assigning explicit numerical scores inherently flawed Assigning numerical scores entries task people good following XKCD comic illustrates phenomenon Numerical scores nonsense begin Even especially bad judges global view entries see tiny percentage entries current systems judging results dependent order entries judged Judges look one entry time judging first entry context nothing compare assigning score judging many entries judge outlook may change Judging results independent order entries judged judges go back adjust scores judging several entries start blur together Better Approach People much better making comparative judgements determining absolute scores options good amount psychology economics research back claim1 Pairwise comparison way go obtaining high-quality judging results easy understand advantages approach considering examples Try rating emacs scale 1-10 think whether vim better emacs sorry couldn resist collecting pairwise comparison data little careful Even though won necessarily comparison data every pair entries want disjoint sets entries never even indirectly compared Ensuring good data use information comparisons determine global ranking method pairwise comparison nice properties well Luce choice axiom states probability selecting one item another pool many items affected presence absence items nice property judges see small percentage entries taking independence property account allow us develop better models Pairwise comparison clearly right way measure quality entries tricky part turn measurements judging results Representations Measurements designing model necessary think form representation results many pairwise comparisons need keep mind given pair entries may compared zero times judges may conflicting opinions comparative quality entries results pairwise comparisons entries multiset tuples element represents single judging decision entry judged better entry also think measurements directed graph nodes representing entries nonnegative integer edge weights edge weight equal number times entry judged better arrows point better entries also useful consider matrix representation data follows naturally graph representation matrix nonnegative integer entries equal number times entry judged better Preliminary Algorithm representation measurements start thinking translate comparisons ranking natural think finding topological sort comparison graph Informally topological sort would translate ranking none judges disagree Unfortunately general topological sort necessarily exist comparison graph could cyclic Instead consider slightly different problem finding best possible ranking terms cost function given weighted directed graph edges weight define permutation nodes define backward edges function permutation define cost given permutation sum weights backward edges define optimal ranking method pretty good Informally represents finding ranking least number judging decisions disagree However algorithm doesn really take account much nature judging entries Also another issue NP-hard optimization problem prove via simple reduction minimum feedback arc set problem one Karp 21 NP-complete problems setting edge weights 1 Robust Model look psychology research find good models reasoning paired comparison data turn probabilistic choice models using Thurstone statistical model judgements widely accepted model allow us derive interval scale measurements extract rankings Thurstone model assumes quality every choice Gaussian random variable model dictates person judges relative quality two options sample corresponding quality distributions choose option higher measured quality pretty nice property modeling real world two options different terms quality easy pick better one however options similar terms quality much smaller difference probability choosing one option true quality mean corresponding Gaussian Given whatever data figure means Gaussians relative scores every option ll able determine global ranking example consider two options Gaussian random variables corresponding probability density functions expression standard normal probability distribution function Given information compute probability judge chooses given option Gaussian random variable assume zero correlation model compute probability expression standard normal cumulative distribution function simplify model setting without loss generality let makes math little cleaner Maximum Likelihood Estimator hold exist true corresponding option given data want determine likely parameters model construct maximum likelihood estimator First consider case single pair options X Y Let number people chose option X let number chose Y define likelihood measurements given data maximizing equivalently calculate log-likelihood logarithm strictly monotonically increasing move constructing maximum likelihood estimator finding parameters convenient consider matrix representation judging decisions Recall matrix number times entry preferred entry apply maximum likelihood result note terms constants given data recall define global maximum log-likelihood consider using maximum posteriori estimator assume option values drawn independently normal distribution use Tikhonov regularization result higher-quality estimate obtain solution solving following convex optimization problem Data make good use statistical model inference algorithm need make sure good data need make sure enough comparisons pairs come good global ranking want make sure end connected graph good way dispatch judges judge sequence options compare option previous one results data points evaluations judge Implementation good fancy math unless actually used implementing algorithm good amount modeling analysis HackMIT team decided use judging method Blueprint high-school hackathon time constraints data collection method bit hacky using Twilio app collect comparison data judges Running algorithm involved copying logs server running data Python script running convex optimization routine written MATLAB interpreting results Python Even though interface suboptimal algorithm fully implemented ended working really well case anyone wants try experimenting real-world data personal use anonymized data rookie division consisting 235 comparisons 37 teams results graphical representation comparisons made graph nodes represent teams edge node X node Y represents least one judge choosing Y X Essentially comparison graph edge weights hidden Conclusion Many judging methods commonly used competitions inherently flawed use absolute scores assigned judges method paired comparisons much natural system use used obtain high-quality judging results used paired comparison method Blueprint worked well us re thinking using variant method judging starting HackMIT 2015 d love see method used competitions likely lead higher quality results could also lead increased transparency judging would great method really easy anyone use needs easy way collecting paired comparison data running optimization algorithm time m thinking working web app make whole process really easy anyone able use judging method without think math write single line code multitude literature subject One great paper Thurstone 1927 paper titled law comparative judgement originally published Psychological Review Related Posts Quadcopter 11 Apr 2015 Clickbait Physical World Social Experiment 20 Feb 2015 Asynchronous Shell Prompt 07 Feb 2015 Please enable JavaScript view comments powered Disqus comments powered Disqus'),
('How can I optimize memory and time when costs of operations are known beforehand?', "current community chat blog Computer Science Computer Science Meta communities Sign log customize list stack exchange communities Stack Exchange sign log tour help Tour Start quick overview site Help Center Detailed answers questions might Meta Discuss workings policies site Computer Science beta Questions Tags Users Badges Unanswered Ask Question Take 2-minute tour Computer Science Stack Exchange question answer site students researchers practitioners computer science It's 100 free registration required Enumerate combinations operations fit memory time criteria vote 2 vote favorite following problem x number operations perform O o_1 o_2 ldots o_n set possible operations know beforehand cost terms time memory every operation o_i O limited amount memory computation time M respectively efficient way generate list computable combinations e need generate set computables C c_1 c_2 ldots c_m forall c_i C c_i combination possible repetition O c x forall c_i C memory time consumption less M respectively think operations research problem wrong branch operations research suitable approach algorithms enumeration share improve question edited Mar 9 8 24 Raphael 28 4k973171 asked Mar 7 12 33 FearUs 1233 add comment 2 Answers 2 active oldest votes vote 2 vote use uniform-cost search space possible combinations operations node ordered list operations performed Terminate search maximum memory time allotment reached share improve answer answered Mar 7 15 48 JSutton 211 add comment vote 2 vote exponentially many possible sequences operations n x worst case Therefore general efficient algorithm compute list sequences operations problem solved feasible amount time x small x small enumerate sequences length x special case first j sequence total time usage greater ignore sequences starting prefix Raphael says branch bound algorithm may efficient many sequences break resource criteria purpose you'd want sort list start expensive operations share improve answer edited Mar 9 15 37 answered Mar 9 3 55 D W 22 3k32057 1 general branch bound algorithm may efficient e many sequences break resource criteria purpose you'd want sort list start expensive operations Raphael Mar 9 8 26 add comment Answer draft saved draft discarded Sign log Sign using Google Sign using Facebook Sign using Stack Exchange Post guest Name Email Post guest Name Email discard posting answer agree privacy policy terms service answer you're looking Browse questions tagged algorithms enumeration ask question asked 2 months ago viewed 178 times active 2 months ago Blog Stack Overflow Andela partner provide education beyond borders Related 4 worst-fit memory allocation react encountering contiguous empty memory blocks 6 fast find Four-Square combinations sum N 4 Time complexity enumeration SUBSET SUM instances 1 enumerate combinations n binary variables sum k 2 enumerate combinations parallel 2 Enumerating paths directed graph loops splits 1 Enumerate Possible Strings Alphabet 1 Generating factorials n faster naive approach 3 algorithm find shortest paths two nodes 1 Enumerating n-tuples finite domain Hot Network Questions DNS Always Getting Non-Authoritative Answer morally obligated use time fix bugs software projects List software projects CV would people know hand write Star Trek Get random number focused center fact true evaluate normative requirements new device design Phrase mean fully prepared don't know whether staff member PhD address Dr emails old edition Cinder Wall able attack attackers get anything DoS attacks except crashing service display pie chart expected wanted pgsql select distinct multiple columns Star vs Heart icon represent save favourite What's point conferences CV Firefox accusing distributing malware site Electric airplane - propellor vs turbine jet Help determining whether transformation linear terrible idea aim lower journal paper Generic inner classes common practice reviewers recommend papers review variability faculty salaries STEM fields high difference Multiple robots swarm robots researcher share scientific ideas temporary position entitled recognition hot questions question feed tour help blog chat data legal privacy policy work advertising info mobile contact us feedback Technology Life Arts Culture Recreation Science Stack Overflow Server Fault Super User Web Applications Ask Ubuntu Webmasters Game Development TeX - LaTeX Programmers Unix Linux Ask Different Apple WordPress Development Geographic Information Systems Electrical Engineering Android Enthusiasts Information Security Database Administrators Drupal Answers SharePoint User Experience Mathematica Salesforce 14 Photography Science Fiction Fantasy Graphic Design Seasoned Advice cooking Home Improvement Personal Finance Money Academia 10 English Language Usage Skeptics Mi Yodeya Judaism Travel Christianity Arqade gaming Bicycles Role-playing Games 21 Mathematics Cross Validated stats Theoretical Computer Science Physics MathOverflow 7 Stack Apps Meta Stack Exchange Area 51 Stack Overflow Careers site design logo 2015 stack exchange inc user contributions licensed cc by-sa 3 0 attribution required rev 2015 5 28 2614 Computer Science Stack Exchange works best JavaScript enabled"),
('Quantum Computing Explained', ''),
('Google Tests First Error Correction in Quantum Computing', "IEEE org IEEE Xplore Digital Library IEEE Standards IEEE Spectrum Sites Follow Advertisement Engineering Topics Special Reports Blogs Multimedia Magazine Professional Resources Search Ongoing coverage Shanghai first CESAsia Spectrum Stephen Cass Close Ticker Tech Talk Computing Hardware Google Tests First Error Correction Quantum Computing Jeremy Hsu Posted 4 Mar 2015 19 25 GMT Share Email Print Reprint Image Google Quantum computers won ever outperform today classical computers unless correct errors disrupt fragile quantum states qubits team Google taken next huge step toward making quantum computing practical demonstrating first system capable correcting errors Google breakthrough originated hiring quantum computing research group University California Santa Barbara autumn 2014 UCSB researchers previously built system superconducting quantum circuits performed enough accuracy make error correction possibility earlier achievement paved way researchers many employed Google build system correct errors naturally arise quantum computing operations work detailed 4 March 2015 issue journal Nature first time natural errors arising qubit environment corrected said Rami Barends quantum electronics engineer Google first device correct errors Quantum computers potential perform many simultaneous calculations relying upon quantum bits qubits represent information 1 0 time gives quantum computing big edge today classical computers rely bits represent either 1 0 huge challenge building practical quantum computers involves preserving fragile quantum states qubits long enough run calculations solution Google UCSB demonstrated quantum error-correction code uses simple classical processing correct errors arise quantum computing operations codes directly detect errors qubits without disrupting fragile quantum states get around problem relying entanglement physics phenomenon enables single qubit share information many qubits quantum connection codes exploit entanglement architecture includes measurement qubits entangled neighboring data qubits Google UCSB team developing specific quantum error-correction code called surface code eventually hope build 2-D surface code architecture based checkerboard arrangement qubits white squares would represent data qubits perform operations black squares would represent measurement qubits detect errors neighboring qubits researchers testing surface code simplified repetition code architecture involves linear 1-D array qubits unprecedented demonstration error correction used repetition code architecture included nine qubits tested repetition code equivalent 90 000 test runs gather necessary statistics performance validates years years theory show error correction practical possibility said Julian Kelly quantum electronics engineer Google importantly team demonstration showed error correction rates actually improved increased number qubits system exciting news quantum computing shows larger systems qubits won necessarily collapse growing pile errors means larger quantum computing systems could practical instance team compared error rate single physical qubit error rate multiple qubits working together perform logic operations used repetition code array five qubits logical error rate 2 7 times less single physical qubit error rate larger array nine qubits showed even improvement logical error rate 8 5 times less single physical qubit error rate Kelly explains One wanted show system qubits cooperating outperforming single qubit important milestone Even exciting go five nine qubits gets better want get better error rate add qubits first demonstration error correction shows clear path forward scaling size quantum computing systems terms still falls well short error correction rate needed make quantum computing practical said Austin Fowler quantum electronics engineer Google team would need improve error correction rates 5 10 times order make quantum computing truly practical Still current quantum computing system managed maintain coherence quantum states qubits despite uncorrected errors fact left researchers feeling optimistic future work supported government funding Intelligence Advanced Research Projects Activity Army Research Office grants latest error correction demonstration would mainly work universal logic-gate quantum computers systems would represent super-fast versions today classical gate-model computers Google also invested alternate quantum annealing approach Canadian company D-Wave Systems D-Wave quantum annealing machines sacrificed qubit coherence scale quickly size 512-qubit D-Wave Two machine system dwarfs experimental quantum computing systems containing several qubits Google turned John Martinis professor physics University California Santa Barbara along former UCSB researchers Google payroll try building stabilized version D-Wave quantum annealing machines Learn AI Google IARPA Singularity UCSB error correction high performance computing quantum computers quantum computing quantum mechanics qubits scientific computing supercomputers superconducting superconductors Share Email Print Reprint Comments Comment Policy Please enable JavaScript view href http disqus com ref_noscript comments powered Disqus Comments powered Disqus Advertisement Tech Talk IEEE Spectrum general technology blog featuring news analysis opinions engineering consumer electronics technology society editorial staff freelance contributors Subscribe RSS Feed Follow IEEESpectrum Newsletter Sign Sign Tech Alert newsletter receive ground-breaking technology science news IEEE Spectrum every Thursday Sign Computing Laser Links Give Aging Supercomputers Second Wind Free-space optics help old computers learn new tricks27 May Computing Holography Makes 3-D On-Chip Batteries 3-D microbatteries could power sensors medical implants11 May Computing IBM Shows First Full Error Detection Quantum Computers IBM's four-qubit array first detect types quantum computing errors29 Apr Advertisement Computing Return Elf Making 1976 microcomputer user friendly home-brew programmer low-power Membership Card microcomputer24 Apr Computing Theory Lowers Speed Limit Quantum Computing lower theoretical speed limit quantum entanglement puts new bounds future quantum computers20 Apr Computing Electronic Gate Built Silicon Quantum Computers Researchers implement 1998 proposal control long-lived silicon qubits15 Apr Computing U Blacklisting China's Supercomputers May Backfire U decision block Intel upgrading Chinese supercomputer won't stop China long run10 Apr Computing Really Anniversary Moore Law Gordon Moore path famous prediction7 Apr Computing Superslim Liquid Loop Keep Future Smartphones Cool half millimeter thick Fujitsu fluid-filled heat pipe loop keep even slimmest devices cooking7 Apr Computing Graphic Transistor Production Reached Astronomical Scales look Moore Law action2 Apr Computing Quantifying Risk Damage Integrated Circuits Space Alternatives conventional integrated circuits may significantly reduce space risks1 Apr Computing Intel Micron Move 3-D NAND Production Samsung competition comes 3-D flash memory economics end equation still blurry1 Apr Computing Moore Law Might Slowing Energy Efficiency Miniaturization may tough there's still room drive power consumption modern computers31 Mar Computing Gordon Moore Man Whose Name Means Progress visionary engineer reflects 50 years Moore Law30 Mar Computing 1964 Ad Flashback Analog Computers Walked Earth solve engineering problems go-to machine used analog digital25 Mar Computing Controlling Qubits Silicon Picosecond Speeds Superfast control cubits makes silicon likely contender future quantum computers24 Mar Computing Internet-of-Things Radio Chip Consumes Little Power Save Lot MIT engineers build 100-fold efficient transmitter stopping leaky transistors25 Feb Computing Rooting Malware Side-Channel Chip Defense System new software-agnostic malware detection tool detects cyberattacks power consumption27 Jan Computing Exascale Supercomputer 2023 right tomorrow crazy19 Dec 2014 Computing Tomorrow's Supercomputers Superconducting IARPA looks low-power superconducting logic high-performance computing11 Dec 2014 Topics Aerospace Work Biomedical Computing Energy Gadgets Geek Life Robotics Semiconductors Telecom Connect Facebook Twitter LinkedIn Google RSS IEEE Spectrum Contact Us Newsletters Mobile Site Reprints Permissions IEEE Partners Advertising Media Center IEEE Job Site Buyer Guide Magazine Subscribe Digital Download Copyright 2015 IEEE Spectrum Terms Conditions Privacy Opting Cookies Accessibility Nondiscrimination Policy IEEE Conferences Events Education Careers Membership Services Publications Standards Societies Communities"),
('Definite Clause Grammars: Not Just for Parsing Anymore -- 2004', "JUL OCT FEB 7 2009 2011 2014 6 captures 7 Jan 09 - 28 Aug 14 Close Help Definite Clause Grammars Parsing Anymore Abstract Definite Clause Grammars DCG proved system build parsing systems simply effectively Unfortunately DCG effective parser building tool uses often ignored -- seems DCG pigeon-holed parser building niche paper demonstrates common usage DCG expands common usage patterns areas parsing showing DCG effective means increasing programming efficiency simultameously maintaining even clarifying declarative semantics Introduction DCG Definite Clause Grammars DCG syntactic extentions Prolog allow subset definite programs 1 written Prolog programs DCGs definite programs represent facilitate among things almost unchanged translation grammars defined Bacchus-Naur Form BNF parts Prolog programs -- DCG useful tool generating parsers scanners Take example simple command-control language e g robot-arm 2 issuing commands per following example representation grammar BNF language follows move step move move step step step equivalent Prolog program using DCG following move -- step move move -- step step -- step -- nearly direct translation simply amazing especially compared programming language families inconceivable programming languages construct scanner language concisely native representation amazing facet discussed scanners parsers scale grammar's complexity linearly writing scanners parsers programming languages becomes much difficult increasing complexity usually scanners parsers increase complexity polymonially even exponentially complexity grammar Unfortunately perhaps scanner associated parsers facilitated DCGs uses DCGs often overlooked Let's step back application DCGs examine essentials -- DCGs provide system accepting atoms updating state world rejecting others backtracking find match DCGs provide words guarantee limited subset symbols associated actions symbols Type systems viewed similar fasion accept inputs compiling executing accepted instantiated values reject others causing compilation failure advantages typeful systems covered exhaustively literature programming systems developed recently accept programming types matter course Viewing DCGs similar light types convey advantages types programming language without types One oft-trumpeted advantages programming static types programs type declarations execute faster equivalent programs without types dynamic typing Types form duality things acceptable perform computations things used computation Given duality system perform computation safety values valid conform formal type dynamic typing system system must first check type value ensuring value's type acceptable perform computation statically typed system every check compiled away verified execution occurs Definite Clause Grammars provide service static typing usual case scanning parsing system receives language set data hope conforms grammar However build system control grammar definition input data set good example examine approach yields effective results domain generate-and-test problem-solvers SEND MONEY Cryptarithmic problem solvers Cryptarithmic problem solvers take trivially encrypted mathematical problem determine problem represents general case symbol stands digit position e g 6 x ------------- 5 5 ------------- 5 4 stands digit 0 stands digit problem solved usual manner would take generate-and-test approach digit 0 digit 1 digit 2 digit 3 digit 4 digit 5 digit 6 digit 7 digit 8 digit 9 first_digit X - digit X X 0 would provide ways construct representations composite numbers translations representations actual numbers represent example system use standard operators perform arithmetic as_number Digits Number - as_number_aux Digits 0 Number auxilary pred make interface pred tail recursive3 as_number_aux Num Num as_number_aux Digit Digits Num Result - NewSum Digit 10 Num as_number_aux Digits NewSum Result as_list 0 as_list N Digit Rest - N 0 Digit N mod 10 Remainder N 10 as_list Remainder Rest using one converts problem written equivalent representations asks system find solution note list representation puts numbers reverse order units first element list dots SixNum Multiplier Ones Tens Hundreds Solution - digit digit B as_number B 6 SixNum digit C digit D first_digit E as_number C D E Multiplier Ones SixNum C Ones 1000 Tens 10 D SixNum Tens 100000 Fivers SixNum E as_list Fivers 5 _ 5 _ Hundreds Fivers 100 Solution Ones Tens Hundreds as_list Solution _ 4 _ 5 _ _ Pentium Windows system using SWI Prolog solves problem 0 79 seconds 476 919 inferences 0 79 seconds 602827 Lips Pretty impressive general type problem there's need improve generic generate-and-test methodology happens cryptarithmic problem stringent constraints uniqueness solve equation SEND ------ MONEY one could use generate-and-test approach enforce letter represents unique digit send_more_money Send Money - first_digit first_digit M digit E digit N digit D digit O digit R digit Y all_different E N D M O R Y Send 1000 E 100 N 10 D M 1000 O 100 R 10 E Money M 10000 O 1000 N 100 E 10 Y Money Send all_different _ all_different Num Rest Diffs - member Num Diffs all_different Rest Num Diffs approach simple implement easy understand runtime cost enormous -- took 1 571 755 688 inferences 1817 34 seconds 864865 Lips find solution Instead let us reexamine problem constraint uniqueness use provide information problem solver facilitate effort time retain clarity declarative syntax uniqueness constraint tells us letter must represent unique digit described inductively first_digit 1 9 E digit except digit captured 0 9 - N digit except digits captured E 0 9 - E etc Looking inductive description unique constraints shows consumer pattern much like DCG system consumes symbols list we'll implement system particular case symbols list digits rewrite system use DCG replace generate-and-test predicates digit 1 predicate becomes definite predicate consumes digit input digit list first_digit 1 predicate becomes definite well takeout X X Y Y takeout X H H R - takeout X R digit X -- takeout X 4 first_digit X -- digit X X 0 solution predicate changes operates structure DCG input list enumerated ten digits also include interface predicate user burdened providing digits send_money_quickly Send Money - do_send_moola Send Money 0 1 2 3 4 5 6 7 8 9 _ do_send_moola Send Money -- first_digit first_digit M digit E digit N digit D digit O digit R digit Y Send 1000 E 100 N 10 D M 1000 O 100 R 10 E Money M 10000 O 1000 N 100 E 10 Y Money Send notice code uniqueness check translating code definite predicate guarantee logical variable holds unique digit unification occuring using DCG assign unique digits equivalent creating type logical variable successive type restrictive predecessor code algorithm changed little structurally DCG-as-types modification buy us Quite bit reduction cost runtime astounding new system solves equation using 8 215 467 inferences 36 91 seconds 222562 Lips nearly fifty times faster fully nondeterministic version presented first iteratively restricting search space DCG simulated type system allows system find solution much efficiently without sacrificing clarity declarative semantics problem description Summary DCGs Types example demonstrates one needs search restricted solution space DCG provide runtime benefits pure nondeterminism without sacrificing clarity code many optimization techniques example also demonstrates search space becomes restrictive predictable way duration search DCG provide enormous runtime benefits DCG Implementation Dynamic Programming DCGs effective parser generators commonly used we've also seen DCGs simulate types reap benefits static type systems dynamically typed environment DCGs uses well One use simulate dynamic programming 5 computes solutions iterative bottom-up approach instead usual Prolog languages rely recursion recursive top-down approach Dynamic programming shines solution must approached incrementally known-good set states usually situations declarative top-down description solution leads combinatorial explosion attempted solutions overwhelm computational resource excellent example problem computing nth Fibonacci number Fibonacci numbers declaratively formula find nth Fibonacci number fib n n 0 1 n 1 1 otherwise fib n-1 fib n-2 translated naively Prolog naive_fib 0 1 naive_fib 1 1 naive_fib X Y - X 1 Idx1 X - 1 Idx2 X - 2 naive_fib Idx1 naive_fib Idx2 B Y B well good unfortunately specification exponentially recursive take long time find solution find first decades solutions running available computational resources memory query naive_fib 20 X takes 65 671 inferences 4 54 seconds 14476 Lips find solution call 30th Fibonacci number causes local stack error problem top-down approach attempts find solution finding two previous unknown solutions locates known answer Unfortunately bottom far reached resources available problem make conversion tail-recursive solution practicable Fibonacci quickly DCGs DCGs solve problem simulating dynamic programming approach solution set known states keep building known state system finds solution approach additional advantage since iterative eliminates exponential recursive explosion previous declarative approach suffered idea use list6 memoize result set solution space grows system reaches desired solution 7 DCGs assist us maintaining declarative description controlling resources Declaratively requested Fibonacci number head solution list return fibonacci X X _ -- Otherwise we're end list still found solution push next two Fibonacci numbers onto result set keep searching fibonacci X B -- next_fib X B Fib1 next_fib X B Fib1 Fib2 fibonacci X Fib1 Fib2 Finally we're middle result set found solution keep searching fibonacci X B Rest -- succ_push X fibonacci X B Rest 8 DCG housekeeping methods one would expect Ensures current fib one need generates new one pushes current one onto result set next_fib X fib Idx1 Num1 fib Idx2 Num2 fib Idx3 Num3 -- succ_push X fib Idx1 Num1 Idx3 Idx2 1 Num3 Num1 Num2 add definite branch gt pushes compared-to element onto end list transformed difference list succ_push B Old New - gt B concat Old T1 - T1 B T2 - T2 New 9 retain declarative nature using DCGs solve problem also obtain benefit much powerful computational ability much less runtime cost 10 wit quick_fib 1450 X finds solution using 12 327 inferences 0 02 seconds 615464 Lips -- out-of-reach impossibly fast top-down standard predicate 12 Conclusion Definite Clause Grammars DCGs long known effective tool generate scanners parsers article explore alternative uses DCGs emulating static type system implementing dynamic programming system seen unlike optimization techniques DCGs maintain even improve clarity declarative specifications time providing benefits systems benefits manifested improvements orders magnitude computational power speed runtime achieves desired solutions Endnotes 1 Definite programs Prolog programs using DCG model definite programs discussed detail DM93 2 example developed Bratko01 chapter 21 two alternative BNF representations offered 3 naive version as_number 2 would as_number 0 as_number Digit Digits Result - as_number Digits Rest Result Digit 10 Rest tail recursive may benefit optimization Prolog system general kind transformation naive recursive system one uses accumulator known folding result fruits research functional programming community 4 use takeout 3 instead delete 3 delete 3 reversible eliminating desired backtracking explore alternate solutions definition use wonderful explanation takeout 3 come Fisher99 2 7 5 Dynamic programming discussed detail RL99 provides implementation generic dynamic programming algorithm Haskell programming language 6 Actually RL99 uses dictionary list data structure memoize known state difference list approach effective unnecessary use different data structure 7 Fibonacci number computed previous two Fibonacci numbers found convenient use specifically difference list data structure memoize results 8 two iteration branches predicate first adds two Fibonacci numbers we've come final two Fibonacci numbers result set second continues iteration two remaining Fibonacci numbers need two Fibonacci numbers compute next Fibonacci number two branches guarantee perform computation reach last two numbers approach forms basis dynamic programming system 9 implementation concat 3 straight Bratko01 8 5 3 concat A1-Z1 Z1-Z2 A1-Z2 10 solution also provides history Fibonacci numbers prior requested one difference list calling fibonacci 4 directly 11 traditional top-down solution provides history 11 resulting difference list converted human-readable form following predicate simple_list -- simple_list H Datum Diff - Diff L0 List - simple_list H Datum L0 List 12 implementation using monads Haskell fibonacci computer available logicaltypes blogspot com Works Consulted Bratko01 Prolog Programming Artificial Intelligence 3rd ed Ivan Bratko Pearson Education Limited Essex England 2001 DM93 Grammatical View Logic Programming Pierre Deransart Jan Mal uszyn'ski MIT Press Cambridge Massachusetts 1993 Fisher99 prolog - tutorial J R Fisher http www csupomona edu jrfisher www prolog_tutorial contents html 1999 RL99 Algorithms Functional Programming Approach Fethi Rabhi Guy Lapalme Addison-Wesley Essex England 1999 Definitions backtrack ing exploring alternate solutions attempting new values point failure BNF Bacchus Naur Form system describe grammars programming languages DCG Definite Clause Grammar difference list Difference lists list allow access elements within list directly avoid need cdr Lisp term mean walk list first element desired element list reach desired elements Lips Logical Inferences Per Second memoize memoize result keep result locally active necessary recompute Solutions Problems dots problem following solution 645 x 721 ----- 645 12900 451500 -------- 465045 solution SEND MONEY 9567 1085 10652 20th Fibonacci number 10946 computed fibonacci fib 20 X fib 1 1 fib 0 1 B 1450th Fibonacci number 7 79078e 302 1500th Fibonacci number causes floating-point overflow error Last modified Mon Aug 09 16 15 25 Eastern Daylight Time 2004 Copyright 2003 2004 Cotillion Group Inc rights reserved"),
('Can anyone explain this Finder error? (no hidden files)', "we're hiring blog imgur imgur store uploading tools developer api need help terms privacy ad choices upload images 23 Upload Images Video GIF Make Meme sign sign Loading browse computer drag drop Ctrl V paste clipboard publish Imgur create album Start Upload Blog Horizontal Grid Edit Images 0 uploading agree terms service Optimizing large GIFs file type supported Supported formats JPEG GIF PNG APNG TIFF BMP PDF XCF share anyone explain Finder error hidden files 3 months ago 698 views stats Download full resolution Get embed codes Love Imgur Join team store help blog request deletion terms privacy apps api advertise ad choices 2015 Imgur Inc prev next top Today's best images prev next browse way I'm sure Uploaded 0 Points 0 ups 0 downs - Views - Bandwidth usage - Comments - Favorites Daily Cumulative - waiting image data Loading views Get image internet"),
('Five Deep Questions in Computing [pdf]', 'PDF-1 3 37 0 obj endobj xref 37 35 0000000016 00000 n 0000001334 00000 n 0000001454 00000 n 0000001495 00000 n 0000001815 00000 n 0000002107 00000 n 0000002473 00000 n 0000002902 00000 n 0000003576 00000 n 0000003619 00000 n 0000003825 00000 n 0000003987 00000 n 0000004188 00000 n 0000004381 00000 n 0000004802 00000 n 0000004843 00000 n 0000004886 00000 n 0000004930 00000 n 0000005137 00000 n 0000005365 00000 n 0000007682 00000 n 0000008254 00000 n 0000008415 00000 n 0000008625 00000 n 0000010056 00000 n 0000011408 00000 n 0000021451 00000 n 0000026508 00000 n 0000109371 00000 n 0000109828 00000 n 0000110379 00000 n 0000115714 00000 n 0000115917 00000 n 0000116101 00000 n 0000000996 00000 n trailer startxref 0 EOF 71 0 obj stream x b ie e p 16'),
('Grit, Persistence and Coding', "CODE ORG ASK QUESTION STUDENT MONTH TEACHER MONTH ARCHIVE ANYBODY LEARN blog Code org We're non-profit dedicated giving every student every school opportunity learn computer programming Grit Persistence Coding Guest post Kiki ProttsmanDid know Walt Disney went bankrupt 1923 J K Rowling rejected 12 times one publisher grudgingly agreed claim Harry Potter Sorcerer Stone Play-Doh originally wallpaper-cleaning compound might seem like random examples people failed made big truth people achieve greatest things life ones look failure sign re worthless clue fix get result want Failure core computer scienceThis core belief along ability maintain faith ideas also base programming computer science Us computer scientists begin look forward understanding failures tell us learn interpret feedback realize hiccup another instruction achievement introduced programming kid father recognized importance able explore areas self-education even weren required 8-year-old girl fully credit decision buy family computer 1986 ability figure things even one else around knows going rarely moment life feel totally lost without direction pick cues past guide toward place feel safe physically emotionally intellectually lament day age many kids exposed life-altering experience Learning computer science young age takes pressure mistakesYoung problem solvers maintain self-esteem even struggle subjects challenge daily ve seen children well throngs young people ve taught elementary computer science classes after-school clubs school work hand assignments grades disappointment poor grade doesn motivate students try harder instead punishes think ve failed Computers patientWith computer programming moment hit Run code computer exactly told get wrong often know problem immediately fix issue try get wrong second time keep trying Computers patient result accelerated learning increase perceived achievement leads persistence grit resilience areas life whether math reading piano astrophysics number one thing raise brave creative problem solvers teach computer science Kiki Executive Director Thinkersmith former computer science instructor University Oregon Member Mensa Creative Director Algorithms Magazine Kiki recently named one Lane County 20 rising stars age 40 Mar 5 2015 Code org computer science programming CODE education 131 notes Tweet Notes being22ness reblogged lookupcollectionlookupcollection reblogged codeorgameliasch likes thischelineguevara reblogged codeorgta-bula-ra-sa likes thisjon-vo likes thissjselby95 reblogged codeorgbeautiful-broom likes thisstarpatched likes thisthatgirlcesca likes thises-capes likes thisehippy likes thisabeyko likes thisabeyko reblogged codeorgstudgin likes thisbitchyouisahoe likes thispea94 likes thisrebelliousfangirl reblogged codeorgrebelliousfangirl likes thiskirillidiot likes thisstay-awesome-always likes thismisstranslate likes thisbloodred17 likes thisihatepennyboards likes thisfeatherfied reblogged lorraineblack90passion-4-science likes thisgrowiat likes thisgrowiat reblogged algorhythmnlorraineblack90 reblogged algorhythmnfrenchkicks143 likes thisaxous likes thisabigailthesloth likes thisstarcode likes thistwentylightyearsouthofmars reblogged algorhythmnalgorhythmn reblogged codeorggothzayn likes thiswarriorcatzftw likes thisjhpark0154 likes thiscoding-with-kids reblogged codeorgathougcodesatnight likes thisa-bad-machine reblogged codeorgxuongmayhacuc likes thissamesscience reblogged codeorglucerob19 likes thiscapalmer1013 reblogged codeorgits-ashworks likes thiscrystalline-bear likes thisgeekgroupies reblogged codeorglago-m-orph likes thisthelildevs likes thisShow notesLoading Home CODE ORG ASK QUESTION STUDENT MONTH TEACHER MONTH Archive Code org CODE logo registered trademarks Code org Hour Code trademark Code org"),
('How a CPU Works ?', "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ CPU Works One Lesson SubscribeSubscribedUnsubscribe31 090 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Transcript Statistics 1 426 108 15 501 Like video Sign make opinion count Sign 15 502 292 Don't like video Sign make opinion count Sign 293 Loading Loading Transcript interactive transcript could loaded Loading Loading Rating available video rented feature available right Please try later Published Mar 15 2013Go inside computer uncover inner workings CPU including Control Unit ALU registers much Know website http www buthowdoitknow com See 6502 CPU Simulation http visual6502 org JSSim index htmlFor anyone annoyed breaths speaking try unlisted version edited audio https www youtube com watch v IkdBs Download PowerPoint file used make video https docs google com file d 0BzwHN CPU design used video copyrighted John Scott author book Know small differences CPU video one used book differences listed detract understanding either CONTROL UNIT - component called Control Section book called Control Unit simply common name might see used elsewhere LOAD INSTRUCTION - video what's called LOAD instruction actually called DATA instruction book Scott CPU uses two different instructions move data RAM CPU One loads next piece data called DATA instruction book uses another register tell address pull data called LOAD instruction book instruction renamed video two reasons 1 might confusing hear first type data encounter RAM also called DATA 2 Since LOAD instruction book complex concept easier use DATA instruction video introduce concept moving data RAM CPU INSTRUCTIONS - Scott CPU involved moving data CPU external devices instruction process simplified video make introduction concept easier ACCUMULATOR - register holds output ALU called Accumulator book name typically used register although simply called register video MEMORY ADDRESS REGISTER - Memory Address Register part RAM book part CPU video placed CPU video generally register resides real CPUs JUMP INSTRUCTIONS - book two types unconditional JUMP instructions One jumps address stored next address RAM one used video jumps address already stored register called JMP JMPR instructions book respectively MISSING COMPONENT - additional component missing CPU video used add 1 number stored register component called bus 1 book simply overrides temporary register sends number 1 ALU input B instead REVERSED COMPONENTS - Instruction Register Instruction Address Register opposite positions diagrams used book reversed video internal wiring control unit introduced subsequent video keeping registers original positions made design process difficult OP CODE WIRING - wires used control unit tell ALU type operation perform appear near bottom ALU video near top ALU book reversed similar reason one listed wiring ALU introduced subsequent video keeping wires top ALU made design process difficult Category Education License Standard YouTube License Show Show less Loading Advertisement Autoplay autoplay enabled suggested video automatically play next Next Core i3 Core i5 Core i7 Fast Possible - Duration 4 32 Techquickie 1 478 967 views 4 32 Play nextPlay Build Gaming PC Beat PlayStation 4 Xbox One - Duration 49 04 pcper 1 788 885 views 49 04 Play nextPlay Touchscreen Works Remake - Duration 2 47 Curious Engineer 145 408 views 2 47 Play nextPlay CPU made - Duration 10 16 HadronMesons - Science Tech 2 677 163 views 10 16 Play nextPlay RAM overclocking failure - Duration 0 25 Afrotechmods 3 013 832 views 0 25 Play nextPlay Power Nanotechnology Video Blow Mind - Duration 8 09 Prabhjeet Kaptaan 15 191 809 views 8 09 Play nextPlay Car Runs 100 Years Without Refueling - Thorium - Duration 11 14 EducationDocumentary 3 121 306 views 11 14 Play nextPlay Making 4 bit computer transistors - Duration 5 26 Simon Inns 672 097 views 5 26 Play nextPlay Cooking Intel - Demonstration CPU Heat - Duration 3 08 Cube Computer Channel 339 063 views 3 08 Play nextPlay What's inside microchip - Duration 7 22 DanTheAwesomeMan 254 112 views 7 22 Play nextPlay Need Expensive CPU Gaming - Duration 3 55 Austin Evans 960 864 views 3 55 Play nextPlay Coca Cola Made - Duration 5 01 Made 5 926 246 views 5 01 Play nextPlay World's Roundest Object - Duration 11 44 Veritasium 12 615 015 views 11 44 Play nextPlay 32 Bit vs 64 Bit - Advantage ComputerClan - Duration 6 55 Computer Clan 334 041 views 6 55 Play nextPlay Mercury vs Corn Syrup - Duration 3 52 TAOFLEDERMAUS 6 424 736 views 3 52 Play nextPlay CPU cooler GPU INSANE temps - Duration 5 25 DIY Perks 955 760 views 5 25 Play nextPlay Gold Recovery CPU Circuit - Duration 3 43 Best Gold Extraction 309 389 views 3 43 Play nextPlay Gold - made - Duration 5 01 rvd4always 2 895 440 views 5 01 Play nextPlay Intel Making Chip 22nm 3D Transistors - Duration 2 42 Intel 465 765 views 2 42 Play nextPlay Inside Hard Disc Drive - Duration 3 31 blueeyednanuk 189 883 views 3 31 Play nextPlay Loading suggestions Show Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists"),
('Analyzing Email Data', 'Skip content AboutArticlesKnowledge Articles Analyzing Email Data Posted February 24 2015February 24 2015 Austin ve always bit data nut love predict future improve understanding provide insight well anything Recently watching FRONTLINE United States Secrets documentary led Snowden leaks really interesting even though read ton NSA spying Snowden documentary amazingly insightful Anyways specifically caught attention bit Google reads everything Gmail NSA collected meta data lead get curious dig email could discover could discover Analyzing Email Data Basic Email Stats decided analyze main Gmail account personal non-spam account main account active since 2009 brief overview account Total emails 23 965 popular day Monday popular location Illinois popular word University popular domain illinois edu popular contact Cole Gleason graph emails received time see massive increase since joined began attending college 2010 even began attending University Illinois 2013 past year 2014 2015 treasurer UIUC chapter ACM receives ridiculous number emails daily link interactive graph break day Nothing interesting expected However dig deeper larger picture begins emerge Analyzing Email Data Word Frequency One interesting aspects analyzing meta data emails evolved time pretty clear interested interests evolved time Granted emails probably best measurement interests send many emails amongst friends show professional interests evolved time example see frequently received sent word per year thresholding removed top 25 words terms send austin email etc However next 25 words far interesting providing insight interests Clearly interested data computer science etc Unfortunately even words provide clear image interests Many keywords still seem associated general emails e receive d pending thanks etc created csv terms commonly found emails find github exclude common email terms get improved image interests larger version image bit difficult make five frequent terms University Data Computer Team continue search terms see tons terms related technology software programming student university etc seems pretty obvious anyways CS student analyzing frequency words becomes clear major stage life although removed location terms chart top geological terms found email Illinois Champaign Urbana Joliet Palo Alto Chicago provides basis live least operate Overall list fairly accurate done without use IP data would tell us exactly deal located even interesting even effected seasons example February seem much focused work probably gungho trying get get internships frequent words february Alternatively September seem much interested handling people starting school either others ACM frequent words september also interesting segment year see life evolved time 2011 example used much shorter generalized words removed names majority emails contained names going meet so-and-so 2014 much rabbit whole so-to-speak focused profession getting jobs making software student shows transition University Illinois 2011 frequently used words frequently used words 2014 probably gems lets move onto view interact Analyzing Email Data Connections emails educational company institutions however outliers find website domains communicate Top Domains Obviously doesn tell much google University Illinois However subscribing email updates various websites would likely much interesting spread frequent domains Similarly investigate top emails buddy Cole tops charts followed closely piazza collaboration tool school Trello least seems way surface However upon inspection three different email addresses mine toping charts everything seems well world wanted see interest time would could look number domain endings TLDs find probably college TLD Count com 10688 edu 4251 org 833 io 462 net 297 Analyzing Email Data Analyzing EmailsAgain analysis could done let show could first step download emails mbox file able download Google Gmail five easy steps 1 Click profile 2 Click account 3 Find account tools download data 4 Select - none mark mail 5 Add drive quicker delivery receive zip file download unzip download code github Email_Analysis code smelliest ever written wrote tested everything including article 6 8 hours work almost everyone downloading code Put mbox file directory code Rename mbox mail mbox Run script name py Wait 2 3 minutes per Gb Load csv files excel sheets recommend reading README always make guarantee work perfectly fact ll probably edit csv files large extent removing items label None e data available well thresholding us use receive different amounts spam different places removing data somewhat manual ll edit scripts Regardless hope works Feel free post update github make changes Related Articles Edge Detection Computer Vision PCA Principal Component Analysis Opportunity Cost War Binary Trees Traversals Everyday Algorithms Elevator Allocation Categorized Today Learned 2 thoughts Analyzing Email Data Dailen Gunter says February 25 2015 10 33 really like ve done reminds analytical data provided Wolfram one Facebook profile meshed defunct Xobni Outlook plugin well done unrelated note m particularly fond theme specifically way pictures loaded gradually scroll Might inquire theme re using plugin controlling Reply Austin says February 26 2015 1 04 pm using Foghorn theme quite bit editing images loading slowly using advanced lazy load plugin supposed make pages slightly faster load since load scroll slight improvement much Reply Leave Reply Cancel reply email address published Name Email Website five 15 Comment characters available Post navigation Edge Detection Computer VisionThat Dress White Gold Search Term Search Search Random Random Categories Categories Select Category Achievements 7 Goal 11 Interest 8 Programs 6 Projects 27 Thoughts 37 Today Learned 72 Uncategorized 5 C C Tutoring Go Tutoring r OptimizingLife Desktop Site enjoyed article subscribe via email subscribe via RSS'),
('zeroone.io - A collectively generated abstruse binary stream', 'zeroone io Human generated semi-random binary stream zeroone io web experiment visitors invited randomly click 0 1 collectively generating abstruse binary stream binary stream last 4096 bits hexadecimal stream last 1024 ascii stream last 512 Built Node js socket io MySQL Gulp git love Annecy France -'),
('Pattern-defeating quicksort', "Skip content Sign Sign repository Explore Features Enterprise Blog Watch 7 Star 57 Fork 3 orlp pdqsort Code Issues Pull requests Pulse Graphs HTTPS clone URL Subversion checkout URL clone HTTPS Subversion Download ZIP Pattern-defeating quicksort 33 commits 2 branches 0 releases Fetching contributors C 86 9 Python 13 1 C Python branch master Switch branches tags Branches Tags libstdc -merge master Nothing show Nothing show pdqsort Move limit increment ouf inner loop latest commit 033279addd orlp authored Apr 12 2015 Permalink Failed load latest commit information bench portable rdtsc Apr 9 2015 license txt added email license Mar 13 2015 pdqsort h Move limit increment ouf inner loop Apr 12 2015 readme md readme Mar 4 2015 readme md pdqsort Pattern-defeating quicksort pdqsort novel sorting algorithm combines fast average case randomized quicksort fast worst case heapsort achieving linear time inputs certain patterns pdqsort extension improvement David Mussers introsort code available free zlib license Best Average Worst Memory Stable Deterministic n n log n n log n log n Yes Benchmark comparison introsort gcc std sort time writing heapsort gcc std sort_heap pdqsort timsort various input distributions Compiled -std c 11 -O2 -m64 -march native best case pdqsort designed run linear time couple best-case patterns Linear time achieved inputs strictly ascending descending order contain equal elements strictly ascending order followed one out-of-place element two seperate mechanisms play achieve equal elements smart partitioning scheme used always puts equal elements partition containing elements greater pivot new pivot chosen it's compared greatest element partition compare equal derive elements smaller chosen pivot happens switch strategy partition filter elements equal pivot get linear time patterns check every partition swaps made swaps made partition decently balanced optimistically attempt use insertion sort insertion sort aborts constant amount moves required sort average case pdqsort average case indistinguishable properly implemented quicksort average case data patterns detected pdqsort effectively quicksort uses median-of-3 pivot selection switching insertion sort number elements recursively sorted small overhead associated detecting patterns best case small lies within error measurement worst case Quicksort naturally performs bad inputs form patterns due partition-based sort Choosing bad pivot result many comparisons give little progress sorting process pattern get broken happen many times row Worse real world data filled patterns Traditionally solution randomize pivot selection quicksort technically still allows quadratic worst case chances happening astronomically small Later introsort pivot selection kept deterministic instead switching guaranteed O n log n heapsort recursion depth becomes big pdqsort adopt hybrid approach deterministically shuffling elements break patterns encounter bad partition encounter many bad partitions switch heapsort Bad partitions bad partition occurs position pivot partitioning 12 5 1 8th percentile 87 5 percentile - partition highly unbalanced happens shuffle four elements fixed locations partitions effectively breaks many patterns encounter log n bad partitions switch heapsort 1 8th percentile chosen arbitrarily upper bound quicksorts worst case runtime approximated within constant factor following recurrence n p n p n-1 p 1-p n-1 p n number elements p percentile pivot partitioning n 1 2 best case quicksort modern systems heapsort profiled approximately 1 8 2 times slow quicksort Choosing p n 1 2 n p 1 9 n gets big ensure switch heapsort would speed sorting p 1 8 reasonably close value cheap compute every platform using bitshift Status API Training Shop Blog 2015 GitHub Inc Terms Privacy Security Contact Something went wrong request Please try"),
('What is noninterference, and how do we enforce it?', 'Programming Languages Enthusiast Developments PL matter Main menu Skip content HomeAbout PL Enthusiast Post navigation Previous Next noninterference enforce Posted March 3 2015 Michael Hicks post discuss program security property called noninterference motivate might like program satisfied noninterference show property fundamental many areas beyond security also explore programming languages tools might help enforce noninterference noting tainting analysis won get whole way research tools attempt better problems conclude suggestions future research particular idea testing noninterference may practical approach Uncovering subtle information leaks recently pointed annual Underhanded C contest Quoting site goal contest write code readable clear innocent straightforward possible yet must fail perform apparent function specific something subtly evil Every year propose challenge coders solve simple data processing problem covert malicious behavior Examples include miscounting votes shaving money financial transactions leaking information eavesdropper main goal however write source code easily passes visual inspection programmers 2014 contest closed presumably entries judged learned contest wondered human judges automated tools disposal Automated analysis would seem practically important trying detect subtle information leaks occur real world e g Lucky Thirteen attack John Meacham winner 2008 version contest suggests automated tools help writes code solution stand buffer overflow check code style check lint program matter smart tools ultimately intend write wrong thing solve wrong problem protect refers wrong thing referring someone intentionally introducing leak program won contest solving problem redacting specified elements image file finding way reveal information redacted portions nevertheless full solution code less 50 lines C Meacham right buffer overflow checking tools probably lint-style tools would find bug tools could would tools look like property would look violations Noninterference Information Flow important step defining tool could find information leak precisely define information leak stringent property non-leaking program could satisfy called noninterference understand noninterference consider following representation system two kinds inputs low inputs security-sensitive high inputs security-sensitive visible inferable unprivileged observers think system function inputs function parameters observable output function computed result 1 system enjoys noninterference variation high inputs causes difference observable outputs Put another way low inputs L pair high inputs H1 H2 H1 L O1 H2 L O2 O1 O2 Let return underhanded C problem see relates noninterference contest site states problem follows Write short simple C program redacts blocks rectangles image user feeds program PPM image rectangles output rectangles blocked challenge write code redacted data really gone Ideally image would appear blocked-out somehow redacted blocks resurrected removed pixels perfectly reconstructable faint signal remains often good enough redacted document scans Looking problem lens noninterference program write system high input pixels within identified rectangle low input pixels identified rectangle metadata image observable output modified image file expected solution would replace pixel triple Red-Green-Blue RGB numbers 0 255 0 0 0 way matter appeared file digits high input observable output would always 0 0 0 solution enjoys noninterference Meacham solution violates noninteference clever way replaces digit number 0 to-be-redacted pixel 8 255 67 output would 0 000 00 pixel 10 2 9 would output 00 0 0 difference would apparent diff output files therefore presents faint signal problem requires black-and-white images whose pixels either 0 0 0 255 255 255 signal actually sufficient recover redacted area Pleasantly Meacham notes PPM renderer would treat 00 000 simply 0 viewing rendered pictures opposed raw files would show difference Noninterference captures dependence essence noninterference describing lack dependence high inputs observable outputs output cannot depend input output value matter input value Nonintereference nondependence idea dependence many applications program analysis captured precisely nice paper Abadi Banerjee Heintze Riecke called Core Calculus Dependency published POPL 99 paper authors set monadic calculus called DCC defines dependence simply label data used destructed must incorporated label computation result particular input output related labels according lattice ordering output cannot depend input security setting DCC shows compute e g add two high input values result also high interestingly also shows control flow decisions create dependence Consider example h 5 x 1 else x 0 x observable output program clearly violates noninterference Consider definition possible values h would require x h 4 x 0 h 6 x 1 Hence dependence h x result require x label high well e observable want satisfy noninterference program neat thing DCC captures dependence purposes security also things like binding time analysis determines program variables depend dynamically-determined vs statically-known inputs incremental computation slicing needs know particular outputs might affected changes inputs call tracking relates possible callers callees consider noninterference core semantic concept something specific security Towards practical tools let go back original question tools analyst could use find leak Meacham program e showing violates noninterference programs believe answer yes Meacham program think answer probably least practical matter general think still way go tools broadly useful Dynamic taint analysis lot work dynamic taint analysis separate tools language features including FlowDroid Dytan TAJ TEMU Ruby taint analysis Perl taint mode among others Unfortunately think tools would detect leak Meacham program tainting analysis basically captures data flows program Programs x h x h 5 x h h would treat x sensitive high h Tainting analysis static conceptually considering possible program runs discussed dynamic considering particular runs Tainting analysis captures called explicit flows memory typically implicit flows based control example x assigned conditional h 5 illustrates implicit flow h x tainting tools flag tainting analysis particularly useful detecting vectors attack e g untrusted inputs attempt overflow buffers programmer threat ineffective example following program effectively copies src dst contains explicit flows src dst void launder char src char dst int len int j 0 len j 0 j sizeof char 256 j int src char j dst char j code could safely buried large application escape notice analyst relying automated taint analysis Information flow type systems analyses long line work looks ways annotating program variables labels declare inputs high low type system sort static analysis used enforce noninterference approach captures implicit flows tainting analysis misses main exemplar type-based approach JIF Java Information Flow also static taint analysis tools STAC built Frama-C Pixy static taint analysis limitation respect implicit flows dynamic taint analysis STAC optionally support tracking implicit flows could work information flow analysis Implicit flow tracking reveal true sources information leaks e g would catch leak launder program However also falsely excessively accuse benign program elements identify leaks ultimately inconsequential example JIF code h 5 obj equals otherObj throws NullPointerException run time obj null program terminates due exception observer tell h greater 5 implicit flow may obj never null making leak false alarm turns false alarms excessive generally drive people away information flow tools 2 Another challenge particular image redaction problem re discussing Meacham implementation particular label input data high low typical approach label particular variables Meacham code whether variable contents high depends whether contains data within redaction box run-time parameter Thus would need way label data dynamically done would require non-trivial surgery program Maybe wouldn terrible surgery might make security requirements manifest program would surely tedious yield less elegant program Testing lack noninterference might occurred wonder Could test programs information flow violations rather statically dynamically analyze code Leveraging definition noninterference could start image redaction box generate permutations image modify contents within box Separate runs produce identical outputs Meacham program sense kind mutation-based fuzzing random testing adapted checking noninterference Hri cu et al explore idea applied interpreter performs dynamic information flow checking inputs programs programs inputs interpreter produce noninterfering results input interpreter violates noninterference interpreter detect fact terminate noninterfering result 3 course general idea testing nonintereference apply program interpreters think promising direction worth study Summary Noninterference fundamental concept computer security programming languages broadly yet make serious dent practical thinking Research continues make practical progress however 4 perhaps one day find tools detecting violations noninterference programmer practical toolkit Thanks Matt Hammer Andrew Ruef Piotr Mardziel helpful comments drafts post Notes Generalizing inputs outputs could stream events rather single one timing resources associated event could also considered observable also techniques quantifying amount information leaked QIF rather saying leak may occur One example tool developed McCamant Ernst measures channel capacity particular program run Different measurements different runs may signal potential leak may explore QIF future blog post Premature termination potentially leak information well one Hri cu et al check example recent DARPA program also called STAC aims advance state art automated tools leak due side channel e g timing traffic patterns power usage etc Share TwitterFacebookRedditGoogleLinkedIn entry posted Program Analysis Software Security Types tagged dynamic analysis implicit flow information flow noninterference static analysis taint analysis Michael Hicks Bookmark permalink 3 thoughts noninterference enforce Eric Bodden March 5 2015 9 41 said large number existing tools supports static tracking implicit flows including FlowDroid also JOANA major remaining problem area seems semantic one technical one much indirect flow gives attacker sufficient capabilities Reply Michael Hicks March 5 2015 9 51 said Thanks pointer JOANA Eric guess skeptical technical problems example way implicit flows often tracked imprecise think non-issues esp WRT false alarms assert JOANA solves problems see uses precise analysis would guess potentially issues scalability case agree interesting semantic questions perhaps paramount really like paper Newsome et al 2009 looks quantifying influence means determining whether implicit explicit flow sufficiently dangerous recent work quantification also explores idea Reply Ben Holland March 6 2015 3 07 pm said Interesting read thanks sharing m curious thoughts would following two examples first example created similar setup launder example provided information recorded conditionals recorded call stack end exception unconditionally thrown allows recover call stack information second example information encoded inferred although special care taken find seed inferred desired information Example 1 https gist github com benjholla f049c464d09550bd6b35 Example 2 https stackoverflow com questions 15182496 why-does-this-code-using-random-strings-print-hello-world Reply Leave Reply Cancel reply Proudly powered WordPress Theme Duster Automattic'),
('Yale Computer Science Students Petition for More Faculty', "HomeAboutReadSignSignaturesYale Computer Science PetitionYale CS PetitionMore Professors Funding department severely underfunded grown decades student enrollment major soared leaves us unable consistently teach higher-level electives let alone often considered core department's status continuously falling Soon enough say Yale CS majors people ask Yale Computer Science Department unacceptable love department time come Yale administration recognize importance Computer Science mission university Please take moment read petition agree please sign netid sign name along comment right petition Update 3 26 2015 Success Yale added seven new faculty spots allotted 10 000 sq ft space department moved department School Engineering Applies Sciences SEAS makes us eligible development funds provide us many opportunities expansion future stunning development also first step Seven faculty alleviate much strain department faces short-term enrollment increases must department hope marks beginning renewed interest computer science Yale Many many thanks signatories support effectively communicated Yale ongoing reputation inextricably tied health well-being computer science department enormous thank generous donors made possible Anonymous though may Yale CS forever benefit gift thank picked lot press coverage well read details YaleNews Yale Daily News Bloomberg Business Update 3 6 2015 Wow one thousand signatures Bloomberg Business published article petition Update 3 3 2015 Business Insider published article petition national news Please encourage friends STEM majors sign petition care university We're 540 signatures need support get Update 3 2 2015 YDN published front-page article petition Please keep circulating We're 400 signatures we'd like many possible following open letter sent majority Yale computer science graduate students Yale administration read original letter Debayan Gupta's website Read PetitionAs students computer science dismayed faculty shortage facing department Computer science increasingly shaping every aspect daily lives Many largest companies created last decades computer science information technology core business deep diverse subject computer science led great advances human understanding Computer science essential everything law physics genetics economics linguistics engineering result best universities world judged quality computer science departments flagship computer science programs Stanford MIT helped propel universities top recent university rankings education computer science essential 21st century liberal arts education also translate rewarding employment opportunities empower entrepreneurs turn ideas startups Alumni earn donate large amounts money alma maters abundance private government research grants means computer science departments financially sound light facts distraught condition Yale computer science department department lacks enough faculty offer breadth depth classes expected modern university let alone world-class research institution past 25 years computers changed world yet department size 1989 professors among best simply enough Yale's computer science department ranked 20th US News World Report 20 professors median faculty size top 20 computer science departments country 48 Harvard announcing plans increase size already larger department 50 percent Yale going left even behind professors Yale department choice ignore entire areas computer science ability offer classes undergraduate level minimal Core computer science classes Yale seeing enrollment numbers higher ever barely enough faculty teach basics Moreover fewer faculty advisors means fewer graduate students faculty shortage also translates shortage teaching fellows situation even worse graduate students rare department offer single graduate-level course subject Yale become risky choice graduate students often hinge entire degree single faculty member Fewer fewer students willing take risk year two students accepted offers attend Yale PhD program compared five last year 10 year Despite excellent faculty students faculty shortage made increasingly difficult Yale compete top-tier universities sheer quality hard work professors kept department one best country However among graduate students computer science pervasive feeling administration simply care subject Despite excellent publication record small size department means Yale seen exciting place computer science ceded battle Harvard Stanford MIT Princeton Berkeley Carnegie Mellon Cornell list goes alarmingly Yale appears satisfied future Yale needs strong computer science department order fulfill core mission education research ready eager make sure department among best country object experimentation innovative teaching practices responsible use undergraduate labor Yale must face reality hiring one two professors enough situation beyond palliative measures radical expansion computer science faculty make possible department tackle challenges ahead Sign PetitionThanks much interest signing petition two primary ways sign currently-enrolled undergraduate graduate student member faculty employee one medical professional schools including School Management otherwise active NetID password mayAuthenticate CASOtherwise alumnus valid aya yale edu email address please take moment fill following form clicking following button Yale AlumnusIf affiliated Yale would still like sign help cause please send email alexander reinking yale edu subject line Yale CS Petition see best express support Still fence Shoot email questions concerns alexander reinking yale edu learn issues submit form check email confirmation don't get one within five minutes send email alexander reinking yale edu Thanks signing Display NameEmail AddressLeave CommentSubmitI Yale AlumnusSignatures 1133 Computer Science matters everyone Check stats undergraduates Alumni signatures end page Undergraduates Current Affiliates 999 Abhishek ChandraI'm going argue essential computer science today administration one world's best universities really hope already sense Computer science computing related fields disrupting every academic discipline redefining norms society university considers world leader education aims provide well-rounded education Yale can't justify criminal neglect computer science department faculty issue problem needed resolved yesterday Yale administration doesn't even seem started petition comments listed many reasons faculty needs grow I'd like add facts anecdotes Overflowing office hours Moreover Yale students starving good computer science education within major outside taken peer tutored multiple courses office hours single tutor attempts handle questions doubts scores students often leading hour long queues precious five minutesof help Indeed times many peers walkedaway either without help unable offer help tutors there's many hours one tutor handle Diluted courses Professors literally started boiling rigorousness problem sets realize can't offer enough hours guide students places professors forced make compromises fundamental policies like collaboration policies know sacrifices learning education Computer science learning things key skill Missing courses Computer Science current definition many sub fields size department two half times many knowledge areas doesn't even account intro courses design web mobile software development leading databases professor teaches intro course computer science class goes untaught several major firms refuse hire us interns don't database experience may never time Yale one professor leaves faculty lose professor operating systems decentralised systems That's equivalent offering computer literacy middle school anyone teach Windows internet Bad programming practices disciplines one universal problem Yale can't offer good intro courses CS concepts programming causing decline quality programs written disciplines STEM majors economists psychologists researchers fields deal level programming time often students cannot understand fully use programming tools discipline needs education basic computer science Moreover also produces lot badly written buggy programs Thus faculty devoted better introductory classes positive impact fields Yale Over-subscribed student run classes student-run classes offered parallel Yale courses amazing groups like HackYale classes teach basics - web development using basic tools developer Undergraduate instructors don't receive remuneration classes Enrolled students receive credit classes Still classes workshops over-subscribed competitive applications CS alumni generate revenue look Stanford MIT proof growth tech industry net worth alumni overshadowed Yale schools earn investing nurturing student run startups enterprises culture Yale far developing short there's need there's demand there's profit need faculty Marcus RussiI happy see issue brought light I'm CS major often feel torn decision study subject Yale lecture courses I've taken 201 223 323 365 amazing people teaching I'm always impressed much care evident lectures attend assignments spite left feeling passion valued it's peers don't value subject professors don't love friends don't study CS think it's worthy discipline fact without reservations opposite true despite fact seemingly everyone agrees fantastic interesting beautiful subject study actual experience studying grotesque ugly disharmony expected Yale education like None CS courses discussion section lack graduate students fact usually 50 undergraduates TA remember vividly night wrote name 18th spot queue students waiting see TA CS365 got three four minutes speak two half hours waiting Despite fact usually spend 20 hours programming assignments I've never received substantive human feedback structure code style approached problem hand whereas every time write essay another course get feedback know Spending 20 hours something anything without anybody ever telling Good job Nice try approach would elegant really acknowledgement someone fact complete assignment weird reality exist within eventually semesters happening every week accept Entire subjects eagerly dreamt studying high school algorithms machine learning enormously difficult explore significant depth courses aren't offered professors possess knowledge subjects already incredibly busy painful arrived Yale enthusiastic course study slowly adjust expectations lower lower feel even worse professors knowingly allowing research careers suffer specialties remain untaught introductory courses maintain standard quality brings smile face think much people like Dana Angluin Stan Eisenstat Dan Spielman care giving us best experience possibly given circumstances display unbridled love passion subject unfortunately framed within tragic hapless context fervently hope petition instigator change way administration sees computer science certainly wouldn't devoting undergraduate education subject especially didn't feel education computer science important thing writing code way think approach world issues confident keen eye solve problems deemed impossible liberal art truest sense term Christopher LeetIt said study history doomed repeat Ironic Yale institution recently added 10 new history professors already world-class department realize happened CS department played institution upon time scholar Yale history tell Yale arguably used best scientific institution world don't mean today - world class institution peers betters - mean bar none pick field geology department 1800s included James Dwight Dana Charles Schucert Joesph Barrell Othniel C Marsh That's equivalent Einstein Feynman Hawking department like good something terrible happened 1910s 1953 around Wright's first flight well nuclear age Yale invested nothing sciences three successive presidents departments arguably greatest scientific institution world languished withered KBT big deal first first building built science department 40 years included Yale's biggest ever spurt growth crippling blow 60 years Yale science still hasn't really recovered probably never Tragically thing appears happened Yale CS Computer Science direct inheritor chain departments trained likes Grace Hopper Harry Nyquist gone systematically underfunded undervalued least 30 years still great professors enough faculty half peers CS classes people sit floor grad students choosing institutions paucity knowledge opportunities spells game history anything tell us next decade two Hiring faculty patch bleeding radical change - doubling department well wouldn't even bring us median faculty size chance rectifying problem analysis one President Griswold received 1950s - much already lost - even radical action arrest problem decades road encourage Yale try we've seen success likely ways road want CS Astrophysics major Outside distributional requirements never take humanities class Yale Nevertheless I've always felt great many humanities students - certainly Yale administration - never really understood humanities History isn't something study book take seminar It's something - harmonics life see help understand - stories echoed ages act road maps follow said don't study history doomed repeat Turns reverse isn't necessarily true Micah RosalesI sophomore computer science major semester halfway finished major went high school Silicon Valley senior year learned enough land solid software engineering internship even starting college friends even family members could understand chose go Yale instead school better reputation CS could turn chose Yale segment won't I'll stick think school needs improve lecture 60 people different lecture 120 people problem fact might wait 2 hours talk TA office hours problem fact computer science building enough workstations accommodate students working one four core CS classes mention electives Never receiving meaningful feedback computer generated 45 60 score problem offering one level depth fields study disappointment said don't big problem structure CS major looking depth practical skills classes don't think classes significantly improved ability code - comes practice outside classroom However classes taken certainly deepened ability think critically problem solving computer science skill easily self-taught mere programming makes program Yale great place people like awful one people trying learn craft gain basic exposure mysterious world coding Yale simply course offerings kinds people seem care much adding courses university needs engaging relevant CS classes faculty support wishes truly provide liberal arts education purports offer heart problem Yale bad program program appeals neither people want study field depth much depth found people want base understanding Unless Yale makes significant change continue see image degraded point longer attract faculty teach computer science let alone convince students want study come Michael Tan1 Computer science deep diverse field key areas don't offer electives universities might several classes example didn't Networks class entire year Bryan Ford's leave might Operating Systems class next year Last semester grand total one algorithms course offered Randomized Algorithms software engineering companies commonly use algorithms questions screen job applicants lack algorithms training available Yale becomes students' burden learn education provided university 2 reflects poorly university move made administration allow CS 50 - would based taped videos Harvard would tell future applicants university Come Yale watch videos classes Harvard 3 recent years Yale's admissions department STEM recruiting initiative opening two new colleges 2017 number computer science students increase complement STEM initiative respective increase faculty simply recipe disaster - lack electives higher student faculty ratios less research opportunities 4 future relevance Yale university hinged upon status Computer Science STEM fields Look tremendous influence impact companies Apple Microsoft Facebook Google Amazon etc Technological automation mundane dangerous time-consuming tasks going define next generation Amazon deprecating local bookstores allowing people buy sell directly automated programs replacing data entry jobs Google's self-driving cars could remove need taxi drivers services Uber refusing invest computer science Yale severely hampering ability cultivate future tech leaders inevitably pop peer institutions MIT Stanford Harvard neglect important field computer science neglect future Yale Seth LiflandThe Yale administration's complete lack effort developing CS department last 25 years makes blood boil love Yale wouldn't trade friends I've made incredible classes I've taken departments anything administration's apathy CS department appalling infuriating department profound lack capable faculty students little opportunity explore specific CS topics depth even less chance developing skills necessary thrive dynamic tech industry core classes CS 223 323 taught year many classes taught every 3 semesters many CS students don't even opportunity take certain electives require 323 prerequisite many wait junior year minimum 223 323 extremely well-taught lack TAs makes classes much stressful department failing expand hemorrhaging talent every year excellent professors among core faculty also established professors deliberately teach poorly make students come class professors like remain promising enthusiastic young professors leaving universities receive adequate support administration failing expand modernize CS department Yale undoubtedly lost many opportunities cultivate promising future tech leaders Yale donors schools like Stanford MIT long Yale ignores CS department's abysmal condition continue lose opportunities institutional reputation continue decline Investing CS investing future university Thomas WengYale needs Computer Science professors bottom line university longer turn blind eye students CS non-CS majors demand stifled department provide learn even core classes struggle find TAs turn inspiration one distinguished professors leaves frustration year gets tenure Yale's neglect field greatest potential shape century puts institution risk failing prepare graduates challenges come Personally struggled understand Yale's perspective issue students speculate administration could possibly rationalize neglect CS department administration assume CS fad die near future Software become integral part communication research productivity past two decades cannot possibly see valid argument school available funding Yale Endowment larger ever almost 1 billion dollars 3 5 23 9 billion total cash waiting invested isn't enough recent push improve STEM offerings attract STEM majors--was one accessible widely beneficial disciplines category left success recruiting STEM students great continuing limit capacity current resources actually exacerbates issue hand tried failed come good explanation university's satisfaction current state affairs doesn't add Yale petitioning asking pleading need professors get David HatchYale's computer science department extremely strong core curriculum CPSC 223 323 365 prepare students extremely well encounter Yale However lack teaching staff means department cannot consistently offer higher level electives Furthermore means entire areas field represented taught Short transferring Yale computer science majors hope compete departments schools support institution Yale's outer committal STEM entirely farcical inwardly administration completely ignores one fastest growing departments Computer science majors Yale deserve level high quality education offered disciplines deserve detailed feedback problem sets spend hours many hours humanities student would spend writing essay deserve section learn smaller groups especially considering core classes becoming large students barely fit classroom deserve engaging innovative electives relevant new trends field finally deserve response administration status department Unless things change would advise prospective undergraduates come Yale serious education computer science Peter KaralekasThe CS major Yale needs work quality faculty problem instead quantity handful extremely passionate professors keep department afloat providing students essentials Computer Science form well-taught core courses Outside core however much desired BS BA degrees differ two electives must chosen selection limited best senior nearing graduation feel takeaways major strong foundation C data structures algorithms three things extremely important institutions provide CS students opportunity graduate much diverse set skills experiences Physics-CS major one best institutions world trouble finding something interesting take senior spring Instead found looking outside departments advanced electives taking things like Directed Reading could study things actually want learn Alas problems easily fixed Yale chooses focus CS STEM general sake future STEM majors hope happens Gregory MeyerThis year cross-listed humanities biology class one TA's sociology grad student told wrote Python script crawl websites find data art needed research TA biology grad student working thesis using computational methods simulate evolution sexual selection physics research spend 5 time thinking physics rest time implementing analyses C Python Computer science simply crucial skill fields Neglecting computer science neglecting something part everyone's eduction whose importance increasing One note fact Physics Computer Science major short ridiculous Experimental physics era dominated computing programming - simply impossible analyze quantity data experiments generate without control systems experiments becoming automated advances made strongly support creation major Tan Zong XuanAs someone deeply interested computer science artificial intelligence intersections two disciplines neuroscience psychology came Yale thinking liberal arts college would offer resources needed interdisciplinary study breadth also depth growing number people interested CS without similar increase faculty numbers find becoming doubtful whether I'll able study advanced subjects fields came hoping Even enough professors merely offer courses large lecture sizes result trying accommodate everyone still impede learning Furthermore cannot overemphasize importance well-trained well-staffed diverse CS department groups historically disadvantaged underrepresented CS STEM fields whether along lines race gender class Without enough resources support encourage affirm interest aptitude CS parity along lines never achieved Aaron ShimI really love Yale firmly stand belief choosing go school best decision made life amount support computer science department gotten always left something desired Yale truly world-class state-of-the-art academic institution resources far beyond wildest dreams makes sad hear many stats cited department falling behind institution turn around it's Yale network resources invest department-- doesn't beg Yale please commit anything make department make even proud studying computer science Yale students core classes grown big fit original lecture hall great instructors really give memory Grace Hopper new generation potential Yalies looking CS school us Erika HairstonAs Black Female Computer Science surprised lack people look like CS classes However MUST support faculty resources KEEP people like CS Major Yale understand Yale liberal arts school first remain way Yet mean cannot wholeheartedly put effort meet needs students especially height technology age also understand difficult humanities school like Yale compete faculty university definitely resources fair fight Lastly current freshman see change taking place current professors aid influx interest However want see invested professors spread thin changes made implemented mediocrely e CPSC112 fall 2014 sense change future hope push occur time Yale Matthew BradyYale's computer science department offers core curriculum extremely high quality courses disappointed find sparse offerings electives research Many areas research application covered one faculty member--and many altogether ignored--as result low faculty numbers applications psychology medicine engineering math strong computer science department benefits entire Yale community given understaffed department currently additional hire would significant marginal impact university whole Also computer science many neat results student faculty ratio already impacted way professors teach know least one teacher forced cancel final independent project class grown large last years would shame students miss due overenrollment limiting abilities professors educate Alex ReinkingI've lot say past love department dearly I'd still come Yale friends I've made connections professors second-to-none education I've received fun I've student Even pains watch administration hold CS department's head water hope CS50 proves impetus necessary drive department upward -- it's bold experiment work I'm overwhelmed support petition enjoyed Yale community hope administration takes note CS important STEM disciplines it's important students Whether it's business economics art music understanding computers finding applications fields revolutionized simply unacceptable Yale neglect fastest-growing department misconstrue bubble Marina TanI came Yale intending STEM major offered space Directed Studies took love program encouraged pursue Humanities appreciate large part desire fuelled close support wealth opportunities given students interested humanities amount interaction professors humanities classes vastly outclasses huge lectures minimal contact actual learning STEM classes taken serious impediment students interested exploring CS expert grounding prior coming Yale difficulty classes high student faculty ratio gives impression already CS experts shot succeeding within Yale CS discouraging many people especially young women would otherwise interested James BatchelderYale advertises 6 1 student teacher ratio 76 8 percent classes 20 students computer since department closer 25 1 student teacher ratio 20 classes 20 students extremely deceiving tell incoming students first statistics 7th largest major dire straights Yale's computer science department left wither nothingness like engineering department Levin hope administration realize booming center innovation support otherwise rebuild scratch great cost like done engineering department Learning department felt like working shoestring budget startup brilliant helpful fellow students teachers tightly fixed set opportunities Childs-KleinComputer Science arguably fastest growing discipline scientific academia last quarter-century time Yale's administration failed accurately reflect growth maintaining faculty 20 professors less half median America's top 20 programs -- 1989 Complete stagnation growth one University's important far-reaching departments appalling stands counter Yale's storied history leader American global scientific communities It's time bring Yale CS 21st century Advancements field implications everything Biology Physics Digital Humanities administration needs reflect Computer Science's immediate importance Yale respective allocation funding Albert JiaoHonestly it's embarrassing Yale even students create petition doesn't make sense CS faculty universities moving forward making progress technological age Yale lagging behind dragging students investing CS Yale sending message computer science students don't matter okay trying improve computer science education point would anyone come Yale get computer science degree class sizes enormous faculty overworked trouble offering attention students say faculty members aren't brilliant - they're spread extremely thin Yale okay CS department state Benjamin MartinAs Yale expands addition new colleges perfect time increase size computer science department along STEM majors administration truly committed improving STEM Yale computer science department best place start member Yale College Council inquired Yale's reluctance expand computer science faculty Dean Segraves told administration believes demand computer science bubble true demand computer science growing stay high perfectly justified hire associate professors tenured professors meet demand peer institutions already done Andy VoYale institution ought forefront academia research particularly majors growing importance technology-driven world deeply embarrassing outsource Harvard lack robust computer science program Yale Global Affairs major believe Yale increase funding CS program number faculty benefit CS majors also benefit non-CS majors conduct strong interdisciplinary work using cutting-edge technology computer programming languages Yale great opportunity hands make investment pay dividends academic innovation waiting Kevin KoryI've pleasure watching number friends build successful start ups ground Yale utilized many opportunities Yale particularly YEI many achievements seem spite Yale computer science department rather Although enjoyed taking CPSC 112 would loved take practical course focuses web development creating apps Even within traditional CS coursework often hear department severely understaffed quality instruction suffered result Yale incredible institution CS major mirror Brian LagodaCS Major everything I'd say already page Yale's CS department nothing sneezed it's departmental philosophy fits well Yale College's liberal arts mission Unfortunately seems funding Yale's pouring STEM gem department fallen cracks despite student interest We're lucky get one class per year major area discipline it's kind like history department single professor teaching two classes year America don't favor becoming technical school right don't even resources decent job academic level Kwang Liang ChewWhile pretend STEM Yale fine isn't STEM Yale obviously requires faculty funding interest Sure Yale claims record number freshmen admits expressed interest STEM long switch become Economics majors due lack resources STEM doesn't make sense administration spending hundreds millions dollars build 2 additional residential colleges don't add value aside population Yale Instead trying expand aggressively cost diluting current resources start improving STEM first Incomprehensible Spencer VillarsThe Yale CS department embarrassment name Yale I'm CS major going work large tech company truthfully say 90 knowledge obtained outside Yale curriculum I've even taken time Yale devote time teaching curriculum Yale taking time away learning valuable employable skills Yale administrators good faculty go 10x 20x amount recruiting advertising branding efforts ever want name Yale continue carrying weight today need better CS faculty Haohang XuYale's push science engineering awesome really don't understand pursue cosmetic solutions without substantive structural departmental change Computer science bottleneck STEM growth given applicable practically every quantitative field willing increase amount resources continue lose peer institutions--Stanford Harvard Princeton schools similar academic caliber realize relevance computer science liberal arts education Also computer science cool like learning cool things Ameya MahajanAs student came Yale excited take computer science courses pursue program CS quickly became disenchanted Yale's offerings computer science majors must take core 4 classes CPSC 201 223 323 365 sets students narrowly defined track meanwhile schools like Stanford diverse paths accomplishing degree computer science believe larger set courses offered CPSC department draw top students Yale strengthen program 10-fold However course accomplished increased funding support department Jeffrey LaiThe CS department hardly keep number CS majors growing exponentially Yet number CS professors remained stagnant decades cannot expect much Common sense dictates cannot continue Unless Yale wishes limit number CS majors future extension relevance world increasingly revolving around technology change must swift strong Yale invested billion dollars resources like CEID without investing departments whose students would use facility simply empty gesture huge waste money Bay GrossExcited hear Yale CS announcement coming later month Yale strong professors exploding interest among student body - I'm sure could allocate reasonable level attention funding program would thrive key point keep mind strong computer science program odds liberal arts ideals behind Yale strong mathematics program philosophy program CS key part core curriculum challenge Let's make Yale best program country liberal arts degree computer scienceDani DicksteinUnclear Yale shrugs face CS theoretical areas CS incredibly practical topics covered CPSC 223 CPSC 323 CPSC 365 fair game interviews major companies like Microsoft Google Facebook also major truly teaches students think analytically - break complex problems individual steps deliberately reason skill virtually absent courses departments possible exceptions Math Philosophy yet fundamental true liberal arts education Noah StetsonAs prospective CS major Yale's handling CS department placed ton doubt mind whether pursuing CS major Yale would worth opportunity cost fact department isn't larger 25 years ago embarrassment research institution boasts leader among peer institutions guarantee Yale's mistreatment department persuaded continue persuade prospective CS students PHD candidates choose better-funded programs forward-thinking universities Sofia BraunsteinI come place drenched computer science programming Silicon Valley Coming Yale experienced culture shock lack presence CS department Computer science technology vital future department expanded want major also want participate growing technologies believe everyone take least one computer science class whether STEM possible number professors courses offered expanded Hengchu ZhangI didn't start CS major initial prejudice majoring CS truly amazing research people CS department Yale made change mind drastically showed world beautiful theories applications made want offer CS department truly amazing pains Yale ignores chance make even better refuses bring mind-opening world people fails give proper support professors department Vicky TuAs seventh popular major Yale College Computer Science desperately needs support resources Yale currently providing need professors teach electives students aren't put unfortunate situation able take interesting class it's offered every year need graduate students TF classes already popularity computer science going grow need administration's help sustain growth David AmanfuThis issue bigger CS department reflects badly administration Yale Corp even us defer Harvard anything C'mon son That's like UCLA fan asking USC fan jump car battery wouldn't happen CS Yale affects everyone STEM STEAM otherwise treated voice CS student voice Yale student attended people who's voices matter Get together Yale Yingjie WangWould great CS Yale expanded professors classes choose TAs Many core classes taken certain semester makes hard complete CS requirements start late personally know friends room flexibility schedule want finish CS major time Also I'd like believe difficulty getting sufficient coding help part reason I'm failing psets Charles JinYale disservice professors students systemically underfunding Computer Science department teaching skill discipline encourages sound logic complete consideration something anyone benefit imagine goes minds administrators somehow able justify decisions Perhaps would benefit studying bit computer science Geoffrey LittI great experience CS major Yale thanks wonderfully talented pedagogically focused faculty enjoy overworked TAs limited electives important classes offered every year baffles administration yet realize importance computer science enough fund overcrowded classrooms investing rapidly growing field shaping future Sam ShleiferIf it's money Unless Yale wishes limit number CS majors future extension relevance world increasingly revolving around technology change must swift strong Yale invested billion dollars resources like CEID without investing departments whose students would use facility simply empty gesture huge waste money Cindy XueAs second-semester sophomore recently found keen interest CS shocked find two required core courses major - CPSC 223 323 - offered per semester means sophomores like CPSC 201 able take vast majority electives senior year lack faculty graduate student TFs unacceptable Alborz YazdiI'm Berkeley parents EE CS I've seen good department Yale's department pathetic Courses terribly designed understaffed department near zero industry connections sad see department integral establishing Yale's alumni presence one fastest growing sector suffer alongside many great nobel prize winning departments Eli FeldmanI took intro CS loved topic hated class overwhelmingly difficult understaffed never took another CS class needs intro classes people want get foundation don't want get crushed course You're missing training lot potential students could use small amounts programming knowledge CS jobs Kendra FarrellComputer science large impact society daily lives imperative let die major already underrepresented women people color cannot afford lose completely lot potential behind computer science needs appropriate funds bring true potential quite possibly attract attention Alexandra Rae-GrantI tried take CPSC 112 semester shitshow Boring lectures bad explanations understaffed course led dropping CompSci sort course would work better seminar style sections things actually end getting explained people aren't STEM majors past experience programming Daniel LeibovicYale's administration's refusal recognize importance CS department effects refusal University's academic professional output field single largest embarrassment school History mock ignorance 10 years unless Yale treats CS critically serious universities Timothy FolloWhen talk friends schools small CS classes abundant teaching resources broad class choices can't help wonder would able learn effectively kind environment sad part many CS professors work incredibly hard provide us support need administration Adam ZuckerWith recent push creating innovative entrepreneurial Yale e founding YEI 2007 opening CEID 2012 cutting back yes investing equivalent cutting back Computer Science department makes absolutely sense best naive Let's undo great work we've done excuses David YaoI saddened Yale's decision import intro programming course Harvard still find hard believe world-renowned university would make decision deal fast-growing interest student body instead expanding already-so-strained faculty even losing professors feel embarrassed Aaron GertlerTechnically new professors begin arriving next year think Yale needs reconsider position hire best often defaults spend years hiring single person potentially stopping hundreds students taking class would turn tech founders brilliant designers even CS professors Arvin AnoopComputer Science field potential nowadays Yale needs recognize hopes remain competitive something normally cares much - relative colleges like Stanford CS skills staple every Yale student know increasing funding essential students attracted field Julien ClancyIt baffling say least Yale gets exactly kind interest STEM trying sow last years unwilling bust certainly unable provide necessary resources students Ultimately test exactly committed Yale improving STEM fields Daniel ShapiroExtraordinarily well-put field day age integral success graduates future computer science Failing prepare undergraduates CS failure university prepare members realities life digital age Also borrowing courses Harvard Absurd David ToppelbergYale seems content bottom-tier status comes CS students attend love identify Yale feel differently It's time interests aspirations ambitions Yale students met funding Corporation provide Improve CS department Varun SahThe world around us computerizes greater degree every day yet Yale Computer Science department remained 1989 want compete administration must increase funding commit resources amazing professors much Jacquelyn NakamuraThere little close offerings basic programming HTML graphic design programs useful sometimes required working world opportunities learn basic skills student run won't Yale prepare us real world Josh FengThere much demand CS Yale importing classes universities meet demand doesn't make sense create strong CS program right students deserve We're paying 60 000 year Daniel LeeAs one fastest-growing majors Yale it's embarrassment Yale's CS department understaffed CS also discipline enriches pursuit every field uses quantitative methods investing CS certainly well worth Jeffrey GuoOur CS department best instructors university offer It's shame choose teaching core course elective field specialty CS50 isn't solution problem professors solution Alex LewThis getting ridiculous Yale needs hire faculty Computer Science though situation particularly dire across board Furthermore hire new professors ensuring faculty diversity top priority Meredith DerechoI agree classmates signed petition--it's embarrassing Yale isn't putting computer science department don't understand mechanics still problem hope gets fixed really soon Ari ZimmetPlease consider supporting CS Department would like peers major enjoy much freedom ability benefit could available carve path means History Art major Abhinav MenonAs prospective major someone extremely interested applications CS fields really hope Yale picks game matter broader implications entire generation Yale graduates Deanna BrandellI find interesting majority students signed petition far haven't declared major yet knows many would choose CS extra class space accommodate Jayshree SarathyThis long overdue Yale needs face fact CS demand going keep growing every year desperately need faculty resources stay competitive Glad petition happening Kevin OgunniyiThat Yale insists continuing STEM recruitment going increase undergraduate enrollment without expanding faculty especially disciplines like Computer Science farce Andreas Greiler BasalduaCS isolated science highly versatile one Thus departments Humanities Sciences would greatly benefit better resources CS field within beyond Yale Andrew WeissI may never take CS class department needs grow demand goes departments need especially given new students part two new colleges Andrew GrassBetween importing Harvard's CS classes funding department Yale risking becoming irrelevant Yale duty fund academic departments students fulfilling experience Tristan BrockwellWhile CS major would love able take CS intro class without worry able receive enough help please right thing Yale expand department Adam CimpeanuI personally seen affected disappearance courses would considered part required core universities could agree petition Shreyas TirumalaOur professors champions--dealing ridiculous workload without buckling pressure need professors TAs TFs much better funded department Clair SulerzyskiI wanted take introductory computer science course supplement biology major dissuaded inadequate resources available- notably poor ratio TFs Grace PanLet's remember CS fundamentally vital STEM disciplines funding CS department going impede success students across fields Yale Caroline RizzoYale already irrelevant field CS Say 'bye' future Zuckerberg's attend Harvard MIT Stanford -- unless something Yale Sukriti MohanWhen CS majors complain difficulty classes like rest us lack options within department it's clear something's lacking Amalia C HalikiasThis field know nothing one thing clear Computer Science pretentious majors teach us skills cough EP E Let funding reflect Binh HoangI commiserate CS friends Yale hope Yale announce concrete plan action soon plans grow CS department foreseeable future Jacob StaiYale wants bill incoming students STEM school Lol Stop smoke mirrors build come don't word spread Taylor JacksonComputer Science valuable needed nowadays wouldn't Yale want best department possible currently amazingly important area study Robert Calabresi YC'18I'm interested CS sincerely hope petition encourage administration pay attention important field Best luck Graham KaemmerI actually left Computer Science major almost exclusively giant upper-level CS classes It's time Yale got professors TMA 21st century education requires 21st century resources It's time Yale show way pressing technological issues time Wendy ChenThere enough resources students dive CS major without feeling like one's going catch stumble Kareem El-BadryI'm CS major learning code far useful thing I've learned silly school CS less Thucydides Would gr8 Stanislav Atanasov Strong computer science must 21st century research center Yale neglects brand leading research institution'KianaYale great many areas also lacks far areas lets CS department one areas Yale needs stop slackin' John-Paul PigeonYale falling behind Harvard Stanford right STEM majors CS department well known suck relative top schools Priyanka KrishnamurthiWhile Yale's Computer Science department great hardworking faculty enough resources considering demand major Joshua KimelmanThough don't intend major CS believe Yale utmost real significant CS department peers deserve Joshua SlocumI love Yale would serve strengthen strength Yale academic powerhouse school proud part Kevin NguyenIt's absolutely humiliating Yale borrow Harvard's classes Yale CS must improved left behind dust Sweyn VenderbushYale wants bill incoming students STEM school Stop smoke mirrors make better STEM school Nehemiah BlackburnYale wants bill incoming students STEM school Stop smoke mirrors make better STEM school Max GoldbergAll Yale students opportunity learn practical programming skills since they're applicable nearly every field Derek LoA strong department needs get stronger stay relevant Would Yale's best interest devote attention Steph RheeThis time-sensitive issue Adding faculty money 5 years useless--we'll get behind Act administrators Leon JiangBecause Yalies deserve better drive STEM students without expanded resources cover us Diwakaran Ilangovan CS future failing address prepare students simply put terrible idea Andrew MaltaWhen number computer science majors doubles number faculty simply change support Kar Jin OngYale top class institution prides leader education much better Bianca LiWe shouldn't import classes universities Please give funding CS department Saran MorganI longer feel completely confident choice attending Yale issue Aileen HuangPlease please please Yale department desperately needs funding resources Wayne ZhangYale wealthiest institutions entire world need better Mustafa Malik terrible CS need better bigger department people like Harrison Miller YC '16Finally people taking action Yes please better CS program Yale Kevin KirkYale Club Basketball won national championship Also Yale CS needs funding Kira TebbeYale classes languages used real companies like Python David MarcanoNot enough electives Need infrastructure overhaul Done school Justin AbbasiI sincerely hope change made Yale's Department Computer Science Nat AramayoCS important Yale value values STEM majors Joshua ChangPoor poor CS department Get together Yale there's potential Mark HamiltonWe need automated theorem proving another machine learning classes Danielle CurrinNot comp sci major definitely important everyone William SadockTo competent University need competent CS department David YinYale much better CS STEM offerings Nasim MirzajaniCS integral STEM Yale needs STEM math Bernard StanfordWhen Alex Reinking says you'd better believe Carlos GouldCompSci future Let's act like Yale Max WeinreichI quit CS major problem TeddyYale computer science department blowsJosh TottePlease make happen long overdue Aiden HuEnough said it's time action Mallet situation appears unjustSarah SmithI think great Good luck Shreyas Ravishankarabout time happeendKatelynn KykerUnbelievably necessary Nick Grewalcomp sci tight yoBechir-Auguste PierreThis important Rubi MaciasThis important Fabiola Davilaget YaleShiv SunilCome Yale Krishnan Srinivasanyale - srslyMinh Tri Phamlet's goooLeo shimonakaMo ClassesLou Gaudet DoBetterHannia Ziago alex Mate L NagyPLS Nathaniel BresnickBobby DresserOlivier van DonselaarJoe LanzoneBenjamin FaitGabe AchesonAlexis SaiontzSamuel BrennerVincent TanutamaManjari RanderiaMohan YinJackie FerroJae Hyung KimDimitrios HalikiasAhmed SyedMichelle Kemei Zachary BlickensderferAlessandro LucianoSteven MacLeanDerek BoyerMu LiLuke PeilenEthan WeinbergerMary ChukwuRafi KhanJohnMark TaylorVictor LiuHari AnbarasuCatherine LacyMicah OslerAaron SibariumJenny AllenAriel MurphyAdam DavisAngel Aguilera Sierra JacksonPatrick DemkowiczJohn RoethleLucia KorpasMatt SmithJoshua RosenfeldMahir RahmanElijah GuntherIan Peczak Saad SyedSarah SpauldingDevin CodySana MojarradiSuzanne XuNicole PereiraPhil EstermanScott StankeyTihomir ElekGraham AmbroseJoel De LeonSachith GullapalliAvery VellaTed TuckmanLauren SapienzaJohn ChirikjianTiannan ZhouAmrutha DoraiCrystal kongCharly WaltherTitania NguyenDavid MandelbaumMorgan Harry KaneEvie CaiCezar MocanBrahm GardnerBenjamin EskildsenFandi TangMargaret Gleberman Alex RothLee DanilekCaroline KimAlexander Strzalkowski Yunus TuncbilekSami HakaniLaura GoetzSelena MaityChris HomburgerAlice Zhang Anna Merkuryev Taishi NojimaStephen KrewsonAnthony NicholsBen HSarah GomezMiguel ParedesAleksandra ZakrzewskaAmanda MeiLionel JinChris McGowanAdam HoustonYan-Yang FengTristan SechrestKevin XuXiao ShiEric MargolisWendy SunBen WaksmanJoyce ChenAddison HuJay HouAsher Y Sage PriceBetsy LiVincent HuangJason KimYehia SalehPranam DeyZoya AfridiHope WeinsteinMaya JenkinsNatalie Schultz-HenryJaclyn SchessAaminahXinyuan ChenIsabelleNate SievertBen LerudeNatalia SalinasCharles WongMax PaysonZach JacobsMengshi ZhangPayal ModiGeorge WangElena HodgesAcer XuMikayla CorrellAlyssa ChenRobert TungBorys KucaAudrey StormPaul Kyumin LeeNaoka GunawardenaDaniela BrighentiKaren YangMichael MenzCasey LeeEleanor HandlerAnthony TokmanHaichuan LuoAbigail CheskisDanyang ShanEric DuanJennifer GerstenRachel Yost-DubrowDavid CruzVictoria BeizerEmily ThacherPranav BhandarkarSean HauflerMichelle ChintanapholTali PerelmanHolly ZhouSummer WuKatie Martin Anshu ChenWilliam RobinsonZach YoungSelena Anjur-DietrichEmily BaczykAndrew QiGreg CameronOlivia ZhangTanya ShiAlexa Kalandiak Erin HebertVlad BacauanuZachary SmithlineJacob SweetNishant JainEmma DinhPatrick BuehlerJeremy LiuBen RudeenEugeneAmanda BuckinghamEric WangMichael HootLuc Ryan-SchreiberAaron BergerTony NguyenNicholas WawrykowDale TagerLincoln Swaine-MooreIan GonzalezDanielle LotridgeKenyon DuncanThomas KilmerAdam LowetChristina DrexlerJohannes BehringerBriana BurroughsRyan GodingFrank WuAlexander MendelsohnSoumya KambhampatiDrew O'DonnellHenok AddisBenjamin WeinerAbby TroyIulia TamasAlexander McLeodMiguel GoncalvesMichela PaganiniAbdul-Razak ZachariahArjun KochharKatherine TanAubrey Alonzo WahlAndres ChaparroEthan Campbell-TaylorJoyce XiChris GuntherSarah WilliamsArsalan SufiJake AlbertDiego Fernandez-PagesShane FenskeLaurel LehmanHannah OtisHenry LiNana OwusuAlexander EpsteinAdrian Abel-BeyIsaac PenaHarry YuDerekJames Hyun LeeDavid MeltzerErica LehDaniel HamidiDana ChaykovskyDylan VisherEilaf ElmileikSarah RoseChad HilliardJoe LiUna BoylePatrick TothJackson BuschReed DibichMegan ValentineCamille Weisenbach Juliette GranthamBenjamin RudshteynJessica LeaoJulia HenryAllison DouglisBrooke EastmanStanislaw SwidwinskiRachel ProtacioBecky MarvinMaya GeschwindSimiao LiThomas ToltonChristina RamsaySam FeinburgAlicia Vargas-Morawetz Ruchi GuptaKyle HietalaLayla KhuriLien TranJonathan LiuAngelica PerezJason BrooksDanielle ZuckerMimi PhamEric HoKayo TeramotoJessica PancerHiral DoshiBenjamin BartolomeJordan PlotnerDiego Rodr guezSaifullah KhanXiao WuMehmet YildizShafeeq IbraheemApurv SumanPetter WehlinCharlotte NewellJerry HsuAllen WangIvan Matej KolobaricSeif LabibAndrew ChunRobert JuchnickiClara CollierAmaka UchegbuAshley WuSamuel LowenkampJacob Rosenberg-WohlDavid McPeekCarter MichaelJames MaJason HeningtonSimon Podhajskyoliver mesmerSahil GuptaPatrick WilczynskiShona HemmadyElena MalloyLillian XieMalini GandhiJessica NelsonSteven HeeJesus CaroBen GreenSarah SukinEvan RischMarc-Andr AlexandreTiffany HanGabe PetegorskyNathaya DarakanandaHelen FangWilliam SunGeoffrey SmithSherry LiPaul ParellCarsten PetersonJP MeredithFeridun Mert CelebiZack WilliamsEvan Green '17Gian-Paul BergeronMichael LeopoldSerena LauLori KaufmanPhyu Hnin LwinEric PanAngeline WangElizabeth VillarrealMichael ByrnesSarah GrossTammy PhamJefferson ZouHannah GreeneJulian RosenblumAbhijit PujareMegan WilsonNatalia DashanThomas Liao '18Sydney YoungLiana SaussyEmon DattaAditya SinhaK MeeluSaisneha Koppaka Philip AbrahamVictorio CabreraJohn P MahoneyCameron YickErika Lynn-GreenJosh IsensteinDiego Torres QuintanillaJennifer LuSophia ChenRachel LawrenceNicholas FieschkoNealie NgoChristine HongAidan KaplanJan HoffmannLaura GrimbergenJared KatzmanRebecca ShawMieke ScherpbierMohammed MalikPamela SotoAnny DowAlan LiuRic BestSam RollerSam LevatichCristabelle OrmistonDaniel HwangIan SpearYuxi LiuSarah BrandtMaria MelchorRuben Vega PerezCarrie CaoEric AndersonNicole WellsGrace CaoRebecca NickersonDavid EliasKevin EnnisDavid WangAdisa MalikMichael SullivanKirsten Adair Schnackenberg Hyun LeeJulian DebenedettiJessica YangIan KnappPranav MaddiStephanie HeungVasilije DobrosavljevicSakshi KumarAlejandra Trujillo-ElizaldeShirley GuoDaniel GiraldoAdrien GauLining WangSamuel LimAlex AtanasovJulie ChangPhyllis Thompson 2018Aretha GuoSarah McAlisterVivian WangKhalid AttallaSarah KimZach CohenJoey Adler Lysander ChristakisEric ZhangJiou YuJeremy HuttonSam KlebanoffTim CoxEmily FlaglerMadison DeJesusAnna BarobMatthew RajcokFaizah Zakaria GRD '17Imren JoharZak KayalChristopher MelendezTrey LachanceSreeja KodaliBrian BeitlerJonathan RolfeDanilo ZakJuli CoraorKelly WuAle Estrada Joshua HillDavid EmmermanNicholas StrongQuyen DoDejan Gvozdenac Jose EmanuelliDan McQuaidAnson WangIsabelMichael WuSuryabrata DuttaJJ EchanizAndre MonteiroLiz de UblMichael CardenLauren BlondeAl Mahdi Alaoui El HassaniAlois CerbuGerald GohAdam Straus-GoldfarbEvan LinckJulie SlamaRebecca ConnellySarah HouseholderGrace PaqueletTaylor Drew HolshouserSimon SongTong Hien ChiIan ZhouScott SmithAaditya TolappaMaureen O'HanlonMeg PritchardColleen McDermott Colleen KenneyAlexander GeorgeJeremy ZitomerKyle RanieriJoel LejaBarbara SantiagoEdward SheJonathan MarxSean GaoMichelle KelrikhCamille Fonseca Noah BailyLukas LangerRonald TricocheClaire KimOhvia MuraleetharanAndi PengVance ZuoRachel BakerJT FlowersCrystal LiuJoseph Kohrman-GlaserAlexis GurganiousFranklyn ZhuDavid KurkovskiyCharlie PasternakEarl LeeDavid WongMatthew GriffithMason LiangIan Garcia-KennedyTyler PetrochkoMarcie TranMike WuVeena AdvaniAbhijoy MitraSterling Johnson IIIMichael HopkinsMason JiStella WooBrian LiChristopher WanDhikshitha BalajiAbigayle YoungHolden Leslie-BoleJesse OpokuNatalie WarrenAndrea LopezStefan DoehlerSamantha Agron Druv BhagavanGeorge HuynhAndrea SmithAnand KhareMichael YipIhna MangundayaoJack ZakrzewskiNick MaasAnna YoungKeshane GanAlexandros MousatovOlivia BAnne HillsMarc BielasBenjamin KrakoffNick HathawayDaniela DillarzaRachel ArnesenEmily BarnesPrawat TrairatvorakulIsabel CruzShane KimJO Dalia WVanessa Ague Claire Carroll Nicholas GonzalezWilliamTed Price TD '17Fadeke MurainaRaul MonrazAvery SchwartzNidal Hishmeh Jacob ReedTomas AlbergoSheau Yun LimEmily RoseSonya LevitovaAaron Z LewisJamesGideon BroshyAndrew DeGuglielmoYupei GuoMatthew ChisholmLaura KellmanRebecca SuHannah TruongJohn C D'AmicoAmour AlexandreMargaret MoorTaylor HobbsOlivia PaschalAnna Lee BarberGabriel NathansJanice PoonSam AnklesariaDavid BrandfonbrenerDavid RoecaEli BlockAndrew SpinelliDavid HergenroederTina YuanKathleen WuNeha AnandHaley SproullKevin AbbottAnthony AmadeoJon VictorStelios RousoglouBatmanlai OntogtokhMitchell WeldonNick GoelKevan IpSmita ShuklaRohan NaikJoy ChenJessie EwaldMicaela BullardEli WestermanUdit JainEfstathios ZlatisDevansh TandonElizabeth KarronSara HamiltonMiles CalabresiBen RosenbluthCameron BiondiSarah Pearl HeardDuncan TomlinMax SaubermanJonah MajumderKartik SrivastavaMyka PerusekCarlin HudsonDaniel KimTyler DohrnJonathan Karp Victoria NielsenYalun ZhangGenny SilvaSamuel WangAndrew HuRenee BollierThomas FosterBethany GoodhueYuki HoshinoJulie ZhuIvette LopezSoham SankaranLaurie WangFiona RiebelingJoseph DownsJack MulrowKevin HwangMichael YuanSophie FreemanAndrew ArkebauerDaniel RaynorSamuel SmithVictoria Hall-PalermAlbert ShinCasey CelestinL JonesEsther PortyanskyTeddy WeismanAlexa DermanMartin LimYuri GloumakovChristian RhallyGrace LiuGustavoSherry DuRachel HaMichael Aguero-SinclairJoanna LewJessica TantivitGrace ShiCraig WojtalaMichael MooreAmanda RoykaShyamala RamakrishnaSara Kahanamoku-SnellingAlex RingleinSylvan Zheng MC '17Minh NguyenAparna NathanDan ShaoTaylor ChurchCeline CuevasSeoyun LeeRachelMaggie ZhouKai DeBusAmina EdwardsJustin MooreJacob GeigerAndrew SaydjariAlicia TeeVivien WongIsaac CohenPeter NguyenLucy HuiSantino ButlerBo Malin-MayorPeter XuTyler PearsonbrittanyCarly Hafner Yale '15Kojiro MuraseAndre AllenCarlos del-Castillo-NegreteRose SloanPaul Fletcher-Hillisaac ReillyWissem GamraHunter FordAaron ResnickDaniel YoungblutMary FarnerConnor McLaughlinDaniel PearsonMichael Zhao JE '15Coryelle PondySumedh GuhaBrian CollopyWilliam Bachelard-BakalDavid NoetzelMichelle Yancich Jack SiegelStaphany HouAnna Y YangPhilip PiperDaniel NobleRachel PrinceJackson FeenyJulia LeeKyle BajtosDavid Shatan-PardoEvan HellmuthKonstantinos VyzasMegan AyersValdivieso Tresa JosephAlison VisherDavid RubioStuart TealAdam McIlraveyJohanna PressBenjamin NadolskyLillie LainoffKristen Dowling Ellie DuplerEmma FalloneHarper LoonskJosh FaberVictoria WangJulia RothchildWilliam OverhauserStefanie AcevedoMatt GilmanBijan MakarechiRuth HannaCarlos MojicaOwen Brown Kodi AlvordYunyi ChenMerrySabina Lee YC 2016Edwin Zhang MC '16Peter TortoraKevin ZhouAdrian ChiemAri BrillIke LeeDevin HillyPriyankar ChandEllie KilliamNathan SitaramanJennifer HuberMichael Middlebrook Abigail GahmClaire HuebnerVictoriaMariah XuCindy AlvarezNora MayColin BurkeHoria TeodorescuRifaat Yahia SamawiDara EliacinJosephine MasseyNicole FishMyron Zhang Frances HarrisChristine WangDaniel WeinerCathy BrockJustin Y ZhangAnna LuSelin IsguvenNoah Stevens-SteinAlexander AllenEllen SuSophia NevesCaroline TisdaleHannah FriedmanHenry TischIan BillingeGerardo CarranzaQingyang ChenCarolyn BuAnnie CookJames VolzAlex FisherZina EllisKevin AndersonGracie WhiteStephen RenfroeNathaniel DolquistDrew RobinettMarius ConstantinHarrison TracyRoger LopezCatherine StarkJo o Pedro de O M DrechslerAllen MiaoAntonia CampbellFrancis MburuAndrew BeanMara BlumensteinYutaro YamadaChristopher ShriverCharles BardeyKat LinCooper HallSimon SchaitkinVittorio OrlandiBenjamin Horowitz '14 Jason MazzellaCaitlin PurdomeMallory IsburgAlexandra TorresquinteroSam GoldsteinDerek SoledBrian T-SWill MaglioccoReynard LeRachel MillerCatherine LiuChristina WangWerner Wolf MAH' '65Natalie MaHarrison SchneiderWilliam CaiThao DoCharlie ProctorIkenna Nzewi YC '17Sandra MendiolaEry D azJustin ShiAntonio MartinezDaniel KellerMark WogahnFilip KosJacob ColtonMatthew johnsenMadeline LandonRobert LowethDavid TorresStephen HemenwaySamantha LichtinEmma DougallHan liKevin BlohmMichael GregoryAlumni Signatures 134 Matt Wong SM '95I cs alum 1995 experience perspective alumni recruiting cs talent Yale ABSOLUTELY CONSISTENT comments concerns voiced seen schools-- particular Harvard-- go entirely radar top list fact hired two Harvard students year 20 years since graduated time participated perhaps dozen on-campus recruiting events interviews resume screenings similar activities time also sent separate email notices comp sci department try raise awareness recruiting efforts--- despite SINGLE CS HIRE LAST 20 YEARS SINCE GRADUATED COME YALE One suggestion folks behind petition Don't shy pointing Yale gains financially highest-paying post-college jobs consistently ones require skills CS teaches highest-job-satisfaction best jobs per Wall Street Journal similar surveys don't think going limb suggesting money job satisfaction attributable experience gained Yale likely lead donations help making argument feel free contact Thank making apparent one seeing problem consider requesting discussion topic alumni giving comes across desk Matthew Eichner SM '95How could Yale far wrong something pivotal Computer Science far less rote biology history number subjects Yale embraces Yale dumped biology department feeder pre-Med history feeder pre-Law age ideas would difficult find profoundly changing society coming tech sector Teaching people code relegate Yale 21st century vocational school biology understanding rules beneath tech sector foundation grasping profound changes creating world shape future many tech-illiterate politicians Yale pump get joke understanding email works Sam Spaulding '13I owe Yale's CS department great deal surrounding great professors mentors giving opportunities work exciting problems forefront technology progressed CS education also recognized grave shortcomings department particularly lack dedicated faculty consistently deep elective offerings many important sub-fields Computer Science sincerely hope administration recognize Yale's CS department needs administrative backing support necessary rapid radical expansion University staff students administrators reap numerous benefits vibrant varied CS department years come Andrew Goldstein JE '13There's nothing wrong tradition tradition without vision worthless 21st century upon us Yale University plods forward technology fad believe Yale intelligent leaders top succumbed petty inter-departmental politics mandates expansion faculty one department mirrored across university Yale desperately needs leaders courage upset status quo recognize formula solidified Yale one world's top universities 20th century need adjusted 21st century order keep position new 21st century formula definitely includes 10 computer science professors Dan Grollman SM '03I EECS Yale truly enjoyed almost classes difficulty getting electives wanted due mentioned issues found teachers engaging informative supportive However started applying top-tier CS PhD programs surprised many rejected due grades didn't strong enough CS 'fundamentals ' compilers operating systems databases - classes never fit schedule never took Everything worked well end wish opportunity take classes undergrad rather play catch-up grad school Austin Czarnecki '14As many others said computer science becoming increasingly important areas including law medicine humanities architecture engineering list goes trend going accelerate recent years innovations involving computer science technology primary drivers growth development around world reason alone it's essential Yale invest future computer science radical expansion computer science department faculty crucial first step toward catching institutions attracting promising students go lead businesses organizations affected ubiquity computer science Chris DeVore YC '90As undergraduate Yale failed appreciate deeply life career -- world around -- would impacted technology found way technology-driven entrepreneurship graduation I'm grateful broad deep skills took Yale regret separate science technology disciplines -- physically culturally -- Yale's fields study time New Haven It's long past time Computer Science brought fold core academic disciplines students offered greater exposure skills habits mind shape later lives deeply John Day-Richter TC 2000I'm convinced received excellent grounding Computer Science time Yale grounding seen productive career Bioinformatics current position Staff Engineer Google Unfortunately throughout career I've found battling poor public reputation Yale CS department Future generations Yale computer scientists enjoy advantages peers departments prestige Yale degree opens doors acts strong signal competence accomplishment bold expansion Yale Computer Science department first step Stefan Palios YC'14The worst part whole situation time remember sophomore year friend realized passion computer science taking couple courses crushed thought take Yale - spent good weeks extremely pissed didn't choose Harvard chance Harvard jokes aside killed seeing friend find passion - something seems delicate begin fraught fear anxiety - watch realization wash never able formally chase passion undergraduate education Ray Han SY 1991I many schools since Yale applied math CS including Stanford UCLA Tsinghua China Peking University China literally thousands computer people places took first job Oracle 2 Yalies company Given status one oldest wealthiest universities US would need put resources computer science engineering departments State schools much less money Yale large strong vibrant departments Ray Han Yale 1991Paul D Bosco MS 1984The vision innovative excellent Yale seems unachievable without investments required scale Yale Computer Science innovation excellence Stanford Harvard achieving distinctive success Computer Science research education extraordinary percentage undergraduates across majors enrolling Computer Science course offerings time come increase support Computer Science achieve model interdisciplinary innovation excellence uniquely Yale Katherine McDaniel '14CS112 fall '12 Prof Zhong Shao one engaging courses four years exposed different way processing controlling information alone would enough course also gave foundation helpful learning R work public health worked Prof Shao generous time force TAs help us troubleshoot group problem set sessions would hate see learning experience compromised future students Amanda Chang YC '13As web development instructor Flatiron School wholeheartedly support initiative started Yale Computer Science major changed majors year mostly due lack variety within department Though Yale liberal arts institution Computer Science major include theoretical practical fine line traditional irrelevant far technology concerned Nathaniel GranorWhen graduated 5 years ago Yale CS seen one prominent departments nationally decreasingly true schools ramping massively Yale treading water It's sad see wonderful experience undergrads know less-wonderful experience due overcrowded classes lack availability Dan Loewenherz '09As self-taught programmer attended Yale chose major CS large part due university's lack focus wholeheartedly support petition CS longer niche course study petition isn't result vocal minority Yale administration please whatever ensure we're left behind Francine Gordon Ph D '73I live work Silicon Valley know several Yale graduates- undergrad MBA Ph Ds reading Bloomberg article never consciously noted none CS majors Yale may late party there's still time Yalies make mark Time beef CS education wonderful alma mater Kevin Irwin SY '99I don't sign many petitions find Yale's continued disinterest supporting CS program fully disheartening many pointed supporting important field competitive level peer institutions puts Yale's overall educational reputation risk Please allocate resources crucial area Aayush UPadhyay '14I many fond memories CS almost Freshman Sophomore year Zoo much smaller knew everybody department major grew ton time Yale remember non-stop office hours Please get faculty students get attention rekindle tight-knit feel Yale CS Dorothy Chang 'CC 04As someone active startup world investor public relations executive I'd like support petition encouragement ushering brightest Yale students creative innovative industries little education access significant impact world George Lee '75I took class Alan Perlis Peter Salovey stop giving mealy-mouthed lame excuses fix problem immediately unsolvable Harvard Princeton Penn Columbia Dartmouth Brown Stanford Chicago Duke done Even Swarthmore hired CS faculty right thing Paul Miller YC 1975I history major support wholeheartedly - computer technology arguably important factor virtually areas educational commercial endeavor past 30 years Yale lag behind major universities area huge strategic misstep opinion Mordechai Beizer BK '78Think means current future state Harvard Stanford endowments many successful high-tech companies started alumni institutions Yale 25 50 years Yale doesn't step game computer science Michael Guo SY '04The CS department understaffed lacked broader course offerings would typical universities student disheartening find department expanded last decade Steve Reinhardt YC '80 CS major interactions Yale CS since graduation marked high quality people work agree department grown match scale CS' impact society hence need leaders field Andrew Chen BK '03This sad disappointing part Yale story long order keep truly progressive respected intellectual institution Yale MUST invest much computer science program Sannella DC 1978I'm probably one first Computer Science graduates Yale astonished saddened hear short-sighted lack support Ray Sheen YC '86I wonderful memories Yale Computer Science program faculty hope resources provided expand program Jeffrey Zhang '14If want best know takes best today means good CS program plain simple Phil HuI consistently contribute alumni fund want support great programs John Levine YC'75 PhD'84It's sad department hasn't grown times since Greg Edwards JE '05I fully support effort William W Oppenheimer '75CS top priority Julie Sullivan Winn YC '75Yale keep Derek Chang YC '12 Calhoun CollegeDesperately needed Shaodong Jiang GRD'97We need Wojciech Osowiecki MC'14Good luck David Schamis SM 95ThanksCatherine Radmer YC 82Anton PetrovHans ChoDonald Fischer DC '99Victor Cheng DC 08Ken Stern '97David Tidmarsh '12Spencer Allee 2010Jatin ShahCamy AndersonJacob Metrick YC '13Daniel Tahara 2014Mark Rutan YC'78Adam Wolf DC '04Jonathan Kaplan YC 00Kush Patel SM '14Carl Sandberg YC '14Max NovaAkshay Shah YC '05Jim Terry YC Grad '05Sheehan Paul MPPM '98Colman Lynch BK 05Sara Stalla TC '13Caroline Jaffe '13Kasia HitczenkoRose Wang '14David Z Chen '12Karen Worthing YC '81Hobart Lim 2014Charles King SY '93Flash Sheridan Calhoun 1982Elaine Short YC '10Anuradha Rao SOM'13Kent TwardockKevin Lai YC '13Henry Davidge SM '14Archit Sheth-Shah 2013Alaric D'Souza 2014Scott SnyderMichael AndersonCharlotte Guertler 2014George Lee SM '75Wai Wah ChinIan Peake YC '12David Kasten JE'08Lenn Phegley SM 95Qiwei Claire Xue YC '14Hunter Gray YC '05Joseph Pat YC'95Gerald GohBong KohAlan BeebeMarc Goldstein YC '82Stefan Weijola '13Kelly Campbell YC '14John Jack Ivers YC '79Sabri Samer YC '13Christopher Sung '89Brian Hall 1997John Mostenan '78 Computer Science MajorAndrew Liverman YC 2002Richard Kozlak YC'78Rob Rodi YC 03Leo Shklovskii DC'03Donna Slonim YC 90Brandon Li BK '15Tiffany Pang YC '12Nidhi PujaraLaura Stein YC '85Nick RibovichVelaSusan ParkJake Snell SY '10Michael Greenwald '75 '81 SOMApril JoynerRonald L RivestDennis Rothman YC '74Kenny CastanedaEleanor Avrunin BC '11Brian Hammerstein YC '85Kyle Alpern JE '12Christina Wallin YC '13Mimi Chen YC '14Sue LiFernando Inzunza YC'74Joel Spolsky YC 91Nicholas Bagg SOM '14Roy Carlson '75Zaina Zayyad YC '14Daniel Rozycki '13Matt McClure ES '99Sarah Ditchek MC '14Arin Kim YC'12Lynne Alvarez TD '78Mark Gorton YC '88Margaret Tung YC 2010W Lewis Johnson Ph D '85Michael Giuffrida YC '15"),
('The RANSAC Song', "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ RANSAC Song danielwedge's channel SubscribeSubscribedUnsubscribe129 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Statistics 9 855 84 Like video Sign make opinion count Sign 85 1 Don't like video Sign make opinion count Sign 2 Loading Loading Loading Rating available video rented feature available right Please try later Published Mar 15 2012N random samples provide example fitted model uninfluenced outliers need test combinations lyrics downloads available http danielwedge com ransac Category Education License Standard YouTube License Show Show less Loading Autoplay autoplay enabled suggested video automatically play next Next knowing Math cost 15 000 - Duration 2 39 mathclips 2 995 479 views 2 39 Play nextPlay Fundamental Matrix Song - Duration 3 15 danielwedge 66 950 views 3 15 Play nextPlay 2 71828183 number e song - Duration 1 52 danielwedge 110 410 views 1 52 Play nextPlay Lecture 7 Visual Navigation Flying Robots Dr J rgen Sturm - Duration 1 25 53 cvprtum 4 860 views 1 25 53 Play nextPlay Texture Feature Segmentation Using K-Means Clustering Gabor Filters_ Sankalp Mohanty - Duration 11 44 Sankalp Mohanty 3 863 views 11 44 Play nextPlay EGGN 512 - Lecture 27-1 RANSAC - Duration 12 14 William Hoff 4 866 views 12 14 Play nextPlay EHCI 0 6 - Ransac robust - Duration 1 02 Daniel L lis Baggio 30 132 views 1 02 Play nextPlay Hough Transform Demo - Duration 2 18 octaviVision 12 123 views 2 18 Play nextPlay MVC Song - Duration 6 23 hz 58 825 views 6 23 Play nextPlay Four Fundamental Subspaces Matrix - Duration 8 26 refrigeratormathprof 2 856 views 8 26 Play nextPlay Find Homography Using SIFT RANSAC - Duration 0 52 GoKoutaki 8 134 views 0 52 Play nextPlay Super Base WSHS Math Rap Song - Duration 3 25 WSHSmath 1 391 189 views 3 25 Play nextPlay Iron Maiden - Fear Dark - Duration 7 16 mateusz2302 51 748 123 views 7 16 Play nextPlay Pi Song - Duration 1 18 SloppieJoe 1 410 907 views 1 18 Play nextPlay Kinect RANSAC Plane Extraction Texturing Test - Duration 2 02 Preetum Nakkiran 1 055 views 2 02 Play nextPlay Pdf Split Merge Demo - Duration 2 46 gearspring 9 447 views 2 46 Play nextPlay 1-point RANSAC based Structure Motion Monocular visual odometry 400 Hz - Duration 1 47 Davide Scaramuzza 6 143 views 1 47 Play nextPlay 1-Point RANSAC EKF-Based Structure Motion - Duration 3 52 imperialrobotvision 2 375 views 3 52 Play nextPlay Feature Detection Extraction Matching RANSAC - Duration 4 55 MATLAB 5 439 views 4 55 Play nextPlay Laser based 2D Object detection - Duration 4 23 RoblabFhGe 284 views 4 23 Play nextPlay Loading suggestions Show Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists"),
('The Most Powerful Laptops Till Date', 'COOL STUFF WEB blog facebook tips tricks ways making money online computer science blackhat freebies technology reviews hacking tricks tips computer geek stuff Thursday 22 January 2015 Powerful Laptops Till Date made list TOP 5 Powerful Laptops Till date Laptops listed branded Gaming Laptops modern games requires CPU Power TOP-OF-THE-LINE graphics cards Extreme motherboard etc Hackers Hackers Password Crackings apps works graphics card since capable working data less time waiting Let war begin 5th Rank Asus G75VW - Awesome Killer look Asus G75VW managed snatch 5 positions race really deserves laptop Intel Core i7 installed Intel HM77 Express Chipset motherboard two good chemistry together Display side Nvidia GeForce GTX 670MX hood 3 GB RAM little disappointing impress us comes 16GB Ram 1500 GB hard drive deserves DAMN laptop really gives bang buck 4th Rank MSI GT70 - powerful gaming laptop known Suitcase design Also bit overpriced performance still ROCKING Core i7 processor running 2 3GHz fitted Intel HM77 motherboard squeezing every bit performance graphics Side Nvidia GeForce GTX 680M card 4GB DDR5 RAM giving stunning graphics smoothly Gaming Smooth-as-Silk Laptop company would put attractive case notch price little bit would real treat 3rd Rank Alienware M18x - Heavenly looking series Dell Named Alienware Laptop Series Took gaming market surprise Alienware M18x fast enough grab 3rd rank well could support 32GB RAM maybe GeForce GTX 675M graphics card 100W GPU option sure sucks life battery gives graphics similar real life Handling processing power third generation Intel Core i7 processor base speed 2 5GHz overclock 3 3GHz Forget gaming system two 500GB hard drives tandem work faster single hard drive Masterpiece available whooping price 2 329 00 around 1 Lakh 40 thousand rupees 2nd Rank Digital Storm x17 - Might shock laptop small company Well Under-estimate guy 1 999 gives Intel Core i7-3610QM CPU 16GB RAM AMD Radeon 7970 GPU nvidia boo Contains 120GB solid-state drive SSD 750GBHDD working team although laptop give bells whistles like customized back-light key sexy chassis gives strong punch performance field Proper Bang buck 1st Rank Alienware M17x R4-7263BK - Alienware M17x one best gaming laptops awesome graphics card video memory screen brings top game Intel Core i7 powers gaming machine Giving 3 6GHz combining turbo boost Married Intel HM77 Chipset 7 1 surround sound sleeves Graphical side handled AMD Radeon HD 7970M graphics card Considered BEST graphics card till date ever see bad-ass performer day forget try FPS Games father Posted noel mwangi 16 55 Email BlogThis Share Twitter Share Facebook Labels KNOW reviews Reactions Newer Post Older Post Home Subscribe Post Comments Atom Google Followers Translate Share IP Address Lookup Live Traffic Stats Pages Home Google Page Rank Update - December 2013 facebook tips tricks Google Badge Blog Archive 2015 3 March 1 February 1 January 1 Powerful Laptops Till Date 2014 38 November 2 June 1 March 1 February 19 January 15 2013 14 December 14 noel mwangi View complete profile photos Loading Google Badge Total Pageviews Subscribe Posts Atom Posts Comments Atom Comments Search Blog Loading Popular Posts Steps Make nameless Invisible Facebook Profile name nameless actually symbol ID better Full name ID D 1 First open Mozilla Fir Free Ebook Make Computer Operating System Scratch using C C hey guys time started giving freebies Top 5 Best Android browsers Posted noel mwangi ANDROID TOP 5 many Android Browsers available today E Powerful Laptops Till Date made list TOP 5 Powerful Laptops Till date Laptops listed branded Gaming Laptops modern ga Use Facebook Microsoft Excel Spreadsheet possible use Facebook excel spreadsheet yes possible share process use Facebook excel spreadsh 10 Best Ways Make Money Online Make Money Online secondary source income past many smart people started quitting regular jobs make 10 Services Send Text Messages Web Sometimes need send text message forgot phone poor cell reception list high page rank auto approved dofollow edu backlinks folks apprehend worth high page rank dofollow blogs Dofollow blogs lists ar needed things seo High page rank dofo Access Facebook Mobile Without Internet old phone like Nokia 1100 Worry Use Facebook Gmail Hacks Tips Tricks already know Gmail beats email providers endless customization capabilities Google product integration copyright webworld101 blogspot com Template images TommyIX Powered Blogger'),
('Some problems with big open complexity gaps.', "current community chat blog Theoretical Computer Science Theoretical Computer Science Meta communities Sign log customize list stack exchange communities Stack Exchange sign log tour help Tour Start quick overview site Help Center Detailed answers questions might Meta Discuss workings policies site Theoretical Computer Science Questions Tags Users Badges Unanswered Ask Question Take 2-minute tour Theoretical Computer Science Stack Exchange question answer site theoretical computer scientists researchers related fields It's 100 free registration required Problems big open complexity gaps vote 28 vote favorite 10 question problems big open complexity gap known lower bound upper bound open problems complexity classes precise let's say problem gap classes B subseteq B uniquely defined maximal class prove -hard B minimal known upper bound e algorithm B solving problem means end finding problem C -complete subseteq C subseteq B impact complexity theory general opposed finding P algorithm NP -complete problem interested problems subseteq P B NP already object question looking examples problems gap classes far possible limit scope precise question especially interested problems subseteq P B supseteq EXPTIME meaning membership P EXPTIME -completeness coherent current knowledge without making known classes collapse say classes list cc complexity-theory complexity-classes big-list share improve question edited Feb 26 13 56 asked Feb 26 12 11 Denis 2 504826 mean classes problem Assume problem SAT define classes R B Feb 26 12 20 SAT NP-complete take B NP gap complexity SAT matches exactly already well-known class Showing new result complexity SAT namely belonging smaller class would breakthrough complexity theory Granted question completely well-defined depends complexity classes considered mainstream B uniquely defined specific question though well-defined examples languages coherent current knowledge P EXPTIME-complete Denis Feb 26 12 26 actually still completely well-defined non-collapsing relies notion well-known class Obviously PSPACE-complete problem fit requirement although P EXPTIME-complete coherent current knowledge instance list used reference well-known class en wikipedia org wiki List_of_complexity_classes Denis Feb 26 12 54 12 doesn't quite fit bill specific question appearances existential theory reals stubbornly resists classification beyond NP-hard within PSPACE latter per 1988 result J F Canny en wikipedia org wiki Existential_theory_of_the_reals anemone Feb 26 22 19 add comment 7 Answers 7 active oldest votes vote 26 vote Knot Equivalence Problem Given two knots drawn plane topologically problem known decidable seem computational complexity obstructions P best upper bound currently known time complexity seems tower 2 height c n c 10 10 6 n number crossings knot diagrams comes bound Coward Lackenby number Reidemeister moves needed take one knot equivalent one See Lackenby's recent paper recent related results explicit form bound give page 16 share improve answer edited Feb 27 21 06 answered Feb 26 13 26 Peter Shor 17 6k16599 Thank answer know current bounds point reference stating current state art trouble finding clear one Denis Feb 26 14 30 I've trying go find something recent 1998 paper Hass Lagarias Pippenger states knot equivalence problem known decidable wouldn't surprised somebody shown EXPTIME since don't believe anything better known certainly isn't clear it's P fairly sure none results showing deciding whether something knotted NP extend general problem Peter Shor Feb 26 15 39 MO question related mathoverflow net questions 77786 particular using recent results announced Lackenby people maths ox ac uk lackenby ekt11214 pdf one obtains knot type K determining given knot equivalent K NP note improve Knot Equivalence Problem Arnaud Feb 27 15 42 Arnaud fact looks like results prove two diagrams n crossings Knot Equivalence Problem solved time tower 2's height c n c enormous constant check edit answer Peter Shor Feb 27 15 58 PeterShor Yes indeed focusing recent result may lead improved bound published actual polynomial explicited Arnaud Feb 27 16 42 add comment vote 21 vote Another natural topological problem similar spirit Peter Shor's answer embeddability 2-dimensional abstract simplicial complexes mathbb R 3 general it's natural ask effectively efficiently decide abstract k -dimensional simplicial complex embedded mathbb R d k 1 d 2 graph planarity problem linear-time algorithm k 2 d 2 also linear time algorithm k 2 d 3 case open last year shown decidable Matousek Sedgwick Tancer Wagner say algorithm primitive recursive time bound larger tower exponentials hand speculate might possible put problem NP going beyond would challenging However doesn't seem strong evidence polytime algorithm impossible latter paper many references reading share improve answer edited Feb 27 21 53 answered Feb 26 19 19 Sasho Nikolov 12 2k13882 add comment vote 21 vote complexity computing bit specified binary irrational algebraic number sqrt 2 best known upper bound mathsf P PP PP PP via reduction problem mathsf BitSLP known upper bound ABD14 hand even know problem harder computing parity n bits - know problem could mathsf AC 0 Notice however know finite automaton compute bits irrational algebraic number AB07 share improve answer edited Feb 28 18 05 Sasho Nikolov 12 2k13882 answered Feb 27 14 05 SamiD 1 2911022 add comment vote 20 vote Here's version minimum circuit size problem MCSP given 2 n bit truth table Boolean function circuit size 2 n 2 Known AC0 Contained NP Generally believed NP -hard open believe it's even known AC0 2 -hard Indeed recent work Cody Murray appear CCC'15 shows there's uniform NC0 reduction PARITY MCSP share improve answer answered Feb 27 2 23 Ryan Williams 17 9k569130 add comment vote 15 vote Multicounter automata MCAs finite automata equipped counters incremented decremented within one step take integers 0 numbers Unlike Minsky machines aka counter automata MCAs allowed test whether counter zero One algorithmic problems huge gap related MSCs Reachability problem E g whether automaton reach configuration initial state counters zero configuration accepting state counters zero problem hard EXPTIME shown Richard Lipton 1976 decidable Ernst Mayr 1981 solvable F 3 thanks Sylvain pointing huge gap share improve answer edited Mar 5 17 59 answered Feb 27 21 38 Thomas 52618 2 Hi Thomas claim explicit likely tight complexity upper bound recent arXiv paper arxiv org abs 1503 00745 proposed upper bound mathbf F _ omega 3 however way beyond complexity classes original poster interested Sylvain Mar 5 13 42 Sylvain Cool Thanks sharing Michael Wehar Mar 6 0 11 Sylvain EXPTIME best known lower bound Michael Wehar Mar 6 0 13 1 Michael best lower bound decision problem actually EXPSPACE Lipton 1976 cpsc yale edu sites default files files tr63 pdf However algorithm Mayr 1981 dx doi org 10 1145 800076 802477 Kosaraju 1982 dx doi org 10 1145 800070 802201 Lambert 1992 dx doi org 10 1016 0304-3975 92 90173-D analysed mentioned arXiv paper known require least Ackermannian e mathbf F _ omega time Sylvain Mar 6 9 57 Sylvain Thank much additional information really appreciate Michael Wehar Mar 6 23 44 add comment vote 11 vote QMA 2 Quantum Merlin-Arthur two unentangled provers certainly QMA -hard known NEXP share improve answer answered Feb 27 12 35 Martin Schwarz 4 2861338 add comment vote 7 vote computational problem associated Noether's Normalization Lemma explicit varieties explicit sense paper freely available full version Best known upper bound mathsf EXPSPACE note SPACE TIME conjectured mathsf P indeed mathsf P essentially equivalent derandomizing PIT share improve answer answered Mar 9 4 35 Joshua Grochow 19 6k268136 add comment Answer draft saved draft discarded Sign log Sign using Google Sign using Facebook Sign using Stack Exchange Post guest Name Email Post guest Name Email discard posting answer agree privacy policy terms service answer you're looking Browse questions tagged cc complexity-theory complexity-classes big-list ask question asked 3 months ago viewed 2552 times active 2 months ago Blog Stack Overflow Andela partner provide education beyond borders Get weekly newsletter Top questions answers Important announcements Unanswered questions see example newsletter subscribing agree privacy policy terms service Linked 85 Problems P NPC Related 16 complexity classes leaf language characterization 47 Open problems frontiers TCS 5 Complexity Classes Cases Worst Case 8 Caged complexity classes 27 Anthology Complexity Assumptions 18 big version NC 13 Looking nice problem inside SC first two levels 5 Big O notation modulo polynomial 3 powerful weak complexity classes powerful oracles 1 proving speedup phenomenon apply open complexity class separations Hot Network Questions Electric airplane - propellor vs turbine jet difference Multiple robots swarm robots GBA cartridge batteries ran dry time like GBC GB games Star vs Heart icon represent save favourite broken window Generate list symbols planets electron shells probability distributions using cream cheese instead cheddar grilled cheese sandwich roll Insight person telling truth display pie chart expected wanted quickly sum numbers file run SKSE launch Skyrim every time huge symbol door Truth realm Neon Genesis Evangelion Opening bought shirt offline correct usage word 'offline' worth - chest nickels half chest dimes good testers competing see opens bugs Alynn Scientific Mage Career Choice Brit working America get American colleagues stop mocking accent spelling check statistical significance remove ants laptop keyboard photon energies conserved general relativity Tikz picture lima way encoding cryptographic hashes safe Firefox accusing distributing malware site hot questions question feed tour help blog chat data legal privacy policy work advertising info mobile contact us feedback Technology Life Arts Culture Recreation Science Stack Overflow Server Fault Super User Web Applications Ask Ubuntu Webmasters Game Development TeX - LaTeX Programmers Unix Linux Ask Different Apple WordPress Development Geographic Information Systems Electrical Engineering Android Enthusiasts Information Security Database Administrators Drupal Answers SharePoint User Experience Mathematica Salesforce 14 Photography Science Fiction Fantasy Graphic Design Seasoned Advice cooking Home Improvement Personal Finance Money Academia 10 English Language Usage Skeptics Mi Yodeya Judaism Travel Christianity Arqade gaming Bicycles Role-playing Games 21 Mathematics Cross Validated stats Theoretical Computer Science Physics MathOverflow 7 Stack Apps Meta Stack Exchange Area 51 Stack Overflow Careers site design logo 2015 stack exchange inc user contributions licensed cc by-sa 3 0 attribution required rev 2015 5 28 2614 Theoretical Computer Science Stack Exchange works best JavaScript enabled"),
('Do You Want To To Make Your Own Computer Operating System? Here Is A Free Guide And Some Bonuses', 'COOL STUFF WEB blog facebook tips tricks ways making money online computer science blackhat freebies technology reviews hacking tricks tips computer geek stuff Tuesday 24 February 2015 Free Ebook Make Computer Operating System Scratch using C C hey guys time started giving freebies download Make Computer Operating System Scratch using C C - See http freecomputerbooks com How-to-Make-a-Computer-Operating-System-by-Samy-Pesse html sthash EjxQ8uqd dpuf Make Computer Operating System Scratch using C C - See http freecomputerbooks com How-to-Make-a-Computer-Operating-System-by-Samy-Pesse html sthash EjxQ8uqd dpuf Posted noel mwangi 12 31 Email BlogThis Share Twitter Share Facebook Labels Freebies Reactions Newer Post Older Post Home Subscribe Post Comments Atom Google Followers Translate Share IP Address Lookup Live Traffic Stats Pages Home Google Page Rank Update - December 2013 facebook tips tricks Google Badge Blog Archive 2015 3 March 1 February 1 Free Ebook Make Computer Operating Sys January 1 2014 38 November 2 June 1 March 1 February 19 January 15 2013 14 December 14 noel mwangi View complete profile photos Loading Google Badge Total Pageviews Subscribe Posts Atom Posts Comments Atom Comments Search Blog Loading Popular Posts Steps Make nameless Invisible Facebook Profile name nameless actually symbol ID better Full name ID D 1 First open Mozilla Fir Free Ebook Make Computer Operating System Scratch using C C hey guys time started giving freebies Top 5 Best Android browsers Posted noel mwangi ANDROID TOP 5 many Android Browsers available today E Powerful Laptops Till Date made list TOP 5 Powerful Laptops Till date Laptops listed branded Gaming Laptops modern ga Use Facebook Microsoft Excel Spreadsheet possible use Facebook excel spreadsheet yes possible share process use Facebook excel spreadsh 10 Best Ways Make Money Online Make Money Online secondary source income past many smart people started quitting regular jobs make 10 Services Send Text Messages Web Sometimes need send text message forgot phone poor cell reception list high page rank auto approved dofollow edu backlinks folks apprehend worth high page rank dofollow blogs Dofollow blogs lists ar needed things seo High page rank dofo Access Facebook Mobile Without Internet old phone like Nokia 1100 Worry Use Facebook Gmail Hacks Tips Tricks already know Gmail beats email providers endless customization capabilities Google product integration copyright webworld101 blogspot com Template images TommyIX Powered Blogger'),
('Paper submission checklist', "prev next latest rss website a3nm's blog Paper submission checklist 2015-03-01 13 29 Submitting research paper conference journal stressful process many things remember mistakes dire consequences attempt summarize steps experience points it's easier follow checklist remember every time Note I'm making implicit assumptions e g using revision control system using LaTeX etc also list may sensible exhaustive fields I'm talking perspective theoretical computer science TODO flushing tasks left start finalizing submission course it's fine remove TODO decided time energy wasn't worth effort etc status TODOs must cleared won't realize proofreading changes left intended Possible sources TODOs process main text obvious LaTeX comments don't use people consider grepping TODO keywords reason TODOs gave probably moved separate file commented separate TODO file start jotting things separate files TODO ideas meeting_notes mailbox mail inbox submission probably intend get rid submitted go start finalizing ensure nothing left reviews previous unsuccessful submission paper task left proofread submission continue Proofreading Go submission linearly start end may want screen paper annotating paper copy implementing changes using WYSIWYM editor LaTeX editing anything proofreading crucial recompile read changed preferably whole paragraph fixing errors easily introduce errors won't proofreading currently changing Hopefully point scientific content submission change turns make significant fixes proofreading consider second proofreading pass Check proofread following easily forgotten Paper title author information especially affiliations often filled casually early may sensible Section titles paper go paper looking section titles check make sense match Paper structure paragraph one Footnotes Floats figures algorithms etc Formal statements it's easy focus prose double-check precise wording theorems makes sense matter framed Bibliography references follow format consistent abbreviating venue names including discarding page numbers addresses publishers author names sensible acronyms proper names correctly capitalized titles e g Designing xml language hadoop done proofreading known good version may make sense changes check diff version spot errors would introducing Spellchecking Use spellchecking tool Also check notations terms things shouldn't anymore Remove definitions macros longer used old macros TODO notes etc introduced macro replace notation changed notation check hardcoded instances notation previous notations name multiple variants using inconsistently standardize one name e g foo bar foo-bar looking occurrences multi-word names don't forget may line break middle e check foo end line Typography Check following Math identifiers beginning lines x split make space words non-breaking Overfull hboxes check LaTeX log fix rewording tweaking hyphenation technical terms LaTeX know General page layout widows orphans spacing around environments floats positioning section titles bottom column placement numbering floats etc Sanity checks Verify following one last time Go call papers formatting instructions get page limit right Including excluding references using correct style file font size paper size correct including author information depends venue double-blind Search last time PDF grep source folder bad strings like TODO FIXME stuff Check LaTeX log bad errors like broken references multiply-defined labels Search PDF double-check broken references submitting LaTeX source yes e g arXiv make sure embarrassing comments left LaTeX changes committed revision control system Check machines editing document make sure aren't uncommitted changes different machine Submitting Submit paper Check following title author information track keywords etc correct submission interface indicate conflicts interest supposed submit additional things like uploading appendix elsewhere yes don't forget Update abstract submission interface Double-checking Re-download file submitted submission interface go check looks good pages last change submit right file right paper may sound stupid strange things happen 5 especially important multiple submissions deadline It's normal find mistakes last minute going PDF submitting course fixing extra careful stage probably double-checking changes make checking proofreading diff commit Concluding Decide done Let coauthors know Thank hard work celebrate see fit Aftermath following things probably there's urgency safest way avoid multiple times last-minute fixes wait deadline Ensure version control system knows final submitted version applicable double-blind upload preprint website preprint repository arXiv comments welcome a3nm REMOVETHIS a3nm net prev next posts author Antoine Amarilli license CC-BY-SA engine pelican"),
('The simulated annealing algorithm (with an emphasis on the schedule function)', 'Skip content Maker Maker Approach Artificial Intelligence Primary Menu Home GitHub RSS Contact simulated annealing algorithm March 1 2015 atrilla Simulated annealing SA local search method combines features hill climbing incomplete effective features random walk complete ineffective way yields efficiency completeness overall working principle quite similar hill climbing move upwards maximum short-term decisions go next stochastic random choice improves situation always accepted Otherwise SA algorithm accepts bad move given transition probability probability decreases exponentially badness move temperature factor allows irrational moves short period time recall transition worse state Empirically though shown certain circumstances e tailored parameters may favour leaving local maximum heading toward optimum see Figure 1 probability associated turning action called Boltzmann factor quantifies likelihood system transitions new energy state given temperature Figure 1 Simulated annealing applied one-dimensional state-space landscape described example objective function Simulated annealing state-space landscape origin SA algorithm found metallurgic tempering process high temperature first applied metal produce atomic disorder cooled gradually order align atoms leave system crystalline state analogy local search problem SA first allows lots possibilities high temperature hoping cover optimum greater chance system brought stable state low temperature yields solution result Figure 2 Simulated annealing algorithm -- Simulated annealing algorithm -- -- PRE -- problem - array costs index indicates state table -- start - starting state index number -- schedule - mapping time temperature function -- must end zero -- -- POST -- solution - solution state number function simulated_annealing problem start schedule local current start local 0 true 1 local schedule 0 return current end local move math random local successor current move 0 5 current 1 successor current - 1 end else current problem successor current 1 end end local delta problem successor - problem current delta 0 current successor else math random math exp delta current successor end end end end SA simple iterative stable good searching properties easily modifiable accommodate criteria e g minimum instead maximum see Figure 2 Similar hill climbing SA unit space complexity linear time complexity given time temperature decreases initial value zero However SA rather sensitive time-dependent temperature factor given schedule function schedule trades exploration high temperature ability make big changes exploitation low temperature ability deepen local area operational flexibility makes difference SA plain hill climbing alternative example exponential decay schedule function time constant shown Figure 3 Figure 3 Exponential decay schedule function Exponential decay schedule function conducted test using aforementioned schedule sinc landscape 3 points following state-space locations 10 within global max area 2 also within global max area 20 within local max area result points converge global maximum Go ahead try Run unit test script SA algorithm enables search point close local max leave zone move towards optimum search points reach global stay jiggling much leave optimum point Usually tackling unknown problems entails deal uncertainty solution reliability order shed light shotgun approach may help run SA procedure starting lots different places look results statistical perspective majority solutions fall values Posted Optimisation Post navigation Local search hill climbing algorithmThe genetic algorithms 4 thoughts simulated annealing algorithm Pingback genetic algorithms Maker Jordan says May 17 2015 16 13 recently implemented simulated annealing algorithm javascript solve problem label placement densely populated graph great algorithm fairly accessible without heavy math background coders would also recommend reading Jeff Heaton article subject includes Java sample http www heatonresearch com articles 9 Reply Jordan says May 17 2015 16 18 Also meant thank well written accessible article like source code great job avoiding unnecessary complexities Heaton article referenced bit difficult understand newcomer Reply atrilla says May 17 2015 16 34 Thanks kind words Jordan Jeff Heaton done lot effort explaining algorithms occasionally read pieces think re good learning resource doubt concern issues please hesitate post ll try help much possible Thanks feedback Reply Leave Reply Cancel reply email address published Required fields marked Name Email Website Comment may use HTML tags attributes href title abbr title acronym title b blockquote cite cite code del datetime em q cite strike strong Search Recent Posts Artificial Neural Networks point Gradient-based methods closer look problem state encoding genetic algorithms electronics genetic algorithms simulated annealing algorithm Follow ai_maker Facebook AI-Maker LinkedIn SubscribeLeave Blank Change email Categories Electronics Optimisation Search Uncategorized Archives May 2015 April 2015 March 2015 February 2015 January 2015 December 2014 Proudly powered WordPress Theme Plainly Chris Rudzki'),
('Practical Optional Types for Clojure [PDF]', 'PDF-1 5 6 0 obj 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 525 endobj 8 0 obj'),
('Five motivations for theoretical computer science: technology, mathematics, science, society, and philosophy.', "Theory Evolution Games Group EGG studies theoretical computer science evolution game theory Search HomeAbout HighlightsPublicationsReferences Posts Comments Reviews Books Commentary Models Technical Analytic Simulation Preliminary Meta Personal Operationalizing replicator dynamics partitioning fitness functions Short history iterated prisoner dilemma tournaments Five motivations theoretical computer science February 28 2015 Abel Molina 8 Comments situations perhaps lucky ones felt activity needs external motivation justification rest helpful think task hand useful course doesn answer larger question worth since distributes burden somewhere else establishing connections seems like natural part answer larger question Along lines following five intellectual areas whose study theoretical computer science concepts development useful therefore curiosity areas provide motivation learning cstheory concepts developing arranged likely obvious people less technology mathematics science society philosophy post could also serve homage delayed gratification perhaps procrastination mixed finally written three years first discussing Artem purposes post demarcation concepts works considered cstheory social one based practitioners identify cstheory result going around asking practitioners actual work cited taking proxy publication venues wikipedia categories plus memories conversations within context computer science community signaled considered work part cstheory example case bioinformatics actual work seems considered cstheory practitioners piece bioinformatics work making heavy use cstheory concepts would make sense cite within context post example reason care cstheory care biology Artem potential disagreement notwithstanding Without ado five motivations Finite approximation Turing machineTechnology use efficient accurate algorithms lead company make money offer better product recent example implementation work fault tolerance led improved performance cloud storage Microsoft saving millions dollars Historically speaking use combinatorial algorithms e g matching corresponding models within operations research classified well Mathematics Theoretical computer science continuous source problems mathematical structures pre-existing cstheory concepts often case cstheory theorems easily reducible statement asymptotic behavior mathematical structure make work cstheory interesting someone interest study corresponding mathematical structures example several lines work often lead problems extremal combinatorics expander graphs Also questions quantum computing often reducible problem regarding asymptotic behavior particular family matrices case work communication complexity looking norms matrices representing structure problem also happens study XOR games looking value Grothendieck constant different dimensions see Bri Buhrman Toner 2009 Visualization 2-dimensional NK-fitness landscape Randy Olson Science probably won require much commentary regular readers blog since fact might main topic let us say hardly surprising theoretical computer science used systematize study processes relevant discrete steps order changes evolution See example posts archive TheEGG techniques mentioned use complexity classes properties simplex algorithms formalize intuitions behavior certain fitness landscape models Kaznatcheev 2013 Barton Novak Paxao 2014 connecting diversity alleles multiplicative-weights update algorithm overview MWU see Arora Barak Kale 2012 Society use cstheory concepts useful analysis societal structures behavior case financial structures Arora Barak B Brunnermeier M Ge R 2011 studied financial derivatives questioned often made assumptions effects market efficiency already discussed blog concept used justify claim one hardness reduction also work analysis non-financial networks like Kleinberg 2000 filters connection models small-world phenomenon looking well decentralized path-making algorithms perform answers questions stack overflow include pointers work along lines Philosophy feels natural look theoretical computer science sort quantitative philosophy one foundations topic offering mathematically rigorous models processes interactions models possible use mathematical tools obtain answers philosophical questions entities recent example Aaronson 2013 work free problem no-cloning theorem quantum computing plays key role cstheory concepts like Kolmogorov complexity appear well See also post TheEGG archives applies cstheory perspective philosophy science using concepts like lambda calculus weighted automata computational learning examples within category course comprehensive someone different taste experience regarding cstheory work might suggest completely different set also course plenty lines work helpful mentioned areas categorized practitioners label computer science one cstheory top example bioinformatics given introduction also cases like work operating systems case technology use computers simulations case study societies Feel free add comments examples would interesting readers great examples interdisciplinarity really always appreciated References Aaronson 2013 Ghost Quantum Turing Machine arXiv 1306 0159 Arora Barak B Brunnermeier M Ge R 2011 Computational complexity information asymmetry financial products Communications ACM 54 5 101-107 Early version 2010 Innovations Computer Science Arora Hazan E Kale 2012 Multiplicative Weights Update Method Meta-Algorithm Applications Theory Computing 8 1 121-164 Barton N H Novak Paix o 2014 Diverse forms selection evolution computer science Proceedings National Academy Sciences United States America 111 29 10398-9 PMID 25009183 Bri J Buhrman H Toner B 2009 generalized Grothendieck inequality entanglement XOR games arXiv preprint arXiv 0901 2009 Easley D Kleinberg J 2010 Networks crowds markets Reasoning highly connected world Cambridge University Press Kaznatcheev 2013 Complexity evolutionary equilibria static fitness landscapes arXiv 1308 5094v1 Kleinberg J 2000 small-world phenomenon algorithmic perspective Proceedings 32nd Annual ACM Symposium Theory Computing STOC pp 163-170 ACM ads Share Click share Google Share FacebookClick share TwitterMoreClick email friendClick share LinkedInClick share RedditClick print Related Filed Commentary Tagged application theory cstheory philosophy math philosophy science Abel MolinaIf like might able find like exexist blog Spanish exexist_es blog 8 Responses Five motivations theoretical computer science Pingback Five motivations theoretical computer science Sublime Illusions Quanquan Liu says February 28 2015 14 34 Reblogged Sublime Illusions commented interesting blog post perceived motivations behind CS Theory Although one hundred percent agree idea CS Theory needs motivation science areas reason think research pure math doesn need motivation good read makes good points Reply Artem Kaznatcheev says February 28 2015 20 32 sure Abel saying cstheory needs motivations external least know would say much want motivations external think danger self-motivating often results building wall around field integrating rest knowledge wonder makes life bit boring compared well-integrated position able see glimpses things love wherever look Reply Quanquan Liu says February 28 2015 21 17 certainly love hearing applications theoretical computer science mathematics science areas personally curious evolutionary game theory especially applications cancer research hence reason follow blog comment definitely directed towards idea research entirely self-motivated reason disclaimer wanted ward interpreting blog post cstheory useful applications therefore worth studying Cstheory useful applications tremendously interested applications field also merit outside applications Looking blog post think saying quote mentioned good read one sometimes careful similar blog posts applications theoretical research fields Reply Abel Molina says March 1 2015 10 56 Yeah topic motivation connection another area definitely seems interest independently whether one considers necessary also examined different levels still plan spend time cstheory even external motivations didn exist money taxpayers particular area spent cstheory even external motivations didn exist Personally wouldn defend strong views topic feel compelled proselytize unlike topic whether external motivations exist like Reply Pingback update Theory Evolution Games Group vznvzn says May 1 2015 12 54 kind dark age least gray age one justify science CS one interesting emerging scientific fields existence re technology society stuff social networking ubiquitous smartphones apps soon quickly bring computers unnetworked 3rd world bringing along advances like finance bitcoin study complex systems emergence nonreductionistic science robotics big data artificial intelligence etc list long mentioned algorithmic lens 21st century may century computers get 5th gear 1st 2nd 3rd far much blog maybe need write post like one time also post shows connections TCS deep math etc Reply Pingback Five motivations theoretical computer science Rupei Xu Leave Reply Cancel reply Enter comment Fill details click icon log Email required Address never made public Name required Website commenting using WordPress com account Log Change commenting using Twitter account Log Change commenting using Facebook account Log Change commenting using Google account Log Change Cancel Connecting Notify new comments via email Notify new posts via email Recent Posts Cancer bad luck pair paradoxes Operationalizing local environment replicator dynamics Misbeliefs evolution games positive case EGT Reading Group 46 50 photo detailed update readership first 200 posts Pairing tools problems lesson methods mathematics Entscheidungsproblem Short history iterated prisoner dilemma tournaments February 2015 M W F Jan Mar 1234567 891011121314 15161718192021 22232425262728 335 622 views Follow Blog via Email Enter email address follow blog receive notifications new posts email Join 2 424 followers Contributing authors Abel Molina Alexander Yartsev Eric Bolo Forrest Barnum Jill Gallaher Julian Xue Artem Kaznatcheev Keven Poulin Marcel Montrey Dan Nichol Philip Gerlee Piotr Migda Rob Noble Sergio Graziosi Max Hartshorn Thomas Shultz Yunjun YangArchives Archives Select Month April 2015 1 March 2015 6 February 2015 8 January 2015 9 December 2014 3 November 2014 5 October 2014 5 September 2014 9 August 2014 1 May 2014 1 April 2014 5 March 2014 5 February 2014 6 January 2014 7 December 2013 6 November 2013 2 October 2013 11 September 2013 9 August 2013 6 July 2013 8 June 2013 8 May 2013 18 April 2013 6 March 2013 9 February 2013 1 January 2013 3 December 2012 1 November 2012 3 October 2012 7 July 2012 3 June 2012 7 May 2012 1 March 2012 4 February 2012 1 January 2012 2 October 2011 6 September 2011 12 CategoriesCategories Select Category Commentary 79 Meta 32 Personal 19 Models 76 Preliminary 56 Reviews 91 Books 4 Technical 88 Analytic 32 Simulation 23 abiogenesis Alan Turing algorithmic philosophy application theory artificial intelligence bayesian Bertrand Russell big data Biology chronic myeloid leukemia cognitive cost cognitive science collaboration compassion conference cstheory current events discrete vs continuous ecology economics empirical environmental austerity ethics morality ethnocentrism evolution evolution cooperation finance finite state automata fitness landscapes Gregory Chaitin Hawk-Dove History holey landscapes intelligence irreversibility Joseph Henrich Karl Popper learning Leslie Valiant machine learning Martin Nowak mathematical oncology matlab metamodeling multilevel selection mutation networks graphs optimization Paul Feyerabend perception-deception Peter Kropotkin philosophy math philosophy mind philosophy science population dynamics prediction presentation prisoner's dilemma public good quantum information processing rationality realistic model religion replicator dynamics research tools Robert Axelrod single cell organisms Social Brain Hypothesis Social learning social sciences spatial structure stackexchange TED TEDx video TheEGG CommunityJoin Community via Email Enter email address follow blog receive notifications new posts email Join 2 424 followers Top Posts Pages Three types mathematical models Defining empathy sympathy compassion Toward algorithmic theory biology Diversity working together cancer immune system microbiome Warburg effect evolutionary dynamics metastasis Generating random k-regular graphs Five motivations theoretical computer science Short history iterated prisoner's dilemma tournaments Posts LikeThe Rise Fall Radic BreastCancerTrials org BlogFeatured Philosop-her Subrena Philosop-her Create free website blog WordPress com Enterprise Theme Follow Follow Theory Evolution Games Group Get every new post delivered Inbox Join 2 424 followers Build website WordPress com Send Email Address Name Email Address Cancel Post sent - check email addresses Email check failed please try Sorry blog cannot share posts email"),
('How to Program a Quantum Computer (sort of)', "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ Program Quantum Computer sort Tom Scott SubscribeSubscribedUnsubscribe182 666 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Transcript 106 737 2 330 Like video Sign make opinion count Sign 2 331 34 Don't like video Sign make opinion count Sign 35 Loading Loading Transcript interactive transcript could loaded Loading Loading Rating available video rented feature available right Please try later Published Feb 23 2015This isn't going give details program quantum computer it'll least explain you're simulator Play http www bristol ac uk physics rese -- don't understand don't qualification quantum physics Thanks Jacques Carolan team Bristol University's Centre Quantum Photonics -- thanks Tom Morris holding camera don't know double slit experiment wave-particle duality there's lovely explanation Jim Al-Khalili Royal Institution https youtu A9tKncAdlHQTom's site http tomscott com tomscott http twitter com tomscott Category Education License Standard YouTube License Show Show less Loading Advertisement Autoplay autoplay enabled suggested video automatically play next Next Driverless Cars Greenwich - Duration 2 13 Tom Scott 88 593 views 2 13 Play nextPlay Turnpikes Tolls major roads private - Duration 2 07 Tom Scott 96 981 views 2 07 Play nextPlay Green Screen Worked Computers - Duration 3 36 Tom Scott 785 759 views 3 36 Play nextPlay Many Colours Rainbow - Duration 2 25 Tom Scott 127 131 views 2 25 Play nextPlay Harnessing Quantum Computers - Duration 7 18 World Science Festival 1 914 views 7 18 Play nextPlay Computer program learns play classic NES games - Duration 16 18 suckerpinch 980 305 views 16 18 Play nextPlay Komputer kwantowy - Duration 29 07 Spi arnia mentalna 29 903 views 29 07 Play nextPlay 95 videos Play Play Things Might Knowby Tom Scott Quantum Computing Entanglement - John Preskill - Duration 1 11 41 Institute Quantum Computing 19 924 views 1 11 41 Play nextPlay Computers Suck Translation - Duration 5 05 Tom Scott 74 750 views 5 05 Play nextPlay Numbers Toaster Dials Mean Minutes - Duration 2 13 Tom Scott 465 196 views 2 13 Play nextPlay Quantum Theory - Full Documentary HD - Duration 54 54 Sish Advexon 1 397 717 views 54 54 Play nextPlay Quantum Computer Nutshell Documentary - Duration 30 02 PD Knowledge 126 520 views 30 02 Play nextPlay Lawrence Krauss Quantum Computing Explained - Duration 3 52 Big Think 210 566 views 3 52 Play nextPlay Love Physics Walter Lewin's Last Lecture - Duration 1 01 26 Allure Physics 441 849 views 1 01 26 Play nextPlay Magic Roundabout Swindon's Terrifying Traffic Circle Emergent Behaviour - Duration 1 40 Tom Scott 140 547 views 1 40 Play nextPlay Michio Kaku Program Quantum Computer - Duration 4 48 Big Think 529 726 views 4 48 Play nextPlay Speed Outrage Tom Scott Thinking Digital 2015 - Duration 11 15 Tom Scott 56 068 views 11 15 Play nextPlay Prime Meridian Isn't 0 - Duration 3 14 Tom Scott 274 320 views 3 14 Play nextPlay Doesn't Britain Rabies - Duration 2 17 Tom Scott 272 235 views 2 17 Play nextPlay Loading suggestions Show Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists"),
('Emergence of the In-Memory Data Fabric', ''),
("Understand the Germans Enigma machine from WW2 in 30 lines of Ruby. Featuring in the Oscar winning film 'The Imitation Game'", "HomeOur WorkServicesIdeasBlogAbout us 23 Feb 2015 Understanding Enigma machine 30 lines Ruby Star 2014 film Imitation Game Albert Still recently watched film Imitation Game brilliant despite Keira Knightley failed attempt posh British accent Everyone watch especially re interested technology life genius called Alan Turing also known father modern computer science means tech re using read blog works foundations discoveries major breakthrough took place GCHQ WW2 made machine decrypted secret German messages sent using Enigma machine Furthermore historians believe work shortened war two years saved thousands lives stories get much interesting us Brits used maths computer science help Allies win WW2 save Europe fascism watching film became interested Enigma machine m going use Ruby explain works know Ruby programming language worry ll surprised much syntax understand Firstly important realise Enigma machine one big circuit time key pressed least one rotor rotated changes circuitry machine thus lighting different letter faced light bulb rotors moving parts within circuit 26 steps one letter alphabet key pressed right rotor rotates step reaches full revolution middle rotor rotates step middle rotor full revolution left rotor rotates step video best explain circuitry found best way understand machine visualise path electron traveling circuit key pressed First get plugboard literally swap 10 26 letters example D becomes E therefore E becomes D Ruby model Plugboard Hash 'A' 'Z' to_a shuffle first 20 Plugboard merge Plugboard invert make reflective 6 letters untouched simply map make value default entered key Plugboard default_proc proc hash key key Next get rotors think rotors substitution cypher two sides 26 metal contacts mess 26 wires inside randomly pair contacts model rotor Hash 'A' 'Z' zip 'A' 'Z' to_a shuffle return journey call invert hash passing key electron travels rotors gets reflector reflectors job simply turn electron around pass back rotors model Reflector Hash 'A' 'Z' to_a shuffle Reflector merge Reflector invert go back rotors plugboard finally hit letter faced lightbulb would indicate operator letter encrypted decrypted depending wether operator receiving sending messages written gist Enigma machine using code please feel free comment needs explanation secure Enigmas security comes large number configurations machine Every month German operators issued code book told setting put plugboard rotors day month Enigma machine came 5 rotors choose machine used 3 5 choose 4 3 Order matters therefore yielded 5 x 4 x 3 60 combinations rotor 26 starting positions yielded 26 x 26 x 26 17 576 combinations plugboard maths complicated Andrew Hodges explains well number ways choosing m pairs n objects n n-2m m 2m Therefore enigma machine 26 26-2 10 10 2 10 150 738 274 937 250 combinations Multiply 60 x 17 576 x 150 738 274 937 250 158 962 555 217 826 360 000 combinations GCHQ faced figure one combinations Germans Enigma machines using day could understand Germans saying Furthermore next day would change making promising work day useless moving target Turing master mind came others built bombe machine speed process working setting Enigma machines day First tried guessing small section plaintext within ciphertext bombe used find setting would yield plaintext brut force get time would love study bombe try write Ruby UX lose Germans war reflector practical meant Enigma machine operators used setting send receive messages great also meant letter could never map major weakness system allowed code breakers eliminate possible solutions ciphertext putative piece plaintext letter place weakness Turing exploited bombe machine use 10 pairs plugboard puzzled play around n n-2m m 2m formula see 11 plug pairs yields combinations number decreasing 11 best explanation used 10 British cryptanalysts believed Germans chose 10 plugs resulted maximum number plug-board permutations actual maximum occurs 11 plugs discrepancy could well mistake slide-rule computations part Germans Deavours Kruh 1985 Machine Cryptography Modern Cryptanalysis didn computers back maths large numbers difficult done hand simply believe slide rule mistake Red Badger hiring Come join us Albert Still Software Engineer Recent posts favourite talks RubyConf 2014Computer Science students work start uni Read posts Albert Still computer science cryptography maths Ruby security 19 Timothy embedded YouTube video 10 37 speaker says 6 pairs letters chosen system setup enigma simulator wiring see 10 pairs swapped going Greg video new apple version engima mini FaustoCarrera Alan Turing life well documented film deception want know cracking enigma code check BBC documentary Code-Breakers Bletchley Park Lost Heroes Marian Adam Rejewski Polish mathematician one cracked first German Enigma machine base Turing used crack new Enigma machine Turing approach break code completely time real genius Bobbyjoe Peener https vimeo com 31185786 documentary Guest shame often Polish contribution gets overlooked film post us Brits used maths computer science help Allies win WW2 save Europe fascism people say Americans take much credit war Matthew Blott m afraid re talking bollocks author says help Allies win war word help denotes assistance rather primary role word Allies makes clear joint effort Contrast average bullshit Hollywood take non American accents ll hear cannon fodder Pingback Understanding Enigma machine 30 lines Ruby Star Oscar winning film Imitation Game infopunk org J Tufts Perhaps trying funny Keira Knightley failed attempt posh British accent thought bad taste especially since Keira Knightley British nominated Academy Award role Imitation Game B B author British many accents reside within British English dialect example American English changes regions region city city town town New England accent New Orleans accent American accents different Author making joke Kiera could posh accent particular sound George thing British accent anything posh English accent personally didn find offensive tooky might enjoy go minusculus programming challenge http minisculuschallenge com index html Pingback Understanding Enigma machine Felipe Contreras http cad cx Colin Dean m messing around Scala https github com colindean enigma-simulation Dariusz Ostolski Rectification statements know pop culture move doesnt always reflect actuall history source text wikipedia better reflects actual history Engima machine first broken Polish cryptologists Marian Rejewski Jerzy R ycki Henryk Zygalski working Polish military intelligence Rejewski reverse engineered device using theoretical mathematics material supplied French military intelligence Subsequently three mathematicians designed mechanical devices breaking Enigma ciphers including cryptologic bomb 1938 onwards additional complexity repeatedly added Enigma machines making decryption difficult requiring equipment personnel Poles could readily produce 25 July 1939 Warsaw Poles initiated French British military intelligence representatives Enigma-decryption techniques equipment including Zygalski sheets cryptologic bomb promised delegation Polish-reconstructed Enigma demonstration represented vital basis later British continuation effort 3 war British cryptologists decrypted vast number messages enciphered Enigma intelligence gleaned source codenamed Ultra British substantial aid Allied war effort hugoharada brief explanation flaw design used crack code rapidly https www youtube com watch v V4V2bpZlqx8 Olalekan Sogunle Testing ruby tried plaintext code works CAPITAL letters small letters would disrupt encoding adjustments made ideas work Albert Still Engima meant handle upper lower case letters one keyboard upper case letters marked 26 keys see images http goo gl Ab76lJ Grammar would little importance want code course done case sensitivity wrong Olalekan Sogunle Right thanks clarification Enigma machine never anything deal upper lower case letters must gotten piece anywhere article code sufficient purpose creating Enigma machine takes care upper lower case Chad Keira Knightly born currently resides London Maybe accent isn posh enough Latest Subscribe Recent Articles Red Badger 5 term Agency overused Learned Future Internet Fluent Conference Join new voice tech community Staggeringly Smooth Fortnum Mason E-com Release Archive May 2015 April 2015 March 2015 February 2015 January 2015 December 2014 November 2014 October 2014 September 2014 August 2014 July 2014 June 2014 May 2014 April 2014 March 2014 February 2014 January 2014 November 2013 October 2013 August 2013 July 2013 June 2013 May 2013 April 2013 March 2013 February 2013 January 2013 December 2012 November 2012 October 2012 September 2012 July 2012 June 2012 May 2012 March 2012 February 2012 January 2012 December 2011 November 2011 October 2011 June 2011 February 2011 January 2011 December 2010 October 2010 September 2010 August 2010 June 2010 Tag Cloud Agile Badger Academy Badger Time bbc Birdsong component concept labs Conference Continuous Integration css Culture Design design process Haller html5 innovation Internship javascript lean Livescript Meetup Mobile mobile web musings Node js react reactive extensions reactjs recruitment Red Badger responsive design Ruby Ruby-on-rails Testing training twitter usability testing User Experience ux ux design ux developer ux testing wp7 xna xpf Red Badger Consulting Limited12 Mallow StreetLondon EC1Y 8RQContact us hello red-badger com redbadgerteam facebook linkedin flickr Red Badger Rights Reserved"),
('Data Elixir Best of Winter 2015 - AI, data science, data viz (pdf)', 'PDF-1 3 4 0 obj'),
("Meet the Man Behind 'Solarized,' the Most Important Color Scheme in Computer History", "Innovation Skip content Menu Subscribe Skip content News New York Politics Art Culture Art Gallerist Movies Music TV Style Fashion Health Wellness Eight-Day Week Real Estate Innovation Innovators Deals Internet Culture Startups Media Opinion Columns Editorials Search Submit Subscribe Solarized Meet Man Behind Solarized Important Color Scheme Computer History took Ethan Schoonover six months choose 16 prevalent colors computer science Jack Smith IV 02 27 15 9 55am Comment Ethan Schoonover man behind Solarized Photo via Ethan Schoonover rifle many like one mine rifle best friend life must master must master life -The Rifleman Creed Walk room coders ask best tools trade keyboards text editing software etc re bound start war world programmers fanatically divided advocating fiercely favorite window managers text editors one thing many engineers agree called Solarized four years reigned supreme color scheme choice many coders text stare day Solarized designed aesthetic obsessive Ethan Schoonover bespoke color scheme programmers staring black text white background simply option Mr Schoonover hunkered half year hand pick 16 colors knew going hit hands result one meticulously developed well-documented beloved color palates computer science history Color Coded Mr Schoonover true obsessive comes design tried hand Bhuddist monk Thailand nearly 20 years ago give great struggle decor concrete space core problem entire life struggle minimalism aesthetics Mr Schoonover told Observer One jaded monks said probably life project began 2010 Mr Schoonover designer coder marketer photographer gotten back U seven-year stint running photo studio Hong Kong switched new text editor arrived mouth rabbit hole many programmers find unable find color scheme liked Solarized comes two versions light dark optimized kind coder eyes depending ambient light Yes matters Image via Solarized immediately began work Solarized took six months research tweaking d never seen color scheme exhibited design rigor set make something would beautiful soothing would work programming syntax Certain colors presented unique challenges Solarized raspberry red example appears sparingly zest red particularly difficult work optical reasons computers display red human eye sees tougher discern different shades red colors spent probably three weeks looking red Mr Schoonover said would get focused B testing different reds booting text editor tweaking everything Solarized necessary choice per se one color objectively best choice Solarized base colors blue yellow aren somehow better colors Mr Schoonover preferences justification behind particular choices extremely personal pale yellow taps Mr Schoonover narrow synesthesia color associates pleasant sounds shapes pieces music deep blue viewed 96 percent opacity taps one long-held phobias Speaking aesthetic beauty re currently living Golden Age art indie games click full story strong long term fear death drowning correlates imagine green blue deep ocean water filled sediment stirred ocean liner impacts seabed Mr Schoonover wrote first developed palette realize would visible light hardly matters combination two says sort pleasant fearful symmetry reminds childhood partially spent living near forest lake Eventually settled eight hazy monotones eight hazy background colors color scheme built syntax highlighting sort labeling system colors certain elements code light mode dark mode switch depending ambient light room finally released project wild reached top percentiles Github projects week World Solarized Since 2011 color scheme able supplant Solarized crowd favorite Wherever developers go congregate web ask best color scheme might answer usually something like depends preferences probably Solarized astounding feat create something ubiquitously liked community often odds number issues Still Solarized pops everywhere hard find large development house doesn trademark pale yellows blues least one screens recent commercial Facebook look closely monitors see engineers working Solarized text editors commercial shot Facebook HQ features Mark Zuckerberg Text editors painted Solarized clearly visible background multiple shots Image via YouTube Solarized made default settling text editor Sublime Text shows baked certain apps native color scheme become almost special cue members initiated people customized keyboards Solarized paint jobs even created Solarized-inspired nail art Solarized become popular bespoke color scheme time also come publicly define Mr Schoonover works forever known Guy Made Solarized re kind doomed last success Mr Schoonover said m happy issue project totally open public available free download Mr Schoonover receives offers donations time doesn want even feel anyone else stake demand work project make changes update Solarized first intersection nail-art coding ve ever seen Photo via Tes Tube Nails coders well rather extreme thoughts things like color schemes text editors close people hearts Yale Spector senior developer WeWork told Observer People take shit real seriously Holy Wars quest maximize performance feature engineer workspace unworthy examination world monotheism dogma monospaced typefaces battles fonts like Monaco versus Inconsolata tense gets heated Aaron Brocken program director HappyFunCorp coding academy told Observer Developers nature pretty opinionated get text editors people like work re fucking idiot ' color schemes fight text editors BBEdit Vim Sublime Text Emacs zealots Oh doesn stop text editors enormous topic Josh Schneier freelance developer Brooklyn told Observer literal holy wars fought window managers multi-monitor displays Sure everyone participates exceptions rule coders couldn care less either way tricked workflow much focus obsession signal particular coder wonky enough particular craft Sometimes ll see coworkers default black text white Mr Spector said judge sure also pity Like even know syntax highlighting Keycool 84 keyboard hacked special Solarized key-caps Photo via Imgur point re probably asking people care much minute details coders also particular nature tools trade computer mind Text editors live spend many hours day Mr Spector said personal us home get house spend time making comfortable re going long time Mr Brocken puts hot rodding tricking equipment sake ostentatiousness building perfect tool Yak Shaving Developers may overly opinionated also virtue work obsessed efficiency programmers building programs designs right imagination every additional advantage work environment one less barrier mind machine use neighbors computer dissonance Mr Spector said computer zero friction mind screen Mr Spector Mr Brocken example use Vim text editor respective coworkers mostly use Sublime using Vim allows code without switching mice small change Mr Spector describes giving super powers accounts success Solarized ultimately color scheme meant pleasant easy eyes eventually disappear completely Mr Schoonover part added keyboards list things coders told us essential performance build keyboard Mr Schoonover dremeled circuit board one installed new microcontroller custom coding outsourced obsessives Japan Missouri spent several evenings Mr Schoonover said still keyboard also extension mind coding Still ve spoken managers CTOs wish teams would stop obsessing terminals get work Mr Schneier used term yak shaving describe endless futile nitpicking lieu actually productive People get caught things right way Mr Brocken said right way something way productive Mr Schoonover makes apologies kind obsession sees point shaming developers squeezing every inch efficiency workspace best coders like Olympic athletes sprinters minuscule increase performance means difference good developer truly great one may looks ridiculous outside observer eliminating invisible barrier tool re using Mr Schoonover said carpenter making work bench Comment Justin D'Onofrio February 27 2015 3 36 pmAaron awesome Terminal window white gold best combination Trending Opinion China Aggression Godsend United States Culture Re Consideration Better Beatles Opinion Jeff Greenfield Jeb Bush Wealth Money Problems News Wall Street-Friendly Overly-Cautious Chuck Schumer Lead Senate Things NY Art World RSS Feeds Subscribe Notices Send Advertising Privacy Policy Contact Powered WordPress com VIP Galleristny com bigger part Observer com re bringing arts news well culture design style real estate politics Subscribe Gallerist Newsletter Innovation Looking Betabeat Betabeat newly launched Innovation section Observer favorite features columns well exciting new areas tech coverage found Observer com Innovation Don't miss latest best writing technology future business innovation Add Innovation section RSS feed follow Observer Twitter Facebook"),
('The story behind PETSc, the open-source software library that helps break the barriers between science & HPC. Crossposted to /r/HPC.', 'SC Home SC Organization SC Jobs Contact SC DOE Home Feature Filling Standard Model boost computing Archive Kernels Data efficiency blooms ROSE Framework Archive Big Iron Utah team turns computing design clean oxy-coal boiler Archive Universities Modeling self-healing materials repair fissures turbines Archive Synchronized Program takes long deep view Earth evolving surface Archive Genealogy Code library gains renown simulation-tackling tools Archive New Faces Exploring hidden structures slash computational cost Archive Exascale Science Panel lays top 10 list exascale computing hurdles Archive Code library gains renown simulation-tackling tools Posted February 26 2015 Magma modeled Click image enlarge information September 4 2010 enormous slabs rock New Zealand grated releasing pressures built one tectonic plate plowing another resulting earthquake sent tremors throughout nation South Island southern part North Island Forty kilometers east epicenter city Christchurch shook hard enough topple chimneys crumble masonry walls American Geophysical Union meeting four years later computer simulation revealed quake subterranean dynamics complex rupture multiple faults says Brad Aagaard scientist United States Geological Survey USGS Menlo Park California leader simulation team develop seismic hazard maps need understand kinds earthquakes possible cases faults link together look everything three dimensions include dynamic effects computer model created using PyLith code written distributed team included Aagaard PyLith one dozens computer codes vaulted concept application using software Argonne National Laboratory PETSc Portable Extensible Toolkit Scientific Computation open-source library ready-to-use software high-performance computing HPC systems March team developed PETSc receive SIAM ACM Prize Computational Science Engineering Society Industrial Applied Mathematics SIAM Association Computing Machinery ACM SIAM conference Salt Lake City latest honor string includes R D 100 Award R D Magazine Primary funding PETSc come Department Energy Office Science Advanced Scientific Computing Research program library attracted users range disciplines primary long-term goal support development sophisticated simulation applications scientists engineers wide variety fields says Argonne Barry Smith lead PETSc developer PETSc users demonstrated sophisticated scalable simulations written scratch rather customized carefully designed open-source general-purpose libraries rapidly low cost high quality PETSc offers software solve equations mathematically capture change time relate equations one another integration partial differential equations PDEs PETSc enabled simulation variety scientific phenomena earthquakes acoustics water flow software especially designed extreme-scale computing incorporating ways decompose problems pieces multiple processors work simultaneously Extreme-scale means largest machines available science one roughly equivalent millions laptops working concurrently 1 2 Print Next Genealogy brings life evolution present future scientific computing simulation CONTACT Barry Smith Argonne National Laboratory bsmith mcs anl gov Website RELATED LINKS PETSc PETSc summer workshop Argonne National Laboratory Mathematics Computer Science Argonne SIAM ACM prize announcement Computation Institute SIAM March conference website Home Archive Subscribe ASCR Home ASCR SC Jobs Contact SC SC Web Policies DOE Phone Book DOE Employment DOE FOIA DOE Privacy Policy DOE Web Policies DOE Fear Act DOE Small Business DOE Information Quality E-Gov White House USA Gov'),
("The Escalang Programming Language (current Master's project). Soliciting feedback.", "Matthew Mayo Adventures software data systems Blog 404 - Page found Sorry can't find page you're looking try take look going back homepage"),
('/r/math are hosting a discussion about everything regarding the P vs. NP problem. Check it out!', "jump contentmy subredditsannouncementsArtAskRedditaskscienceawwblogbookscreepydataisbeautifulDIYDocumentariesEarthPornexplainlikeimfiveFitnessfoodfunnyFuturologygadgetsgamingGetMotivatedgifshistoryIAmAInternetIsBeautifulJokesLifeProTipslistentothismildlyinterestingmoviesMusicnewsnosleepnottheonionOldSchoolCoolpersonalfinancephilosophyphotoshopbattlespicsscienceShowerthoughtsspacesportstelevisiontifutodayilearnedTwoXChromosomesUpliftingNewsvideosworldnewsWritingPromptsedit subscriptionsfront-all-random gadgets-sports-gaming-pics-worldnews-videos-AskReddit-aww-Music-funny-news-movies-books-history-food-philosophy-television-Jokes-Art-DIY-space-Documentaries-Fitness-askscience-nottheonion-todayilearned-personalfinance-gifs-listentothis-IAmA-TwoXChromosomes-creepy-nosleep-GetMotivated-WritingPrompts-LifeProTips-EarthPorn-explainlikeimfive-Showerthoughts-Futurology-photoshopbattles-mildlyinteresting-dataisbeautiful-tifu-OldSchoolCool-UpliftingNews-InternetIsBeautiful-sciencemore mathcommentsrelatedwant join sign create account seconds Englishlimit search r mathuse following search parameters narrow results subreddit subredditfind submissions subreddit author usernamefind submissions username site example comfind submissions example com url textsearch text urlselftext textsearch text self post contentsself yes self include exclude self postsnsfw yes nsfw include exclude results marked NSFWe g subreddit aww site imgur com dogsee search faq details advanced search author subreddit post submitted 25 Feb 2015370 points 98 upvoted shortlink remember mereset passwordloginSubmit new linkSubmit new text postmathsubscribeunsubscribe138 341 readers195 users nowWelcome r math subreddit discussion mathematical links questions Please read FAQ posting Homework problems practice problems similar questions directed r cheatatmathhomework r learnmath removed Image-only posts on-topic promote discussion please post memes similar content Please polite civil commenting always follow reddiquette Filters Hide Image Posts Show Posts Recurring Threads Resources Working - posted Mondays Everything X - Posted Wednesdays Simple Questions - Posted Fridays r math's Book Club - Posted Fridays Compilation Free Online Math Resources Using LaTeX view LaTeX reddit install one following MathJax Greasemonkey userscript TeXtheWorld Chrome extension TeXtheWorld Greasemonkey userscript e pi 1 0 Post equation like e pi 1 0 may need add four spaces put backticks around math fragments Using Superscripts Subscripts x _sub_ makes xsub x sup x sup make xsup x _sub_ sup makes xsubsup x sup _sub_ makes xsupsub Subreddits Math r learnmath r mathbooks r cheatatmathhomework r matheducation r casualmath r puremathematics r mathpics r mathriddles Tools r mathematica r matlab r sagemath Related fields r actuary r algorithms r compsci r interdisciplinary r statistics community 7 yearsmessage moderatorsMODERATORScanyonmonkeyyesmanappleGeometry TopologyinherentlyawesomeAlgebraic TopologyamdpoxGeometric AnalysisdoctorbongGeometric Measure TheoryAutoModeratorabout moderation team discussions r math X42 points 14 comments Changing power n Z Z n c complex pane104 points 49 comments female mathematician changed course physics couldn get job2 points Every world grain sand John Nash astonishing geometry 3 comments sense time proportional living 100 years feels similar 5128 points 63 comments Hey u biff2204 results 2 3 Average experiment 8 points 9 comments Old contest problem complex analysis6 points 11 comments fields don't use completeness axiom 1 infinite power equal 1 2 comments figure annuity payments 4 comments mathematicians define versine function 369370371Everything P vs NP self math submitted 3 months ago inherentlyawesomeAlgebraic Topology M Today's topic P vs NP recurring thread place ask questions discuss famous well-known surprising results clever elegant proofs interesting open problems related topic week Experts topic especially encouraged contribute participate threads Next week's topic Method Moments Next-next week's topic Algebraic Varieties threads posted every Wednesday around 12pm EDT previous week's Everything X threads check wiki link 305 commentssharecanceltop 200 commentsshow 305sorted besttopnewhotcontroversialoldrandomq Lopsidation 158 points159 points160 points 3 months ago 28 children far away proving P NP far far NEXP exponentially larger version NP medium-size NP problem - picture hard Sudoku - might take 2100 steps solve solve would take 100 steps check solution contrast medium-size NEXP problem would take 2100 steps check solution end scale sits BPP Think BPP problems efficiently solve real world BPP contains problems guess answer polynomial time we're allowed 0 0000000001 chance wrong Common consensus says randomness doesn't actually help believe P BPP Here's punch line can't even prove BPP NEXP permalinksavereportgive goldreply kops 14 points15 points16 points 3 months ago 3 children Huh that's interesting true can't separate BPP NTIME f n computable f permalinksaveparentreportgive goldreply rosulekCryptography 8 points9 points10 points 3 months ago 2 children separate BPP doubly-exponential nondeterministic time BPP NEXP straight-forward simulation NEXP equal doubly-exponential nondeterministic time NTIME hierarchy theorem permalinksaveparentreportgive goldreply kops 5 points6 points7 points 3 months ago 1 child Ah good point seems simulation done deterministic EXPTIME even separate BPP deterministic doubly-exponential time right permalinksaveparentreportgive goldreply SlipperyFrob 2 points3 points4 points 3 months ago 0 children Yes permalinksaveparentreportgive goldreply jenbanim 9 points10 points11 points 3 months ago 7 children Interesting right thinking prove certain problems members certain classes can't prove much relationship classes Additionally even know P NP even solvable problem Lastly interesting results surrounding problems able prove permalinksaveparentreportgive goldreply TehGogglesDoNothing 9 points10 points11 points 3 months ago 6 children Interesting right thinking prove certain problems members certain classes can't prove much relationship classes Yes Additionally even know P NP even solvable problem Lastly interesting results surrounding problems able prove don't know permalinksaveparentreportgive goldreplyload comments 6 replies the_omega99Computational Mathematics 5 points6 points7 points 3 months ago 7 children Interesting example NEXP problem permalinksaveparentreportgive goldreply j2kun 7 points8 points9 points 3 months ago 0 children SUCCINCT-SAT classic NEXP-complete problem given poly-size circuit truth table encode SAT formula satisfiable main object study Ryan Williams's proof NEXP nonuniform ACC http arxiv org abs 1111 1261 take language make succinct version generally increases complexity problem lot E g language strings contain least one 1 SUCCINCT-OR circuit-satisfiability problem NP-complete permalinksaveparentreportgive goldreply SlipperyFrob 5 points6 points7 points 3 months ago 2 children Every problem EXP contains NP PSPACE etc NEXP example hard problem NEXP polynomial time reductions succinct NP-hard problem polylog time reductions Note SAT Vertex Cover etc hard reductions Succinct means input isn't using SAT example boolean formula instead it's actually logical circuit whose truth table represents boolean formula must decide whether encoded formula satisfiable hard problems NEXP though don't know interesting ones top head permalinksaveparentreportgive goldreply FST 4 points5 points6 points 3 months ago 1 child Well technically halting problem hard NEXP permalinksaveparentreportgive goldreply SlipperyFrob 2 points3 points4 points 3 months ago 0 children Well say interesting problems yes halting problem also hard NEXP permalinksaveparentreportgive goldreply InfiniteHarmonicsNumber Theory 4 points5 points6 points 3 months ago 1 child think chess might count permalinksaveparentreportgive goldreply SlipperyFrob 7 points8 points9 points 3 months ago 0 children Chess NEXP also fact hard EXP thus doesn't really capture full power NEXP computation unless NEXP EXP permalinksaveparentreportgive goldreply jachymbApplied Math 0 points1 point2 points 3 months ago 0 children Inference OWL-DL http www cs man ac uk ezolin dl permalinksaveparentreportgive goldreply PM_Me_Yourr_Secrets 3 points4 points5 points 3 months ago 0 children Wow That's pretty interesting date 'latest' field permalinksaveparentreportgive goldreply scattergather 0 points1 point2 points 3 months ago 1 child know P subseteq BPP time hierarchy theorem P subset EXP however permalinksaveparentreportgive goldreply hglman 0 points1 point2 points 3 months ago 0 children problem complexity equate complexity proof relationship permalinksaveparentreportgive goldreply ursvp 0 points1 point2 points 3 months ago 3 children retrograde analysis chess NEXP class Given chessboard configuration find least one sequence moves back start permalinksaveparentreportgive goldreply JoshuaZ1 0 points1 point2 points 3 months ago 2 children Yes also NP long restrict number moves allowed part problem since prove giving sequence moves permalinksaveparentreportgive goldreply FST 0 points1 point2 points 2 months ago 1 child I'm sure true strange dead reckoning rules chess might make checking given sequence feasible pretty tricky AFAICT hasn't even proven PH determine certain position forced stalemate might hard move sequence checkmate could still potentially take exponential number ply particular hard case starting position difficult-to-identify forced draw proof preceding position draw might take exponential time understand part takes exponentially long sequence moves reach checkmate solid reason believe possible wouldn't bet either info dead reckoning http anselan com tutorial html permalinksaveparentreportgive goldreply JoshuaZ1 0 points1 point2 points 2 months ago 0 children Yes ok sort dead reckoning would case don't think that's people thinking think rules generalized chess I've seen generalized retrograde analysis aren't always even kings board one concerned getting Position Position B even position necessary valid chess position start permalinksaveparentreportgive goldreply irobeth 183 points184 points185 points 3 months ago 18 children good video link people explains topic pretty well permalinksavereportgive goldreply NitroXSC 41 points42 points43 points 3 months ago 1 child P vs NP PN problem p problem P NP Haha never thought way Thank video informative permalinksaveparentreportgive goldreply GardinerExpressway 3 points4 points5 points 2 months ago 0 children prof used joke reason little progress P NP mathematicians don't want lose jobs turns finding proofs 'easy' verifying proofs AKA P NP permalinksaveparentreportgive goldreply MWozz 15 points16 points17 points 3 months ago 12 children really well made video recommend channels go topics similar manner permalinksaveparentreportgive goldreply wwwhizz 27 points28 points29 points 3 months ago 9 children CGP Grey comes mind Also Numberphile Computerphile MinutePhysics Veritasium CrashCourse edit ViHart SmarterEveryDay Hello Internet permalinksaveparentreportgive goldreply checkmater75 7 points8 points9 points 3 months ago 5 children ViHart stopped around 7 months ago though real shame permalinksaveparentreportgive goldreply Smartless 6 points7 points8 points 3 months ago 2 children mean hasn't completely stopped making videos permalinksaveparentreportgive goldreply vingnote 2 points3 points4 points 3 months ago 0 children enjoy alternative videos nonetheless wish still uploaded math videos permalinksaveparentreportgive goldreply checkmater75 0 points1 point2 points 3 months ago 0 children Yeah even videos spaced long periods time alternate channel hasn't uploaded around 2 months permalinksaveparentreportgive goldreply Kazaril 2 points3 points4 points 3 months ago 1 child Doesn't post videos Khan academy permalinksaveparentreportgive goldreply checkmater75 6 points7 points8 points 3 months ago 0 children understand videos Khan Academy checked also Youtube hasn't updated 7 months permalinksaveparentreportgive goldreply AxeAQuestion 1 point2 points3 points 3 months ago 1 child Hello Internet wandering podcast two dudes chatting random topics unrelated math science rest look great permalinksaveparentreportgive goldreply ResidentNileistAlgebra 0 points1 point2 points 2 months ago 0 children probably included two dudes CGP Grey Brady Haran produce videos CGP Grey Numberphile YouTube channels respectively permalinksaveparentreportgive goldreply irobeth 6 points7 points8 points 3 months ago 1 child Outside numberphile stuff I'm really sure can't remember first found video permalinksaveparentreportgive goldreply ben_jl 6 points7 points8 points 3 months ago 0 children like Numberphile check channel James Grime regular Numberphile videos similar style Brady's tend go bit depth permalinksaveparentreportgive goldreply Hasnep 6 points7 points8 points 3 months ago 0 children Thank much linking video strangely emotional permalinksaveparentreportgive goldreply Smartless 1 point2 points3 points 3 months ago 0 children Agree everyone else saying fantastic permalinksaveparentreportgive goldreply Madsy9 0 points1 point2 points 3 months ago 0 children Best layman introduction algorithmic complexity seen Thanks sharing permalinksaveparentreportgive goldreply inherentlyawesomeAlgebraic Topology 54 points55 points56 points 3 months ago 37 children P vs NP famous open problem computational complexity theory one seven Millenium Prize Problems Informally stated following question every problem whose solution quickly verified computer quickly solved computer P thought class problems solved quickly computer class problems algorithm solve problem polynomial time E running time program upper bound polynomial function size input example P Calculating GCD two integers Problems Linear Programming Given initial configuration Conway's Game Life particular cell time unary cell alive steps Sorting list natural numbers increasing order NP thought class problems whose solution verified polynomial time example NP SAT NP-Complete see knapsack problem NP-Complete two graphs isomorphic thought NP-Complete graph isomorphic subgraph different graph NP-Complete Obviously overlap P contained NP wish know whether truly equal class problems known NP-Complete NP least hard hardest problems NP knapsack problem words one polynomial time algorithm solve single problem NP-Complete one polynomial time algorithm solve every problem NP-Complete interesting side note Richard Karp first show lots natural problems NP-Complete exhibiting algorithms show polynomial time algorithm solving SAT would lead polynomial time algorithm solving 21 problems always feel free jump comments corrections permalinksavereportgive goldreply skaldskaparmal 27 points28 points29 points 3 months ago 7 children P thought class problems solved quickly computer precise P thought class decision problems solved quickly computer NP correspondingly set decision problems verified quickly decision problem one answers yes question input example FACTORING NP Given number n factors number decision problem problem we're actually looking Given number n number k n factor smaller k Calculating GCD two integers Sorting list natural numbers increasing order Formally speaking P rather FP equivalent class P problems ask computer perform operation rather answer yes permalinksaveparentreportgive goldreply rpgcubed 8 points9 points10 points 3 months ago 0 children you're absolutely correct it's important keep mind easy restate function problems decision problem example gave apt connection decision problem form function problem form quite difficult grasp without proof general functional equivalence two Note I'm talking mathematical proofs rigorous papers giving introduction problem feel simplification beneficial free risk permalinksaveparentreportgive goldreply CognitiveLens 1 point2 points3 points 3 months ago 2 children formal understanding problems one thing making difficult grasp use word quickly define categorize P NP more-complete-but-still-accessible definition quickly think polynomial time vs exponential time distinction - crux permalinksaveparentreportgive goldreply Nav_Panel 2 points3 points4 points 3 months ago 0 children get better grasp quickly involves understanding Turing machine model computation problem P solved polynomial number steps step move along state machine involve shifting head position reading writing tape deterministic Turing machine Computers viewed deterministic Turing machines thus computers quickly solve problems P problem NP solved polynomial number steps nondeterministic Turing machine equivalently solution verified polynomial number steps deterministic Turing machine problems take exponential time NP there's class NEXPTIME described post contains problems solvable exponential time NP permalinksaveparentreportgive goldreply rpgcubed 1 point2 points3 points 3 months ago 0 children put simply Cobham's thesis implies polynomial time quickly permalinksaveparentreportgive goldreplyload comments 3 replies JadeSnail 10 points11 points12 points 3 months ago 7 children one polynomial time algorithm solve every problem NP-Complete Every problem NP even interesting side note Richard Karp first show lots natural problems NP-Complete exhibiting algorithms show polynomial time algorithm solving SAT would lead polynomial time algorithm solving 21 problems Isn't way around you'd show polynomial time algorithm solving 21 problems would lead polynomial time algorithm solving SAT permalinksaveparentreportgive goldreply sixequalszero 5 points6 points7 points 3 months ago 2 children ways SAT NP-complete permalinksaveparentreportgive goldreply _--__Discrete Math 8 points9 points10 points 3 months ago 1 child Yes Cook's theorem established NP-hardness SAT - e problem NP solved polynomial time SAT Karp's problems trivially NP permalinksaveparentreportgive goldreply sixequalszero 2 points3 points4 points 3 months ago 0 children Ah jumped right past context permalinksaveparentreportgive goldreply Fsmv 1 point2 points3 points 3 months ago 3 children poly-time algorithm solving problem NP-Hard gives algorithm solving every problem NP-Hard NP poly-time natural consequence definition Edit Wait second said comment I'm sure made one permalinksaveparentreportgive goldreply _--__Discrete Math 0 points1 point2 points 3 months ago 2 children careful NP-hard NP-complete different concepts NP-complete subset NP-hard known NP-hard problems polynomial time algorithm permalinksaveparentreportgive goldreply Fsmv 0 points1 point2 points 3 months ago 1 child known NP-hard problems polynomial time algorithm solves every problem thing NP-Complete suppose halting problem NP-Hard easy mix classes almost always prove problem NP-Complete NP-Hard think poly-time algorithm NP-Hard problem gives poly-time algorithm every problem NP many NP-Hard problems also permalinksaveparentreportgive goldreply _--__Discrete Math 1 point2 points3 points 3 months ago 0 children Yes introductions complexity stop NP fail mention myriad complexity classes NP RE halting problem lies grand scheme things NP covers small number problems problem hard EXPTIME poly-time algorithm permalinksaveparentreportgive goldreply mathman1Low-Dimensional Topology 5 points6 points7 points 3 months ago 2 children wouldn't quite say computing GCD sorting list problems P even though polynomial time algorithms aren't decision problems answer either yes hand could easily make decision problems example Given integers m n d d GCD m n Given list a1 two integers k ai kth smallest integer list permalinksaveparentreportgive goldreply JoshuaZ1 5 points6 points7 points 3 months ago 0 children you've made decision problems pretty standard Even people computational complexity sometimes loose things People talk factoring integers NP ask whether P really mean factoring equivalent problem given triplet n x y n prime factor x y obvious function problem Unfortunately contexts distinction really end mattering permalinksaveparentreportgive goldreply hei_mailma 6 points7 points8 points 3 months ago 3 children graph isomorphic subgraph different graph NP-Complete thought wasn't known whether graph-isomorphism NP-Complete permalinksaveparentreportgive goldreply JoshuaZ1 10 points11 points12 points 3 months ago 2 children Graph isomorphism slightly different problem That's given two graphs G H isomorphic That's known NP-complete believed polynomial hierarchy would collapse we're pretty sure doesn't happen problem slightly different since one allowed choose subgraph H isomorphic G NP-complete permalinksaveparentreportgive goldreply hei_mailma 4 points5 points6 points 3 months ago 1 child Oh see subgraph-isomorphism name stronger graph-isomorphism neccessarily e polynomial hierarchy doesn't collapse strong permalinksaveparentreportgive goldreply repsilat 1 point2 points3 points 3 months ago 0 children oracle subgraph isomorphism pretty trivially decide Hamiltonian path problems think people remarked fact change graph isomorphism pretty minor ways it'll naturally turn NP-complete proving unaltered GI either P NP complete mythical NP P hard NP proving trickier permalinksaveparentreportgive goldreply kwprules 4 points5 points6 points 3 months ago 5 children Sorry idiot speaking known algorithm solve knapsack problem solution verified polynomial time order verify optimal solution wouldn't check every solution I'm sure I'm missing something mainly I'm educated things permalinksaveparentreportgive goldreply skaldskaparmal 6 points7 points8 points 3 months ago 0 children Traditionally knapsack problem given list values weights max-weight w goal value v pick objects whose total weight less w whose values greater v problem NP answer yes checked easily checking conditions seeing value larger goal v problem instead Co-NP Co-NP set problems whose instances easily checked you're asking whether particular solution best yes instances hard check seems like you'd check every case instances easy -- it's best there's better solution check it's better permalinksaveparentreportgive goldreply some_q 1 point2 points3 points 3 months ago 0 children distinction decision version knapsack problem easy check Given weights values set objects value greater integer k total weight less integer w maximum value form knapsack problem travelling salesman etc easy check permalinksaveparentreportgive goldreplyload comments 3 replies nicponim 1 point2 points3 points 3 months ago 4 children Given initial configuration Conway's Game Life particular cell time unary cell alive steps C'mon example lame unary condition saying machine fast operations huge number provided input unary input one billion press one button billion times permalinksaveparentreportgive goldreply jfb1337 0 points1 point2 points 3 months ago 2 children reason unary permalinksaveparentreportgive goldreply smog_alado 2 points3 points4 points 3 months ago 0 children takes exponentially space write number unary larger base algorithm takes polynomial time relation input size written unary would taken exponential time input encoded binary instead permalinksaveparentreportgive goldreply nicponim 1 point2 points3 points 3 months ago 0 children Yeah polynomial means timelimit program polynomial number bytes used represent input Unaryness means simulate step conway's game life end check state cell would input binary simulation would exponential time example would use 64 bits tell computer need state 264 steps simulation would take 264 units rime AFIK need simulate game life answer questions livehood cells permalinksaveparentreportgive goldreply Log2 0 points1 point2 points 3 months ago 0 children Yeah read immediately thought pseudo-polynomial since input you'd likely need compute state cell time step won't time complexity depending log permalinksaveparentreportgive goldreply nmuna 0 points1 point2 points 3 months ago 2 children probably missing something sorting list made natural numbers polynomial time Wouldn't O NlgN implication every natural number shows exactly permalinksaveparentreportgive goldreply lolonely 0 points1 point2 points 2 months ago 1 child really meant polynomial time 'polynomial time better' O N lg N polynomial time computing lingo permalinksaveparentreportgive goldreply nmuna 1 point2 points3 points 2 months ago 0 children Gotcha knew brain today reason forgot n2 nlgn asymptotically Thanks reply permalinksaveparentreportgive goldreply kops 29 points30 points31 points 3 months ago 1 child One interesting thing find gets brought P vs NP discussions less I'd expect fact much weaker seemingly 'easier' problem P vs PSPACE equally little idea solve Everyone excited P vs NP probably due Millennium prize proving P PSPACE would almost big breakthrough yet we're along solving P vs NP related 'theorem' think interesting think least one following must true yet idea prove P NP NP PSPACE PSPACE EXPTIME proof immediately follows fact P EXPTIME time hierarchy theorem permalinksavereportgive goldreply DPLLme 5 points6 points7 points 3 months ago 0 children recent progress another front algebraic circuit complexity It's possible we'll proof VP VNP within years algebraic analogues P NP permalinksaveparentreportgive goldreply _--__Discrete Math 7 points8 points9 points 3 months ago 0 children interesting approach P vs NP via descriptive complexity - equates complexity classes logical languages example Fagin's theorem states class NP equivalent existential second order logic nice many techniques showing things expressible various logical languages e g connectivity first order definable gives alternative approach separating complexity classes Unfortunately don't yet know suitable logic P unordered structures - finding could first step reasonable approach showing P NP permalinksavereportgive goldreply kblaney 6 points7 points8 points 3 months ago 2 children suggested many threads P NP NP-Complete simply part large number different classifications complexity Scott Aaronson mentioned several places fitting link Complexity Zoo permalinksavereportgive goldreply ConstipatedNinja 7 points8 points9 points 3 months ago 1 child remember talking coworkers various complexity classes also made Personally enjoyed NP-tricky problems close enough polynomial time reasonable dataset clever NP-go-fuck-yourself self-explanatory permalinksaveparentreportgive goldreply jobriath85 1 point2 points3 points 3 months ago 0 children NP-jobsworth NP-hard problems polynomial average time complexity permalinksaveparentreportgive goldreply JoshuaZ1 8 points9 points10 points 3 months ago 30 children lot evidence P NP One related problem would imply P NP exponential time hypothesis case P NP compelling structural reasons believe true similar reasons believe ETH permalinksavereportgive goldreply j2kun 2 points3 points4 points 3 months ago 0 children compelling ones ETH true get lot nice tight lower bounds algorithms P 3-sum problem would tidy either way resolve doesn't huge consequences permalinksaveparentreportgive goldreplyload comments 29 replies InfinityFlat 10 points11 points12 points 3 months ago 25 children would implications P v NP found independent ZFC like continuum hypothesis permalinksavereportgive goldreply smog_alado 15 points16 points17 points 3 months ago 4 children Scott Aaronson nice paper topic http scottaaronson com papers pnp pdf doesn't go deep consequences P vs NP independent gives interesting arguents likely case skip conclusion section want permalinksaveparentreportgive goldreply SlipperyFrob 2 points3 points4 points 3 months ago 3 children argument essentially universe mathematical model model theory sense thus either satisfies P NP satisfies P NP it's unlikely independent ZFC think logician would rightfully offended statement think idea still right core particular model computation mind however poorly specified may definite answer whether satisfies P NP Put another way P versus NP independent ZFC it's haven't specified model computation well enough it's unknowable permalinksaveparentreportgive goldreply JoshuaZ1 1 point2 points3 points 3 months ago 2 children Well also points techniques prove independence cannot used prove sentence type independent permalinksaveparentreportgive goldreply SlipperyFrob 1 point2 points3 points 3 months ago 1 child didn't read carefully thus must missed point strikes silly though Current techniques don't work therefore it's probably true applies well P NP P NP permalinksaveparentreportgive goldreply JoshuaZ1 0 points1 point2 points 3 months ago 0 children don't thin intended argument whether undecidable explanatory note makes piece content summary implies also makes minor points think worth reading directly relevant permalinksaveparentreportgive goldreply spacelibby 3 points4 points5 points 3 months ago 19 children Well main implication would P NP effectively unequal can't prove they're equal can't find algorithm SAT would constitute proof we're left way solve problems polynomial time permalinksaveparentreportgive goldreply skaldskaparmal 11 points12 points13 points 3 months ago 13 children One possible thing might happen find algorithm SAT can't prove it's indeed algorithm SAT case algorithm might empirically work quickly say breaking cryptography cases ever tried even though wouldn't know permalinksaveparentreportgive goldreply baddox 1 point2 points3 points 3 months ago 12 children couldn't polynomial algorithms NP-Complete problems exponents high e g O nGraham's number it's essentially impossible us ever discover permalinksaveparentreportgive goldreply skaldskaparmal 4 points5 points6 points 3 months ago 7 children case wouldn't claim P v NP independent ZFC also don't think O nGraham's number algorithms impossible discover Graham's number used proof permalinksaveparentreportgive goldreply baddox 0 points1 point2 points 3 months ago 4 children case wouldn't claim P v NP independent ZFC Even can't ever find one algorithm prove within ZFC exist also don't think O nGraham's number algorithms impossible discover fact arbitrary problems require algorithms solve trivial construct problems would clearly P whereas talking finding NP-Hard problem solution O nGraham's number permalinksaveparentreportgive goldreply skaldskaparmal 0 points1 point2 points 3 months ago 3 children Even can't ever find one algorithm prove within ZFC exist prove independence would need prove can't prove one exists can't prove one doesn't exist problems would clearly P whereas talking finding NP-Hard problem solution O nGraham's number I'm sure would impossible discover algorithm least would discover algorithm solves NP-Hard problem polynomial time first place difficulty working large numbers usually practice theoretically permalinksaveparentreportgive goldreply baddox 2 points3 points4 points 3 months ago 2 children prove independence would need prove can't prove one exists can't prove one doesn't exist ZFC right I'm confused independence P NP ZFC understand doesn't imply can't possibly find polynomial time algorithm NP-complete problem algorithms exist surely could literally find one prove algorithm ran polynomial time would use another system like ZFC foo always case people would believe proof P NP accept ZFC foo axiom permalinksaveparentreportgive goldreply skaldskaparmal 1 point2 points3 points 3 months ago 0 children Yes correct permalinksaveparentreportgive goldreplyload comments 1 reply load comments 2 replies protestor 1 point2 points3 points 3 months ago 3 children Even O 1 algorithm impractical constants large complexity theory can't state algorithm practical perhaps state isn't practical large input example Fibonacci heap It's best one best heap know best apparently Brodal queue complexity-wise doesn't best performance practice constants also log grows slow may practical input care permalinksaveparentreportgive goldreply baddox 1 point2 points3 points 3 months ago 1 child I'm sure refuting perhaps Cobham's thesis well aware never made claims tractability permalinksaveparentreportgive goldreply protestor 0 points1 point2 points 3 months ago 0 children Oh mean impossible discover read impossible use permalinksaveparentreportgive goldreply smog_alado 0 points1 point2 points 3 months ago 0 children also nowadays practical algorithm implementations need pay lot attention memory locality time loss cache miss happens large constant factors go hundreds like case accessing memory cache vs cache thats larger logarithmic asymptotic factor reasonable input sizes permalinksaveparentreportgive goldreply almightySaplingLogic 1 point2 points3 points 3 months ago 1 child Well main implication would P NP effectively unequal can't prove they're equal can't find algorithm SAT Couldn't said even could prove P NP Couldn't case algorithm exists never tools construct permalinksaveparentreportgive goldreply spacelibby 0 points1 point2 points 3 months ago 0 children quite P NP might able find algorithm it's independent can't find algorithm permalinksaveparentreportgive goldreply SlipperyFrob 0 points1 point2 points 3 months ago 2 children necessarily Independence ZFC means model ZFC P NP one P NP It's possible natural model ZFC admits polynomial time algorithm could even conceivably find model prove within model algorithm decides SAT runs polynomial time It's proof fact could done straight ZFC concrete example Peano axioms many models natural numbers one model existence nonisomorphic models statements natural numbers true independent PA example natural one look Paris-Harrington theorem permalinksaveparentreportgive goldreply spacelibby 0 points1 point2 points 3 months ago 1 child problem would become finding models P NP holds permalinksaveparentreportgive goldreply SlipperyFrob 1 point2 points3 points 3 months ago 0 children could think interesting question whether practical physically realizable etc models Alternatively could see whether axioms could taken equivalent P NP still simple state intuitively true false permalinksaveparentreportgive goldreply wutf 10 points11 points12 points 3 months ago 21 children Many people claim P NP would completely change world say P NP implies solving problem easy verifying solution However based huge oversimplification doesn't necessarily case Let's assume second indeed P NP first proof found could similar construction Graham's Number would show every problem NP NP-complete problem like SAT solved O nW time W unimaginably big number would imply yes unimaginably huge NP-complete problems polynomial time algorithm faster brute force However don't know algorithm sizes usually require brute force actually lot faster course Graham's number upper bound Many believe actual solution problem lies 20 might case later find much tighter upper bound degree polynomial However unless it's something order 100s proving P NP wouldn't big deal people make words someone orders magnitude competent 3rd year CompSci undergrad question 17 http www informit com articles article aspx p 2213858 EDIT Time hierarchy theorem u tavianator pointed rules upper bound NP problems permalinksavereportgive goldreply Lopsidation 8 points9 points10 points 3 months ago 2 children Almost every polynomial time algorithm know reasonable exponent Right polynomial time vs exponential time captures well feasible real world like talk tw powerpoint puts people say P NP n10000 algorithm SAT nlogloglog n algorithm Response aliens killed JFK keep discovering algorithm permalinksaveparentreportgive goldreply kazagistar 2 points3 points4 points 3 months ago 0 children don't know number theory well see many logs know blame permalinksaveparentreportgive goldreply DuoNaN 0 points1 point2 points 3 months ago 0 children understand half PowerPoint lecture course find online Thanks permalinksaveparentreportgive goldreply green_meklar 5 points6 points7 points 3 months ago 11 children first proof found could similar construction Graham's Number would show every problem NP solved O nW time W unimaginably big number don't know reason that's strictly impossible would highly counterintuitive consequence every problem P also solved within O nW time- say finite maximum possible polynomial time function algorithm take without actually taking polynomial time seems likely upper bound constant polynomial-time algorithm take relationship time taken solve NP-complete problem standard Turing machine vs nondeterministic Turing machine bounded particular rule permalinksaveparentreportgive goldreply tavianatorTheory Computing 4 points5 points6 points 3 months ago 9 children fact time hierarchy theorem proves W cannot exist permalinksaveparentreportgive goldreply wutf 0 points1 point2 points 3 months ago 7 children Oh you're right upper bound like cannot exist lower bound unimaginably large number P NP would even less useful permalinksaveparentreportgive goldreply tavianatorTheory Computing 1 point2 points3 points 2 months ago 6 children lower bound W either problems P solvable O 1 time P NP P NP-Complete NP-Complete problem would O 1 algorithm course could still large lower bounds specific problems like factoring SAT permalinksaveparentreportgive goldreplyload comments 6 replies green_meklar 0 points1 point2 points 2 months ago 0 children Okay kinda suspected theorem implication might already known didn't offhand know Thanks permalinksaveparentreportgive goldreply irishsultan 0 points1 point2 points 3 months ago 0 children construction would actually certain NP-complete problem let's call UNI solved O nW means every problem NP converted polynomial time UNI problem solved O nW upper bound polynom that's needed conversion UNI far know permalinksaveparentreportgive goldreply 00kyle00 2 points3 points4 points 3 months ago 1 child don't think anybody seriously pondering problem hopes constructive proof would give new faster algorithms anything NP permalinksaveparentreportgive goldreplyload comments 1 reply aristotle2600 0 points1 point2 points 3 months ago 0 children question 18 reason copious significant figures answer beginning fucking us permalinksaveparentreportgive goldreply gmiwenht 0 points1 point2 points 3 months ago 0 children Scott Aaronson MIT Would recommend scientists abandon use email done lol love Scott Aaronson one smartest entertaining professors ever Also every time new quacky proof P NP comes always first one rip shreds blog full gems permalinksaveparentreportgive goldreplyload comments 2 replies JoshuaZ1 2 points3 points4 points 3 months ago 0 children Question correct analog polynomial hierarchy quantum mechanical context seems like people thought lot believe P NP BQP NP analog exist obvious choice take QMA iterate look hierarchy say J_0 BQP J_1 BQPQMA J_2 BQPQMAQMA correct analog polynomial hierarchy permalinksavereportgive goldreply JoshuaZ1 5 points6 points7 points 3 months ago 0 children Right P NP seen big problem bunch closely related problems still open P BPP obviously one lower end seems like P ZPP slightly smaller ZPP feels much closer P closest thing possibly slightly larger P reasonably natural cannot yet show equal P obvious tactic reduce number random bits allows ZPP algorithm say log n k fixed k say anything direction seems like largest thing can't obviously separate P PSPACE anything could slightly larger PSPACE fairly natural still can't provably separate P permalinksavereportgive goldreply hobbycollectorTheory Computing 3 points4 points5 points 3 months ago 1 child interesting field sprung NP class approximation algorithms Often check particular answer within given metric optimum example less 2x optimal However problems proven long P NP comes lot field can't better 2x optimal instance constant etc fundamental theorem field PCP probabilistically checkable proofs theorem x hear times symbol two times optimal answer permalinksavereportgive goldreplyload comments 1 reply TheCatelier 2 points3 points4 points 3 months ago 3 children famous problems NP satisfy conditions 1 proof NP hard 2 proven P permalinksavereportgive goldreply skaldskaparmal 8 points9 points10 points 3 months ago 0 children Yes http en wikipedia org wiki NP-intermediate permalinksaveparentreportgive goldreply SlipperyFrob 4 points5 points6 points 3 months ago 0 children Yes graph isomorphism factoring lattice problems used lattice-based crypto problem given truth table natural number k deciding there's boolean circuit size k permalinksaveparentreportgive goldreply helot 1 point2 points3 points 3 months ago 0 children Several complexity classes see TFNP interesting one may integer factorization permalinksaveparentreportgive goldreply QEDforNow 3 points4 points5 points 3 months ago 2 children anyone proof a-approximation algorithm TSP constant implies P NP believe general idea implicit solutions metric TSP permalinksavereportgive goldreply FST 2 points3 points4 points 3 months ago 0 children Here's you'd solve Hamiltonian Cycle problem using a-approximation TSP Take graph G instance Hamiltonian Cycle problem Let n number vertices G Construct weighted complete graph G' copying G G' b putting weight 1 edges copied G' c add rest edges make G' complete weight n 1 Find a-approximate TSP solution G' G contained Hamiltonian cycle G' contains TSP tour length exactly n namely follow exactly copies edges Hamiltonian cycle Therefore approximation algorithm find tour length n G contain Hamiltonian cycle TSP solution G' must take one edges added copying step edge alone costs least n 1 n tour find must strictly longer n Therefore test G Hamiltonian Cycle converting TSP checking a-approximation finds answer cost n Hamiltonian cycle doesn't don't Note value doesn't need constant could even exponential n care permalinksaveparentreportgive goldreply iorgfeflkd 2 points3 points4 points 3 months ago 6 children final consensus Vinay Deolalikar's proof permalinksavereportgive goldreply DPLLme 5 points6 points7 points 3 months ago 1 child don't think anything changed since post one year later https rjlipton wordpress com 2011 08 11 deolalikars-claim-one-year-later permalinksaveparentreportgive goldreply iorgfeflkd 1 point2 points3 points 3 months ago 0 children emailed bounced back permalinksaveparentreportgive goldreplyload comments 4 replies Lopsidation 3 points4 points5 points 3 months ago 0 children Scott Aaronson complexity theory hero list reasons believe P NP I'm going plug whole blog - Scott Aaronson funny guy He's one bet 200 000 money nothing Deolikar's P NP proof wrong people would stop emailing permalinksavereportgive goldreply sifnt 1 point2 points3 points 3 months ago 6 children Total layman would someone mind perhaps speculating ways N NP could proven E g possible lesser known toolsets ways tackling problem might better chance others proving disproving N NP permalinksavereportgive goldreply kops 11 points12 points13 points 3 months ago 0 children I'm expert layman know there's ton interesting results proving can't prove P NP various ways generally encompass known proof techniques result don't think anyone really knows would proven permalinksaveparentreportgive goldreply ikeed 4 points5 points6 points 3 months ago 0 children Firstly it's P vs NP N vs NP P set problems solution known run polynomial time m size input solution takes c mt time c constants think problems ones guess solution learn something improve guess next time Like guess number game NP set problems guess solution solution checked polynomial time NP stands Non-deterministic Polynomial frustrating problems invalidated one guess don't learn anything could help us make better guess next time Consequently number guesses required typically quite large respect input size non-deterministic algorithms take exponential time c tm c constants m size input subclass NP problems called NP-complete NP-c special problem set reduced problem set find polynomial-time solution one NP-c problem solve polynomial time effectively show P NP Ways prove P NP would include contriving special problem shown EVERY possible solution problem MUST require non-determinism hence cannot run polynomial time seems like would impossible prove perhaps could shown assume P NP ridiculous logical consequence follows necessarily hence P NP It's tricky permalinksaveparentreportgive goldreply hobbycollectorTheory Computing 7 points8 points9 points 3 months ago 1 child Pseudocode n 0 true n possibleproofs list_of_all_possible_proofs_of_length n foreach proof possibleproofs proof proves p np stop run halting problem analyzer see halts permalinksaveparentreportgive goldreplyload comments 1 reply deleted 3 points4 points5 points 3 months ago 0 children might interested discussion https gowers wordpress com 2013 10 03 how-not-to-prove-that-p-is-not-equal-to-np permalinksaveparentreportreply ChezMere 0 points1 point2 points 3 months ago 0 children Also layman Anyone care guess question could obvious yet hard prove permalinksaveparentreportgive goldreply matheod 1 point2 points3 points 3 months ago 5 children P included NP problem like Found function equal exponential exemple except number finite point solution problem could exponential function check given function equal exponential except finite number point it's impossible e check real except finite number f x e x missing something permalinksavereportgive goldreply smog_alado 4 points5 points6 points 3 months ago 2 children P NP decision problems get input described sequence bytes problem asks something answered yes-or-no answer problem described way encode input using finite space P contained NP find solution certain amount time also trivially veryfy solution amount time permalinksaveparentreportgive goldreply matheod 1 point2 points3 points 3 months ago 0 children Oh okay thanks permalinksaveparentreportgive goldreply tsahyt 1 point2 points3 points 3 months ago 0 children P contained NP find solution certain amount time also trivially veryfy solution amount time Alternatively using original definition NP find solution deterministically polynomial time also find non-deterministic Turing machine polynomial time permalinksaveparentreportgive goldreply wutf 2 points3 points4 points 3 months ago 0 children problem quoted neither P NP First it's decision problem classes P NP refer decision problems could make decision problem asking instead two given functions equal except finite number points Second complexity analysis looks time space required solve problem changes changes size problem problem mentioned functions R- R change size Thus putting problem P vs NP meaningless Lastly even consider different sizes functions varying cardinality domain terms P vs NP makes sense talk functions finite size case come solution check correctness time linear size domain function infinite domain even countable one require infinite space represent that's neither P NP permalinksaveparentreportgive goldreply gallais 1 point2 points3 points 3 months ago 0 children think page http www win tue nl gwoegi P-versus-NP htm highly relevant permalinksavereportgive goldreply JoshuaZ1 1 point2 points3 points 3 months ago 0 children original algebraization paper shows algebraic barrier applies showing ZPP P oracle ZPPA EXPA algebraization barrier apply separating ZPP EXP permalinksavereportgive goldreply Psy-Kosh 1 point2 points3 points 3 months ago 1 child Hey possibly dumb question probably related thread anything known QP quasi polynomial time quadratic programming vs NP ie Quasi Polynomial time known contained NP What're prospects NP QP etc etc permalinksavereportgive goldreply _--__Discrete Math 1 point2 points3 points 3 months ago 0 children limited experience SUBEXP includes QP seems become popular P EXP class probably due Exponential Time Hypothesis permalinksaveparentreportgive goldreply linuxisgreat 1 point2 points3 points 3 months ago 3 children good books computational complexity I've learning topic mainly wikipedia pages math papers graph theory complexity permalinksavereportgive goldreply _--__Discrete Math 1 point2 points3 points 3 months ago 1 child Garey Johnson arguably definitive text it's probably little dated haven't seen recent editions - course textbook Sipser commonly listed course textbook Arora Barak Papadimitriou good post-introductory complexity theory Complexity Zoo particularly Petting Zoo probably best place go permalinksaveparentreportgive goldreply JoshuaZ1 0 points1 point2 points 3 months ago 0 children I'm fan Moore Mertens Nature Computation although covers things aside strict complexity excellent book permalinksaveparentreportgive goldreply Dakurels 1 point2 points3 points 3 months ago 1 child Ok question may exactly connected P vs NP complexity theory general - book recommend start complexity theory permalinksavereportgive goldreply _--__Discrete Math 1 point2 points3 points 3 months ago 0 children I'd suggest starting look next section permalinksaveparentreportgive goldreply PVinc 1 point2 points3 points 3 months ago 3 children difference NP-complete NP-hard permalinksavereportgive goldreply _--__Discrete Math 1 point2 points3 points 3 months ago 2 children problem NP-hard problems NP reduce polynomial time solution would imply polynomial time solution problems NP problem NP-complete NP-hard also member NP obvious NP-hard problems exist let alone NP-complete ones permalinksaveparentreportgive goldreply PVinc 0 points1 point2 points 3 months ago 1 child mean problem proved NP-hard P NP permalinksaveparentreportgive goldreply _--__Discrete Math 1 point2 points3 points 3 months ago 0 children mistook comment end - know NP-complete problems you've found one e g SAT it's much easier find prove P NP need show NP-complete problem solved polynomial time equivalently problem P NP-hard permalinksaveparentreportgive goldreply STRANGLED_HOOKER 1 point2 points3 points 3 months ago 1 child inexperienced programmers feel jump programming subreddit permalinksavereportgive goldreply philly_fan_in_chi 3 points4 points5 points 3 months ago 0 children details get much messier hasn't even talk Natural Proof Barrier Algebrization thread yet permalinksaveparentreportgive goldreply real_mark -1 points0 points1 point 3 months ago 50 children I've spent many years working problem however findings popular considered unorthodox work least indicates solution also understand previous attempts failed read publicly available papers providing solution I'd happy share thoughts thoughts given respect skepticism work expected open mind necessary EDIT Someday someone read wrote CAREFULLY dismiss outright correct minor mistakes clear writing laugh laugh world laugh permalinksavereportgive goldreply DPLLme 5 points6 points7 points 3 months ago 48 children Sure assume indicates solution you're claiming actual proof instead sort quantitative intuitive argument permalinksaveparentreportgive goldreply real_mark 1 point2 points3 points 3 months ago 47 children formal proof requires minor revisions clarity completeness fatal errors around proof OK I'll give outline summary proof point link draft paper you'd like read formal paper Frame I'd like frame work reader understands context little bit apprehension sharing First point don't care million dollars anymore first many years running unnecessary walls mathematics CS communities don't fact refrain rude sentiments similar Perelman's wouldn't turn offered however I'd work start foundation builds research develop AI practical applications care long held belief foundations set theory set straight later post since re-written paper solve different problem would make P PSPACE corollary would even mention complexity theory paper whatsoever multiple editorial Bench rejections based subject matter alone remove mention complexity theory except incidental mention final section got past bench rejection paper reviewed four reviewers 2 respond one suggested revision one understand writing since three passes needed publication paper rejected Current title paper Non-Trivial Counterexample Cantor's Diagonal Argument Title revisions proposed Series Non-trivial Counterexamples Cantor's Diagonalization Method --The title change ONE counterexample rather series counterexamples may arbitrarily apply every element set isn't trivial well known trivial counterexample equivalence relation considered trivial occurs Reals arise result ring set discovered Method instead argument general applies Real numbers Prerequisites One must good understanding ZFC set theory One must good understanding Cantor's diagonal argument stands One must open idea mistake Cantor's Diagonal Method recommend reading paper impredicative definition Cantor's Theorem Summary paper Cantor's Theorem applied equivalent sets known equal paradox arises CT intrinsically paradoxical provide contradiction already exist mistake CT would also true flaw CDM good understanding formal grammars formal languages good understanding theoretical computer science emphasis Omega-Languages especially Omega-Regular languages read B chi Automaton lack preconception bias infinite spaces topology e since re-evaluating CDA CDM rely theorems based CDA CT thus one's understanding topology infinite spaces mostly relies difference countable uncountable spaces influence one's notions relationship CDA However concepts Real analysis metric spaces Cauchy Sequences like approached unbiased fashion aid understanding proof Group theory Lots Proof Outline Represent omega -regular language recursively enumerable surjection define grammar generates countable set finite length elements map omega -regular language according rule set named set rho rho Abelian group define string equality superset Rho order perform operations result closure rho define addition operations commutativity rho provide proof additive inverse closure mapping Rho rho injective mapping rho Rho surjective bijective mapping rho particular subsets Rho formalize generalize Cantor's Diagonal Method arbitrary choice function matrix arbitrary recursively enumerable sets Cantor's Diagonalization Method reduces function set elements Rho omega infinite expansions Rho equivalent set elements equal value rho definition string equality Abelian groups Map strings Rho omega it's equivalent finite length strings rho ordering rho map equivalent ordering values back matrix Rho omega using non-arbitrary choice function without loss meaning one applies diagonalization function choice function exception diagonalization function exception non-trivial occurs arbitrary initial ordering OK that's basic outline work although current form paper needs clarity writing helped see clarity needs current form paper ONE exception arbitrary exceptions Another problem current form paper Abelian group's definitions addition need completed draining process Side note Anyone want take work complete I'll name lemma rules addition already written executable code Basically prove set question Abelian group using template rules addition fixing stupid mistakes That's BIG thing needs done Bonus prove set ring multiplication easy field division tough think it's field I'm sure definitely ring P vs NP Diagonalization fails P PSPACE Well many ways prove fairly obvious complexity heirarchy collapses P PSPACE method separate One result Halting problem becomes decidable going popular don't math problem need solve social problem don't know solve agree Perelman Years years years Everyone Lord Kelvin days Sincerely Frustrated Draft draft sent publication review needs revision see Draft B needs missing pieces Draft current working draft TL DR math bit comp sci either I'm worlds greatest genius world's biggest idiot don't care Edits formatting permalinksaveparentreportgive goldreply psicicleTheory Computing 4 points5 points6 points 3 months ago 20 children Diagonalization fails Halting problem becomes decidable doesn't sound like follows Give algorithm Even halting problem decidable doesn't say anything P vs NP unless polynomial time algorithm halting problem permalinksaveparentreportgive goldreplyload comments 20 replies univalenceLogic 2 points3 points4 points 3 months ago 7 children I'm hard time making sense paper impredicativity Cantor's argument key point Cantor's argument construct element range f argument constructs element image 1 it's obvious element permalinksaveparentreportgive goldreplyload comments 7 replies QEDforNow 2 points3 points4 points 3 months ago 1 child think need work ability provide sophisticated explanations particular Draft B spend less time associating Perelman permalinksaveparentreportgive goldreply DPLLme 3 points4 points5 points 3 months ago 15 children Thank writing long reply - it's clear you've put lot time effort I'm particularly comfortable set theory I'm afraid can't say much main thrust argument Draft B mentions computer verification section though - available somewhere Abelian group lemma actually rely computer verification It'd nice drafts downloadable without signing ResearchGate share psicicle's concern result implying P SPACE exactly show method separate separation necessarily require diagonalization say many ways prove - could describe permalinksaveparentreportgive goldreplyload comments 15 replies load comments 1 reply dinominant 0 points1 point2 points 3 months ago 3 children would consequenecs P NP proof would affect internet security cryptography general permalinksavereportgive goldreply deleted 1 point2 points3 points 2 months ago 0 children someone suddenly proved P NP true nothing would change right away Knowing P NP doesn't automatically give us efficient algorithm factor primes example would likely happen would resurgence interest finding algorithm someone would perhaps one day find polynomial algorithm factor primes However algorithm even though technically polynomial may practically useless Right best algorithm factoring primes super-polynomial poly-time algorithm found example O N100000000000 it's still practical use doesn't pose threat current cryptography Basically simply kN Nk large N k constant isn't enough guarantee algorithm runs O Nk useful practice permalinksaveparentreportreplyload comments 2 replies 3058248 0 points1 point2 points 3 months ago 7 children knowing little topic doesn't pad-lock show p np padlock open given specific input input easily checkable input work possible way gaining information checking every possible answer permalinksavereportgive goldreply _--__Discrete Math 1 point2 points3 points 3 months ago 4 children important caveat often missed concepts like polynomial time refers asymptotic complexity problem parameterized input e g Travelling Salesman problem starts given list cities distance Polynomial time means polynomial time respect input size - interested behaviour algorithm input size increases things single instance padlock commonly seen standard game chess asymptotic complexity e behaviour input size grows larger make sense nothing grow larger example padlock requires constant number tries Large sure still constant permalinksaveparentreportgive goldreply 3058248 0 points1 point2 points 3 months ago 3 children think see saying wouldn't scaling number required digits count input ie X X X vs X X X X permalinksaveparentreportgive goldreply _--__Discrete Math 2 points3 points4 points 3 months ago 2 children subtle issue problem give complete description e white-box - otherwise u skaldskaparmal mentioned oracle words problem sense complexity theory would also include say blueprints padlock perhaps rule determines combination Note require rule try combination tells quickly right Importantly description rule matter described also part input permalinksaveparentreportgive goldreply skaldskaparmal 1 point2 points3 points 3 months ago 0 children say padlock part input also makes relevant problem simply give padlock form program ask there's input polynomial size program make program output yes classic NP-Complete problem properly formalized referred DUH problem It's clearly NP give combination it's clearly P we're given workings padlock form program might able figure program works polynomial time come inputs make say yes permalinksaveparentreportgive goldreply 3058248 0 points1 point2 points 3 months ago 0 children AH makes sense Thank permalinksaveparentreportgive goldreply psicicleTheory Computing 1 point2 points3 points 3 months ago 0 children essentially query complexity decision problems consider complete information whereas padlock example access way mechanism manufactured works correct way state problem quickly find combination knew padlock manufactured surprising tangent quantum mechanical world actually implement Grover's algorithm padlock worst case require sqrt n queries find correct combination instead n queries required classical world permalinksaveparentreportgive goldreply skaldskaparmal 3 points4 points5 points 3 months ago 0 children actually take idea surprisingly deep level First padlock one combination it's actually trivial solve simply output combination may know combination know whatever stick program output combination Second padlock decision problem P v NP problems we're allowed ask Given input something true need yes answer could first step change Given combination open padlock point even give padlock infinitely many combinations still problem P given combination check padlock need change question little right question ask actually Given input padlock valid combination length problem P check exponentially many combinations particular length assuming reasonably weird padlock example combinations strings 1s could solve problem P time problem NP there's solution simply check reason doesn't resolve P vs NP padlock sort bending rules fancy math name padlock actually oracle we've proven there's oracle separates P NP also proves oracles actually make P NP means proof technique resolves P vs NP needs know oracles lot proof techniques work even padlocks picture know padlocks change picture proofs need take account one difficulties resolving P vs NP permalinksaveparentreportgive goldreply tadzioizdat 0 points1 point2 points 3 months ago 0 children flat joke I'm usually forgetful house-stuff whenever something's wrong it's fault deemed I'm fault-complete reduce permalinksavereportgive goldreply deleted 3 months ago 1 child deleted _--__Discrete Math 2 points3 points4 points 3 months ago 0 children decision problem problem yes answer example graph Hamiltonian Path instance decision problem single example either yes e g graph - graphs yes-instances contain Hamiltonian Paths graphs no-instances Associated every instance input size many bits required describe instance e g number vertices plus number edges Generally decision problem restated Given instance problem yes-instance decision problem class P deterministic algorithm given instance input size n decides yes instance instance nk steps k constant decision problem class NP non-deterministic polynomial time non-deterministic algorithm runs polynomial time decide yes-instance no-instance ELY5 means deterministic algorithm runs polynomial time instance yes-instance also polynomial-sized certificate algorithm using certificate confirm instance yes-instance Going working example sequence vertices describe Hamiltonian Path certificate algorithm checks given sequence vertices actually Hamiltonian Path e checks vertices accounted vertex move next one algorithm NP problems usually look like Given blah exist blah blah P vs NP question whether P NP permalinksavereportgive goldreply Fsmv 0 points1 point2 points 3 months ago 1 child work trying show P vs NP complexity classes undecidable undecidable whether decidable possibility permalinksavereportgive goldreply _--__Discrete Math 0 points1 point2 points 3 months ago 0 children See thread permalinksaveparentreportgive goldreply Milliez 0 points1 point2 points 3 months ago 6 children something never understood P NP maybe head Lets consider 2-SAT 3-SAT know 2-SAT P know 3-SAT NP right Ok suppose show polynomial transformation 3-SAT - 2-SAT I've proved P NP right suppose prove polynomial transformation 3-SAT - 2-SAT exists understanding sufficient prove P NP correct insight never made sense permalinksavereportgive goldreply _--__Discrete Math 3 points4 points5 points 3 months ago 0 children suppose prove polynomial transformation 3-SAT - 2-SAT exists understanding sufficient prove P NP establishes P NP P NP polynomial algorithm 3SAT turned reduction 3SAT 2SAT running algorithm outputs yes output yes instance 2SAT e g x otherwise output instance 2SAT e g x x reduction contradiction hence P NP permalinksaveparentreportgive goldreply skaldskaparmal 2 points3 points4 points 3 months ago 4 children that's correct transformation exists P NP get understanding permalinksaveparentreportgive goldreply deleted 3 months ago 2 children deleted skaldskaparmal 1 point2 points3 points 3 months ago 1 child I'm sure think P-completeness anything detailed proof see u _--__'s post permalinksavereportgive goldreply Milliez 0 points1 point2 points 3 months ago 0 children Ok thanks u _--__ clearing told prof said something like don't even know go proving P NP asked something along lines original post got reply reasons longer remember remember understanding time though Anyhoo always thought one could prove P NP showing 3-SAT- 2-SAT transformation exists using sort epsilon-delta proof haven't really thought permalinksaveparentreportgive goldreply RivtenGray 0 points1 point2 points 3 months ago 2 children possible P vs NP problem undecidable would like ultimate troll ever permalinksavereportgive goldreply tsahyt 0 points1 point2 points 3 months ago 1 child we've proven unproven problem possibly undecidable unless course somehow prove decidability far know there's proof P NP permalinksaveparentreportgive goldreply RivtenGray 0 points1 point2 points 2 months ago 0 children Ok Thanks answer permalinksaveparentreportgive goldreply lichorat 0 points1 point2 points 3 months ago 6 children Would NP go away time wasn't factor Like timeless universe would P NP solutions would exist computational time doesn't exist know it's crazy question sorta curious permalinksavereportgive goldreply skaldskaparmal 4 points5 points6 points 3 months ago 5 children time didn't exist whatever would mean probably wouldn't even talk P NP since definitions involve time resource concern space set problems solved polynomial space using much time needed PSPACE may also interested shows particular version time travel possible P PSPACE thus P NP wouldn't say counts timeless universe since there's still notion time still reasonably talk P NP permalinksaveparentreportgive goldreply lichorat 0 points1 point2 points 2 months ago 4 children didn't know called PSPACE I've thinking concept anyone experimented multidimentional spaces Turing machines one tape hard drive one head reads sequentially even though random access thing guess I'm wondering like 3d vr goggles right differerent 3d dimensions mapped 2d dimension shift time dimensions segments space eventually everything pspace except one time dimension run thing Alternatively since simulate time travel computers simulated time travel computer solve P NP Also simulation hypothesis true universe effectively time travel simulation wouldn't correct permalinksaveparentreportgive goldreply skaldskaparmal 0 points1 point2 points 2 months ago 3 children Turing machines one tape hard drive one head reads sequentially even though random access thing Turing machines one tape multiple tapes multi-dimensional tapes ends equivalent polynomially faster one tape Since don't get useful benefit stick what's theoretically easy work one tape Alternatively since simulate time travel computers simulated time travel computer solve P NP imagine different models computation models may may P NP doesn't really say much P vs NP usual model computation though different model turns physically realizable practically speaking might able solve NP problems polynomial time way we've factored 21 using photons though would still leave open interesting theoretical question whether P NP standard model computation permalinksaveparentreportgive goldreply lichorat 0 points1 point2 points 2 months ago 2 children know standard model computation isn't ambiguous P NP current computational assumptions vague Like whole area axiom choice needed math impossible without permalinksaveparentreportgive goldreply skaldskaparmal 0 points1 point2 points 2 months ago 1 child don't That's thread http www reddit com r math comments 2x4rba everything_about_p_vs_np cowvrj5 permalinksaveparentreportgive goldreply lichorat 0 points1 point2 points 2 months ago 0 children words don't know universe different computer would mean Scott's argument weakened right Also axiom choice solve P NP Like doesn't exist always set problems complex way busy beaver problems axiom choice introduced doesn't necessarily mean always choose functions work Also happens add time act way adding space sense marginally speeds space stays constant permalinksaveparentreportgive goldreplyload comments 25 replies aboutblogaboutvaluesteamsource codeadvertisejobshelpsite rulesFAQwikireddiquettetransparencycontact usapps toolsAlien Blue iOS appreddit AMA appmobile betabuttons 3reddit goldreddit storeredditgiftsreddit tvradio redditUse site constitutes acceptance User Agreement Privacy Policy Genitive 2015 reddit inc rights reserved REDDIT ALIEN Logo registered trademarks reddit inc Rendered PID 6296 app-143 2015-05-27 17 40 20 138647 00 00 running 8944350 country code"),
('Proving that Androids, Javas and Pythons sorting algorithm is broken (and showing how to fix it)', "Envisage Engineering Virtualized Services Menu Skip content Envisage Envisage Project Abstract Project Information Press Media Contact Information Consortium Advisory Boards Follow Envisage RSS Dissemination Envisage Publications Envisage Deliverables SFM Summer School 2014 Engineering Virtualized Services ISoLA 2014 Workshop Contracts Efficient Reliable Services iFM FACS2014 Static Analysis meets Runtime Verification Log Search Proving Android Java Python sorting algorithm broken showing fix February 24 2015EnvisageWritten Stijn de Gouw Tim Peters developed Timsort hybrid sorting algorithm 2002 clever combination ideas merge sort insertion sort designed perform well real world data TimSort first developed Python later ported Java appears java util Collections sort java util Arrays sort Joshua Bloch designer Java Collections also pointed binary search algorithms broken TimSort today used default sorting algorithm Android SDK Sun JDK OpenJDK Given popularity platforms means number computers cloud services mobile phones use TimSort sorting well billions Fast forward 2015 successfully verified Counting Radix sort implementations Java J Autom Reasoning 53 2 129-139 formal verification tool called KeY looking new challenge TimSort seemed fit bill rather complex widely used Unfortunately weren able prove correctness closer analysis showed quite simply TimSort broken theoretical considerations finally led us path towards finding bug interestingly bug appears already Python implementation blog post shows paper complete analysis several test programs available website Structure blog post TimSort bug Android Java Python 1 1 Reproduce TimSort bug Java 1 2 TimSort work principle 1 3 Walkthrough TimSort bug Proving correctness TimSort 2 1 verification system KeY 2 2 fix formal specification 2 3 Analysing output KeY Suggested fixes Python Android Java Timsort bugs 3 1 Incorrect Python merge_collapse function 3 2 Corrected Python merge_collapse function 3 3 Incorrect Java Android merge_collapse function 3 4 Corrected Java Android merge_collapse function Conclusion learn 1 TimSort bug Android Java Python bug try reproduce first 1 1 Reproduce TimSort bug Java git clone https github com abstools java-timsort-bug git cd java-timsort-bug javac java java TestTimSort 67108864 Expected output Exception thread main java lang ArrayIndexOutOfBoundsException 40 java util TimSort pushRun TimSort java 413 java util TimSort sort TimSort java 240 java util Arrays sort Arrays java 1438 TestTimSort main TestTimSort java 18 Video walkthrough 1 2 TimSort work principle TimSort hybrid sorting algorithm uses insertion sort merge sort algorithm reorders input array left right finding consecutive disjoint sorted segments called runs hereon run short extended using insertion sort lengths generated runs added array named runLen Whenever new run added runLen method named mergeCollapse merges runs last 3 elements runLen satisfy following two conditions invariant runLen n-2 runLen n-1 runLen n runLen n-1 runLen n n index last run runLen intention checking invariant top 3 runs runLen fact guarantees runs satisfy end runs merged yielding sorted version input array performance reasons crucial allocate little memory possible runLen still enough store runs invariant satisfied runs length run grows exponentially even faster fibonacci length current run must strictly bigger sum next two runs lengths Since runs overlap small number runs would needed cover even big input arrays completely 1 3 Walkthrough TimSort bug code snippet shows implementation mergeCollapse checks invariant last 3 runs runLen private void mergeCollapse stackSize 1 int n stackSize - 2 n 0 runLen n-1 runLen n runLen n 1 runLen n - 1 runLen n 1 n-- mergeAt n else runLen n runLen n 1 mergeAt n else break Invariant established Unfortunately sufficient ensure runs satisfy invariant Suppose runLen following content entry mergeCollapse 120 80 25 20 30 first loop iteration 25 20 merged since 25 20 30 25 30 120 80 45 30 second iteration n 3 determined invariant satisfied last 3 runs since 80 45 30 45 30 thus mergeCollapse terminates mergeCollapse fully restored invariant broken 120 since 120 80 45 testgenerator website exploits problem generates input array many short runs short sense satisfy invariant eventually causes TimSort crash particular since breaking invariant length runs grow slower expected runLen length runs needed cover entire input array resulting ArrayOutOfBoundsException runLen 2 Proving correctness TimSort found supposed invariant mergeCollapse broken attempt formally verify TimSort Luckily find broken also fixed end even succeeded verify corrected invariant actually holds let take step step First mean formal verification done 2 1 verification system KeY Due many requests published brief blog post KeY KeY deductive verification platform sequential Java JavaCard applications allows prove correctness programs respect given specification Roughly speaking specification consists precondition also called requires clause postcondition also called ensures clause Specifications attached method implementations mergeCollapse specification method also called contract case sorting program precondition might simply state input non-empty array postcondition returned array sorted permutation input KeY typically proves whenever method verification called input satisfies precondition method terminates normally final state postcondition true also known total correctness termination ensured Obviously OpenJDK java utils Array sort adhere contract terminates exceptionally certain inputs addition instance class invariants used specify general constraints values fields Typical properties concerned data consistency boundary values private invariant runBase length runLen length runBase runLen invariant says length arrays runBase runLen must equal arrays must point array instance e aliased semantics invariants implies method must establish upon completion postcondition contract also invariant object specification language KeY Java Modeling Language JML used contains pure Java expressions sublanguage therefore easy learn Java programmers main extension beyond Java quantified expressions forall x exists x course suitable keywords contracts JML specifications attached Java declarations belong java files simple example Java method specified JML private normal_behavior requires n MIN_MERGE ensures result MIN_MERGE 2 private static int pure minRunLength int n assert n 0 int r 0 Becomes 1 1 bits shifted loop_invariant n MIN_MERGE 2 r 0 r 1 decreases n assignable nothing n MIN_MERGE r n 1 n 1 return n r contract minRunLength requires caller ensure method invoked value greater-or-equal MIN_MERGE case method ensures terminate normally e neither diverge throw exception returned value least big MIN_MERGE 2 addition method marked pure implies method modify heap crucial point KeY statically prove method contracts given input possible KeY performs symbolic execution method verification executes symbolic values possible execution paths taken account enough symbolic execution loops without fixed bound one mergeCollapse know value stackSize terminate render symbolic execution loops finite invariant reasoning used instance method minRunLength contains loop specified using loop invariant invariant ensures loop iteration condition n MIN_MERGE 2 r 0 r 1 holds hence method postcondition proven decreases annotation used prove termination loop providing expression whose value non-negative strictly decreasing assignable clause lists heap locations might possibly modified loop keyword nothing means heap locations modified Indeed local variable r value argument n changed summary purpose formal verification method contracts enough necessary supply suitable loop invariant tricky business come invariant strong enough ensure desired postcondition still holds Without tool support automated theorem proving technology hardly possible come correct loop invariants non-trivial programs fact exactly designers TimSort went wrong loop mergeCollapse causes certain circumstances following part TimSort class invariant violated see section 1 3 Walkthrough TimSort bug private invariant forall int 0 stackSize-4 runLen runLen 1 runLen 2 states runLen must greater size two successor entries index within 0 including stackSize-4 excluding invariant also restored later method mergeCollapse preserve class invariant either Hence loop invariant strong assumed developers found formal verification attempt help KeY nearly impossible without tool support Despite close Java JML full-fledged design-by-contract language suitable full functional verification Java programs 2 2 fix formal specification simplified version contract mergeCollapse expected satisfy shown requires stackSize 0 runLen stackSize-4 runLen stackSize-3 runLen stackSize-2 runLen stackSize-3 runLen stackSize-2 ensures forall int 0 stackSize-2 runLen runLen 1 runLen 2 runLen stackSize-2 runLen stackSize-1 private void mergeCollapse two formulas ensures imply mergeCollapse completes runs satisfy invariant given section 1 2 saw already contract satisfied current implementation mergeCollapse section 1 3 provide following fixed version respects contract private void newMergeCollapse stackSize 1 int n stackSize - 2 n 0 runLen n-1 runLen n runLen n 1 n-1 0 runLen n-2 runLen n runLen n-1 runLen n - 1 runLen n 1 n-- else n 0 runLen n runLen n 1 break Invariant established mergeAt n main idea new version check invariant holds last 4 runs runLen instead last 3 see suffices ensure runs satisfy invariant upon completion mergeCollapse first step proving contract fixed version mergeCollapse find suitable loop invariant code snippet shows simplified version loop invariant loop_invariant forall int 0 stackSize-4 runLen runLen 1 runLen 2 runLen stackSize-4 runLen stackSize-3 Intuitively loop invariant states runs except possibly last 4 satisfy invariant Combining observation new loop mergeCollapse terminates break statement last 4 runs also satisfy guarantees runs satisfy invariant 2 3 Analysing output KeY fixed version mergeCollapse contract loop invariant given input KeY system symbolically executes loop generates verification conditions formulas whose truth imply mergeCollapse contract satisfied following formula simplified shows main proof obligation generated KeY verification condition generated make sure postcondition mergeCollapse satisfied loop terminates explains three formulas brackets break statement terminates loop executed true proved formula verification conditions formally KeY semi-automated manner sketch proof Proof formula runLen stackSize-2 runLen stackSize-1 mergeCollapse postcondition follows directly n 0 runLen n runLen n 1 prove formula forall int 0 stackSize-2 runLen runLen 1 runLen 2 case distinction value stackSize-4 follows loop invariant stackSize-4 follows n 1 runLen n-2 runLen n-1 runLen n stackSize-3 n 0 runLen n-1 runLen n runLen n 1 stackSize-2 n 0 runLen n runLen n 1 proof shows new version mergeCollapse terminates runs satisfy invariant 3 Suggested fixes Python Android Java Timsort bugs analysis bug included fix mergeCollapse submitted reviewed accepted Java bug tracker https bugs openjdk java net browse JDK-8072909 bug present least Android version Java OpenJDK OracleJDK share source code TimSort Furthermore also present Python next two sections show side-by-side original fixed versions explained previous section idea behind fix simple check invariant holds last 4 runs runLen instead last 3 3 1 Incorrect Python merge_collapse function Timsort Python written C Python API available subversion repository algorithm also described http svn python org projects python trunk Objects listsort txt Java version TimSort ported original CPython version version also contains bug intended work arrays 2 64 elements However current machines possible trigger out-of-bounds error Python version allocates 85 elements runLen suffices following analysis full paper arrays less 2 49 elements comparison current powerful supercomputer http en wikipedia org wiki Tianhe-2 2 50 bytes memory total maximum number entries MergeState's pending-runs stack enough sort arrays size 32 phi MAX_MERGE_PENDING phi 1 618 85 ridiculously large enough good array 2 64 elements define MAX_MERGE_PENDING 85 merge_collapse MergeState ms struct s_slice p ms- pending assert ms ms- n 1 Py_ssize_t n ms- n - 2 n 0 p n-1 len p n len p n 1 len p n-1 len p n 1 len --n merge_at ms n 0 return -1 else p n len p n 1 len merge_at ms n 0 return -1 else break return 0 3 2 Corrected Python merge_collapse function merge_collapse MergeState ms struct s_slice p ms- pending assert ms ms- n 1 Py_ssize_t n ms- n - 2 n 0 p n-1 len p n len p n 1 len n-1 0 p n-2 len p n len p n-1 len p n-1 len p n 1 len --n merge_at ms n 0 return -1 else p n len p n 1 len merge_at ms n 0 return -1 else break return 0 3 3 Incorrect Java Android merge_collapse function bug Python section 3 1 private void mergeCollapse stackSize 1 int n stackSize - 2 n 0 runLen n-1 runLen n runLen n 1 runLen n - 1 runLen n 1 n-- mergeAt n else runLen n runLen n 1 mergeAt n else break Invariant established 3 4 Corrected Java Android merge_collapse function Equivalent fix Python section 3 2 UPDATE 26 2 updated code earlier version paper old code equivalent contained redundant test different coding style Several people noticed thanks feedback private void newMergeCollapse stackSize 1 int n stackSize - 2 n 1 runLen n-1 runLen n runLen n 1 n 2 runLen n-2 runLen n runLen n-1 runLen n - 1 runLen n 1 n-- else runLen n runLen n 1 break Invariant established mergeAt n 4 Conclusion learn attempting verify TimSort failed establish instance invariant Analysing reason discovered bug TimSort implementation leading ArrayOutOfBoundsException certain inputs suggested proper fix culprit method without losing measurable performance formally proven fix actually correct bug longer persists observations drawn exercise beyond immediate issue bug Formal methods often classified irrelevant impracticable practitioners true found fixed bug piece software used billions users every single day Finding fixing bug without formal analysis help verification tool next impossible analysis showed around years core library routine Java Python Earlier occurrences underlying bug supposedly fixed actually made occurrence less likely Even though bug unlikely occur easy see could used attack likely undetected bugs parts core libraries mainstream programming languages Shouldn try find harm exploited reaction Java developer community report somewhat disappointing instead using fixed verified version mergeCollapse opted increase allocated runLen sufficiently showed necessary consequence whoever uses java utils Collection sort forced allocate space Given astronomical number program runs central routine used leads considerable waste energy reasons solution adopted speculate perhaps JDK maintainers bother read report detail therefore trust understand fix Open Java community effort largely driven volunteers limited time learn would happy work could starting point closer collaboration formal methods developers open language frameworks Formal methods already adopted successfully Amazon link Facebook link Modern formal specification languages formal verification tools cryptic super-hard learn Usability automation improving constantly need people try test use formal tools Yes costs little effort start formally specifying verifying stuff say learning use compiler framework build tool talking days weeks months years take challenge Best regards Stijn de Gouw Jurriaan Rot Frank de Boer Richard Bubel Reiner H hnle Acknowledgements Partly funded EU project FP7-610582 ENVISAGE Engineering Virtualized Services http www envisage-project eu blog would never gotten written without enthusiastic support gentle pushing Amund Tveit would like thank Behrooz Nobakht providing video showcasing bug Post navigation Envisage ISoLA 2014 KeY Deductive Verification Software 18 thoughts Proving Android Java Python sorting algorithm broken showing fix Pingback Dort broken Collected Links Pingback Quora Volker Stolz says February 25 2015 12 54 pm issue Python bug tracker http bugs python org issue23515 Log Reply Volker Stolz says February 25 2015 12 57 pm High praise Twitter Congratulations Stijn de Gouw et al finding fixing bug TimSort using formal methods http co 7P1PqCWLOW Joshua Bloch joshbloch February 24 2015 Log Reply Volker Stolz says February 25 2015 1 12 pm alone golang timsorts http co KiqYAkEye7 probably need fixed http co MowEqgGED1 Damian Gryski dgryski February 24 2015 Log Reply Pingback Proving Android Java Python sorting algorithm broken showing fix thoughts Volker Stolz says February 26 2015 5 23 pm wonder invariant could encoded type system LiquidHaskell Iris Agda impls would exposed Pascal Hartig passy February 26 2015 Log Reply Pingback Proving Android Java Python sorting algorithm broken Fairy Tales Pingback Nifty Things week ending 27 February 2015 Ramblings Pingback Timsort OpenStack Episode 0030 DevZen Podcast Pingback KeY Deductive Verification Software Envisage Engineering Virtualized Services Pingback Hib Java Python az Android standard rendez met dusa Einar Broch Johnsen says March 10 2015 2 07 pm Heise online feature 10 03 2015 Fehler Standardsortieralgorithmus mit formalen Methoden aufgedeckt Log Reply Einar Broch Johnsen says March 10 2015 2 15 pm JetBrains IntelliJ IDEA Blog March 10 2015 first kind result important development Java community proof concept feasibility formal verification automated theorem proving Perhaps importantly tool used detect identify bug completely open source available try Log Reply Pingback Timsort je vseboval hro blogla Pingback Sweetdumplings's Blog Pingback Timsort python exploit closed Question Answer Pingback Timsort Bug Leave Reply Cancel reply must logged post comment Follow Envisage page viewed 298662 times Powered WordPress"),
('Proving that Androids, Javas and Pythons sorting algorithm is broken (and showing how to fix it)', "Envisage Engineering Virtualized Services Menu Skip content Envisage Envisage Project Abstract Project Information Press Media Contact Information Consortium Advisory Boards Follow Envisage RSS Dissemination Envisage Publications Envisage Deliverables SFM Summer School 2014 Engineering Virtualized Services ISoLA 2014 Workshop Contracts Efficient Reliable Services iFM FACS2014 Static Analysis meets Runtime Verification Log Search Proving Android Java Python sorting algorithm broken showing fix February 24 2015EnvisageWritten Stijn de Gouw Tim Peters developed Timsort hybrid sorting algorithm 2002 clever combination ideas merge sort insertion sort designed perform well real world data TimSort first developed Python later ported Java appears java util Collections sort java util Arrays sort Joshua Bloch designer Java Collections also pointed binary search algorithms broken TimSort today used default sorting algorithm Android SDK Sun JDK OpenJDK Given popularity platforms means number computers cloud services mobile phones use TimSort sorting well billions Fast forward 2015 successfully verified Counting Radix sort implementations Java J Autom Reasoning 53 2 129-139 formal verification tool called KeY looking new challenge TimSort seemed fit bill rather complex widely used Unfortunately weren able prove correctness closer analysis showed quite simply TimSort broken theoretical considerations finally led us path towards finding bug interestingly bug appears already Python implementation blog post shows paper complete analysis several test programs available website Structure blog post TimSort bug Android Java Python 1 1 Reproduce TimSort bug Java 1 2 TimSort work principle 1 3 Walkthrough TimSort bug Proving correctness TimSort 2 1 verification system KeY 2 2 fix formal specification 2 3 Analysing output KeY Suggested fixes Python Android Java Timsort bugs 3 1 Incorrect Python merge_collapse function 3 2 Corrected Python merge_collapse function 3 3 Incorrect Java Android merge_collapse function 3 4 Corrected Java Android merge_collapse function Conclusion learn 1 TimSort bug Android Java Python bug try reproduce first 1 1 Reproduce TimSort bug Java git clone https github com abstools java-timsort-bug git cd java-timsort-bug javac java java TestTimSort 67108864 Expected output Exception thread main java lang ArrayIndexOutOfBoundsException 40 java util TimSort pushRun TimSort java 413 java util TimSort sort TimSort java 240 java util Arrays sort Arrays java 1438 TestTimSort main TestTimSort java 18 Video walkthrough 1 2 TimSort work principle TimSort hybrid sorting algorithm uses insertion sort merge sort algorithm reorders input array left right finding consecutive disjoint sorted segments called runs hereon run short extended using insertion sort lengths generated runs added array named runLen Whenever new run added runLen method named mergeCollapse merges runs last 3 elements runLen satisfy following two conditions invariant runLen n-2 runLen n-1 runLen n runLen n-1 runLen n n index last run runLen intention checking invariant top 3 runs runLen fact guarantees runs satisfy end runs merged yielding sorted version input array performance reasons crucial allocate little memory possible runLen still enough store runs invariant satisfied runs length run grows exponentially even faster fibonacci length current run must strictly bigger sum next two runs lengths Since runs overlap small number runs would needed cover even big input arrays completely 1 3 Walkthrough TimSort bug code snippet shows implementation mergeCollapse checks invariant last 3 runs runLen private void mergeCollapse stackSize 1 int n stackSize - 2 n 0 runLen n-1 runLen n runLen n 1 runLen n - 1 runLen n 1 n-- mergeAt n else runLen n runLen n 1 mergeAt n else break Invariant established Unfortunately sufficient ensure runs satisfy invariant Suppose runLen following content entry mergeCollapse 120 80 25 20 30 first loop iteration 25 20 merged since 25 20 30 25 30 120 80 45 30 second iteration n 3 determined invariant satisfied last 3 runs since 80 45 30 45 30 thus mergeCollapse terminates mergeCollapse fully restored invariant broken 120 since 120 80 45 testgenerator website exploits problem generates input array many short runs short sense satisfy invariant eventually causes TimSort crash particular since breaking invariant length runs grow slower expected runLen length runs needed cover entire input array resulting ArrayOutOfBoundsException runLen 2 Proving correctness TimSort found supposed invariant mergeCollapse broken attempt formally verify TimSort Luckily find broken also fixed end even succeeded verify corrected invariant actually holds let take step step First mean formal verification done 2 1 verification system KeY Due many requests published brief blog post KeY KeY deductive verification platform sequential Java JavaCard applications allows prove correctness programs respect given specification Roughly speaking specification consists precondition also called requires clause postcondition also called ensures clause Specifications attached method implementations mergeCollapse specification method also called contract case sorting program precondition might simply state input non-empty array postcondition returned array sorted permutation input KeY typically proves whenever method verification called input satisfies precondition method terminates normally final state postcondition true also known total correctness termination ensured Obviously OpenJDK java utils Array sort adhere contract terminates exceptionally certain inputs addition instance class invariants used specify general constraints values fields Typical properties concerned data consistency boundary values private invariant runBase length runLen length runBase runLen invariant says length arrays runBase runLen must equal arrays must point array instance e aliased semantics invariants implies method must establish upon completion postcondition contract also invariant object specification language KeY Java Modeling Language JML used contains pure Java expressions sublanguage therefore easy learn Java programmers main extension beyond Java quantified expressions forall x exists x course suitable keywords contracts JML specifications attached Java declarations belong java files simple example Java method specified JML private normal_behavior requires n MIN_MERGE ensures result MIN_MERGE 2 private static int pure minRunLength int n assert n 0 int r 0 Becomes 1 1 bits shifted loop_invariant n MIN_MERGE 2 r 0 r 1 decreases n assignable nothing n MIN_MERGE r n 1 n 1 return n r contract minRunLength requires caller ensure method invoked value greater-or-equal MIN_MERGE case method ensures terminate normally e neither diverge throw exception returned value least big MIN_MERGE 2 addition method marked pure implies method modify heap crucial point KeY statically prove method contracts given input possible KeY performs symbolic execution method verification executes symbolic values possible execution paths taken account enough symbolic execution loops without fixed bound one mergeCollapse know value stackSize terminate render symbolic execution loops finite invariant reasoning used instance method minRunLength contains loop specified using loop invariant invariant ensures loop iteration condition n MIN_MERGE 2 r 0 r 1 holds hence method postcondition proven decreases annotation used prove termination loop providing expression whose value non-negative strictly decreasing assignable clause lists heap locations might possibly modified loop keyword nothing means heap locations modified Indeed local variable r value argument n changed summary purpose formal verification method contracts enough necessary supply suitable loop invariant tricky business come invariant strong enough ensure desired postcondition still holds Without tool support automated theorem proving technology hardly possible come correct loop invariants non-trivial programs fact exactly designers TimSort went wrong loop mergeCollapse causes certain circumstances following part TimSort class invariant violated see section 1 3 Walkthrough TimSort bug private invariant forall int 0 stackSize-4 runLen runLen 1 runLen 2 states runLen must greater size two successor entries index within 0 including stackSize-4 excluding invariant also restored later method mergeCollapse preserve class invariant either Hence loop invariant strong assumed developers found formal verification attempt help KeY nearly impossible without tool support Despite close Java JML full-fledged design-by-contract language suitable full functional verification Java programs 2 2 fix formal specification simplified version contract mergeCollapse expected satisfy shown requires stackSize 0 runLen stackSize-4 runLen stackSize-3 runLen stackSize-2 runLen stackSize-3 runLen stackSize-2 ensures forall int 0 stackSize-2 runLen runLen 1 runLen 2 runLen stackSize-2 runLen stackSize-1 private void mergeCollapse two formulas ensures imply mergeCollapse completes runs satisfy invariant given section 1 2 saw already contract satisfied current implementation mergeCollapse section 1 3 provide following fixed version respects contract private void newMergeCollapse stackSize 1 int n stackSize - 2 n 0 runLen n-1 runLen n runLen n 1 n-1 0 runLen n-2 runLen n runLen n-1 runLen n - 1 runLen n 1 n-- else n 0 runLen n runLen n 1 break Invariant established mergeAt n main idea new version check invariant holds last 4 runs runLen instead last 3 see suffices ensure runs satisfy invariant upon completion mergeCollapse first step proving contract fixed version mergeCollapse find suitable loop invariant code snippet shows simplified version loop invariant loop_invariant forall int 0 stackSize-4 runLen runLen 1 runLen 2 runLen stackSize-4 runLen stackSize-3 Intuitively loop invariant states runs except possibly last 4 satisfy invariant Combining observation new loop mergeCollapse terminates break statement last 4 runs also satisfy guarantees runs satisfy invariant 2 3 Analysing output KeY fixed version mergeCollapse contract loop invariant given input KeY system symbolically executes loop generates verification conditions formulas whose truth imply mergeCollapse contract satisfied following formula simplified shows main proof obligation generated KeY verification condition generated make sure postcondition mergeCollapse satisfied loop terminates explains three formulas brackets break statement terminates loop executed true proved formula verification conditions formally KeY semi-automated manner sketch proof Proof formula runLen stackSize-2 runLen stackSize-1 mergeCollapse postcondition follows directly n 0 runLen n runLen n 1 prove formula forall int 0 stackSize-2 runLen runLen 1 runLen 2 case distinction value stackSize-4 follows loop invariant stackSize-4 follows n 1 runLen n-2 runLen n-1 runLen n stackSize-3 n 0 runLen n-1 runLen n runLen n 1 stackSize-2 n 0 runLen n runLen n 1 proof shows new version mergeCollapse terminates runs satisfy invariant 3 Suggested fixes Python Android Java Timsort bugs analysis bug included fix mergeCollapse submitted reviewed accepted Java bug tracker https bugs openjdk java net browse JDK-8072909 bug present least Android version Java OpenJDK OracleJDK share source code TimSort Furthermore also present Python next two sections show side-by-side original fixed versions explained previous section idea behind fix simple check invariant holds last 4 runs runLen instead last 3 3 1 Incorrect Python merge_collapse function Timsort Python written C Python API available subversion repository algorithm also described http svn python org projects python trunk Objects listsort txt Java version TimSort ported original CPython version version also contains bug intended work arrays 2 64 elements However current machines possible trigger out-of-bounds error Python version allocates 85 elements runLen suffices following analysis full paper arrays less 2 49 elements comparison current powerful supercomputer http en wikipedia org wiki Tianhe-2 2 50 bytes memory total maximum number entries MergeState's pending-runs stack enough sort arrays size 32 phi MAX_MERGE_PENDING phi 1 618 85 ridiculously large enough good array 2 64 elements define MAX_MERGE_PENDING 85 merge_collapse MergeState ms struct s_slice p ms- pending assert ms ms- n 1 Py_ssize_t n ms- n - 2 n 0 p n-1 len p n len p n 1 len p n-1 len p n 1 len --n merge_at ms n 0 return -1 else p n len p n 1 len merge_at ms n 0 return -1 else break return 0 3 2 Corrected Python merge_collapse function merge_collapse MergeState ms struct s_slice p ms- pending assert ms ms- n 1 Py_ssize_t n ms- n - 2 n 0 p n-1 len p n len p n 1 len n-1 0 p n-2 len p n len p n-1 len p n-1 len p n 1 len --n merge_at ms n 0 return -1 else p n len p n 1 len merge_at ms n 0 return -1 else break return 0 3 3 Incorrect Java Android merge_collapse function bug Python section 3 1 private void mergeCollapse stackSize 1 int n stackSize - 2 n 0 runLen n-1 runLen n runLen n 1 runLen n - 1 runLen n 1 n-- mergeAt n else runLen n runLen n 1 mergeAt n else break Invariant established 3 4 Corrected Java Android merge_collapse function Equivalent fix Python section 3 2 UPDATE 26 2 updated code earlier version paper old code equivalent contained redundant test different coding style Several people noticed thanks feedback private void newMergeCollapse stackSize 1 int n stackSize - 2 n 1 runLen n-1 runLen n runLen n 1 n 2 runLen n-2 runLen n runLen n-1 runLen n - 1 runLen n 1 n-- else runLen n runLen n 1 break Invariant established mergeAt n 4 Conclusion learn attempting verify TimSort failed establish instance invariant Analysing reason discovered bug TimSort implementation leading ArrayOutOfBoundsException certain inputs suggested proper fix culprit method without losing measurable performance formally proven fix actually correct bug longer persists observations drawn exercise beyond immediate issue bug Formal methods often classified irrelevant impracticable practitioners true found fixed bug piece software used billions users every single day Finding fixing bug without formal analysis help verification tool next impossible analysis showed around years core library routine Java Python Earlier occurrences underlying bug supposedly fixed actually made occurrence less likely Even though bug unlikely occur easy see could used attack likely undetected bugs parts core libraries mainstream programming languages Shouldn try find harm exploited reaction Java developer community report somewhat disappointing instead using fixed verified version mergeCollapse opted increase allocated runLen sufficiently showed necessary consequence whoever uses java utils Collection sort forced allocate space Given astronomical number program runs central routine used leads considerable waste energy reasons solution adopted speculate perhaps JDK maintainers bother read report detail therefore trust understand fix Open Java community effort largely driven volunteers limited time learn would happy work could starting point closer collaboration formal methods developers open language frameworks Formal methods already adopted successfully Amazon link Facebook link Modern formal specification languages formal verification tools cryptic super-hard learn Usability automation improving constantly need people try test use formal tools Yes costs little effort start formally specifying verifying stuff say learning use compiler framework build tool talking days weeks months years take challenge Best regards Stijn de Gouw Jurriaan Rot Frank de Boer Richard Bubel Reiner H hnle Acknowledgements Partly funded EU project FP7-610582 ENVISAGE Engineering Virtualized Services http www envisage-project eu blog would never gotten written without enthusiastic support gentle pushing Amund Tveit would like thank Behrooz Nobakht providing video showcasing bug Post navigation Envisage ISoLA 2014 KeY Deductive Verification Software 18 thoughts Proving Android Java Python sorting algorithm broken showing fix Pingback Dort broken Collected Links Pingback Quora Volker Stolz says February 25 2015 12 54 pm issue Python bug tracker http bugs python org issue23515 Log Reply Volker Stolz says February 25 2015 12 57 pm High praise Twitter Congratulations Stijn de Gouw et al finding fixing bug TimSort using formal methods http co 7P1PqCWLOW Joshua Bloch joshbloch February 24 2015 Log Reply Volker Stolz says February 25 2015 1 12 pm alone golang timsorts http co KiqYAkEye7 probably need fixed http co MowEqgGED1 Damian Gryski dgryski February 24 2015 Log Reply Pingback Proving Android Java Python sorting algorithm broken showing fix thoughts Volker Stolz says February 26 2015 5 23 pm wonder invariant could encoded type system LiquidHaskell Iris Agda impls would exposed Pascal Hartig passy February 26 2015 Log Reply Pingback Proving Android Java Python sorting algorithm broken Fairy Tales Pingback Nifty Things week ending 27 February 2015 Ramblings Pingback Timsort OpenStack Episode 0030 DevZen Podcast Pingback KeY Deductive Verification Software Envisage Engineering Virtualized Services Pingback Hib Java Python az Android standard rendez met dusa Einar Broch Johnsen says March 10 2015 2 07 pm Heise online feature 10 03 2015 Fehler Standardsortieralgorithmus mit formalen Methoden aufgedeckt Log Reply Einar Broch Johnsen says March 10 2015 2 15 pm JetBrains IntelliJ IDEA Blog March 10 2015 first kind result important development Java community proof concept feasibility formal verification automated theorem proving Perhaps importantly tool used detect identify bug completely open source available try Log Reply Pingback Timsort je vseboval hro blogla Pingback Sweetdumplings's Blog Pingback Timsort python exploit closed Question Answer Pingback Timsort Bug Leave Reply Cancel reply must logged post comment Follow Envisage page viewed 298663 times Powered WordPress"),
('Ceptre: A Language for Executable Game Descriptions', 'PDF-1 4 3 0 obj'),
('Local search and the hill climbing algorithm, explained (with code)', 'Skip content Maker Maker Approach Artificial Intelligence Primary Menu Home GitHub RSS Contact Local search hill climbing algorithm February 23 2015 atrilla scope local search methods goes beyond classical approach seeking shortest path goal state observable deterministic discrete environment local search path irrelevant operates current node complete-state formulation rather multiple paths simultaneously frontier involved Local search looks extrema objective function non-systematic way complete always finds reasonable solutions exist Thus adequate optimisation problems However guaranteed optimal one single global extremum exists Otherwise get stuck local extrema Hill climbing detail Hill climbing aka steepest-ascent greedy approach operates loop continually moves direction increasing value uphill reaches peak e maximum neighbour shows higher value see Figure 1 Figure 1 Hill climbing applied one-dimensional state-space landscape described example objective function Hill climbing state-space landscape Hill climbing gets stuck local maxima plateaus ridges case failure e reaching global maximum may restart process different initial value Hill climbing displays unit space complexity e current state linear time complexity respect number neighbouring states Figure 2 implements algorithm one-dimensional state-space Figure 2 Hill climbing algorithm -- Hill climbing algorithm -- -- PRE -- problem - must array costs index indicates state table -- start - must starting state index number -- -- POST -- solution - solution state number function hill_climbing problem start local current start local neighbour local change true current 1 neighbour change eval_right problem current elseif current problem neighbour change eval_left problem current else neighbour change eval_left problem current change false neighbour change eval_right problem current end end change current neighbour else return current end end end function eval_left problem current problem current - 1 problem current return current - 1 true else return current false end end function eval_right problem current problem current 1 problem current return current 1 true else return current false end end Despite arguably poor performance hill climbing find global maximum intuitive algorithm provides lot insight nature optimisation problems rule thumb solve next posts address lack skill suggest powerful optimisation routines Stay tuned Posted Optimisation Post navigation recursive best-first search algorithmThe simulated annealing algorithm 2 thoughts Local search hill climbing algorithm Pingback simulated annealing algorithm Maker Pingback Gradient-based methods Maker Leave Reply Cancel reply email address published Required fields marked Name Email Website Comment may use HTML tags attributes href title abbr title acronym title b blockquote cite cite code del datetime em q cite strike strong Search Recent Posts Artificial Neural Networks point Gradient-based methods closer look problem state encoding genetic algorithms electronics genetic algorithms simulated annealing algorithm Follow ai_maker Facebook AI-Maker LinkedIn SubscribeLeave Blank Change email Categories Electronics Optimisation Search Uncategorized Archives May 2015 April 2015 March 2015 February 2015 January 2015 December 2014 Proudly powered WordPress Theme Plainly Chris Rudzki'),
("Hi :) Two months ago I posted a simple algorithm that many liked for its simplicity. This time I tried creating a project that I hope can explain some of the basics of AI/machine-learning to kids around the same age as my 9 yo sister. tl;dr How to make Google's 'autocomplete' [xpost /r/Python]", "Skip content Sign Sign repository Explore Features Enterprise Blog Watch 14 Star 183 Fork 13 rodricios autocomplete Code Issues Pull requests Pulse Graphs HTTPS clone URL Subversion checkout URL clone HTTPS Subversion Download ZIP Autocomplete - adult kid friendly exercise creating predictive program 33 commits 2 branches 0 releases Fetching contributors Python 100 0 Python branch master Switch branches tags Branches Tags gh-pages master Nothing show Nothing show autocomplete Update README md latest commit 9105eb66cd rodricios authored May 14 2015 Permalink Failed load latest commit information autocomplete fixed import statement Mar 21 2015 bin cleaned model loading process Feb 20 2015 gitignore added python3 support except clauses removed pkl file Feb 25 2015 MANIFEST fixed python 3 big txt errrors install fixed relative imports Mar 1 2015 README md Update README md May 14 2015 README rst moved autocomplete py's logic __init__ py conciseness updated Mar 1 2015 setup cfg adding initial files Feb 18 2015 setup py fixed predict_currword's super erroneous logic Mar 4 2015 README md Autocomplete learned stop spelling love AI overlords Autocomplete adult kid friendly exercise creating AI program short time ELI5 section devoid nomenclature lengthy tl dr section describes implementation using appropriate terms - basic principles conditional probability generalized Markov chain - short concise includes references reading Skip to's New Spell Correction tl dr Motivation ELI5 you're 5 Afterword install pip install autocomplete use import autocomplete load pickled python Counter objects representing predictive models use Peter Norvigs big txt http norvig com big txt create predictive models autocomplete load imagine writing b autocomplete predict 'the' 'b' 'blood' 204 'battle' 185 'bone' 175 'best' 149 'body' 149 type o autocomplete predict 'the' 'bo' 'bone' 175 'body' 149 'bones' 122 'boy' 46 'bottom' 32 'box' 24 Spell Correction say process typing body preceding autocomplete predict 'the' 'bo' 'bone' 175 'body' 149 'bones' 122 'boy' 46 'bottom' 32 'box' 24 make fatal error typing f instead d autocomplete predict 'the' 'bof' 'body' 149 'bottom' 32 'borzois' 16 'bottle' 13 'bodies' 13 'border' 12 Relax Autocomplete covered Using simple fat-finger error model rest assured won't making six-hundred billion dollar mistakes Japanese investment firm language model form described ELI5 use models submodule call training method autocomplete import models models train_models 'some giant string text' Want run server bottlepy required import autocomplete autocomplete run_server output Bottle v0 12 8 server starting using WSGIRefServer Listening http localhost 8080 Hit Ctrl-C quit head http localhost 8080 bo http localhost 8080 bo output body 149 box 24 bottom 32 boy 46 borzois 16 bodies 13 bottle 13 bones 122 book 14 bone 175 http localhost 8080 bos output boscombe 11 boston 7 boss 1 bosom 5 bosses 4 Obligatory tests python setup py test tl dr following code excerpt interpretation series lessons concepts expressed number different books unifying concept said conditional probability P B P B P read saying probability B occuring equal probability B occuring given occured preperation step every word corpus normalize 'The' - 'the' insert list WORDS helpers re_split corpus first model - P word Counter constructor take list elements create frequency distribution histogram WORDS_MODEL collections Counter WORDS another preperation step b c d - b b c c d WORD_TUPLES list helpers chunks WORDS 2 second model - P next word prev word interpret prev word saying dictionary key leading seperate smaller WORDS_MODEL freq dist WORD_TUPLES_MODEL first collections Counter first second WORD_TUPLES prev_word next_word WORD_TUPLES called conditioning step assert probability space possible next_word 's conditioned event prev_word occurred WORD_TUPLES_MODEL prev_word update next_word Textbooks locations therein concept-in-practice expressed Intro Statistical Natural Language Processing - Manning Sch tze 1999 frequency distribution showing common words frequencies Tom Sawyer pg 21 b conditional probability definition expressed page 42 - section 2 1 2 c intuition frequency distributions found pg 153 provided context finding Collocations http en wikipedia org wiki Collocation II Probabilistic Graphical Models - Kohler Friedman 2009 conditional probability definition found pg 18 hilariously coincidentally found section 2 1 2 1 III Artificial Intelligence - Modern Approach - Russell Norvig 3rd ed 2010 conditional probability concept explained pg 485 b language take mean intuition asserting things probabilistic sense pg 486 c notion conditioning found pg 492-494 Motivation Similar motivation behind eatiht found took far long find palpable theory-to-application example amounts 500 pages words across 3 books spanning large index certain cases counter-intuitive nomenclature read light criticisms made Michael Jordan matter recently named 2 machine learning expert need know dataconomy com find similar thoughts expressed article 2008 updated 2009 Brennan O'Connor work dedicated siblings Explain like I'm 5 Warning explanation literally intended young kids - I'm actually trying see concepts explained audience unaware nomenclature used within statistical nlp machine learning fields example 7 9 11 14 y o siblings basically anyone else who's ever read story child - would part target audience you've found readable informative please consider putting goofiest face reading kids please send thoughts experience I'm interested lowering barrier entry included note since beginning sorry undoubtedly left bad taste mouth contact rodrigopala91 gmail com Thanks reading Rodrigo ELI5 I'm explaining like you're 5 know you're 5 guys Chris stop jumping sister's back Ok I'm saying imagine I'm 5 Oh easy huh Let's forget I'm 5 part Imagine giant collection books example Harry Potter Hunger Games novels put together asked go pages words pages I'm asking four actually read books know go beginning end notice word every new word see write put 1 next everytime see word add 1 previous number basically I'm asking y'all keep count many times word comes Got yes cool find sibling friend adult near ask help Say start Harry Potter Sorcerer's Stone Mr Mrs Dursley number four Privet Drive proud say perfectly normal thank much imagine you're 5th word something close you're going Mr - 1 - 1 Mrs - 1 Dursley - 1 - 1 you're wannabe-Harry-Potter fan ah I'm kidding started the-book-that-must-not-be-named - know guys won't get persons age Alright started Hunger Games wake side bed cold sixth word - 1 - 1 wake - 1 - 1 - 1 long day ahead 1 105 285 words later you're done tallying words order words number times you've seen See next week Back soon gotten something like psst remember format word - times word appears 'the' - 80030 'of' - 40025 'and' - 38313 'to' - 28766 'in' - 22050 'a' - 21155 'that'- 12512 'he' - 12401 'was' - 11410 'it' - 10681 there's lot words you've tallied common words less-frequent end you'll find words appearing often 29137 words later 'przazdziecka' - 1 'disclosure' - 1 'galvanism' - 1 'repertoire' - 1 'bravado' - 1 'gal' - 1 'ideological' - 1 'guaiacol' - 1 'expands' - 1 'revolvers' - 1 Yeah Chris Oh 'what lez freekend' mean Um means something like probably won't hear read word often asked help find word I'm looking know word starts letters 'th' I'm pretty sure guys much faster 5 minutes later bad go 29157 unique words 'the' - 80030 'that' - 12512 'this' - 4063 'they' - 3938 'there'- 2972 'their'- 2955 'them' - 2241 'then' - 1558 'these'- 1231 'than' - 1206 229 words 239 words still kind lot though huh know big brother he's lazy work hand cough program cough word I'm looking tip tongue think next letter 1 minute later 'this' - 4063 'think' - 557 'things' - 321 'thing' - 303 'third' - 239 'thin' - 166 'thinking' - 137 'thirty' - 123 'thick' - 77 'thirds' - 43 36 words scan first 10 words Oh remembered next letter 'r' start taking even words 10 seconds later 'third' - 239 'thirty' - 123 'thirds' - 43 'thirteen' - 32 'thirst' - 13 'thirteenth' - 11 'thirdly' - 8 'thirsty' - 5 'thirtieth' - 3 'thirties' - 2 Aha 'thirdly' word looking never heard word thirdly might saying that's pretty cool you're right know what's cooler Making everyone's life tiny bit easier words Aren't words boring dull It's like talk write think words mean lame can't even describe autocomplete thing-slash-idea-thing without write words Ugh hate words Whoah wait minute cool Let's relax minute Let's try give imaginary hug word-factory brains part brain works hard even don't ask nice brain I'm trying say sometimes it's nice brains distract us especially homework real-world problems like adult-homework mental exercise let's try think next sentence coming mouths you're thinking coming mouth mouth mouth mouth mouth you're wrong readers aren't one 4 younger siblings that's many Try best think next sentence coming mouth decide sentence Good asked give two good reasons explaining chose sentence chose Wait can't even Let's make easier Let's try answer chose first word Still pretty hard huh thought pretty darn hard give good honest reason chose word chose it's alright like couch-scientists let's make guess guess brain probabilistic machine feel like don't get word probabilisitic probability means sure use word probably one sentences try make sense Ok mean Well let's consider English language Like things English language rules kind rules simplified 1 something action something 2 Replace something's action words make sense Fair enough right imagine brain essentially rules branded recorded Ok I'm starting make much sense huh many times heard bed Brush teeth Let's get food one guys may heard exact sentences I'm trying say makes sense right probably heard certain sentences often others imagine could put pause right first word comes mouth Let's say first word case stuttered reasons outside conscientious control example thhh thhe big deal meant say let's flatten word said words think might said might tell word want course could bet spent millisecond thinking whether next word going say going guaiacol know thought using word remember first time heard read guaiacol like yesterday read funky article internet found word list words don't appear often English language read able fit guaiacol nicely part brain uhh able uhh Oh know place brain get choose whether want say apple automobile austronaut etc Ok clearly I'm brainician may may way brain works even though idea might wrong idea sounds like pretty darn good way suggesting next word words somebody trying type way count number times you've heard apple said word Ask question word automobile instead apple time think every possible word you've ever heard spoken word I'd say might looked something like Words might heard following word number times might heard 'same' - 996 'french' - 688 'first' - 652 'old' - 591 'emperor' - 581 'other' - 528 'whole' - 500 'united' - 466 'room' - 376 'most' - 373 9331 words impressed brain yet Let's continue little thought experiment Imagine said could put pause first letter next word mouth h Real quick think shortest amount time think Think shortest second think shorter point can't even call length time second length time brain may done Every word you've ever heard coming word 'house' - 284 'head' - 117 'hands' - 101 'hand' - 97 'horses' - 71 'hill' - 64 'highest' - 64 'high' - 57 'history' - 56 'heart' - 55 brain got realllllyyyyyy fast Faster Google Bing Yahoo company ever hope beat brain without even asking permission think brains trying control us guys oh Thanks reading far folks Please go afterword resources I've found useful building intuition writing article Also it's much ask consider following tweeting friends family support appreciated rodricios you're 5 basic idea Assume large collection English-understandable text merged single string Start transforming string list words AKA ngrams word-legth also required normalize word 'The' - 'the' normalized list words start building frequency distribution measuring frequency word point start predict final state word-in-progress consider case user types query box th intends write third predictive model you'll suggesting something like 'the' 80030 'they' 3938 'there' 2972 explains one specific type predictive model written P word you've seen pitfalls using model next word ask what's probability I'm going type word apple given wrote tasty machine learning AI books you'll presented Conditional Probability following equation P word word B P word B word P word equation addresses problem mentioned We've handled P wordA already handle P word B word reads probability word given word B take literall interpretation word given context mean following word key pointing probability distribution representing words follow word represent second model also apply filtering step - given know letters second word zone precise suggestions Afterword notes give shout Sam Harris AFAIK first person one firsts wonderfully putting words I've borrowed slightly adapted writing highly recommend work Another shoutout Peter Norvig inspiring probably many others little toy programs Occam's Razor approach problem solving likely cause confusion may appear work almost full copy-paste Write Spell Checker swear it's actually think may out-Norvig'ed Peter Norvig comes describing conditional probability P wordA wordB P wordB wordA P wordA another one Rob Renaud's Gibberish Detector pure chance ran project time running Norvig's article can't describe much helped intuitively understand heavy hitters AI consider introductory material greatly needed b c time felt overwhelmed desire really understand area everything else going second article exact thing expressed differently audience non-programming may may posted soon Oh code someone hasn't gotten translating article code get uploading project P I'm trying get kinks code it's simple duh dedicate work sisters Cat Melissa Christine favorite brother Christian note 1 go back avoid confusion wrote section form letter younger siblings note 2 I'm borrowing consider one beautiful thought experiments I've ever heard trying describe one's self I'm big fan Sam Harris's work Highly recommend Status API Training Shop Blog 2015 GitHub Inc Terms Privacy Security Contact Something went wrong request Please try"),
('Carnegie Mellon Accepts, Then Awkwardly Un-Accepts, 800 Applicants For Its Comp-Sci Program', 'BustleNewsEntertainmentFashion BeautyLifestyleBooksExplore Hello Bustle com works JavaScript Please enable refresh page'),
('The recursive best-first search algorithm, the jack of all trades?', 'Skip content Maker Maker Approach Artificial Intelligence Primary Menu Home GitHub RSS Contact recursive best-first search algorithm February 19 2015 atrilla recursive best-first search RBFS algorithm simple recursive algorithm attempts mimic operation A-star search e standard best-first search evaluation function adds path cost heuristic using linear space instead showing exponential space complexity structure RBFS similar recursive depth-first search tree-search version rather continuing indefinitely current path uses evaluation limit keep track best alternative path available ancestor current node see Figure 1 Figure 1 RBFS applied graphical map Germany Frankfurt M nchen RBFS applied graphical map Germany RBFS robust optimal heuristic admissible still suffers excessive node regeneration due low memory profile entails long processing time Given enough time though solve problems A-star cannot solve runs memory Figure 2 Recursive best-first search algorithm -- Recursive best-first search algorithm -- -- PRE -- problem - cost-weighted adjacency matrix table -- start - starting node index number -- finish - finishing node index number -- heuristic - must heuristic node level table -- -- POST -- solution - solution path table State set zero failure -- -- implementation cost vector -- path_cost heuristic_cost function recursive_best_first_search problem start finish heuristic -- inits local node node state start node parent node cost 0 heuristic start return rbfs problem node finish heuristic math huge end function rbfs problem node finish heuristic flimit node state finish return node else local successors -- action problem given state 1 problem problem node state 0 node state local child state local path j 1 node parent table insert path node parent j end table insert path node state child parent path child cost node cost 1 problem node state heuristic table insert successors child end end end successors 0 return state 0 end true -- 1st 2nd lowest fval successors local best successors 1 local alternative best successors 1 alternative successors 2 best cost 1 best cost 2 alternative cost 1 alternative cost 2 best alternative alternative best end 3 successors -- check best successors cost 1 successors cost 2 best cost 1 best cost 2 alternative best best successors elseif successors cost 1 successors cost 2 alternative cost 1 alternative cost 2 alternative successors end end end local bestf best cost 1 best cost 2 local alternativef alternative cost 1 alternative cost 2 local result bestf flimit result rbfs problem best finish heuristic math min flimit alternativef else node cost 1 best cost 1 node cost 2 best cost 2 return state 0 end result state 0 return result end end end end Regarding implementation see Figure 2 RBFS algorithm depicted AIMA somewhat puzzling take account scenario one single successor Note former code specifically tackles issues final algorithm behaves expected RBFS made end chapter 3 course former posts reviewed practical search methods able solve many types problems AI like puzzles robot navigation famous travelling salesman problem addition language processing field also need search algorithms solve problems speech recognition parsing machine translation fancy applications targeted due time following posts idea classical search seen far generalised cover broader scope state-spaces Stay tuned Posted Search Post navigation Bye Octave hello Lua Local search hill climbing algorithm Leave Reply Cancel reply email address published Required fields marked Name Email Website Comment may use HTML tags attributes href title abbr title acronym title b blockquote cite cite code del datetime em q cite strike strong Search Recent Posts Artificial Neural Networks point Gradient-based methods closer look problem state encoding genetic algorithms electronics genetic algorithms simulated annealing algorithm Follow ai_maker Facebook AI-Maker LinkedIn SubscribeLeave Blank Change email Categories Electronics Optimisation Search Uncategorized Archives May 2015 April 2015 March 2015 February 2015 January 2015 December 2014 Proudly powered WordPress Theme Plainly Chris Rudzki'),
("UT Austin computational science institute supports solving 'Grand Challenges' in science and engineering", 'browser support JavaScript Skip main content Facebook Twitter LinkedIn Flickr YouTube RSS Feed sysnet webmail admin Facts Figures Events News Relocation Info Job Opportunities ICES Style Guide Graduate Studies Admissions Course Information CSEM CAM Alumni CS CSEM Joint Degree CSEM Faculty Funding Fellowships Student Resources Student Success Research Centers Groups Consortiums Faculty Books Reports Programs CSEM Graduate Studies JTO Fellows Postdoctoral Fellows Moncrief Endowed Positions Moncrief Grand Challenge Faculty Awards Moncrief Undergraduate Summer Internship CSE Certificate Program Carey Scholarship People Faculty Visitors Researchers Students Staff Directory search Home Feature Stories Meeting Challenge Institute award supports faculty search grand challenge solutions Meeting Challenge Institute award supports faculty search grand challenge solutions vantage point 21st century bulky wired-tethered computers 1980s stand particularly high-tech back consumer computers getting start U government already realized computing technology would power broker future bottom line country seeks control future must effectively exploit high performance computing reads report White House Science Council 1985 jumpstart direct computational research U government designated list broad research goals 1987 Grand Challenges defined two essential characteristics status fundamental problem science engineering solutions would enabled high-performance computing resources Examples original list challenges include computational fluid dynamics design hypersonic aircraft efficient automobiles improved weather prediction plasma dynamics fusion technology computations speech recognition computer vision automated reasoning Much progress made new challenges added since first list forefront Institute Computational Engineering Sciences institute uniquely suited tackle Grand Challenges interdisciplinary research centers high performance computing resources Texas Advanced Computing Center promote challenges institute offers unique research award Moncrief Grand Challenge Awards award gives faculty ideas tackle Grand Challenges time money jumpstart work recipients receiving 75 000 fund research semester teaching Despite uncertainty type exploratory science necessary make breakthroughs according Institute Director J Tinsley Oden re looking challenges truly grand challenges meaning yet know meet challenge going high risk basic research Oden said important problem know solve challenge Recent award winners made important progress areas across including computational material modeling pathway simulation visualization unites classification Grand Challenge worthy work Read hear three recipients used award advance science check back institute March hear received 2015 awards Ganesan Polymer Membrane Models beverage bottles dialysis machine filters polymer membranes used across industries gatekeepers making sure molecules stay others effectiveness different materials best understood macroscopic level measuring concentrations particular substance either side membrane routine chemistry However understanding molecular properties influence macroscopic ones connections two scales much fuzzy Venkat Genesan holds Kenneth Kobe Professorship Chemical Engineering used 2014 Grand Challenge Research award improve understanding polymer behavior modeling transport materials polymers microscopic level question translation results Ganesan said understand happening microscopic level extrapolate happen macroscopic level able precisely refine membrane function could help engineers make membranes specifically optimized certain tasks water desalination better functioning batteries Ganesan said support Grand Challenge Award allowed try new research directions collect preliminary evidence models put toward formal proposal Grand Challenge Award gives much freedom take risks stepping stone put regular proposal somewhere else Ganesan said bottom line allows get preliminary results without worrying funding Landis Breaking New Ground anyone inadvertently cracked smart phone screen knows cracking patterns take complex multi-branched path Chad Landis professor aerospace engineering engineering mechanics member ICES Computational Mechanics Group used 2012 Grand Challenge Research Prize create program generate path crack driven pressured fluid environment program won anything help fix cracked electronics understanding crack pattern propagation important part improving fracture dependent technologies hydraulic fracturing carbon sequestration several reasons important get good technological understanding cracking processes Landis said whether applied hydraulic fracturing perhaps sequestration re developing tools represent physics accurate way Currently techniques computing crack propagation involve tracking movement crack using specifically encoded rules determine crack moves step space However technique vulnerable failing complex novel situations even coming exhaustive set propagation rules difficult especially three dimensions Looking improve effectiveness crack modeling across applications Landis used award investigate new technique called phase-field method determines crack paths solutions differential equations instead rule-based approaches Landis believes better seamlessly simulates intricate crack propagation patterns arise benefit approach track complex crack configurations Landis said cracks want join intersect bifurcate one two cracks features handled naturally opposed methods would require specifically defined rules handle situations end award Landis research team created phase-field program accounts governing physics crack propagation addition graduate student Zach Wilson working Landis received fellowship multinational oil company Statoil continue research Grand Challenge Award helped research address underestimated challenges modeling said Landis providing time funding focus overcoming Research never goes expected go better handle problems re hoping publication come addresses many problems thought going easy first Landis said Tsai Eye Math find unfamiliar place one best ways navigate make mental map location notable landmarks entries exits hallways intersect curve stop Yen-Hsi Richard Tsai mathematics professor member ICES Center Numerical Analysis used 2013 Grand Challenge Award continue development mathematical algorithm guide map-making process across applications medical scientific imaging robotic surveillance algorithm works analyzing initial input data example remote sensing diffusion MRI readings order make recommendation readings taken efficiently give useful overview area contribution efficiently take measurements achieve best reconstruction want use minimum amount measurements judiciously chosen way Tsai said efficiency factor important aspect work makes feasible practical uses example map-making robot efficient use prevents backtracking extra-readings making speedier results longer lasting battery life really aim Tsai said want develop something new mathematically computationally want make sure things real world connection trying bring impact Fostering transition algorithm application Tsai spent large part Grand Challenge Award meeting research colleagues around globe talked diffusion MRI imaging capabilities University California Los Angeles Brain Research Initiative environment mapping U Department Defense electron microscope imaging cell division Karolinska Institute Solna Sweden Grand Challenge Award great gift able visit colleges relief teaching allows think new problems new approaches problems Tsai said Right papers projects m involved formulated time Posted Feb 19 2015 Facts Figures Mission History Facilities Organizational Structure ICES Boards Advisory Board Board Visitors Policy Board Events Seminars Seminar Reservations Conferences Workshops Past Events News Feature Stories Newsletter Relocation Information Job Opportunities Style Guide Logo Wordmark Powerpoint format use ICES Color Palette Typography ICES Overview Brochure ICES Annual Report ICES Compute Magazine ICES Newsletter ICES Address 201 East 24th St Stop C0200 POB 4 102 Austin Texas 78712-1229 See ICES Map Phone 512-471-3312 Fax 512-471-8694 UT Wordmark Facts Figures Events News Relocation Information Job Opportunities ICES Style Guide Graduate Studies Admissions Course Information CSEM CAM Alumni CS CSEM Joint Degree CSEM Faculty Funding Fellowships Student Resources Student Success Research Centers Groups Consortiums Faculty Books Reports Programs CSEM Graduate Studies JTO Fellows Postdoctoral Fellows Moncrief Endowed Positions Moncrief Grand Challenge Faculty Awards Moncrief Undergraduate Summer Internship CSE Certificate Program Carey Scholarship People Core Faculty Visitors Researchers Students Staff Directory Contact Us Privacy Policy Web Accessibility Institute Computational Engineering Sciences'),
("'Gangnam style' Psy is going to be a keynote speaker at the 2015 Computer Human Interaction conference", "CHI 2015 April 18 - 23 2015 REGISTER Crossings Program Keynotes Opening Plenary Lou Yongqi Tuesday Morning Donghoon Chang Wednesday Morning David Min Thursday Morning Susan Dumais Closing Plenary PSY Opening Plenary Lou Yongqi Crossing HCI Design Sustainability Two great inventions opened era human-computer interaction design desktop mouse disappearing Computers becoming smaller smaller smarter smarter Everyone surrounded many visible invisible computers highly connected Internet ubiquitously new world artificial intelligence emerging intelligence human-being expanded surroundings condensed new kind Intelligent life relationship human-being rest world redefined cross boundaries enable sustainable interaction nature 1st system human-beings 2nd system artificial world 3rd system cyber world 4th system becomes interesting proposition merits new design necessary rethink anthropocentric view even design attractive feature design optimistic makes human human lies one leading kind life merely needs fulfilled also use subjective initiative control conduct behavior certain common value Today sustainability value ethics value surviving use encourage new kind HCI design generate sustainable behaviors social changes redesign commensalism four systems mentioned main focus talk Biography Prof Dr Lou Yongqi Dean College Design Innovation Tongji University Shanghai full professor Tongji Visiting Professor School Art Design Architecture Aalto University Finland Visiting Professor School Design Politecnico di Milano Italy Lou pioneer China design-driven innovation education connects design business technology advances issues leadership two institutions Tongji University College Design Innovation Sino-Finnish Centre also furthers agenda international collaboration Lou leading figure sustainable interdisciplinary design education research practice Lou first designer China connect social innovation sustainable design thinking rural development subject latest book Design Harvests Acupunctural Design Approach Toward Sustainability Lou's design works include United Nations Pavilion World Expo 2010 LiangPing New Jindai Sustainable School funded China-US Center Sustainable Development TsingTao Horticultural Expo 2014 Lou Vice President CUMULUS International Association Universities Colleges Art Design Media Founding Executive Editor Ji Journal Design Innovation Economics published Tongji University cooperation Elsevier 2014 President Finland honoured Lou Order Lion Finland Knight First Class Tuesday Morning Keynote Donghoon Chang UX Design IoT Era current advancement IoT technology accelerated era hyper-connectivity lives vastly driven convergence among different fields along expansion thoughts behaviors However provide meaningful experiences relational expansions unprecedented possibilities opened IoT need founded core human values Furthermore harmonious integration technology design also essential Today would like talk must done order foster IoT human-centered innovation UX design realize well balanced harmonious IoT environment Biography Donghoon Chang Executive VP Head Design Strategy Team UX Center Corporate Design Center Samsung Electronics Since joining Samsung 2006 played critical role establishing company design vision future gradually shifted focus style convenience holistic user experience design developed mid long-term design strategies including Design 3 0 envisions design delivers new meaning delight people contributes society creating sustainable innovative value Chang received two MFA degrees School Art Institute Chicago Chicago USA Seoul National University Seoul Korea worked IBM Korea Time Space Tech inc communications specialist art director respectively joining Samsung professor EWHA Womans University Seoul Korea taught visual design information design well user experience design selected 'the 2nd creative people world' Fast Company 2013 Wednesday Morning Keynote David Min Journey Better Life New technologies devices coming every day along rapid growth internet enhancement hardware performance trends connected tangled era Smart brings us great benefits convenience still many technical hurdles interface obstacles crossed able access massive amount data expense privacy security untie knot strive goal make people lives better matter define role life talk present LG Electronics address goal within aspects software engineering UX design also discuss care delivering innovative products world Biography David Min Senior Research Fellow LG Electronics head Software Center known spearheading one successful SmartTV platforms industry providing superior user experience open API 3rd party developers David studied computer science statistics Seoul National University BS degree computer science Korea Advanced Institute Science Technology MS degree four years work Samsung Co system analyst went USA enroll computer science PhD program University Illinois Urbana-Champaign finishing advanced studies UIUC worked many years various companies computer software consumer electronics industries including Digital Equipment Corp HP Microsoft Samsung Electronics David joined LG Electronics 2006 Thursday Morning Keynote Susan Dumais ACM-W Athena Lecture Large-Scale Behavioral Data Potential Pitfalls last decade rise web services made possible gather traces human behavior situ scale fidelity previously unimaginable Large-scale behavioral data enables researchers practitioners detect adverse drug reactions interactions understand information diffuses social networks people browse search information individual learning strategies related educational outcome etc Using examples search highlight observational logs provide rich new lens onto diversity searchers tasks interactivity characterize information systems today experimental logs revolutionized way web-based systems designed evaluated Although logs provide great deal information people provide little insight whether satisfied Complementary methods observations laboratory studies panels necessary provide complete understanding support search increasingly core fabric people everyday lives CHI community lead way shaping best practices policy behavioral log studies Biography Susan Dumais Distinguished Scientist Microsoft Deputy Managing Director Microsoft Research Lab Redmond Prior joining Microsoft Research Bell Labs Bellcore worked Latent Semantic Analysis techniques combining search navigation organizational impacts new technology current research focuses user modeling personalization context search temporal dynamics information worked closely several Microsoft groups Bing Windows Desktop Search SharePoint Office Online Help search-related innovations Susan published widely fields information science human-computer interaction cognitive science holds several patents novel retrieval algorithms interfaces Susan also adjunct professor Information School University Washington Past-Chair ACM's Special Interest Group Information Retrieval SIGIR serves several editorial boards technical program committees government panels elected CHI Academy 2005 ACM Fellow 2006 received SIGIR Gerard Salton Award Lifetime Achievement 2009 elected National Academy Engineering NAE 2011 received ACM Athena Lecturer Award Tony Kent Strix Award 2014 Download Slides Closing Plenary PSY Cultural Crossing Local Global Music Technology Media Future Many people think global success song Gangnam Style contributed tremendous success Korean Wave front experts technology human interactions d like share thinking story questions like following effect global social media YouTube global crossing local culture plan utilize new way interacting audience across national cultural boundaries Reflecting great success Gangnam Style main trigger big bang spread Korean wave musician entrepreneur think new process ideation new song global distribution publicity performance song creativity appreciated global audience think technology media future terms creative works looking forward sharing experience opinion CHI 2015 Biography Jai Sang Park better known PSY singer-songwriter record producer rapper entrepreneur best known producing first video YouTube exceeded 1 billion views Gangnam Style still viewed video 2 14 billion views breaking software counter online service provocative irreverent lyrics style led dozens music awards across globe PSY recipient Korea's Ministry Culture Okgwan Order Cultural Merit PSY studied Boston University Berklee College Music addition music performances given speeches Harvard Oxford Universities PSY speaks creative processes impact social media modern cross-cultural society News 19 April 2015 Vote favorite CHI presentation 18 April 2015 Meet local Heroes across Asia made significant contributions field HCI 15 April 2015 Check awesome suite mobile apps CHI 2015 15 April 2015 Video previews available 15 April 2015 PDF version full program available 15 April 2015 ACM's official press release 4 April 2015 Transportation information available See news updates Upcoming Deadlines 17 March 2015 Hotel Reservations 6 March 2015 Early Registration 16 February 2015 Video Previews 5 January 2015 Works-in-Progress Panels Student Design Competition Student Game Competition Student Research Competition Video Showcase SIG Meetings alt chi Workshop position papers 6 October 2014 Case Studies Workshops authors Courses Doctoral Consortium Interactivity 22 September 2014 Papers Notes Hero Sponsors Champion Sponsors See sponsors copyright 2014 ACM SIGCHI"),
('Researchers use HPC to track the atmospheric rivers, like the pineapple express, that dump rain on the West Coast. Crossposted to /r/HPC, /r/climatechange', 'SC Home SC Organization SC Jobs Contact SC DOE Home Feature Filling Standard Model boost computing Archive Kernels Data efficiency blooms ROSE Framework Archive Big Iron Utah team turns computing design clean oxy-coal boiler Archive Universities Modeling self-healing materials repair fissures turbines Archive Synchronized Program takes long deep view Earth evolving surface Archive Genealogy Code library gains renown simulation-tackling tools Archive New Faces Exploring hidden structures slash computational cost Archive Exascale Science Panel lays top 10 list exascale computing hurdles Archive Devoting many processors extreme-weather processes Posted February 19 2015 Pineapple Express Click image enlarge information Throughout winter flooding punctuated California extreme lengthy drought Rains slammed Bay Area particularly hard Greenhouse gases aerosols minuscule airborne particles pollution dust salt may exacerbating weather extremes understand leads deluges improve precision modeling extreme weather climate processes researchers Pacific Northwest National Laboratory PNNL running supercomputer simulations U Department Energy DOE ASCR Leadership Computing Challenge ALCC PNNL Laboratory Fellow Ruby Leung colleagues simulated heavy precipitation resembling December deluge Philip Rasch PNNL chief scientist climate science modeled effects water cycle aerosol greenhouse gas processes emission sources weather local Leung work focuses water cycle particularly events atmospheric rivers narrow precipitation filaments captured satellite images Pacific tropics move eastward pump water vapor far western United States winter One famous atmospheric river Pineapple Express thought contribute greatly extreme rainfalls Pacific Northwest floods winter happened atmospheric rivers made landfall giant systems part story Like politics precipitation local Rain fall one locale dry 10 kilometers km away Yet climate models represent precipitation kind frequent Seattle-like drizzle Real rain snow may irregular fall anything downpour mist 1 2 3 Print Next Synchronized looks engineering science computing mathematics projects cross disciplinary institutional boundaries CONTACT Ruby Leung Pacific Northwest National Laboratory ruby leung pnnl gov RELATED LINKS OCLF ACME project page CalWater coverage Nature Home Archive Subscribe ASCR Home ASCR SC Jobs Contact SC SC Web Policies DOE Phone Book DOE Employment DOE FOIA DOE Privacy Policy DOE Web Policies DOE Fear Act DOE Small Business DOE Information Quality E-Gov White House USA Gov'),
('The Genetic Algorithm - Explained', "Tech-Effigy Concepts made Simple Menu Widgets Social Links Search Skip content Home Dribbble Facebook Flickr Instagram Pinterest Tumblr Twitter RSS Feed Translate Joseph Armstrong View complete profile Total Pageviews Search Tuesday 17 February 2015 Genetic Algorithm - Explained Paradigm Evolution Every organism contains array characteristics - called DNA 2 parents mate create unique child containing mixture parents DNA depending fit survival child determine traits pass future generation Rarely random characteristic enters child's DNA called mutation mutation beneficial organism fit survival rest population mate continue mutation future generations mutation disadvantage organism organism unfit survival won't get opportunity mate cycle continues many generations continue optimize population mixing matching trial error organisms DNA Introduction Genetic Algorithms used generate optimal solution method evolution-inspired search optimization Generally used problems linear brute-force searches viable terms time Travelling Salesman Problem Timetable Scheduling Finding Neural Network Weights Sudoku Trees data-structure etc first requirement DNA encoding scheme suitable representing individuals second requirement evaluation function representing fitness individual Encoding Scheme DNA individual represented array Bit-arrays dynamic encoding scheme examples Notes Research indicates Gray Coding efficient terms binary encoding Trees array encoded add graphic shortly Genetic Process flow diagram Genetic Algorithm step step walk-through process Step 1 Initialize Population population initialized randomly generating collection DNA samples size population depends size problem search space computational time takes evaluate individual time dealing population counts 50 1000 Type DNA Array Boolean Block InitializePopulation Returns Population NewPopulation array DNA Loop 0 PopulationCount Population GenerateRandomDNA EndLoop return Population EndBlock Block GenerateRandomDNA Returns DNA Variable NewDNA DNA Loop 0 LengthOf NewDNA NewDNA GetRandomBooleanValue EndLoop Return newDNA EndBlock Step 2 Evaluate Chromosomes evaluation function determines fit individual comparably rest population important part Genetic algorithm function flawed algorithm produce results evaluation function cannot assign Boolean true false value comparable individuals sorted fittest weakest viable evaluation function finding shortest distance traveled use distance-traveled score assignment classifier assign number correct classifications could use probability score assignment likely individual solution Step 3 Select Fittest Individual three type parent selection methods Fitness Proportionate Selection Tournament Selection Truncation Selection Fitness Proportionate Selection Also known Roulette wheel selection method selecting individuals based probability selected Sort population weakest fittest generate random number within range sum populations fitness iterating sorted population summing individuals score either equals random number greater random number individual selected parent method take long time produce results Block GetSumOfPopulationFitness Population ListOfDNA Returns Integer Variable FitnessSum Integer 0 Loop 0 Population Count FitnessSum FitnessSum Population Fitness NextLoop return FitnessSum EndBlock Block FitnessSelection Population ListOfDNA Returns PopulationIndex Variable SortedPopulation Population Variable RandomNumber Integer Variable FitnessSum Integer Variable Sum Integer SortedPopulation Population Sort Ascending FitnessSum GetSumOfPopulationFitness RandomNumber Random 0 FitnessSum Loop 0 SortedPopulation Count Sum Sum SortedPopulation Fitness Sum RandomNumber Return end Loop well NextLoop EndBlock Tournament Selection Choose fittest individual population usually get good results method Truncation Selection Select top percentage fit individuals Crossover Selected DNA selected individual also known parents need mix match DNA produce new population children call process Crossover using fitness proportionate Selection select new parent every individual population Tournament Selection mate selected parent every individual population Truncation selection could randomly select winning group use fitness proportionate selection winning list mate every individual population 3 ways crossover two DNA arrays 1 point crossover 2 point crossover random crossover Mutate population Mutation allows algorithm introduce diversity population expanding opportunity search unexplored areas search space fitter solutions Mutation implemented giving element DNA array probability 2-5 randomly altered mutation procedure called every child Block MutateDNA paramDNA DNA Returns DNA Variable MutatedDNA array boolean Loop 0 LengthOf paramDNA Random 0 100 98 MutatedDNA GetRandomBoolean else MutatedDNA paramDNA NextLoop Return mutatedDNA EndBlock Stop Evaluation step either stop finding optimal solution generation progressing evolving fitness time factor Note Example algorithm way draft improved Thank Reading Comments welcome Joseph Armstrong Email BlogThis Share Twitter Share Facebook 14 53 Joseph Armstrong 12 comments Older Post Home 12 comments Anonymous17 February 2015 18 56I can't believe work even though evolution isn't real good algorithms based Creationism end sarcasm ReplyDeleteRepliesAnonymous18 February 2015 11 28Yes Every time write program you're creatorDeleteAnonymous18 February 2015 11 53You seem implying God DeleteReplyAnonymous17 February 2015 22 30Great article would like see details benefits costs options available e g use parent selection approach benefits 1-point 2-point random crossover etc ReplyDeleteRepliesAnonymous17 February 2015 23 05If truly l33t use genetic algorithm breed genetic algorithms adjusting crossover probability mutation etc find answer DeleteAnonymous18 February 2015 05 46What algorithm breed algorithms breed algorithms DeleteAnonymous18 February 2015 09 20I think better idea would algorithm breed algorithms breed algorithms breed algorithms DeleteReplyAnonymous17 February 2015 22 53Thanks article Related comment would able include info crossover operators types encodings floating point trees etc ReplyDeleteAnonymous17 February 2015 23 58No need post comment domain name suggestion don't end investing lot time website don't control ReplyDeleteAnonymous18 February 2015 04 18the four letters C G really two symmetrical ones thats list int country means maybe ReplyDeleteAnonymous18 February 2015 15 31Looks like gods ReplyDeleteAnonymous19 February 2015 12 30It might easier understand biological process stage mimicking briefly described step might help pull points place functionally related 'genes' 'chromosome' close adopt single 2-point crossover likely move together e display degree linkage generation ReplyDeleteAdd commentLoad Blog Status Found new Algorithm - Firefly Algorithm Going one first write tutorial Blog Archive 2015 4 February 1 Genetic Algorithm - Explained January 3 Powered Blogger Copyright Tech-Effigy Powered Blogger Design Automattic Blogger Theme NewBloggerThemes com"),
('Question regarding the Lemke-Howson algorithm and degenerate bimatrix games', "current community chat blog Mathematics Mathematics Meta communities Sign log customize list stack exchange communities Stack Exchange sign log tour help Tour Start quick overview site Help Center Detailed answers questions might Meta Discuss workings policies site Mathematics Questions Tags Users Badges Unanswered Ask Question Take 2-minute tour Mathematics Stack Exchange question answer site people studying math level professionals related fields It's 100 free registration required Lemke-Howson pivoting degenerate bimatrix games vote 2 vote favorite I'm working implementation Lemke-Howson algorithm finding Mixed Nash Equilibria bimatrix games I'm running roadblock algorithm fed degenerate game example consider following payoff matrix begin align begin array c c c c L M R hline 1 3 3 3 3 1 B 3 1 1 1 3 3 C 1 3 3 1 3 3 hline end array end align corresponding tableaus game begin array c r_1 1 - y_4 - 3y_5 - 3y_6 r_2 1 - 3y_4 - y_5 - 3y_6 r_3 1 - y_4 - 3y_5 - 3y_6 end array begin array c s_4 1 - 3x_1 - x_2 - 3x_3 s_5 1 - 3x_1 - x_2 - x_3 s_6 1 - x_1 - 3x_2 - 3x_3 end array Following description pivoting steps found start bringing x_1 basis immediately run tie applying min-ratio rule s_4 s_5 expected game degenerate arbitrarily choose bring s_5 basis end begin array rcl s_4 -2x_3 s_5 x_1 frac 1 3 - frac 1 3 x_2 - frac 1 3 x_3 - frac 1 3 s_5 s_6 frac 2 3 - frac 8 3 x_2 - frac 8 3 x_3 frac 1 3 s_5 end array Since s_5 removed basis bring y_5 basis next min-ratio rule ties time r_1 r_3 choose bring r_1 basis algorithm terminates leaves begin array rcl vec x 1 0 0 vec y 0 1 0 end array However expected MNE game begin array rcl vec x 0 5 0 5 0 vec y 0 0 1 end array first pivoting step choose break tie bringing s_4 basis bring y_4 s_2 unique application min-ratio rule therefore bringing x_2 s_6 another unique application min-ratio rule algorithm terminates correct answer break following tie r_1 r_3 choosing r_1 break ties min-ratio rule pivoting get correct MNE game linear-programming game-theory combinatorial-game-theory nash-equilibrium share improve question edited Feb 17 22 38 asked Feb 17 7 36 xjtian 1254 add comment 1 Answer 1 active oldest votes vote 1 vote accepted use lexicographic degeneracy resolution particular lexicographic minimum ratio test Actually notes cite mention correctly using infinitesimal perturbations obtain good tie-breaking rule performed polynomial time see section 2 lexicographic method However rule impractical perform hand describe simpler one appears known literature 2 original paper Lemke Howson newer alternative descriptions lexicographic minimum ratio test implementations guide Lemke-Howson algorithm described Section 3 6 B von Stengel 2007 Equilibrium computation two-player games strategic extensive form Chapter 3 Algorithmic Game Theory eds N Nisan Roughgarden E Tardos V Vazirani Cambridge Univ Press Cambridge 53-78 http www maths lse ac uk personal stengel TEXTE agt-stengel pdf used von Stengel's implementation Lemke's algorithm similar Lemke-Howson algorithm https github com stengel ecta2002 also described Lemke's algorithm Section 3 Efficient computation equilibria extensive two-person games Daphne Koller Nimrod Megiddo Bernhard von Stengel Games Economic Behavior 14 1996 247-259 http www maths lse ac uk personal stengel TEXTE lemke html also used lrs open source implementation look Start e g lrs Revised Implementation Reverse Search Vertex Enumeration Algorithm David Avis http cgm cs mcgill ca avis doc avis Av98a pdf described simplex method linear programming page 36 Chvatal Vasek 1983 Linear Programming New York Freeman share improve answer edited Feb 20 8 42 answered Feb 18 7 09 Rahul Savani 55524 add comment Answer draft saved draft discarded Sign log Sign using Google Sign using Facebook Sign using Stack Exchange Post guest Name Email Post guest Name Email discard posting answer agree privacy policy terms service answer you're looking Browse questions tagged linear-programming game-theory combinatorial-game-theory nash-equilibrium ask question asked 3 months ago viewed 174 times active 3 months ago Blog Stack Overflow Andela partner provide education beyond borders 18 votes comment stats Related -2 Find Nash Equilibrium Cournot Game 7 Finding payoff matrix game 4 Notion Degenerate Two Player Game 1 Finding Nash Equilibria Bimatrix Game 3 Mixed Nash equilibrium non-square matrix game 1 tell two-person game non-degenerate given payoff matrices 1 Calculating value bi-matrix game 1 Pareto optimality - Game theory 0 Sub-game perfection agent indifferent 0 Nash Equilibria simultaneous game four players Hot Network Questions way encoding cryptographic hashes safe source multiple files output one file DNS Always Getting Non-Authoritative Answer broken window Electric airplane - propellor vs turbine jet fact true difference Multiple robots swarm robots Firefox accusing distributing malware site Tikz picture lima handle undeservedly positive feedback Rock Paper Scissors - Alter Egos check statistical significance quickly sum numbers file bought shirt offline correct usage word 'offline' property local homeomorphism descend split surjections Right left representing good bad Help determining whether transformation linear Generate list symbols planets good testers competing see opens bugs Alynn Scientific Mage Career Choice terrible idea aim lower journal paper GBA cartridge batteries ran dry time like GBC GB games run program administrator privileges user login Windows Pick number one ten hot questions question feed tour help blog chat data legal privacy policy work advertising info mobile contact us feedback Technology Life Arts Culture Recreation Science Stack Overflow Server Fault Super User Web Applications Ask Ubuntu Webmasters Game Development TeX - LaTeX Programmers Unix Linux Ask Different Apple WordPress Development Geographic Information Systems Electrical Engineering Android Enthusiasts Information Security Database Administrators Drupal Answers SharePoint User Experience Mathematica Salesforce 14 Photography Science Fiction Fantasy Graphic Design Seasoned Advice cooking Home Improvement Personal Finance Money Academia 10 English Language Usage Skeptics Mi Yodeya Judaism Travel Christianity Arqade gaming Bicycles Role-playing Games 21 Mathematics Cross Validated stats Theoretical Computer Science Physics MathOverflow 7 Stack Apps Meta Stack Exchange Area 51 Stack Overflow Careers site design logo 2015 stack exchange inc user contributions licensed cc by-sa 3 0 attribution required rev 2015 5 28 2614 Mathematics Stack Exchange works best JavaScript enabled"),
("The 'must have' library of any computer scientist", "Indian Institute Technology New Delhi SIGN SIGN ACM Classic Books Series list classic books result poll ACM conducted members named favorite computer science books hope you'll enjoy books Classic Books series computer brain John von Neumann Year Publication 1958 programming language Kenneth E Iverson Year Publication 1962 IBM system 360 principles operation IBM Year Publication 1964 PDF Computation finite infinite machines Marvin L Minsky Year Publication 1967 Formal languages relation automata John E Hopcroft Jeffrey D Ullman Year Publication 1969 PDF Structured programming O J Dahl E W Dijkstra C R Hoare Year Publication 1972 PDF multics system Elliott Organick Year Publication 1972 theory parsing translation compiling Alfred V Aho Jeffrey D Ullman Year Publication 1972 PDF Operating system principles Per Brinch Hansen Year Publication 1973 PDF Compiler construction F L Bauer F L De Remer M Griffiths U Hill J J Horning C H Koster W M McKeeman P C Poole W M Waite J Eickel G Goos J Hartmanis Year Publication 1974 PASCAL user manual report Kathleen Jensen Niklaus Wirth P Brinch Hansen D Gries C Moler G Seegm ller N Wirth G Goos J Hartmanis Year Publication 1974 architecture concurrent programs Per Brinch Hansen Year Publication 1977 PDF Anatomy LISP John Allen Year Publication 1978 Classics software engineering Edward Nash Yourdon Year Publication 1979 Mindstorms Seymour Papert Year Publication 1980 PDF Cryptography data security Dorothy Elizabeth Robling Denning Year Publication 1982 PDF Selected writings computing Edsger W Dijkstra Year Publication 1982 Writing efficient programs Jon Louis Bentley Year Publication 1982 Elements Programming Style Brian W Kernighan P J Plauger Year Publication 1982 Artificial intelligence Elaine Rich Year Publication 1983 Smalltalk-80 Adele Goldberg David Robson Year Publication 1983 PDF Essays computing science C R Hoare C B Jones Year Publication 1989 PDF relational model database management E F Codd Year Publication 1990 PDF Macintosh human interface guidelines Apple Computer Inc Year Publication 1992 PDF 201 principles software development Alan M Davis Year Publication 1995 ACM Digital Library published Association Computing Machinery Copyright 2015 ACM Inc Terms Usage Privacy Policy Code Ethics Contact Us"),
('Highly Distributed Computations Without Synchronization', "BT Contribute Us Purpose Index Exclusive updates Facilitating spread knowledge innovation professional software development Login En Fr Br 1 163 938 Apr unique visitors Development Java Net Cloud Mobile HTML5 JavaScript Ruby DSLs Python PHP API Featured Development Architecture Design Architecture Modeling Scalability Performance DDD BDD AOP Patterns Security Cloud SOA Featured Architecture Design Process Practices Agile Leadership Collaboration Agile Techniques Methodologies Continuous Integration Lean Kanban Featured Process Practices Operations Infrastructure Hadoop Performance Big Data DevOps Cloud APM Virtualization NoSQL Featured Operations Infrastructure Enterprise Architecture Enterprise Architecture BPM Business Alignment Architecture Documentation Governance SOA Featured Enterprise Architecture New York 2015 Jun 08 - 12 San Francisco 2015 Nov 16 - 20 London 2016 Mar 07 - 11 Mobile HTML5 JavaScript APM CloudNoSQLJavaDevOps topics Monitoring InfoQ Homepage Articles Highly Distributed Computations Without Synchronization Highly Distributed Computations Without Synchronization Posted Christopher Meiklejohn Feb 17 2015 Share Read later Reading List Synchronization data across systems expensive impractical especially running systems scale seen institutions deploy applications mobile devices provide Internet Things IoT services cost increase number clients increases also possible synchronize operations clients limited access connectivity makes traditional approaches Paxos state-machine replication inviable coordinating replicated state High-availability fault-tolerance systems also major concern given companies downtime linked directly revenue exemplified Amazon work Dynamo popularized concept eventual consistency one solution problem However there's minimum much state reduced still performing useful distributed computations Consider large mobile gaming company needs share client state across user devices example shared virtual wallet across devices owned particular user shared list items across members team's devices Related Vendor Content Start FREE TRIAL AppDynamics Pro Making Case Big Data Hadoop Enterprise Comparing NoSQL Databases Real-Time Bidding SQL Engine Leads Herd NoSQL Benchmark Comparing Key-Value Store Databases Related Sponsor AppDynamics next-generation application performance management solution simplifies management complex business-critical apps ideal situation would like operations performed using shared replicated data able succeed clients offline However allowing operations performed shared data structures avoiding synchronization vacuous recipe incorrect programs Therefore aim creating deterministic applications operating data structures guarantee convergence event concurrent operations guarantee convergence applications rest article explore basic building blocks crafting applications Conflict-Free Replicated Data Types Conflict-free Replicated Data Types CRDTs provide one solution semantic resolution problem described Amazon's Dynamo paper description highly-available shopping cart problem exists concurrent additions removals items replicated shopping cart result divergence shopping cart case causality tracking mechanisms version vectors vector clocks used determine ordering events system determine operations occurred concurrently Dynamo addresses storing copies divergent item returning copies user next time attempt retrieve key Note Several Dynamo clones surfaced publication original Dynamo paper also take strategy LinkedIn's Project Voldemort Basho's Riak point user supposed resolve conflicting writes write back resolved object shopping cart example two shopping carts joined using set union operation perform resolution -- however depending items set modeled deleted items may resurrected resolution logic Conflict-free Replicated Data Types Shapiro et al formulate model Strong Eventual Consistency SEC object meets criteria object eventually consistent strong convergence property convergence property defined correct replicas delivered updates equivalent state model objects longer susceptible concurrency anomalies objects observe Strong Eventual Consistency designed converge correctly concurrency failure property makes data types powerful ensuring correctness distributed systems especially distributed databases use optimistic replication techniques data types come two flavors state-based rely properties semilattices operation-based space-efficient rely commutativity operations data types take principled approach eventual consistency data structures design encode information events used create metadata resolve concurrent operations deterministically article going focus state-based CRDTs compose conflict-free replicated data types programs ensuring strong convergence properties individual CRDTs preserved composition Distributed Deterministic Dataflow solve problem turn deterministic dataflow programming form functional programming series agents processes synchronize binding variables shared single-assignment variable store following figure shows example processes communicating shared constraint store detail model see Chapter 4 Concepts Techniques Models Computer Programming following figure shows example processes communicating shared constraint store model represents shared variable store P1 P2 processes store provides two primitive operations read bind read blocking operation store read variable operation block variable bound bind operation allows assignment variable store particular value value another variable What's join-semilattice extend model state-based conflict-free replicated data types previously discussed Recall state-based conflict-free replicated data types rely monotonicity properties join-semilattices what's join-semilattice join-semilattice partially ordered set binary operation called join join operation associative commutative idempotent computes least upper bound respect partial order give example natural numbers form lattice join operation max operation Generalizing join-semilattices start looking single-assignment case lattice Consider following generalize model allow variables re-bind long update inflation trigger bind new state higher lattice Let's walk example see works example simplicity assume single-assignment version dataflow language allows variables bound natural numbers represent unbound state represent error state lattice serves state chart shows directions variable state allowed travel case change unbound variable value 1 2 3 however value bound attempt change value move error state Consider following natural number lattice computes maximum observed value example subsequent bind operations compute join argument passed operation current value result join used value variable Similar think state chart long number keeps increasing continue change value whereas triggered error subsequent change Additionally extend model provide additional primitive similar related threshold read operation described Kuper LVars lattice-based data structures deterministic parallelism additional read primitive takes activation value prevents read operation completing variable read's value equal strictly higher semilattice order Distribution Distribution also important high-availability fault-tolerance model assume either replication variable data store replications entire applications Model model assumes Dynamo-style partitioning replication data model use hash-space partitioning consistent hashing break hash space group disjoint replication sets group replicas responsible full replication data within set shown following Figure Click image enlarge Replication variables partitioning replicating variables assume client application run outside cluster spread across series nodes internal external cluster operation bind read turned request sent across network cluster responsible managing constraint store either succeeds fails based whether quorum replicas contacted shown Figure b Replication applications also provide ability run entire application replicated introducing two new primitive operations register remotely load program execute remotely execute program Consider case program going operate data stored one replica set rather run entire application remotely perform round-trip quorum operations replica set push entire application replica set execute application get results simply select one replicas results return user shown Figure c applications Let's look example application requires communication series clients servers eventually consistent advertisement counter re going look Erlang code written using library called Lasp implements programing model ve discussing Advertisement counter Here's example advertisement counter written prototype programming language called Lasp supports programming model discussed article made two sets coordinating processes Servers Responsible tracking advertisement impressions clients Clients Responsible incrementing advertisement impressions example use grow-only counter refer G-Counter grow-only counter counter handle concurrent increment options safe convergent manner cannot track decrements doc Client process standard recursive looping server client Id Ads - Receive messages server processes receive Respond view advertisement message view_ad - Choose advertisement display simply choose first item list Ad hd Ads Update ad incrementing value issue update increment counter ok _ lasp update Ad increment Id increment Id Value client Id tl Ads Ad remove_ad Ad - Remove ad client Id Ads -- Ad end snippet initialize series clients given list advertisements responsible displaying user clients represent processes running client near end user client process handles three things returning list active advertisements viewing advertisements removing advertisements use simple recursive process blocks receiving messages perform operations request view advertisement arrives choose advertisement display increment counter particular advertisement bind operation succeeds case value pushing back constraint store inflation lattice counter ever going grow Next initialize one server process per advertisement code looks like doc Server functions advertisement counter server Ad Clients - Perform blocking read unblock counter reaches least 5 ok _ _ lasp read Ad 5 client send message telling client disable advertisement displayed lists map fun Client - Tell clients remove advertisement Client remove_ad Ad end Clients Print message screen advertisement limit reached io format Advertisement p reached display limit Ad server processes performs threshold read counter advertisement tracking threshold read operation block thereby suspending execution server process counter reached least five impressions threshold reached server process unblock notify clients stop displaying advertisement go programming model eventually consistent computations still much early stage development continues on-going research driven requirements industry partners feedback reference implementation terms features identified series work planned explore next year development programming model examples work include following Causal consistency changes needed programming model distribution model support causal consistency possible programming model detect causal consistency required weaker consistency model suffice given program requirements Different distribution models rewrite applications operate particular set data smaller applications operating disjoint subsets executed parallel fault-tolerant manner possible break programs hierarchical sets clients transparently programming model order support offline correct operation Feedback would love hear feedback given large part evaluation based whether programming model makes easier reason program behavior correctness Author Christopher Meiklejohn Senior Software Engineer Basho Technologies Inc contributing member European research project SyncFree Christopher also frequently blogs distributed systems blog Sections Enterprise Architecture Architecture Design Development Topics Database NoSQL Infrastructure Riak IaaS Cloud Computing Distributed Document Oriented Database Big Data Infrastructure Java Big Data Related Editorial Hello stranger need Register InfoQ account Login login post comments there's much behind registered Get InfoQ experience Tell us think Allowed html b br blockquote li pre u ul p Email replies messages thread Community comments 1 million ads Anton Kalyaev Posted 1 million ads Anton Kalyaev I'm expert question may seem silly Isn't bad create one server process per advertisement 1 million advertisements processes consumes resources memory etc although asleep Perhaps would better receive kind notification lasp reach certain limit closest analogy would select system call Linux'es en wikipedia org wiki Select_ Unix Reply Back top Close View Reply Back top Close Subject Reply Quote original message Allowed html b br blockquote li pre u ul p Email replies messages thread Close Subject Reply Allowed html b br blockquote li pre u ul p Email replies messages thread Close 1 Discuss Popular 10 days 40 days 6 months Microsoft Edge Performs Better Chrome Firefox Serious Red Hat Linux Bug Affects Haswell-based Servers WCF Open Source 2 Microservices Premium 1 Full Stack Web Development Using Neo4j Microsoft Forks Node js Support ARM Java Turns 20 1 Web Frameworks Benchmark 2015 1 Mono 4 0 Released C 6 2 Introducing F 4 0 Visual Basic Back Popular Demand 16 Google Proposes Enhance JSON Jsonnet 8 Stroustrup Thoughts C 17 - Interview 1 Scaling Microservices Gilt Scala Docker AWS Modern JavaScript Developer Toolbox 8 React js Real Life Codecademy Chrome 42 Disables NPAPI Related Plug-ins Java Unity Silverlight 3 5 Advanced Java Debugging Techniques Every Developer Know 3 JavaScript Frameworks Real World 8 Scaling Docker Kubernetes 4 Big Data Processing Apache Spark Part 1 Introduction 3 Educational Content Articles Presentations Interviews Books Research Using Experiments Data Innovate Build Products Customers Actually Use Ben Linders May 28 2015 Migrating Team Visual Project Management Software Aleksandr Peterson May 27 2015 Interview Eike Stepper Eclipse Oomph project Eike Stepper May 27 2015 Doodles Delivery API Design Process Ronnie Mitra May 26 2015 Camille Fournier Consensus Systems ZooKeeper Etcd Consul Camille Fournier May 25 2015 Dealing Politics Agile Lean Teams Ben Linders May 25 2015 Older Sponsored Links InfoQ Weekly Newsletter Subscribe Weekly email newsletter follow new content InfoQ Home topics QCon Conferences us Contribute Purpose Index Create account Login QCons Worldwide BeijingApr 23-25 2015 Tokyo April 21 2015 New YorkJun 8-12 2015 Rio de JaneiroAug 24-28 2015 Shanghai Oct 15-17 2015 San FranciscoNov 16-20 2015 LondonMar 7-11 2016 InfoQ Weekly Newsletter Subscribe Weekly email newsletter follow new content InfoQ personalized RSS daily content announcements major community updates weekly community updates Personalize Main Interests Development Architecture Design Process Practices Operations Infrastructure Enterprise Architecture affects content see homepage RSS feed Click preferences access fine-grained personalization General Feedback feedback infoq com Bugs bugs infoq com Advertising sales infoq com Editorial editors infoq com Marketing editors infoq com InfoQ com content copyright 2006-2015 C4Media Inc InfoQ com hosted Contegix best ISP we've ever worked Privacy policy BT Close Email Password Login Google Login Twitter Login Facebook Login Microsoft Forgot password InfoQ Account Email Send Email Back login Resend Activation Resend Back login Don't username REGISTER profile up-to-date Please take moment review update Email Address Note updating changing email validation request sent Company name Keep current company name Update Company name Company role Keep current company role Update company role Software Developer Programmer Engineer Senior Developer Engineer Ops Engineer Testing QA Engineer Architect Solution Systems integration focused Architect Technical Application platform specific Enterprise Architect Chief Architect Technical Team Lead Technical Project Manager Senior Management VP CTO CIO Director Scrum Master Team Facilitator Agile Coach Ops Manager Product Manager Business Analyst Product Owner Systems Analyst UX Specialist Company size Keep current company Size Update company size 100 less 101-250 251-500 501-1 000 1001-2500 2 501 Country Zone Keep current country zone Update country zone --- Select country --- Afghanistan Albania Algeria American Samoa Andorra Angola Anguilla Antarctica Antigua Barbuda Argentina Armenia Aruba Asia Pacific Region Australia Austria Azerbaijan Bahamas Bahrain Bangladesh Barbados Belarus Belgium Belize Benin Bermuda Bhutan Bolivia Bosnia Herzegovina Botswana Bouvet Island Brazil British Indian Ocean Territory Brunei Darussalam Bulgaria Burkina Faso Burundi Cambodia Cameroon Canada Cape Verde Cayman Islands Central African Republic Chad Chile China Christmas Island Cocos Keeling Islands Colombia Comoros Congo Democratic Republic Congo People's Republic Cook Islands Costa Rica Cote D'Ivoire Croatia Cuba Cyprus Czech Republic Denmark Djibouti Dominica Dominican Republic East Timor Ecuador Egypt El Salvador Equatorial Guinea Eritrea Estonia Ethiopia Falkland Islands Malvinas Faroe Islands Fiji Finland France French Guiana French Polynesia French Southern Territories Gabon Gambia Georgia Germany Ghana Gibraltar Greece Greenland Grenada Guadeloupe Guam Guatemala Guinea Guinea-Bissau Guyana Haiti Heard Island McDonald Islands Honduras Hong Kong Hungary Iceland India Indonesia Iran Iraq Ireland Israel Italy Jamaica Japan Jordan Kazakhstan Kenya Kiribati Kuwait Kyrgyzstan Laos Latvia Lebanon Lesotho Liberia Libya Liechtenstein Lithuania Luxembourg Macau Macedonia Madagascar Malawi Malaysia Maldives Mali Malta Marshall Islands Martinique Mauritania Mauritius Mayotte Mexico Micronesia Moldova Monaco Mongolia Montserrat Morocco Mozambique Myanmar Namibia Nauru Nepal Netherlands Netherlands Antilles New Caledonia New Zealand Nicaragua Niger Nigeria Niue Norfolk Island North Korea Northern Mariana Islands Norway Oman Pakistan Palau Palestinian Territory Panama Papua New Guinea Paraguay Peru Philippines Pitcairn Poland Portugal Puerto Rico Qatar Reunion Romania Russian Federation Rwanda Saint Helena Saint Kitts Nevis Saint Lucia Saint Pierre Miquelon Saint Vincent Grenadines Samoa San Marino Sao Tome Principe Saudi Arabia Senegal Serbia Montenegro Seychelles Sierra Leone Singapore Slovakia Slovenia Solomon Islands Somalia South Africa South Georgia South Sandwich Islands South Korea Spain Sri Lanka Sudan Suriname Svalbard Jan Mayen Swaziland Sweden Switzerland Syria Taiwan Tajikistan Tanzania Thailand Togo Tokelau Tonga Trinidad Tobago Tunisia Turkey Turkmenistan Turks Caicos Islands Tuvalu Uganda Ukraine United Arab Emirates United Kingdom United States Minor Outlying Islands Uruguay USA Uzbekistan Vanuatu Vatican City Holy See Venezuela Vietnam Virgin Islands British Virgin Islands U Wallis Futuna Western Sahara Yemen Zaire Zambia Zimbabwe State Province Region Keep current state province region Update state province region Subscribe newsletter Subscribe industry email notices sent email validate new email address pop-up close moments"),
('/r/ConTalks - A new place to share interesting programming and tech talks, come join us!', "jump contentmy subredditsannouncementsArtAskRedditaskscienceawwblogbookscreepydataisbeautifulDIYDocumentariesEarthPornexplainlikeimfiveFitnessfoodfunnyFuturologygadgetsgamingGetMotivatedgifshistoryIAmAInternetIsBeautifulJokesLifeProTipslistentothismildlyinterestingmoviesMusicnewsnosleepnottheonionOldSchoolCoolpersonalfinancephilosophyphotoshopbattlespicsscienceShowerthoughtsspacesportstelevisiontifutodayilearnedTwoXChromosomesUpliftingNewsvideosworldnewsWritingPromptsedit subscriptionsfront-all-random gadgets-sports-gaming-pics-worldnews-videos-AskReddit-aww-Music-funny-news-movies-books-history-food-philosophy-television-Jokes-Art-DIY-space-Documentaries-Fitness-askscience-nottheonion-todayilearned-personalfinance-gifs-listentothis-IAmA-TwoXChromosomes-creepy-nosleep-GetMotivated-WritingPrompts-LifeProTips-EarthPorn-explainlikeimfive-Showerthoughts-Futurology-photoshopbattles-mildlyinteresting-dataisbeautiful-tifu-OldSchoolCool-UpliftingNews-InternetIsBeautiful-sciencemore reddit com ConTalkshotnewrisingcontroversialtopgildedwikipromotedwant join sign create account seconds Englishlimit search r ConTalksuse following search parameters narrow results subreddit subredditfind submissions subreddit author usernamefind submissions username site example comfind submissions example com url textsearch text urlselftext textsearch text self post contentsself yes self include exclude self postsnsfw yes nsfw include exclude results marked NSFWe g subreddit aww site imgur com dogsee search faq details advanced search author subreddit remember mereset passwordloginSubmit new TalkConTalkssubscribeunsubscribe1 422 readers 4 users Wiki - Links Videos Follow submission format Talk Title - Speaker Presenter conference date created ar0b MOD community 3 monthsmessage moderatorsMODERATORSar0b MOD bcolbe MOD moderation team get best reddit delivered weekemail subscribe 91011Meta Thread self ConTalks submitted 1 month ago ar0b MOD - stickied post3 commentssharecancelloading 1123DevOps Lean Legacy Environments - Dimitris Papathomopoulos infotechfb com submitted 5 hours ago gpgallardocommentsharecancelloading 2234Elixir Power Erlang Joy Ruby - Dave Thomas goto Aug 12 2014 youtube com submitted 1 day ago ar0b MOD commentsharecancelloading 3123Ease Work - Kent Buck RailsConf 2015 youtu submitted 1 day ago ar0b MOD commentsharecancelloading 4234Version Control Continuous Delivery - Melvin Laguren April 1 2015 laguren net submitted 2 days ago gpgallardocommentsharecancelloading 5678Simple Made Easy - Rich Hickey Strange Loop 2011 infoq com submitted 4 days ago zzzkcommentsharecancelloading 6111213Intro Rust programming language - Alex Chrichton Code Supply 2014 youtube com submitted 6 days ago ar0b MOD commentsharecancelloading 7456Deconstructing Database -Rich Hickey JaxConf 2012 youtube com submitted 5 days ago ar0b MOD commentsharecancelloading 8345Introduction Go - Seth Vargo Code Supply 2015 youtube com submitted 5 days ago ar0b MOD commentsharecancelloading 9234Let's Talk Rust - Yehuda Katz GoGaRuCo 2014 youtu submitted 6 days ago ar0b MOD commentsharecancelloading 10234Spring Cloud Toolbox Distributed Systems - Oliver Gierke Microxchg 2015 infoq com submitted 7 days ago ar0b MOD commentsharecancelloading 11012Faster Objects Arrays - Gil Tene QCON May 2015 infoq com submitted 7 days ago ar0b MOD commentsharecancelloading 12234Media Thinking Unthinkable - Bret Victor MIT Media Lab 2013 vimeo com submitted 8 days ago ar0b MOD commentsharecancelloading 13678Nothing Something - Sandi Metz youtube com submitted 12 days ago Archiszecommentsharecancelloading 14678Watching Watchers Building Sousveillance State - M C McGrath re publica 2015 youtube com submitted 21 days ago msnucommentsharecancelloading 15567Evil DoS Attacks Strong Defenses - Sam Bowne Matthew Prince Defcon 21 - 41 19 youtube com submitted 26 days ago Scytheon3commentsharecancelloading 16121314Why computers - Peter Sewell 31c3 youtube com submitted 26 days ago TreacleMarycommentsharecancelloading 17789Scaling Facebook OpenSource tools - David Recordon FOSDEM 2012 - 51 22 youtube com submitted 29 days ago Scytheon3commentsharecancelloading 18111213How get productive project 24h - Greg Young youtube com submitted 1 month ago chromaticburst2 commentssharecancelloading 19123 Software Security - Study Technology Transfer - Gary McGraw infoq com submitted 1 month ago unregistered88commentsharecancelloading 20012The Secure Social Web - Henry Story bblfish OHM 2013 archive org submitted 1 month ago msnucommentsharecancelloading 21101112My Python's little Rust-y - Dan Callahan PyCon 2015 youtu submitted 1 month ago rouma71 commentsharecancelloading 22456Essential Big O JavaScript Developers - Dave Smith MountainWest JavaScript 2015 youtube com submitted 1 month ago ar0b MOD commentsharecancelloading 238910Programming terrible Lessons learned life wasted - Thomas Figg EMF2012 youtube com submitted 1 month ago msnu4 commentssharecancelloading 24123Thinking Programmers - Leslie Lamport Build 2014 channel9 msdn com submitted 1 month ago ar0b MOD commentsharecancelloading 25000High Performance Quantum Computing - Matthias Troyer Google Dec 2 2014 youtube com submitted 1 month ago ar0b MOD commentsharecancelloading view next aboutblogaboutvaluesteamsource codeadvertisejobshelpsite rulesFAQwikireddiquettetransparencycontact usapps toolsAlien Blue iOS appreddit AMA appmobile betabuttons 3reddit goldreddit storeredditgiftsreddit tvradio redditUse site constitutes acceptance User Agreement Privacy Policy Genitive 2015 reddit inc rights reserved REDDIT ALIEN Logo registered trademarks reddit inc Rendered PID 1145 app-172 2015-05-28 18 03 55 421707 00 00 running 6258777 country code"),
('Using Computer Vision to Improve EEG Signals', 'Learn Amplify Grow Search Mission Team Search Toggle navigation Mission Team Using Computer Vision Improve EEG Signals Posted January 21 2015 Written course CS598 Machine Learning Signal Processing UIUC Title Method Removal EEG Artifacts using Facial Motion Detection ICA Author Austin Walters Esteban Gomez Cole Gleason Abstract Electroencephalography EEG headsets used measure electrical activity subject brain commonly referred brainwaves Readings EEG headsets prone number artifacts due blinks muscle-spasms movement subject much work done remove blinks blind source separation independent component analysis almost methods require training classifier recognize artifacts per-subject 1 2 Additionally methods require training per subject-session due differing quality electrode contacts subject scalp paper presents method automatic detection removal artifacts commercial-grade headsets still much work done success measurements cleaner removal real-time systems method outlined seems initially promising Introduction Electroencephalography EEG common method reading electrical activity brain research medical diagnosis Motivation Signals notoriously difficult manipulate detect correct Particularly electroencephalography EEG signals often convoluted muscle movement 5 200 hz power grid pollution around 60 hz method described intended remove much signal pollution possible related muscle movement using standard laptop camera web-cam methods currently used correct remove noise muscle movement EEG signals require manual training classifier every time subject wears headset Every time headset placed head connection scalp altered slightly classifier trained previous session issues identifying noise useful signals method described designed remove need train classifier finding correlations movement ICA components EEG signal correlation used identify specific component either correct mark possible error advantage need train new classifier every time EEG used takes considerable time noise accurately identified Research Neurofeedback research field Neurofeedback still infancy strides making useful consumers One particularly promising area research steady state visually evolved potentials SSVEP used brain-computer interface BCI application would chess game created Dr Bretl lab University Illinois 3 enabled users play game chess using robotic arm flashing lights SSVEP works stimulating brain flashing light particular frequency say 7 hz creates action potentials neural firing frequency signals picked EEG high accuracy 85 90 percent Unfortunately SSVEP responses seem work best frequency 5 hz 30 hz range frequencies heavily effected muscle movement Thus noise due muscle movement reduced accuracy SSVEP detection one promising methods used BCI today improved well Consumer Headsets Untrained Users brain-computer interfaces today require medical grade EEG However introduction Emotiv OpenBCI headsets surplus consumer grade EEG headsets downside EEGs used uncontrolled environments without expert handling Requiring whole new range EEG signal analysis collection needs developed order account increase noise else many EEGs next useless method account noise correct signals without constant manual training classifier without needing input subject means although subject may expert EEG signal still corrected cleaned consumer EEG used greater effect requirement training classifier reviewing EEG data removed hence consumer friendly less error prone Generating Motion Signal EEG output mixture signals resulting many simultaneous brain processes Since moment brain processing responding many stimuli expected see complex response EEG Outside noise reflected signals include motion artifacts muscle twitches type movements Since responses little significance effects movement categorized noise combining video data EEG becomes possible make accurate distinction undesired desired components brain signals provide insightful analysis relation video EEG output necessary convert video facial motion signal additional complication location EEG sensor determines strong motion artifact recorded means motion signal must spatial component alongside intensity component Facial Detection Image Stabilization motion signal contain useful information area face must compared area across multiple frames user changes position without making facial gestures signal able reflect low motion tracking user frame result algorithm must shift-invariant face location sensitive changes within region interest ROI region interest extracted using OpenCV pre-trained Haar-Cascade 4 facial templates returns region contains user face determined coordinates x However guarantee coordinates ROI exact one frame next even user move always coordinate variation shifts ROI slightly direction unwanted jitter ROI leads adding extra noise motion signal possible interpret x combination true location x random noise xnoise extracting face image overall frame necessary approximate ROI coordinates random noise minimized assumption x random variable possible minimize noise making multiple measurements decrease variance result x approximated averaging output two different facial detection calls facial template Although average increases confidence location face frame little handle inter-frame jitter displacement account necessary shift-invariance ten frame buffer added kept track last nine x values ROI defined average current location previous nine frames Figure 1 Image processing blink result ROI smoothly follows user face throughout frame still sensitive occurs inside case Haar-Cascade 4 calls fail ROI extracted based average x buffer Since user likely move little within ten frames approach permits using recent history predict face located Motion Extraction shift invariant ROI extracted becomes considerably simpler track changes face image mainly different areas face line motion detection scale measure overall changes throughout entire face However mentioned earlier perform useful analysis EEG signal necessary also obtain spatial information result 4 x 4 grid overlaid ROI divide sixteen different regions breaking image fashion instead getting single value conveys changes sixteen different values contain motion portion face Figure 1 overlaid grid divides image concentrates movement two middle quadrants second row grid images provide greater precision interpreting motion data enables detailed analysis EEG signal grid image converted series delta images 5 contain high values regions motion low values remained constant algorithm consists measuring pixel changes current previous next frame Figure 2 Delta images blink delta images Figure 2 correspond grid images previously shown clear blink little motion concentration high values around eyes blink pixel values quadrant delta image summed get overall value representing amount motion quadrant frame technique converting video motion signal seems provide intuitive representative results Since signal conveys intensity location information easy determine moments different events occurred video Figure 3a shows change sixteen signals time arranged correspond respective location subject face Barring training period buffer getting filled beginning high-valued features align blinks Figure 3 Motion response blink Notice regions except 6 7 remain relatively quiet session Figure 3b shows close signals around blink presented Figures 1 2 Note region showed Figure 3b portion red lines Figure 3a red line Figure 3b shows moment presented blink occurred Like seen Figure 2b regions quiet except middle two second row Gathering EEG Data One goals research provide solution remove artifacts commodity EEG headsets much lower quality found medical field low-cost headset provides 14 channels Emotiv Epoc chosen known perform well medical grade devices 6 Next experiment developed collect readings 14 electrodes simultaneously capturing video laptop webcam Experimental Setup experiment consisted subjects performing various facial expressions motions looking camera action performed 20 seconds subjects would switch actions screen indicated last action sequence look screen sub- ject right flashing box meant used establish baseline reading examine SSVEP see Motivation section although proved difficult example expressions scratching face tugging ears pretending talk blinking scratching top head test took approximately 5 minutes total Data Processing Cleaning Using start points video EEG data two signals aligned hand cropped within half second video data hard process due various factors skin color large amounts hair preventing facial detection Additionally subjects exaggerated movements greatly made difficult track face However obstacles overcome using motion signal construction technique previous section EEG data E contained 14 channels sampling rate 129 Hz motion data M consisted 16 channels sampling rate 15 Hz data-sets normalized unit variance zero mean continuing motion data EEG data re-sampled 516 Hz standard sampling rate many medical grade headsets Removing Motion Components Algorithm 1 method removing ICA components contain motion involves first segmenting data small windows E subw Mw authors found success windows 0 25 seconds although experienced acceptable results 3 second windows Different segment sizes appropriate removing different motions example blink occurs less 0 5 seconds scratching head face might take longer Assuming EEG artifacts due motion normal EEG data would statistically independent blind source separation possible performing independent component analysis ICA Ew extract components found bad components could removed original signal could reconstructed remaining ones Psuedocode procedure found Algorithm 1 Similarity Measure Motion EEG Signal measure deciding components remove needed similar methods use classifier trained EEG experts artifacts subject data particular session problematic requires experts ensure headset applied subject particular way ensure quality contacts skin test controlled movement later clean artifacts order achieve results commodity EEG home without expert present unsupervised metric needed simple normed cross-correlation xcorr metric c chosen allowed slight shift invariance two signals may perfectly aligned However due segmenting invariance extend beyond window edges metric shown metric indicator likely EEG segment component correlated motion segment value 1 exactly correlated 0 correlation lag value experimentation various thresholds empirical results indicated 0 8 removed many ICA components contributed artifacts near high levels motion time series original signal reconstructed without bad components Note ICA Algorithms several algorithms choose components tested one performed best ICA implementation EEGLab 7 FastICA 8 performed well segments data would fail converge others Results Overall results method rather mixed method presented identify remove motion-related components nearly effective desired Typically noise high amplitude coincided motion high amplitude removed Additionally analysis frequency domain indicates artifacts introduced reconstruction may harm analysis underlying EEG signal Attempts reduce undesired component threshold 0 8 remove noise resulted large chunks valid data thrown Reconstruction reconstruction part close original signal large portions noise correlated well removed Figure 4a highlights segment signal components removed due high correlation motion signal subject talking Figure 4 artifact detected due high correlation motion Since noise b unrelated subject motion video feed removed images signals presented order EEG signal motion signal removed components reconstructed signal contrast Figure 4b depicts two segments components removed due low correlation left segment noise EEG signal movement subject movement range camera right segment motion little correlated noise cases relevant EEG data seems preserved re-synthesis component analysis provide perfect reconstruction reconstruction close Power Spectral Density Power Spectral Density PSD well known method analysis EEG signals 9 PSD shows amount different frequencies present signal Muscle spasms eye twitches appear 5-200 Hz range Therefore method successful cleaned data similar PSD original data perhaps lees frequencies ranges Figure 5 Analysis frequency domain cleaning However comparisons power boxed ranges Figure 5a Figure 5b reveals power areas increased method seems normalized sorts particular frequencies analysis must done saying definitive cause artifacts possible small segmentation windows cause frequencies introduced components removed Future Work authors recognize results unsatisfying could vastly improved Many avenues enhancement identified unfortunately could implemented due time constraints One potentially impactful use work would way train neural network classifier automatically identify movements associate EEG signals Success Measure analysis results done visual inspection time frequency domains without obvious success metric Typical methods remove artifacts blind source separation experts code artifacts spatial location using heuristics 1 2 Construction comprehensive data-set annotated artifacts associated video would fantastic allow comparison method subjects would also allow method evaluated objectively ratio artifacts removed ratio desired signal preserved Sliding Filter Replace Segmentation Segmentation discrete chunks lead alignment issues motion EEG signals make artifact features unrecognizable Allows shift invariance across entire signal would ideal Additionally segmentation believed cause artifacts introduced power spectral density reconstruction Hopefully sliding filter overlapping windows would fix Alternative Source Separation Algorithms FastICA 8 compared another implementation ICA EEGLab 7 source separation techniques attempted Analysis wavelet decomposition non-negative matrix factoring possible algorithms would interesting Cross-correlation also similarity measure used ICA components motion signals work done study measures Real-Time Systems current system relies lot pre-processing cannot run online modifications motion detection ICA reconstruction portions algorithm system could built process frame second Instead computing Haar-Cascade 4 twice frame motion detection method would modified initially compute SIFT 10 features track optical flow using Lucas-Kanade algorithm 11 applications Neurofeedback applications gaming 3 Conclusions method presented shows preliminary results able remove ICA components correlated facial motion detected web-cam significant improvements must made method robust see Results section benefits offered proposed method similar ones Namely method uses external information video available nonmedical environment using subject camera also requires classification training expert allows subjects perform EEG tests home could used remote diagnosis kits Neurofeedback enhanced learning Finally method may alleviate concerns data quality consumer headsets allowing software post-processing make lower quality electrodes References 1 Jung Tzyy-Ping et al Removing electroencephalographic artifacts blind source separation Psychophysiology 37 02 2000 163-178 2 Jung Tzyy-Ping et al Removal eye activity artifacts visual event-related potentials normal clinical subjects Clinical Neurophysiology111 10 2000 1745-1758 3 Akhtar Aadeel et al Playing checkers mind interactive multiplayer hardware game platform brain-computer interfaces Engineering Medicine Biology Society EMBC 2014 36th Annual International Conference IEEE IEEE 2014 4 Viola Paul Michael Jones Rapid object detection using boosted cascade simple features Computer Vision Pattern Recognition 2001 CVPR 2001 Proceedings 2001 IEEE Computer Society Conference Vol 1 IEEE 2001 5 Lipton Alan et al system video surveillance monitoring Vol 2 Pittsburg Carnegie Mellon University Robotics Institute 2000 6 Duvinage Matthieu et al Performance Emotiv Epoc headset P300-based applications Biomedical engineering online 12 1 2013 56 7 Delorme Arnaud Scott Makeig EEGLAB open source toolbox analysis single-trial EEG dynamics including independent component analysis Journal neuroscience methods 134 1 2004 9-21 8 Hyvarinen Aapo Fast robust fixed-point algorithms independent component analysis Neural Networks IEEE Transactions 10 3 1999 626-634 9 Schwilden Helmut Concepts EEG processing power spectrum bispectrum fractals entropies Best Practice Research Clinical Anaesthesiology 20 1 2006 31-48 10 Lowe David G Distinctive image features scale-invariant keypoints International journal computer vision 60 2 2004 91-110 11 Lucas Bruce D Takeo Kanade iterative image registration technique application stereo vision IJCAI Vol 81 1981 Connect Us Search Recent Posts Y Combinator Rejection Email S15 Batch Y Combinator S15 Application Building Failure Learned Matter 2015 Cozad New Venture Competition UIUC 2015 - Design Frenchtastic eu Back top enjoyed article subscribe via email subscribe via RSS'),
('An intro to data structures with locality of reference-type features', 'Dmitry Peter Borzov borzov ca posts xfast Github Predecessor search Big Data x-fast tries locality reference Abstract intro data structures locality reference-type features review x-fast tries detail talk similar data structures shine Consider set n n integers within range 0 u-1 Let assume need build data structure allows performing following operations efficiently Look check integer x n Update Insert integer n delete one Let check common data structures holding simple sorted array balanced binary search tree whether AVL red-black hash table Lookup Update Sorted Array log n O n Balanced binary tree log n log n Hash Table 1 1 hash table designed optimal two operations best fit modify search operation little bit require returning next closest element exact value within set n 69 1 55 68 100 would want get 68 close enough One see need modification arise applications think couple similar problem modifications return closest element next closest element greater query value call successor element search literature closest one smaller predecessor search One see problems overlap reformulated terms let start implementing one Find predecessor item look integer x set return closest int within set lower value implement Predecessor Search data structures considered Sorted Array search value using binary search turns within set simply take next left value Search Tree approach similar Sorted Array traverse next item left value Hash Table value x within set option look x-1 continue looking lower values stumble upon one within set average distance two values asymptotically u n Lookup Update Predeccessor Sorted Array log n O n O log n Balanced binary tree log n log n O log n Hash Table 1 1 O u n see advantages plain hash table disappear comes predecessor search think way improve hash table performance One way may come mind point store pointers predecessor successor elements elements within u right hash table would enable quick predecessor lookup would break performance Update function Adding value Hash-Table Predecessor Pointers means need update predecessor pointers values new one closest larger one means O u n operations another drawback approach store n set elements u possible values Additionally pointer size bound log u needed store value position total size structure depends u well sum Lookup Update Predeccessor Size Sorted Array log n O n O log n n Balanced binary tree log n log n O log n n Hash Table 1 1 u n n Hash-Table Predecessor Pointers 1 1 u n u log u Reflection Let reflect results little bit see hash table ideal look exact values breaks start inquiring operations locality value starts matter makes sense proper hash function means mathematically unstable one even small increments change hash completely insures values spread homogeneously among hash table buckets time see binary search tree-style data structures quite resielent locality context class problem One say search tree based concept proximity contains information locality X-fast trie data structure combines advantages search trees hash tables Enter X-fast trie Let build bitwise search tree top u elements u values tree leaves makes search tree trie Let mark tree nodes ancestor leave within n black rest nodes keep white nice illustrating graph opendatastructures org implement operations like Predecessor log u nodes within search tree parents leave corresponding value look node marked black nodes black means sorted array log u values corresponding element use binary search find lowest black element traverse left side along black nodes get predecessor value much cost Binary search among log u values would log log u traversing predecessor value 1 Update quite similar simple trie update case adding value ee traverse parent nodes repaint black removing item paint white parent nodes children leaves black log u Memory needed store color black white bits nodes within search tree grows steeply get 2u-1 nodes complete binary trie u leaves hash table comes black -marked nodes within hash table level trie means n entries leave level less equal n 2 second lowest log u hash tables space bound n log u Let sum updating table Lookup Update Predecessor Size Sorted Array log n O n O log n n Balanced binary tree log n log n O log n n Hash Table 1 1 M n n Hash-Table Predecessor Pointers 1 1 u n u log u X-fast trie O 1 O log u O log log u O n log u Toy example easiest way grok operations implemented implement toy case movie tv show titles X-files X-men American History X trope X standing something misterious heavily implied hip often movies titles released first X-movie released since say 1975 find let us build X-fast trie index X-titled movies year release Let consider years 1950 64 2004 M 2 6 - 1 63 range plot M leaves color parent nodes depth levels total x levels x comes u 2 x -1 means got x hash functions store keys black -marked nodes Root level 0 contains one node case blue black one always black long single value within n second lower level 1 contains two nodes order look predecessor movie 1975 start binary search specific level nodes turn white looking corresponding node values within parent nodes find level 3 traverse along left side find corresponding predecessor movie Lolly-Maddonna XXXX 1973 would take add another movie say Real Movie X 1975 would mean need go parent nodes make sure added corresponding level hash functions Practical Examples Comparing search time asymptotics X-fast tries search trees see X-fast shines log N grows faster log log M comes criteria N log M let come practical examples X-fast trie useful Imagine developing flight searching website given datetime expected departure return list upcoming flights Flights updated changed frequently Datetime minutes make possible u values flights specific direction make n set IP network protocols Packet Routing internet router needs redirect IP packets routers IP closest requested one Trackless bitTorrent peer-to-peer networks look content hash nodes IDs closest hash metric assigned tracking content X-fast trie get useful lookup content huge networks large number nodes n log M Hey way see post subject Data Structures locality reference X-fast trie example data structure locality reference tracked Another one famous one would course search tree Together data structures like compose large family cases concept locality matters ones used practice tend share many features x-fast trie case considered easy see wide domain locality-sensitive applications extended multidimensional cases Say geolocation applications would involve ability look objects closest specific point one approach search tree good start sufficiently large maps devise equivalent 2D x-fast trie move fancier solutions Pretty nice huh See also X-fast tries Wikipedia Video lecture subject MIT OCW whole course rad totally must watch'),
('An interesting text summarization algorithm generating keywords too', 'GenoPharmix Genomic Data Science Focused Life Extension Aging Context-controllable Content Summarization Mobile Research See action CyMetica com Request API Acess Paste text example texts FOXO3A Star Wars 50 Shades Grey Raiders Lost Ark Optional Context Controls example result context e g geography apoptosis heat use adjust summary tags 01 02 03 04 05 06 07 08 09 10 context control sensitivity level 01 02 03 04 05 summary size also try entering URL example http en wikipedia org wiki DNA_repair http www sec gov Archives edgar data 1439404 000119312514401389 d788699d10q htm cases may cut paste text Available AI Machine Learning Algorithms Tuatara GS1 - Details GenoPharmix contact API get code 2015 GenoPharmix'),
('Chunked sequences: a fast sequence data structure for parallel algorithms (PDF)', 'PDF-1 5 3 0 obj'),
('Moving Fast with Software Verification', "FacebookResearchOur Research Academic Programs PublicationsEventsBlogSearchPublicationMoving Fast Software VerificationCristiano CalcagnoDino DistefanoJeremy DubreilDominik GabiPieter HooimeijerMartino LucaPeter O'HearnIrene PapakonstantinouJim PurbrickDulma RodriguezNASA Formal Method Symposium 10 AbstractFor organisations like Facebook high quality software important However pace change increasing complexity modern code makes difficult produce error free software Available tools often lacking helping programmers develop reliable secure applications Formal verification technique able detect software errors statically product actually shipped Although aspect makes technology appealing principle practice many difficulties hindered application software verification industrial environments particular organisation like Facebook release cycle fast compared traditional industries deployment formal techniques highly challenging paper describes experience integrating verification tool based static analysis software development cycle Facebook CompilersDownload PaperJoin UsDo want help billion people world connect share View Open PositionsCodeLearn open source tools technologies challenging scaling experiences Go Facebook CodeFacebook 2015AboutCareersPrivacyCookiesTermsHelp"),
('Resource: Learn Swift by Example - Part 2 Enums (x-post: r/p/)', "Make School Overview Education Work Experience Founding Class Admissions Summer Academy Overview Curriculum Success Stories Admissions News Apply Online Courses Make School Summer Academy Online Courses News Apply Menu Learn Summer Academy Learn Summer Academy Browse Tutorials Learn Swift example - Part 2 Enums February 12 2015 part 1 tutorial series discussed power structs Swift missed go read seen often used instead classes increase maintainability code Structs value types copied assignment every receiver private copy safely read modified Today going discuss second useful value type - enum similar structs enums Swift lot powerful Objective-C start article taking look enums work Objective-C we'll move Swift first looking basic use cases diving exciting examples leveraging enums Swift Enums Objective-C Enums Objective-C collections different constants frequently enums used model set different types example use enums model type users application typedef NS_ENUM NSInteger UserType UserTypeRegular UserTypeVIP UserTypeAdmin user class type property type UserType assign value enum following user type UserTypeRegular typical use case enum Objective-C pure C Behind scenes enum entries mapped integer value starting 0 first entry Objective-C line would equivalent one user type 0 that's enums Objective-C enum give integer constants meaningful names Enums Swift Basics use case outlined modeling different user types works pretty much Swift enum UserType case Regular case VIP case Admin class User var type UserType var user User user type UserType Admin simplest case enums used similar Objective-C However two interesting details Swift enum first enum values namespaced name value Regular instead UserTypeRegular Swift automatically namespaces member values name enum UserType Regular enum values Objective-C exist global namespace UserTypeRegular namespacing also allows following short-form user type Admin compiler knows user type declared UserType use name member value without name enum second interesting difference enum values mapped integers type enum values UserType Int default enum values Swift type enum mapped value need old Objective-C behavior members mapped value another type use enums Raw values Swift Raw values Using raw values assign value every enum member declaring enum enum UserType Int case Regular 0 case VIP 1 case Admin 2 create enum raw values need declare type enum name Additionally need assign values type enum member Integers exception don't assign explicit values Swift automatically assign values 0 n enum UserType Int case Regular case VIP case Admin access raw value entry rawValue property UserType Admin rawValue 2 Similarly create enum member raw value var userType UserType rawValue 2 Admin Raw values limited integers also use strings characters floating-point numbers aren't using integers explicitly assign value every enum member far good showed enums Swift used similarly enums Objective-C it's time dive advanced features Enums Swift Advanced Features Enums Swift bunch features didn't Objective-C Enums initializers methods computed properties even conform protocols We're going start exploring another feature called Associated Values believe important enum feature Swift Associated Values Objective-C could already associate values enum members storing integer value enum entry shown beginning tutorial new Firstly associated values allow enum member store data type One enum member store string another member stores integer etc Objective-C working raw value enums Swift members need type e g integer Secondly associated values assigned enum value created enum declared young history Swift language feature commonly used model return result functions Let's dive larger example explain associated values want model bank account bank account cash amount associated also method withdraw money withdrawal amount larger cash amount transaction fails want return error message caller there's enough cash account money get's withdrawn want return new balance caller Depending success failure transaction want return value different type turns modeled nicely enum associated values enum WithdrawalResult case Success Int case Error String see example enum member associated type model possible outcomes one enum member Next let's set bank account cash balance withdrawal function struct BankAccount var cash 100 mutating func withdraw amount Int - WithdrawalResult amount cash cash - amount return Success cash else return Error enough money withdrawal function takes amount withdraw returns value type WithdrawalResult needs marked mutating changing cash amount bank account discussed part 1 tutorial series WithdrawalResult either Success case Error case function checks funds sufficient there's enough cash account requested amount gets withdrawn Success case returned see example enum member associated value needs initialized value correct type - success case needs created Int describes remaining account balance funds insufficient return Error case error case needs initialized String describes error message wrap example let's take look call method consume return value var bankAccount BankAccount let result bankAccount withdraw 99 switch result case let Success newBalance println new balance newBalance case let Error message println message First create bank account default account balance 100 money units withdraw 99 money units store Withdrawal result great way work return result using switch statement create case perform different action possible enum member Using let var keyword also access associated value enum member also note switch statements Swift require break keyword end case success case create immutable variable newBalance holds new balance returned successful withdrawal use balance print message tells user much money left bank account error case bind error message local variable called message print personally one useful ways use enums function needs model multiple different return values consider solution Initializers functions Enums also initializers even functions want show second example give idea could use features Let's assume want model player's turn dice based game rule game player needs roll dice gets value 6 player rolls 6 needs repeat dice roll model turn enum cases would actually use enum complicated one want show functionality example extensive basic enum look like enum PlayerTurn case WaitingToRollDice case Done Int init self WaitingToRollDice turn two different states waiting dice roll completed dice roll completed case want remember result value initializer example pretty simple new PlayerTurn created it's always WaitingToRollDice state Next need add function performs dice roll Add function enum mutating func rollDice - Int let diceResult Int arc4random_uniform 6 1 diceResult 6 self Done diceResult return diceResult first important thing notice function marked mutating Depending result dice roll change enum value WaitingToRollDice Done - mutation change enum value requires mutating keyword function doesn't take parameters returns Int result dice roll Inside function generate random number 1 6 switch Done state dice result smaller 6 Otherwise remain state That's need modeling PlayerTurn remains writing code uses player turn model var turn PlayerTurn var done false switch turn case WaitingToRollDice turn rollDice case let Done result println Player rolled result done true done First create player turn loop variable need done variable Swift 1 2 there's way perform following check turn PlayerTurn Done using enums associated values use switch statements perform checks That's need additional boolean value control wether loop continue code inside loop pretty straightforward check two possible cases player turn value WaitingToRollDice call rollDice function value Done print result dice roll terminate loop setting done true run code often enough making small changes playground file get lucky see case dice actually rolled twice Playground indicate showing many times certain line executed example built simple state machine Conclusion Enums powerful Swift associate values enum members use model functions multiple return results shown bank account example useful error handling also use enums build state machines Enums guaranteed store one possible values point time guarantee used write predictable code possibilities don't end I'm excited see enums used write better Swift code want learn Swift ship original iPhone App iPhone Game attend Summer Academy Stay tuned tutorials series Related Resources great talk Austin Zheng enums pattern matching Swift Back Done Make SchoolSummer Academy Late admissions open Apply Online Navigation Online Academy Tutorials Hour Code Join Make School Spend summer learning build apps games Apply Talk Us ll happily field questions email phone Contact us Register Updates Great you're signed Make School 2015 Make School Rights Reserved Privacy Policy Terms Service Make School Overview Education Work Experience Founding Class Admissions Apply Summer Academy Overview Curriculum Success Stories Admissions Apply News Online Courses Apply Log"),
("Can a Computer Solve Lebesgue's Universal Covering Problem?", "n-Category Caf group blog math physics philosophy Skip Main Content Enough already Skip content Note pages make extensive use latest XHTML CSS Standards ought look great standards-compliant modern browser Unfortunately probably look horrible older browsers like Netscape 4 x IE 4 x Moreover many posts use MathML currently supported Mozilla best suggestion thank surfing ever-increasing number sites web crafted use new standards upgrade latest version browser that's possible consider moving Standards-compliant open-source Mozilla browser Higher-Dimensional Rewriting Warsaw Main Quantum Physics Logic Oxford February 12 2015 Computer Solve Lebesgue Universal Covering Problem Posted John Baez problem hope solve think fun involves computable analysis state problem precisely recall diameter set points AA metric space diam sup d x y x y diam sup d x y x y Recall two subsets Euclidean plane 2 mathbb R 2 isometric get one translation rotation reflection Finally let define universal covering convex compact subset KK Euclidean plane set 2A subseteq mathbb R 2 diameter 11 isometric subset KK 1914 Lebesgue posed puzzle finding universal covering least area Since people using increasingly clever constructions find universal coverings smaller smaller area question whether need unbounded amount cleverness whether could write program solve puzzle actually number ways make question precise let focus simplest Let mathcal U set universal coverings write program computes number much accuracy desired inf area K K inf area K K mathcal U precisely real number aa computable Right know 0 832 0 844115376859 0 832 le le 0 844115376859 dots though Philip Gibbs heuristic argument better lower bound 0 84408 0 84408 le recently wrote letter Greg Egan end d convinced answer yes number aa computable Instead taking time polish letter nice blog article ll copy minimal changes lots things need clarified think would fun conversation end conversation maybe ll theorem Let mathcal X space convex compact sets plane area 1 center mass origin function f 0 f mathcal X 0 infty sending set KK largest value DD subset plane diameter DD isometric subset KK Lebesgue covering problem equivalent finding supremum function ff particular number aa computable iff number sup f K K sup f K K mathcal X computable guess 1s 2 frac 1 2 something like put metric mathcal X namely usual Hausdorff metric m willing guess ff continuous respect metric fact think lose anything restricting attention sets plane lie ball radius 1000 sets mathcal X without property ll long skinny won maximize ff let redefine mathcal X include extra requirement contains sets lie ball radius 1000 mathcal X compact follows Blaschke selection theorem f 0 f mathcal X 0 infty continuous function compact metric space must bounded attain supremum somewhere far proof Lebesgue universal covering problem solution exists universal covering minimal area next question whether compute maximum value ff general fact believe compute maximum value computable function computably compact space books computable analysis hand someone must proved theorem like compute maximum occurs compute maximum value question whether ff computable First mean function f f mathcal X mathbb R computable different choices definition since different approaches computable analysis guess favorite define means f X Y f X Y computable whenever XX YY separable metric spaces equipped computability structure countable dense sequence points whose distances computed arbitrary desired accuracy Suppose x ix_i computability structure XX y jy_j computability structure YY ff computable set triples j ni j n d f x y j 1 n d f x_i y_j lt 1 n recursively enumerable listed computer program example take computability structure mathbb R computable enumeration rationals way listing rationals computer program take computability structure x ix_i mathcal X computable enumeration polygons whose vertices rational coordinates definition computability may sound bit complicated basic idea roughly compute f x f x_i function ii whatever accuracy want function f f mathcal X mathbb R computable technical sense Actually quite right general ff changes rapidly unpredictable way might able compute accurately want points x ix_i still dark nearby points think ll okay two properties hold ff sequentially computable write program given ii nn computes rational number within 1 n1 n f x f x_i ff computably uniformly continuous function n 0n gt 0 compute m 0m gt 0 d x y 1 m d x y lt 1 m f x f y 1 n f x - f y lt 1 n function ff properties believe computable technical sense Moreover also computable another intuitive sense Namely specify point x Xx X computable way give program m 0m gt 0 give ii d x x 1 m d x_i x lt 1 m Suppose want compute f x f x accuracy 2 n2 n First compute mm d x y 1 m d x y lt 1 m implies f x f y 1 n f x - f y lt 1 n compute f x f x_i accuracy 1 n1 n inequality know f x f x within 2 n2 n back example believe show function example computably uniformly continuous changing shape set little won dramatically change maximum diameter DD contains isometric copy set diameter DD bet something pretty simple like d x y 1 n d x y lt 1 n implies f x f y 1 n f x - f y lt 1 n question boils whether ff sequentially computable compute f x f x_i function ii desired accuracy short principle write program given convex polygon rational vertices computes desired accuracy largest value DD set diameter DD moved rigid motion fits inside polygon sounds hard However probably need think set diameter dd probably enough think polygon diameter dd rational vertices still seems hard tell translated rotated reflected way fits inside chosen polygon completely brute-force search using discretized approximation settle question one shape least specified error epsilon problem going shapes seems hard Hmm maybe probably assume without loss generality shapes convex points computably compact metric space thanks Blaschke selection theorem maybe need check infinitely many shapes translated rotated reflected fit inside chosen polygon finitely many enough shape close ones ve checked probably say computably compact metric space probably standard definition think purposes separable metric space XX computability structure write program given n 0n gt 0 input list finite set 1 ki_1 dots i_k every x Xx X distance 1 n1 n one points x 1 x kx_ i_1 dots x_ i_k believe haven proved space mathcal X computably compact right feel sup f K K sup f K K mathcal X likely computable thus inf area K K inf area K K mathcal U computable would nice prove Posted February 12 2015 12 53 UTC TrackBack URL Entry http golem ph utexas edu cgi-bin MT-3 0 dxy-tb fcgi 2804 Related Entries Search entries Lebesgue Universal Covering Problem Feb 04 2015 Wrestling Tight Spans Aug 02 2014 Weightings Compact Metric Spaces Jan 30 2014 Convex Magnitude Conjecture Mar 30 2013 Mark Magnitude Mar 21 2013 Tight spans Isbell completions semi-tropical modules Jan 20 2013 Universal Measures Sep 14 2011 Hadwiger Theorem Part 2 Aug 29 2011 45 Comments 0 Trackbacks Re Computer Solve Lebesgue Universal Covering Problem m sure entirely on-topic ve pondering ways approach construction universal covering systematically came method think quite interesting although alas gives pretty useless area 0 85 set SS constant width 1 touches side regular hexagon width 1 precisely one point point contact determines one opposite side well 3-parameter space contact points call parameters alpha beta gamma Naively 3 points lie anywhere sides hexagon additional constraint pair points separated distance greater 1 turns confine pair three parameters certain intersection ellipses set SS must lie inside intersection six disks radius 1 centred contact points call intersection disks D D alpha beta gamma union D D alpha beta gamma entire parameter space give universal covering haven checked think probably entire hexagon However bit better quite easily 12-element symmetry group hexagon acts parameter space 3-tuples alpha beta gamma natural partition parameter space fundamental domains action union D D alpha beta gamma single fundamental domain also universal covering take account possibility applying symmetries hexagon set want cover order bring contact points fundamental domain resulting set could probably described analytically quite easily far ve constructed numerically area 0 85 might clever way improve Posted Greg Egan February 12 2015 11 47 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem bring construction bit closer computability question suppose supplement parameter space 6n6n parameters describing radial distance origin perimeter set SS want covered along ray symmetrical 6n6n-pointed star constraints parameters due fact diameter SS 1 take intersection D r 1 r 6n D alpha beta gamma r_1 r_ 6n 6n 66n 6 unit disks centred points perimeter SS fixed choice parameters SS subset D r 1 r 6n D alpha beta gamma r_1 r_ 6n symmetries hexagon act parameter space take convex hull C nC_n sets D r 1 r 6n D alpha beta gamma r_1 r_ 6n parameters range single fundamental domain action C nC_n convex subset hexagon Blaschke selection theorem sequence least contain subsequence converges convex set CC Posted Greg Egan February 12 2015 11 31 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem things made explicit construction described sequence sets C nC_n satisfy C n 1 C nC_ n 1 subseteq C_n since adding parameters introduces constraints previous ones makes D r 1 r 6 n 1 D alpha beta gamma r_1 r_ 6 n 1 intersection even disks sequence areas C nC_n non-increasing would straightforward write program explicitly construct C nC_n set bounded finite number arcs algebraic curves hunch quadratic curves though might optimistic straightforward mean could probably actually though wouldn trivial Also think hard prove limiting set CC sequence C nC_n subset universal covering subset regular hexagon width 1 Posted Greg Egan February 13 2015 2 56 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem m bit trouble understanding description set C nC_n maybe description seems invoke specific set SS constant width 1 set C nC_n supposed cover set SS m pretty sure m slow-witted must invoking SS merely prove C nC_n really works m trouble seeing set C nC_n really Posted John Baez February 13 2015 7 20 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem John wrote m bit trouble understanding description set C nC_n OK sorry ll try make clearer Suppose WW collection subsets 2 mathbb R 2 constant width 1 WS W think following things true way translate rotate SS becomes subset favourite regular hexagon width 1 centred origin HH bit fact HH universal covering might well assume wlog SS already translated rotated fashion WW consists subsets HH SS make contact perimeter HH six points one edge points come pairs lie equal distances along opposite edges really three parameters needed describe possibilities say alpha beta gamma get handle shape given SS list radial distances r ir_i origin perimeter SS along 6n6n rays form symmetrical 6n6n-pointed star preserved symmetries HH given choice parameters r 1 r 6n alpha beta gamma r_1 r_ 6n still uncountably many different sets share Let give subset WW name W r 1 r 6n W alpha beta gamma r_1 r_ 6n say every W r 1 r 6n W alpha beta gamma r_1 r_ 6n must subset D r 1 r 6n p P r 1 r 6n D p 1 D alpha beta gamma r_1 r_ 6n cap_ p P alpha beta gamma r_1 r_ 6n D p 1 D p 1 D p 1 unit disk centred point pp P r 1 r 6n P alpha beta gamma r_1 r_ 6n set 6n 66n 6 points lie particular locations edges HH 6n6n-pointed star Since every SS diameter 1 every SS must contained within unit disk centred point contains W r 1 r 6n W alpha beta gamma r_1 r_ 6n contains 6n 66n 6 points hence must subset D r 1 r 6n D alpha beta gamma r_1 r_ 6n parameters r 1 r 6n alpha beta gamma r_1 r_ 6n subject certain constraints never take values two points P r 1 r 6n P alpha beta gamma r_1 r_ 6n separated distance greater 1 Let call appropriately constrained space parameters n Gamma_n W r 1 r 6n nW r 1 r 6n W cup_ alpha beta gamma r_1 r_ 6n Gamma_n W alpha beta gamma r_1 r_ 6n since W r 1 r 6n W alpha beta gamma r_1 r_ 6n covered D r 1 r 6n D alpha beta gamma r_1 r_ 6n WS W covered C n 0 convex hull r 1 r 6n nD r 1 r 6n C 0_n text convex hull cup_ alpha beta gamma r_1 r_ 6n Gamma_n D alpha beta gamma r_1 r_ 6n However get smaller covering exploiting symmetries hexagon symmetries hexagon D 6D_6 act parameter space n Gamma_n fairly simple way exchanging edges hexagon rays star take single fundamental domain action call n 1 Gamma 1 _n W 1 r 1 r 6n n 1 W r 1 r 6n W 1 cup_ alpha beta gamma r_1 r_ 6n Gamma 1 _n W alpha beta gamma r_1 r_ 6n W 1 W 1 subset WW WW recovered applying elements D 6D_6 Equally WS W mapped W 1 W 1 element D 6D_6 words WS W rotate reflect element D 6D_6 get isometric copy lies W 1 W 1 need use full range parameters n Gamma_n order cover make smaller set n 1 Gamma 1 _n define C n convex hull r 1 r 6n n 1 D r 1 r 6n C_n text convex hull cup_ alpha beta gamma r_1 r_ 6n Gamma 1 _n D alpha beta gamma r_1 r_ 6n C nC_n universal covering given set SS constant width 1 first translate rotate become subset HH rotate reflect member W 1 W 1 ensure parameters describe points isometric copy SS intersects edges HH rays 6n6n-pointed star belong n 1 Gamma 1 _n hence SS covered one D r 1 r 6n D alpha beta gamma r_1 r_ 6n whose union makes C nC_n Posted Greg Egan February 13 2015 9 21 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Okay think get see wanted speak informally efficiently formulas bit drag got confusion guess tell sequence sets C nC_n converge minimum-area universal cover would nice algorithm guaranteed bet thought maybe lot one could get algorithm absurdly slow blog article secretly sketch algorithm proof works bet would absurdly slow Without guarantee guess run algorithm see well suspect excitement occur near rays sense radii r ir_i turn something predictable except near rays least seems story universal covers far could perhaps go pick formulas r ir_i space rays closely near exciting areas algorithm spend time m getting ahead Posted John Baez February 13 2015 6 06 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem John wrote guess tell sequence sets C nC_n converge minimum-area universal cover three main obstacles see proving C nC_n converge minimum-area cover first question whether minimum-area cover subset regular hexagon seems likely know anyone proved second question whether need exploit rotations reflections symmetries hexagon order minimise area cover ve assumed WW consists sets constant width 1 already translated rotated order fit inside hexagon HH ve assumed subsequent rotations reflections must symmetries hexagon seems possible obvious OK ve exploited full Euclidean isometry group make arbitrary set constant width 1 subset HH nothing gained terms minimising area universal cover invoking full isometry group Certainly reductions hexagon rely ability rotate reflect set covered using symmetries hexagon rather assuming finer control obvious couldn set SS fits hexagon still fit hexagon certain rotation R R isn symmetry either hexagon SS possibility covering R SR rather SS might allow reduction cover third one seems toughest m rather covering WW covering subset WW contains one representative orbit symmetry group hexagon subset call W 1 W 1 m choosing representatives making natural choice fundamental domain action symmetry group parameter space maybe right choice maybe different choice would give smaller area suppose good thing problem three necessarily fatal construction always modified proceed different choice fundamental domain Intuitively d expect fundamental domain parameter space minimised area convex hull union sets W 1 W 1 would least connected set hoping precisely Weyl chamber m putting quotes m sure exactly right term context gives good idea m using might tad optimistic Still might possible figure optimal fundamental domain Anyway really need write program explicitly construct C nC_n see kind areas yields far ve numerically approximated C 0C_0 mentioned area 0 85 0th term guaranteed non-increasing series yet discouraging Posted Greg Egan February 13 2015 11 31 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Greg wrote first question whether minimum-area cover subset regular hexagon seems likely know anyone proved One might take peek P l paper haven read detail German feeble excuse know German find tiring guy proved hexagon universal covering showed could cut corners still get universal covering might tried prove universal covering lies hexagon Another place look paper Brass Sharifi proved best lower bound area universal covering engaging article see result like one want seems like fun open problem Posted John Baez February 14 2015 1 12 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Greg wrote first question whether minimum-area cover subset regular hexagon word warning know unique universal covering minimum area shouldn use word another word warning 1963 Eggleston found universal covering minimal general sense proper subset universal covering universal covering minimum area minimal general sense However converse true Eggleston minimal universal covering least possible area H G Eggleston Minimal universal covers E n mathrm E n Israel J Math 1 1963 149 155 algorithm could get stuck false minimum proceeded starting universal covering continuing chop pieces Hmm m sure Eggleston restricting attention convex universal coverings Posted John Baez February 14 2015 2 51 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Thanks warnings point think fastest way learn something might charge ahead try construct sequence covers probably go horribly wrong easier see goes wrong actually Posted Greg Egan February 14 2015 5 35 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem first question whether minimum-area cover subset regular hexagon seems likely know anyone proved numerical evidence supports looks hard prove might possible make progress related conjecture annealing simulations noticed following might true minimum-area cover set curves constant width one subset hexagon whose pairs opposite sides parallel distance one apart still hard hope may tractable first step prove minimum area cover set curves constant width one subset strip two parallel lines distance one apart OK one easy way second step would prove minimum-area cover set contained inside intersection two distinct strips width one think doable would good see rigorous proof written Probably done using translations alone need rotations reflections get far last step would show minimum cover contained intersection three strips width one would need use rotations going harder might yield methods hard work fact anyone wants tackle full proof would well advised look first equivalent covering problem translations shapes allowed conjecture case would cover contained square could proved would hope similar methods much detail would work regular hexagon rotations included Posted Philip Gibbs February 14 2015 9 31 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem got far analytic construction C 0C_0 seems clear choice parameters optimal reason limit set sequence even well P l cover m going try something bit different using parameters P l truncation occurs naturally choice fundamental domain Posted Greg Egan February 15 2015 1 56 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Great warnings attempt discourage even make slow think wanted give limited knowledge problem Posted John Baez February 15 2015 9 36 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem framework encompasses P l truncation Gibbs-Bagdasaryan-Baez reduction start regular hexagon width 1 paper take another copy hexagon rotated angle 6 frac pi 6 sigma third hexagon reflection rotated one blue line show edges rotated reflected hexagons inside original one edges reflected hexagon grey Given curve constant width 1 translated rotated fit within original hexagon 9 parameters measure three alpha_i give displacement centres hexagon edges points curve makes contact edges shown red dots three delta_i give distance edges rotated hexagon lines bound curve tightly parallel rotated edges three delta'_i give distances reflected hexagon figure dashed lines drawn show bounds curve would set positive quantities delta_i delta'_i order make sign conventions clear variables take negative positive values terms P l truncation amounts claiming always rotate curve 1 0 delta_1 ge 0 3 0 delta_3 ge 0 leaving triangles C 1C 2C 3C_1 C_2 C_3 E 1E 2E 3E_1 E_2 E_3 empty remove cover think terms action rotational symmetry group hexagon 3-dimensional space triplets 1 2 3 delta_1 delta_2 delta_3 fundamental domain action meets P l condition F 1 1 2 3 1 0 3 0 1 2 0 2 3 0 F_1 delta_1 delta_2 delta_3 delta_1 ge 0 wedge delta_3 ge 0 wedge delta_1 delta_2 ge 0 wedge delta_2 delta_3 ge 0 point 1 2 3 delta_1 delta_2 delta_3 -space mapped F 1F_1 element hexagon rotational symmetry group always meet P l condition Gibbs-Bagdasaryan-Baez condition need go full symmetry group hexagon including reflections full 9-parameter space condition adds P l requirement whenever 1 0 delta'_1 ge 0 3 0 delta'_3 ge 0 1 0 alpha_1 le 0 order remove certain regions cover fundamental domain satisfies condition won write haven able find one described concisely best one union 26 convex regions course fundamental domains must exist existence restatement fact curves always rotated reflected meet required conditions fundamental domains allows us describe sequence covers whose areas bounded P l area first case Gibbs-Bagdasaryan-Baez area second case described general idea earlier different parameter set improved choice parameters get useful upper bound areas current 9 parameters would impose constraints red points contact lie outside dashed lines curve bounds various directions separated distance greater 1 would take convex hull union constrained parameters lying within fundamental domain intersection six unit disks centred red dots refine things little could add six parameters pinning exact locations curve 12 points contact dashed lines parallel rotated reflected hexagon edges case would taking intersections 18 disks whole thing could generalised work nn different rotated hexagons reflections giving infinite sequence covers fundamental domains won change effect take Cartesian product full space extra parameters set additional parameters impose additional constraints course know far areas covers bounded Gibbs-Bagdasaryan-Baez area might yet turn areas simply equal haven shown possible achieve reduction going take work answer Posted Greg Egan February 20 2015 11 05 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem far tell numerical investigations simplest case construction discussed merely reproduces Gibbs-Bagdasaryan-Baez cover fact use fundamental domain parameter space proper subset set parameters meeting conditions discussed paper ends making difference Posted Greg Egan February 26 2015 10 04 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem interesting doubt ve found optimal universal covering sounds like re saying optimal one fairly natural class Posted John Baez February 26 2015 3 53 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Greg already able progress way beyond cover paper interesting see approach matches mine paper looked three cases depend signs deltas picture go useful consider possible cases signs six deltas Since two positive makes 16 cases fact ten distinct reflections rotations wonder could apply methods case individually look ways amalgamate could post pictures ten cases helps best way post pictures Posted Philip Gibbs March 3 2015 7 30 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem easy post pictures comments using html example img width 300 src http math ucr edu home baez mathematical lebesgue_universal_covering_hansen_modified jpg alt produces annoying thing system uses strict implementation html ll get error message leave alt part designed show text image fails display put pictures website link send ll put website think website Posted John Baez March 3 2015 9 09 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Wow sounds good m busy grading homeworks still haven gotten energy carefully check proof Philip Gibbs heuristic computer calculation pointing toward value 0 84408 0 84408 may couple large reductions left make shaving area 3 10 53 times 10 -5 hope tells us breaking things cases helped recent work problem hear pretty busy next couple weeks ll wait patiently news Posted John Baez March 4 2015 1 42 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem fix sign single one six delta parameters diagram restricts region curve constant width 1 inscribed hexagon occupy something isometric image ve fixed 1 0 delta_1 ge 0 get signs deltas rotating reflecting set three arcs boundary two one top Sprague reduction one left one argued third one right arises essentially reason Sprague reduction due restriction point contact curve constant width part one hexagon edges truncated corner particular case say third arc lies inside corner going chopped entirely general choice delta parameter sign going case third arc need generally irrelevant haven figured consequences ll see far get trying follow Philip suggestion break everything signs deltas intersect sets associated choice signs imposing extra restriction 1 0 alpha_1 le 0 1 0 delta'_1 ge 0 3 0 delta'_3 ge 0 take convex hull union intersections Posted Greg Egan March 4 2015 8 28 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Greg good see working fresh ideas think whole covering problem splits two main parts good evidence computational work optimum universal cover subset regular hexagon two corners removed using rotated hexagon described paper lets call slanted Pal cover part 1 prove conjecture looks like hard problem Part 2 find smallest universal cover area sigma subset slanted Pal cover fixed slant angle sigma parts solved solution complete Lebesgue Universal Covering Problem found taking minimum sigma paper showed set upper bound sigma range sigma certainly room improving aim make proof simple possible rather getting best bound also possible set lower bounds function simply many curves constant width fit slanted Pal cover unique way e g Reuleaux triangle circle start Nothing said lower bound yet hunch second part problem quite tractable reach collaborative effort Perhaps would make fun polymath problem Posted Philip Gibbs February 22 2015 8 11 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem thought people reading blog like constructive mathematics would 50 comments maybe language computable mathematics sufficiently different constructive mathematics seems off-putting maybe post thinking loud rather technical issue well crafted lure people discussion Anyway great miracle Blaschke selection theorem says space mathcal C convex subsets ball n mathbb R n Hausdorff metric compact quick proof G Baley Price completeness certain metric space application Blaschke selection theorem means searching convex subsets seems initially like hopeless task bad re trying find maximum value continuous function f f mathcal C mathbb R function must bounded attain maximum m wanting effective computable version result think enough ff sequentially computable computably uniformly continuous mathcal C computably compact defined blog article noticed kind result could give rigorous version Philip Gibbs calculation number aa using simulated annealing took bunch convex shapes plane diameter 1 wiggled around trying find convex set least area contained One problem strategy couldn tell d considered enough shapes draw conclusion shapes However space convex shapes diameter 1 computably compact find epsilon finite list shapes x ix_i shape Hausdorff distance le epsilon one shapes think ll know convex set fit shapes x ix_i almost hold every shape diameter 1 almost means may poke distance epsilon big step toward rigorously computing number aa Posted John Baez February 12 2015 4 48 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem wonder whether people comment something wrong RSS feed haven actually seen post yet use Caf comments feed Thunderbird stay date happening Since hadn seen comments ve wondering going noticed missed fascinating posts one least comments feed currently working Posted Tobias Fritz February 17 2015 6 05 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem RSS comments feed working fine although blip little ago much contribute m plugged computation side constructive math Although general impression computational constructivity seems approach things rather different way wouldn sure translate programme language anyway rather defining something asking whether computable order even claim exists define computable way Posted Mike Shulman February 17 2015 8 05 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Hmm never use RSS feed hadn noticed Thanks mentioning ll inform authorities really hoping post would get lot people working Lebesgue universal covering problem would start discussion computable analysis like conditions minimum value continuous function compact set actually computable must big literature Also location minimum seems harder since cases hard tell two local minima winner Posted John Baez February 17 2015 8 13 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Thanks back well Posted Tobias Fritz February 20 2015 12 29 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem possible slight strengthening computability structure ask countable dense subset X iX_i computably dense ask computable function HH X H n X_i lt H n 1n frac 1 n -net someone tells already called something else follows something natural ll call computably generated initially hoped would follow something else natural e g asking identity function computable m starting despair example shouldn surprised shufflings mathbb Q supported say unit interval listed rationals 0 1 0 1 clumpy way d wait busy-beaver finish get net desired fineness definitely compact metric spaces computably generated instance let Theta favourite busy beaver function fine ultrametric n j n prod_n j leq Theta n d x y 11 min j x j y j d x y frac 1 1 min j x_j neq y_j 12 k frac 1 2 k -net must size much larger k Theta k course possible even computability structure space Anyways point asking computable generation computable-uniformly-continuous function ff possible compute finite varepsilon-net covers preimage f 1 pq f -1 frac p q pm delta contained f 1 pq 2 f -1 frac p q pm 2 delta Posted Jesse C McKeown February 18 2015 12 13 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Well think ve convinced comforting proposition identity map always computable given ordinary computability structure know leaves computably generated vs computable-structured somehow compact Posted Jesse C McKeown February 23 2015 4 00 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Yes m pretty darn sure computable metric spaces separable metric spaces computability structure computable functions form category identity function computable composites computable functions computable Posted John Baez February 23 2015 7 56 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Philip m sure approach leads anywhere useful far ve seen going trouble shrinking parameter space fundamental domain symmetry group turn make difference mean time think ve found simple rigorously provable reduction cover paper claim remove area red arc part circle centred F 3F_3 two straight edges original cover arc intersects C 3C 2C_3 C_2 C 2D 1C_2 D_1 curve constant width 1 fits inside original cover must pair points boundary lie two lines parallel line segments F 2F 3F_2 F_3 C 2C 3C_2 C_3 distance 1 apart rightmost point pair must lie left C 2C 3C_2 C_3 since whole triangle C removed cover hence leftmost point pair must lie left F 3F 2F_3 F_2 means curve must contain point triangle F curve diameter 1 cannot contain point whose distance triangle F greater 1 region outside red arc contains points greater distance 1 point triangle F crucially believe reduction perfectly compatible Reduction 3 paper Case 3 consider curves enter reflected triangles E C mirror-image version argument gave means curve meeting conditions enter reflection region ve excluded hence safely reflect curves without entering excluded region Reduction 3 still goes without hitch argument repeated area outside green arc Together leads reduction 6 10 76 times 10 -7 brings upper bound cover area 0 8441147 least one tiny reduction since arc originally centred O original cover also shifted small distance along edge point red arc meets edge best way post pictures use HTML img tag referring file ve uploaded elsewhere large number images could give link Posted Greg Egan March 5 2015 5 21 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem claimed least one tiny reduction since arc centred O original cover centre shifted small distance along edge C 2D 1C_2 D_1 point red arc meets edge turns tiny actually doubles reduction puts upper bound area 0 8441140 despite necessary increase slant angle sigma tiny bit order keep satisfying condition angle WYQ larger right angle Posted Greg Egan March 5 2015 5 23 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem fix sign single one six delta parameters diagram restricts region curve constant width 1 inscribed hexagon occupy something isometric image ve fixed 1 0 delta_1 ge 0 get signs deltas rotating reflecting set three arcs boundary two one top Sprague reduction one left one argued third one right arises essentially reason Sprague reduction due restriction point contact curve constant width part one hexagon edges truncated corner particular case say third arc lies inside corner going chopped entirely general choice delta parameter sign going case third arc need generally irrelevant haven figured consequences ll see far get trying follow Philip suggestion break everything signs deltas intersect sets associated choice signs imposing extra restriction 1 0 alpha_1 le 0 1 0 delta'_1 ge 0 3 0 delta'_3 ge 0 take convex hull union intersections Posted Greg Egan March 5 2015 5 25 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Ah even go one better remove regions outside four arcs three incorporates second-order effect previous truncation restriction contact point along top-left edge hexagon turn restricts contact point along bottom-right edge giving us another arc flow-on effect truncating original bottom-left corner Posted Greg Egan March 5 2015 5 26 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Greg made lot progress right remove area outside arc centred F 3F_3 use improve area removed around AA also remove area outside arc centred B 3B_3 shown diagrams third area outside arc centred C 3C_3 must noticed reductions already included paper http vixra org abs 1401 0219 calculations may accurate joint paper wanted simpler clearer proof errors include reductions good rediscovered ready move onto next level ten cases need considered distinguished signs deltas red regions show curve constant width enter case Triangles EE CC always removed Every curve fit one cases lines reflection allow curves transformed find best rules reflect sometimes rotate make subcover case union ten subcovers full universal cover case logical puzzle difficult others best solution used hints numerical simulations area removed near AA near E 2E_2 see figure 26 paper area best cover 0 844093595 dont know best possible said earlier also scope setting lower limits assuming slanted covering Posted Philip Gibbs March 5 2015 5 29 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Philip wrote area best cover 0 844093595 Using ought equivalent approach best cover find area 0 844112132640 puzzling unless ve made conceptual error programming error ought lower bound covers built simply choosing signs delta alpha parameters point m sure re intending describe exactly set discrepancy areas due floating point round-off error ve reached different conclusions smallest set kind universal cover try resolve ll describe calculations detail Philip please bear repeat lot things already know want try give account reasonably self-contained case interested bystander feels like checking errors logic geometrical reasoning probably much hope third party leap try reproduce actual numerical calculations re considering curves constant width 1 translated rotated fit inside regular hexagon width 1 curve measure six parameters parameters 1 2 3 alpha_1 alpha_2 alpha_3 measure distance centres hexagon edges points curve makes contact edges red points diagram though diagram include actual curve 3 parameters rather 6 curve makes contact edge EE certain point PP must make contact edge parallel EE unique point distance 1 PP delta parameters relate two copies original hexagon one rotated counter-clockwise angle 6 frac pi 6 sigma moment sigma free parameter another reflection rotated one original hexagon axes symmetry diagram ve used reflection blue line map certain named features primed reflections following notation joint paper Philip uses different notation diagrams giving triangles letter primed intersect probably sensible case follows ll avoid triangle names refer delta parameters diagram parameters 1 2 3 delta_1 delta_2 delta_3 measure perpendicular distance edges rotated hexagon two supporting lines curve dashed lines diagram parallel pair rotated edges Similarly parameters 1 2 3 delta'_1 delta'_2 delta'_3 measure thing rotated-and-reflected hexagon suppose re handed particular curve constant width 1 placed inside hexagon measure nine parameters might initially 512 possible 9-tuples signs ll sloppy treat 0 positive fiat However rotating reflecting curve using 12 isometries hexagon change 9 signs guarantee always end smaller set possibilities initial 512 advantage seen dramatically choice made P l see linked paper details showed always rotate curve 1 0 delta_1 gt 0 3 0 delta_3 gt 0 curve always fit inside hexagon two corners cut regions 1 0 delta_1 lt 0 3 0 delta_3 lt 0 Let take self-evident always good retain P l choice restrictions didn d end merely making minor tweaks full hexagon lost huge reduction cover area comes cutting two corners 128 9-tuples signs parameters ask restrictions possible 12-element isometry group hexagon acts set 9-tuples signs moving 52 orbits orbits course take 9-tuples outside set 128 defined P l restriction simply focus portions orbit continue obey restriction turns 14 128 9-tuples signs one 9-tuple restricted orbit means re stuck others fall 38 orbits various sizes 19 size 2 2 size 3 16 size 4 1 size 6 principle means 2 19 3 2 4 16 6 1 21597189939003392 10 172 19 times 3 2 times 4 16 times 6 1 21597189939003392 times 10 17 choices selection 52 9-tuples signs could rotate curve Fortunately turns need check anything remotely connected terrifying number go need talk specific subsets hexagon cover curve restriction sign one parameters restrict sign delta parameter get restricted cover like restrict sign alpha parameter get restricted cover like images arcs circles radius 1 form part boundary marked drawing dashed lines endpoints centre circle part delta-sign restricted cover obvious cut one corner hexagon arcs parts boundary reason draw supporting line L CL_C cover CC point boundary curve constant width 1 sits inside cover two supporting lines L 1L_1 L 2L_2 distance 1 apart parallel L CL_C one closest L CL_C must lie interior side L CL_C order curve inside cover call one L 1L_1 means L 2L_2 must lie distance 1 away L CL_C follows point curve point lies L 2L_2 must lie subset CC distance 1 line L CL_C call subset C 1C_1 since curve diameter 1 point curve lie anywhere CC distance 1 C 1C_1 delta-sign restricted cover putting support line along edge created truncation makes C 1C_1 triangle opposite corner hexagon restricts cover points lie within circle radius 1 centred one corner triangle move support line around shape get three arcs well Something similar happens alpha-sign restricted cover except rather excising two-dimensional region ve omitted one half-edge hexagon declaring curve touch Putting support line L CL_C along opposite edge gives us C 1C_1 consists non-omitted half-edge point curve lie greater distance 1 half-edge move support line around get three arcs Depending particular parameter number sign restricted covers rotated reflected versions two ve drawn though case delta parameters covers also depend value sigma used diagrams ve used huge 12 degrees sake clarity restrict particular 9-tuple signs take intersections appropriate 9 individual restricted covers one parameter curve nominated 9-tuple signs 9 parameters lie outside intersection final task choose 52 9-tuples signs way minimises area convex hull union 52 9-fold-intersections restricted covers universal cover chosen one 9-tuple 52 orbits Whatever original 9-tuple signs curve could anything full set 512 possibilities rotation reflection hexagon brings one chosen 52 bad news principle 2 19 3 2 4 16 6 1 21597189939003392 10 172 19 times 3 2 times 4 16 times 6 1 21597189939003392 times 10 17 ways choose 9-tuple orbit good news comes start focusing 14 9-tuples choice one element orbit subject P l restriction take 14 associated restricted covers form convex hull union call compulsory hull choice must include nice surprise saves us combinatorial nightmare take convex hull union compulsory hull 128 14 114128-14 114 restricted covers corresponding 9-tuples need make choice turns every orbit one least one 9-tuple whose restricted cover already contained within compulsory hull Obviously 52 14 1 3752-14-1 37 orbits choose one 9-tuple make difference final union 9-tuple choose leaves single orbit restricted cover inside compulsory hull orbit contains two 9-tuples claim certain restricted covers subsets compulsory hull something checked across range angles interest sigma 0 5 degrees 1 5 degrees anywhere range logic applies get minimal area final cover choosing two 9-tuples sole orbit meaningful choice make compute areas final cover two choices range angles turns one choice better across whole range angle 1 0424 sigma 1 0424 degrees smaller cover total area 0 844112132640 looks like fact set exactly set obtained making choices joint paper 1 0 3 0 delta_1 gt 0 delta_3 gt 0 1 0 delta'_1 gt 0 3 0 delta'_3 gt 0 choose 1 0 alpha_1 lt 0 None finer-grained decisions four parameters end offering reduction reason area slightly less area joint paper 0 8441153 paper regions-outside-arcs could removed restricting sign parameter removed b cover uses value sigma low enough cause certain angle less right angle joint paper ruled guess would complicated proof Philip ten diagrams show representative ten orbits action symmetry group 6-tuples delta parameter signs order compare covers could state explicitly restrictions re imposing alpha parameters ten cases value re using sigma best cover tell re talking sets Also reductions re exploiting beyond shown two diagrams give restriction delta sign restriction alpha sign explain ought working exactly sets things ought end agreeing differences floating point round-off Posted Greg Egan March 7 2015 10 59 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Greg one quick comment work done Although selecting cases sign deltas using sign alphas decide reflect case paper go using complex criteria decide reflect curves able remove pieces Posted Philip Gibbs March 8 2015 6 10 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Greg give bit detail see move forward Let concentrate triangle E EE'-E pictures near point E 2E_2 already know small part removed using arcs centred C 3C_3 B 3B_3 let try remove done case case cases triangle coloured red diagrams whole triangle clear need worry cases leaves C E AD C'E'A D' C E DA C'E'D A' F E AA F'E'AA' F E AD F'E'A D' F E DA F'E'D A' first two cases sign 3 alpha_3 used remove part E EE'-E outside arc centred midpoint B 1C 1B_1C_1 cases F E AA F'E'A A' F E DA F'E'D A' might tempted use sign 2 alpha_2 help Instead use hexagon rotated angle 6 frac pi 6 introduce yet another delta edges near EE BB Using axis reflection choose sign new delta allows half triangle E EE'-E removed two cases remaining case F E AD F'E'A D' hardest one ll come back later - considered together area removed every case rather convex hull removed final cover Posted Philip Gibbs March 8 2015 9 49 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Philip far ve able determine signs 12 parameters ve discussed 9 original ones plus 3 related hexagon rotated exactly 6 frac pi 6 sufficient deal case F E AD F' E' D' time describe construction detail least describe basic principle involve new set parameters whose signs used manner previous ones involve finer-grained dissection existing parameter space Posted Greg Egan March 10 2015 1 34 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Sorry brief reflect curve cuts touches line F 2F 3F_2F_3 somewhere outside F F' sets constraint 3 alpha_3 Hope got right notes hand hope time next week Posted Philip Gibbs March 10 2015 2 40 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Philip ll wait free time explain reduced cover detail remain stumped F E AD F' E' D' case example green curve border Reuleaux 7-gon red curve restricted cover F E AD F' E' D' case green curve belongs F E AD F' E' D' case small positive values 1 2 3 delta_1 delta_2 delta_3 small negative values 1 2 3 delta'_1 delta'_2 delta'_3 occupies fraction 1 1- epsilon part reduced cover inside triangle E EE'-E epsilon made arbitrarily small zero making values delta coefficients arbitrarily small retaining necessary signs green curve shares reduced cover symmetry reflection line F 1C 1F_1 C_1 reflection clear space triangle E EE'-E symmetries hexagon take parts green curve triangles C E violating P l condition Also far m able determine isometries position green curve differently inside hexagon triangle E EE'-E removed cover 7-gon made fit Posted Greg Egan March 11 2015 1 35 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Greg good point believe answer counterexample argument works slant angles value 0 sigma_0 Let call GG point intersection line segments F 3F 2F_3F_2 C 2C 3 C' _2 C'_3 notation angle 0 sigma_0 distance GG C 3C_3 exactly one angle angles greater one F E AD F'E' D' case curve must intersect touch V-shaped line F 3GC 3F_3G C' _3 reflect curve necessary intersects F 3GF_3G slant angles less 0 sigma_0 points segment F 3GF_3G distance greater one C 3C_3 true larger angles therefore constraint 3 alpha_3 fact curve must touch side B 1C 1B_1C_1 point side distance one GG remove points outside arc centred point near E 2E_2 note hand optimal slant angle 2 degrees think Posted Philip Gibbs March 11 2015 6 46 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Thanks Philip extremely helpful BTW angle 0 sigma_0 turns precisely 18 frac pi 18 e 10 degrees ve using 12 degrees visualising examples sake clarity didn think carefully enough qualitative changes choice imposed Posted Greg Egan March 12 2015 12 18 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem Indeed change qualitatively Earlier said would interesting calculate sigma area smallest cover contained hexagon two corners removed slant angle sigma minimum might best cover certainly upper bound However gets harder large sigma largest sigma 30 degree point arrive back complete hexagon 6 frac pi 6 area best cover fit inside hexagon bigger sigma sigma think sigma continuous point though know happens near EE might want consider extra area removed near AA Posted Philip Gibbs March 12 2015 1 54 PM Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem OK ve realised least one potential problem analysis assuming could take restricted covers get choosing signs parameter individually simply intersect get restricted cover curves chosen signs multiple parameters course intersections covers appropriately restricted curves re small could various excisions made original sets running support line around won necessarily include excisions make intersection example set outline red shows intersection nine sets get individually choose signs nine parameters positive draw support line along lower right-hand truncation ve made order 3 0 delta_3 gt 0 line parallel distance 1 away green line upper left defines portion original cover small region inside red set lies left green line within must point curve fits cover part cover distance greater 1 region e part outside two green arcs superfluous ll need go back redo whole analysis taking care remove much possible sets corresponding 9-tuple signs Posted Greg Egan March 8 2015 5 37 Permalink Reply Re Computer Solve Lebesgue Universal Covering Problem used supporting line method trim excess regions restricted covers 9-tuples parameter signs still bring area final cover previous value 0 844112132640 0 844112120469 reduction 1 2 10 81 2 times 10 -8 individual restricted covers trimmed quite large amounts enormous 0 00195152 compulsory hull restricted covers associated 9-tuples sign choices need included final cover reduced 1 2 10 81 2 times 10 -8 hence final result Posted Greg Egan March 8 2015 5 01 PM Permalink Reply Post New Comment Access Keys 0Accessibility Statement 1Main Page 2Skip Content 3List Posts 4Search pPrevious individual monthly archive page nNext individual monthly archive page"),
('An algorithm to extract looping GIFs from videos (x-post /r/math)', "__del__ self Eaten Python RSS Blog Archives Algorithm Extract Looping GIFs Videos Feb 1st 2015 Comments Yet another big problem Internet era tackled Mathematics Looping GIFs popular form art Web two dedicated forums Reddit r perfectloops r cinemagraphs countless Tumblr pages Finding extracting well-looping segments movie requires much attention patience likely leave like front computer make things easier wrote Python script automates task post explains math behind algorithm provides examples use video segment well-looping say video segment loops well first last video frames similar video frame represented sequence integers whose values indicate colors image pixels instance give Red Green Blue values first pixel define color second pixel etc Given two frames video define difference frames sum differences color values consider two frames similar arbitrary threshold follows important note defines distance frames seen generalization geometrical distance two points plane consequence nice mathematical properties use next section speed computations Finding well-looping segments section want find times start end well-looping video segments duration 3 seconds less given video simple way compare frame movie frames previous three seconds find two similar frames whose distance pre-defined threshold add corresponding times list problem method requires huge number frame comparisons around ten millions standard video takes hours let us see tricks makes computations faster Trick 1 use reduced versions frames HD videos frames millions pixels computing distance require millions operations reduced small 150-pixel-wide thumbnails frames still detailed enough purpose distance computed much faster also take less place RAM Trick 2 use triangular inequalities efficient trick able deduce whether two frames match without compute distance Since defines mathematical distance two frames many results classical geometry apply particular following inequalities lengths triangle first inequality tells us close B turn close C also close C terms video frames becomes practice use follows already know frame similar frame similar another frame need compute know also similar second inequality tells us point near B B far C also far C terms frames similar different need compute know also different gets little complicated apply triangular inequalities get information upper lower bounds distances frames updated every time compute distance two frames instance computing distance upper lower bounds denoted updated follows update conclude good match point know match cannot decide whether match using technique eventually need compute knowing turn enable us update bounds another distance illustration suppose video following frames order algorithm arrives first computes distance frame finds match point algorithm already found thaft quite similar deduces neither match certainly neither dozen frames practice method avoids computing 80 90 distances frames Trick 3 use efficient formula distance compute distance two frames using formula last section need approximately operations subtractions products additions obtain final sum formula also rewritten form known law cosines used following notations interesting thing expression first compute norm frame obtain distance pair simply computing requires operations therefore 50 faster Another advantage computing frame two frames provides initial values upper lower bounds frame distances used Trick 2 Final algorithm pseudo-code Putting everything together obtain following algorithm 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 frame F1 movie F1 - downsized F1 previous_frames - list frames 3 seconds F1 list_of_matching_couples compute store F1 frame F2 previous_frames compute upper_F1_F2 lower_F1_F2 using Eq 2 upper_F1_F2 mark F1 F2 matching add F1 F2 list_of_matching_couples lower_F1_F2 mark F1 F2 non-matching frame F2 previous_frames couple F1 F2 isn't already marked matching non-matching compute d F1 F2 frame F3 F2 previous_frames update upper_F1_F3 lower_F1_F3 using Eq 1 upper_F1_F3 mark F1 F3 matching add F1 F3 list_of_matching_couples lower_F1_F3 mark F1 F3 non-matching implementation Python computation time may depend quality video file movies tried processed circa 20 minutes Impressive right Eugene Selecting interesting segments algorithm described previous section finds pairs matching frames including consecutive frames often look much alike frames still segments typically black screens end typically hundred thousand video segments really interesting must find way filter segments want extracting GIFs filtering operation takes seconds success depends greatly filtering criteria use examples work well first last frames must separated least 0 5 second must least one frame sequence doesn match first frame criterion enables eliminate still segments start first frame must least 0 5 seconds start last extracted segment avoid duplicates segments start end almost times try restrictive avoid filtering good segments accident generally end 200 GIFs many midly interesting blinking eyes last step manual filtering looks like Examples use implemented algorithm plugin Python video library MoviePy example script much details 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 moviepy editor import VideoFileClip moviepy video tools cuts import FramesMatches Open video file format work clip VideoFileClip myvideo avi Downsize clip width 150px speed things clip_small clip resize width 150 Find pairs matching frames return corresponding start end times Takes 15-60 minutes matches FramesMatches from_clip clip_small 5 3 Optional Save matches later use matches save myvideo_matches txt matches FramesMatches load myvideo_matches txt Filter scenes keep segments duration 1 5 seconds first last frame per-pixel distance 1 least one frame distance 2 first frame 0 5 seconds starts selected segments selected_scenes matches select_scenes match_thr 1 min_time_span 1 5 nomatch_thr 2 time_distance 0 5 final GIFs 450 pixels wide clip_medium clip resize width 450 Extract selected scenes GIFs folder myfolder selected_scenes write_gifs clip_medium myfolder obtain try Disney Snow White 1 2 3 4 5 6 import moviepy editor mp moviepy video tools cuts import FramesMatches clip mp VideoFileClip snowwhite mp4 scenes FramesMatches from_clip clip resize width 120 5 2 selected_scenes scenes select_scenes 2 0 5 4 0 5 selected_scenes write_gifs clip resize width 270 snow_white GIFs could cut better really interesting short looping segments missed think culprits parameters last filtering step could tuned better another example someone recently posted Youtube video r perfectloops required transformed looping GIF following script downloads video Youtube finds best times t1 t2 cut looping sequence generates GIF 1 2 3 4 5 6 7 8 9 10 11 12 13 import moviepy editor mpy moviepy video tools cuts import FramesMatches Get video youtube save hamac mp4 mpy download_webfile NpxD9TZIlv8 hamac mp4 clip mpy VideoFileClip hamac mp4 resize width 200 matches FramesMatches from_clip clip 40 3 loose matching find best matching pair frames 1 5s away best matches filter lambda x x time_span 1 5 best Write sequence GIF speed 30 original final clip subclip best t1 best t2 speedx 0 3 final write_gif hamac gif fps 10 MoviePy also post-process GIFs add text code since read advanced trick code turn algorithm presented perfect works poorly low-luminosity clips sometimes slight camera movement moving object background prevent segment looping segments could easily corrected human difficult spot process algorithm script didn completely kill game making looping gifs still art ideas remarks algorithm tried found interesting loops movie ll happy hear cheers happy GIFing Posted Zulko Feb 1st 2015 GIF Loops Maths MoviePy Python Tweet Data animations Python MoviePy Comments Please enable JavaScript view comments powered Disqus Recent Posts Algorithm Extract Looping GIFs Videos Data Animations Python MoviePy Things Python POV-Ray Vector Animations Python Python Script Controlled via Twitter GitHub Repos Status updating Zulko GitHub Copyright 2015 - Zulko - Powered Octopress"),
('Category Theory for Computer Scientists (Cornell Course)', 'Skip main content Cornell University Computer Science CS 6117 Fall 2014 - Category Theory Computer Scientists Overview CS6117 - Category Theory Computer Scientists introduction category theory focus material established applications computer science course emphasize developing comfort abstraction instantiation assuming students strong background mathematics Class Times MWF 1 25-2 15 Location 211 Upson Hall Instructor Ross Tate Office 434 Gates Hall Office Hours appointment Grading small homework assignment approximately week midterm non-cumulative final Assignments 60 worth 5 12 extra count extra credit Midterm 20 Final 20 Piazza http piazza com cornell fall2014 cs6117 Related Reading Abstract Concrete Categories - Joy Cats Jiri Adamek Horst Herrlich George E Strecker 2004 Higher Operads Higher Categories Tom Leinster 2003 Categories Working Mathematician Saunders Mac Lane 1971 Schedule DateTopicTechnical NotesAssignments Week 1 Aug 27 Goals Course Monoids Monoids tex Aids packages tex def texAvailable Monoids tex Aug 29 Aggregation Aggregation tex Week 2 Sep 1 Labor Day Sep 3 Homomorphisms Homomorphisms tex Sep 5 Categories Categories tex Due Monoids tex Available Categories tex Week 3 Sep 8 Functors Functors tex Sep 10 Isomorphisms Isomorphisms tex Sep 12 Multicategories Multicategories tex Due Categories tex Available Multicategories tex Week 4 Sep 15 Internalization Internalization tex Sep 17 Enrichment Enrichment tex Sep 19 Subobjects Subobjects tex Due Multicategories tex Available Transformations tex Week 5 Sep 22 Nulls Nulls tex Sep 24 Transformations Transformations tex Sep 26 Transpositions Transpositions tex Due Transformations tex Available Adjunctions tex Week 6 Sep 29 2-Categories 2-Categories tex Oct 1 Lecture Oct 3 Limits Limits tex Due Adjunctions tex Available Limits tex Week 7 Oct 6 Adjunctions Adjunctions tex Oct 8 Colimits Colimits tex Oct 10 Monads Monads tex Due Limits tex Available Monads tex Week 8 Oct 13 Canadian Thanksgiving Oct 15 Monad Algebras Monad Algebras tex Oct 17 Kleisli Category Kleisli Category tex Due Monads tex Available Effects tex Aids rossbb pfb rossbb tfm t1rossbb fd Week 9 Oct 20 Effectors Effectors tex Oct 22 Productors Productors tex Oct 24 Noninterference Noninterference tex Due Effects tex Available Security tex Week 10 Oct 27 Confidentiality Integrity Confidentiality Integrity tex Oct 29 Types Types tex Oct 31 Existential Quantification Sections 1 2 ofInferable Existential Quantification Due Security tex Available Existentials tex Week 11 Nov 3 Deciding Subtyping Section 3 ofInferable Existential Quantification Nov 5 Computing Joins Sections 4 5 ofInferable Existential Quantification Nov 7 Comma Categories Joy Cats Wikipedia nLab Due Existentials tex Available Factorizations tex Week 12 Nov 10 Algebras Coalgebras Joy Cats Wikipedia nLab Nov 12 Implications Joy Cats Nov 14 Inference Sections 3 3 4 5 2 ofGenerating Compiler Optimizations Proofs Due Factorizations tex Available Proofs tex Week 13 Nov 17 Proof Generalization Section 3 4 ofGenerating Compiler Optimizations Proofs Nov 19 Pushout Completions Section 3 4 ofGenerating Compiler Optimizations Proofs Nov 21 Tableaus Section 5 1 ofGenerating Compiler Optimizations ProofsSection 1 Opfibrations Due Proofs tex Available Databases tex Week 14 Nov 24 Opfibrations Opfibrations tex Section 2 Opfibrations Nov 26 American Thanksgiving Due Databases tex Nov 28 American Thanksgiving Week 15 Dec 1 Topoi Topoi tex Available Topoi tex Dec 3 Effective Topos Effective Topos tex Dec 5 Faithful FunctorsMonoidal CategoriesEquivalence Due Topoi tex Homework Policies Cornell University Code Academic Integrity familiar Violations code treated seriously Cornell long-term repercussions course encouraged discuss content course students may also discuss homework problems students However must work write assignments discuss problem another student expected document fact write-up violation code copy work including programs students also violation use solutions homework problems previous iterations course Note Cornell holds responsible code violation recipient donor improper information'),
('What are the blinking white lights at the top of this video? Binary counters?', "Skip navigation UploadSign inSearch Loading Close Yeah keep Undo Close video unavailable Watch QueueTV QueueWatch QueueTV Queue Remove allDisconnect Loading Watch Queue TV Queue __count__ __total__ Chris Farley Hidden Camera Commercial Video pittboy78 SubscribeSubscribedUnsubscribe66 Subscription preferences Loading Loading Working Add Want watch later Sign add video playlist Sign Share Report Need report video Sign report inappropriate content Sign Transcript Statistics 473 083 2 693 Like video Sign make opinion count Sign 2 694 43 Don't like video Sign make opinion count Sign 44 Loading Loading Transcript interactive transcript could loaded Loading Loading Rating available video rented feature available right Please try later Uploaded Oct 29 2009Chris Farley SNL Category Comedy License Standard YouTube License Show Show less Loading Autoplay autoplay enabled suggested video automatically play next Next Black Jeopardy - Saturday Night Live - Duration 6 34 Saturday Night Live 7 833 349 views 6 34 Play nextPlay 50 videos Play Play Mix - Chris Farley Hidden Camera Commercial Videoby YouTube River - Saturday Night Live - Duration 6 21 Saturday Night Live 130 987 views 6 21 Play nextPlay Top 10 Chris Farley Moments - Duration 8 18 WatchMojo com 2 314 685 views 8 18 Play nextPlay CHRIS FARLEY - BEST - Duration 15 09 MyTalkShowHeroes 204 232 views 15 09 Play nextPlay Matt Foley Halloween - Saturday Night Live - Duration 5 55 Saturday Night Live 93 027 views 5 55 Play nextPlay Chris Farley David Spade Oscars - Duration 5 35 Oscars 123 430 views 5 35 Play nextPlay Tommy Boy Gag Reel Bloopers - Duration 4 17 Gibson42a 699 675 views 4 17 Play nextPlay Larry David Explains Parking Lot Meltdown - CONAN TBS - Duration 4 45 Team Coco 637 735 views 4 45 Play nextPlay FLASHBACK Working Adam Sandler Chris Farley Kevin Nealon Mike Myers 93 - Duration 2 50 Entertainment Tonight 38 149 views 2 50 Play nextPlay Top 10 Saturday Night Live Cast Members Time - Duration 16 02 WatchMojo com 1 665 627 views 16 02 Play nextPlay Top 10 Hilarious Ben Stiller Moments - Duration 11 07 WatchMojo com 1 975 599 views 11 07 Play nextPlay Top 10 Worst CGI Movie Effects - Duration 8 04 WatchMojo com 10 289 013 views 8 04 Play nextPlay Celebrity Jeopardy - SNL 40th Anniversary Special - Duration 8 48 Saturday Night Live 6 795 093 views 8 48 Play nextPlay Jay Mohr greatest Chris Farley story you'll ever hear - Duration 8 26 CurbYourEnHUGHEZYasm 3 471 views 8 26 Play nextPlay Swiftamine - Saturday Night Live - Duration 2 25 Saturday Night Live 1 775 594 views 2 25 Play nextPlay Chris Farley - Weekend Stupid B tch Full Skit - Duration 2 32 TheTrainStation 143 205 views 2 32 Play nextPlay Chris Farley - Matt Foley Motivational Speaker - Duration 6 25 JugtownHero 84 292 views 6 25 Play nextPlay Late Show David Letterman 1994 - Chris Farley commercials - Duration 12 13 defdave7 114 709 views 12 13 Play nextPlay Adam Sandler's SNL Meals Chris Farley Michael Keaton - CONAN TBS - Duration 2 45 Team Coco 840 593 views 2 45 Play nextPlay Loading suggestions Show Language English Country India Safety History Help Loading Loading Loading Press Copyright Creators Advertise Developers YouTube Terms Privacy Policy Safety Send feedback Try something new Loading Working Sign add Watch Later Add Loading playlists"),
('Category Theory for Computing Science', 'PDF-1 2 9 0 obj endobj 11 0 obj'),
('Hopscotch, a composable UI framework', "Forbidden don't permission access hopscotch-wasdett pdf server"),
('An Introduction to the Central Limit Theorem', "jump contentmy subredditsannouncementsArtAskRedditaskscienceawwblogbookscreepydataisbeautifulDIYDocumentariesEarthPornexplainlikeimfiveFitnessfoodfunnyFuturologygadgetsgamingGetMotivatedgifshistoryIAmAInternetIsBeautifulJokesLifeProTipslistentothismildlyinterestingmoviesMusicnewsnosleepnottheonionOldSchoolCoolpersonalfinancephilosophyphotoshopbattlespicsscienceShowerthoughtsspacesportstelevisiontifutodayilearnedTwoXChromosomesUpliftingNewsvideosworldnewsWritingPromptsedit subscriptionsfront-all-random gadgets-sports-gaming-pics-worldnews-videos-AskReddit-aww-Music-funny-news-movies-books-history-food-philosophy-television-Jokes-Art-DIY-space-Documentaries-Fitness-askscience-nottheonion-todayilearned-personalfinance-gifs-listentothis-IAmA-TwoXChromosomes-creepy-nosleep-GetMotivated-WritingPrompts-LifeProTips-EarthPorn-explainlikeimfive-Showerthoughts-Futurology-photoshopbattles-mildlyinteresting-dataisbeautiful-tifu-OldSchoolCool-UpliftingNews-InternetIsBeautiful-sciencemore programmingcommentsrelatedwant join sign create account seconds Englishlimit search r programminguse following search parameters narrow results subreddit subredditfind submissions subreddit author usernamefind submissions username site example comfind submissions example com url textsearch text urlselftext textsearch text self post contentsself yes self include exclude self postsnsfw yes nsfw include exclude results marked NSFWe g subreddit aww site imgur com dogsee search faq details advanced search author subreddit post submitted 12 Feb 20150 points 44 upvoted shortlink remember mereset passwordloginSubmit new linkprogrammingsubscribeunsubscribe617 271 readers1 350 users r programming reddit discussion news computer programming Guidelines Please try keep submissions topic high quality computer doesn't make programming Memes image macros acceptable forms content code link probably doesn't belong App demos include code architecture discussion Please follow proper reddiquette Info question Check r learnprogramming r cscareerquestions stackoverflow something funny share fellow programmers Please take r ProgrammerHumor posting job listings please visit r forhire r jobbit Check faq could use updating you're all-star hacker even beginning join discussion r redditdev steal reddit code Related reddits r technology r learnprogramming r askprogramming r coding r compsci r dailyprogrammer r netsec r webdev r web_design r gamedev r cscareerquestions r reverseengineering r startups r techsupport Specific languages created speza community 9 yearsmessage moderatorsMODERATORSketralnisspezPoromenostryxdonsmastakylevchromakodea_redditorabout moderation team discussions r programming X73 points 168 comments Let Oracle APIs Justice Dept tells top court surprise filingSourceForge took control GIMP account distributing ad-enabled installer GIMP491 points 548 comments Unicode Kind Insane11 points Rust Python Programmers10 points 9 comments 30 Official Images Docker Hub Contain High Priority Security Vulnerabilities7 points 19 comments Top 5 features Java 96 points 3 comments Network programming hints 4 games part 2a protocols APIs Eric Lippert former principal developer C compiler Microsoft AMA Friday 4pm NY time x-post r programmerchat 8 points 5 comments New Features C 6Middleman Static Sites Aren Blogs000An Introduction Central Limit Theorem spin atomicobject com submitted 3 months ago pl0d2 commentssharecancelloading 2 commentssorted besttopnewhotcontroversialoldrandomq ice109 0 points1 point2 points 3 months ago 1 child also known sample population makes sense It's called sample mean it's mean sample data first plot titled incorrectly population distribution hidden distribution data you're pulling samples first plot empirical sample distribution set 1 000 averages called sampling distribution it's you've computed subsample mean histogrammed result clearly histogram reflects distribution sample mean really doesn't say sample distribution vector - pull 10 heights compute joint probability x_i number also 1000 samples something that's already small sample don't make sense mean converge mean population mean sample duh since soon N size sample you'll computing mean sample 1000 times clt says sample population e g whatever distribution sampled generate initial numbers 1-100 add samples scale appropriately it's actually dividing n dividing sqrt n normalized sum good approximation mean distribution random variable normal 0 s2 n s2 population variance bit intuition wrong that's intuition law large numbers clt intuition clt purely mathematical namely lim_ n- inf 1 n n ea permalinksavereportgive goldreply kenfox 0 points1 point2 points 3 months ago 0 children sure seems like you've parsed things differently author intended mean samples also known sample population think it's meant samples sample population second point maybe read sampling distribution sample distribution author didn't take 1000 samples took 3 samples computed mean 1000 times Isn't sampling distribution permalinksaveparentreportgive goldreplyaboutblogaboutvaluesteamsource codeadvertisejobshelpsite rulesFAQwikireddiquettetransparencycontact usapps toolsAlien Blue iOS appreddit AMA appmobile betabuttons 3reddit goldreddit storeredditgiftsreddit tvradio redditUse site constitutes acceptance User Agreement Privacy Policy Genitive 2015 reddit inc rights reserved REDDIT ALIEN Logo registered trademarks reddit inc Rendered PID 8112 app-229 2015-05-27 17 41 57 359971 00 00 running 8944350 country code"),
('Computational scientists tackle a slippery subject: designing better land ice-sheet models. Crossposted to /r/HPC, /r/climatechange', "Deixis Online Computational Science National Laboratories Home Us Contact Us Article Index Subscribe Argonne Brookhaven Lawrence Berkeley Lawrence Livermore Los Alamos Oak Ridge Pacific Northwest Sandia Fellows' Research Slippery subject Email Post Print Thomas R O'Donnell February 11th 2015 Updated February 9th 2015 Filed Oak Ridge University Texas researchers improve computational models ice sheets refining estimates basal friction much rocks earth slow sheet movement visualizations show ice flow velocity surface satellite observations top reconstructed parameters derived solving inverse problem scale kilometers per year inverse reconstruction closely matches reality critical coastal areas Tobin Isaac University Texas Climate models thin ice Simulations predict impact climate change weak portray flow polar ice sheets oceans Land ice models subject much uncertainty 2007 Fourth Assessment Report Intergovernmental Panel Climate Change said ambiguous permit reliable predictions much ice sheets would contribute rising sea levels Much uncertainty arises input parameters difficult impossible measure Researchers estimate much forces affect ice sheet movement much weight give simulations One parameter basal friction resistance movement ice sheet base grinds rocks earth big effect predictions says Tobin Isaac computational applied mathematics doctoral student University Texas Austin Isaac researchers getting grip unseen parameter take observations satellite measurements Antarctic ice sheet velocity work backward calculate basal sliding force led Issac colleagues outline approach solve virtually impossible problem calculate results uncertainty paper posted online talk Isaac delivered New Orleans November SC14 supercomputing conference method scalable number steps takes grows slightly number variables parameters includes Among computational scientists parameters simulating compare results observations called forward problem says Isaac alumnus Department Energy Computational Science Graduate Fellowship DOE CSGF Taking observations getting back parameters need inverse problem However unseen parameters inferred observations bound somewhat uncertain make model predictions useful researchers must account ambiguity process called uncertainty quantification UQ UQ come people say best models say happen part prediction re certain part re less certain Models cast mesh data points space re simulating ice sheet Algorithms calculate physical processes point Taken together produce picture much like pixels produce digital image closer points spaced accurate model computing requires ask parameter field re asking one two values Isaac says re asking one two values section ice sheet one two values section ice sheet Depending big make sections could end large parameter set even larger problem parameter adds dimension space choices algorithms must explore find values reproduce observed data Page 1 2 Next Leave Comment Click cancel reply Name required Mail published required Website Related Links Slippery subject Popular Articles Laptop supercomputing Foiling airflow error spontaneous collaboration Sun Earth Pounding atomic nuclei DEIXIS Computational Science National Labs frequently updated online companion eponymous annual publication Computational Science Graduate Fellowship Krell Institute manages program U Department Energy Privacy Statement Copyright 2000-2015 Krell Institute Rights Reserved"),
('Computational Complexity: Richard Hamming Centenary', "Computational Complexity Computational Complexity fun stuff math computer science Lance Fortnow Bill Gasarch Wednesday February 11 2015 Richard Hamming Centenary Richard Hamming born hundred years ago today Chicago worked Manhattan Project World War II moved Bell Labs war started working Claude Shannon John Tukey wrote seminal 1950 paper Error detecting error correcting codes Suppose send string bits bit might flipped transmission add extra parity bit end used detect errors wanted correct error Richard Hamming developed error-correcting code called Hamming code encodes 4 bits 16 codewords 7 bits every two codewords differ least three bits call Hamming distance 0000000 1101001 0101010 1000011 1001100 0100101 1100110 0001111 1110000 0011001 1011010 0110011 0111100 1010101 0010110 1111111 single error unique codeword within one bit damaged string error-correcting code continue process instead halting detect bad code Hamming code linear code bitwise sum mod 2 two codewords another codeword linear idea led many sophisticated codes many applications computer science practical theoretical Hamming received several awards notably 1968 ACM Turing Award inaugural IEEE Richard W Hamming Medal 1988 given exceptional contributions information sciences systems technology Hamming passed away 1998 Posted Lance Fortnow 6 23 Email ThisBlogThis Share TwitterShare FacebookShare Pinterest 2 comments John Sidles10 12 February 11 2015Note Terry Tao maintains Career Advice web-page specifically commends provide link Richard Hamming's essay Stroke Genius Striving Greatness Two outstanding resources students needless say ReplyDeleteAnonymous1 16 PM February 12 2015I remember Robert Gallager calling Hamming tireless self-promoter lecture wondered prompted remark ideas ReplyDeleteAdd commentLoad Newer Post Older Post Home Subscribe Post Comments Atom Tweets fortnow Golden Ticket Golden Ticket P NP Search Impossible popular science book P versus NP problem written Lance Fortnow Princeton University Press Popular Posts Theory Jobs 2015 2014 Fall Jobs Post Fiftieth Anniversary Publication seminal paper Computational Complexity 1 1 2 take Russell Whitehead 300 pages Logarithmic Space Closed Kleene Star Guest Post Dr Hajiaghayi new way rank departments law excluded middle road republicans Virtuous Cycle John Nash 1928-2015 Sizes DFAs NFAs DPDAs UCFG CFGs CSLs Blog Links Bill's Home Page Lance's Home Page Videos Podcast Posts Feed Comments Feed Mailing List CACM Viewpoint Foundations Complexity Graduate Student Guide Favorite Theorems Links Favorite Complexity Books TCS Q Complexity ArXiv ECCC Paper Archive Complexity Conference Complexity Zoo BEATCS Complexity Column SIGACT Parberry Referees Speakers Guides DMANET TheoryNet Announcements Blog List 0xDE Graham Erd Egyptian fractions 1 week ago Algorithmic Game-Theory Economics John Forbes Nash Jr 1928-2015 4 days ago Analysis Boolean Functions Analysis Boolean Functions book available free download 6 months ago Ars Mathematica Nine Chapters Semigroup Art 2 months ago Bits Pieces Really North Koreans 5 months ago COMPUTING RESEARCH POLICY BLOG America COMPETES Reauthorization Floor Today 1 week ago Essays Opinions Oded Goldreich FYI AIP Bulletin Science Policy News House FY 2016 NIST Appropriations Bill 21 hours ago Glencora Borradaile Recovering depression 40-hour work week 2 days ago G del's Lost Letter P NP John Alicia Nash 1928 1933 2015 2 days ago Healthy Algorithms Interesting read Stochastic Dirty Word 10 hours ago theory Two recent papers Cui Peng 1 day ago LEARNINGlover com Learn Descriptive Statistics 1 month ago Machine Learning Theory Randomized experimentation 5 weeks ago Biased Coin makes well-attended conference STOC 2017 Discussion 1 week ago Brain Open Polytopix hiring 2 months ago slice pizza Morning Madness Ode Mercedes 1 week ago Opinions Doron Zeilberger Paul Goldberg tempted cut 6k tuition fees 4 weeks ago Process Algebra Diary PhD positions Computer Science IMT Lucca Italy 1 week ago Random bits Upcoming Google Hangout 21 hours ago Shtetl-Optimized NSA P poly Power Precomputation 5 days ago Speedup Computational Complexity asymptotic sum inequality optimal guest post Yuval Filmus 10 months ago Geomblog ITA conference really enjoy 1 week ago MPC Lounge 5th Bar-Ilan Winter School 2015 Advances Practical Multiparty Computation 7 months ago polylogblog CPM 2015 4 months ago Theory Matters Change NSF Deadlines 1 week ago What's new Cancellation multilinear Hilbert transform 2 days ago Windows Theory Turning STOC 2017 Theory Festival 2 weeks ago Search Blog Loading Blog Archive 2015 41 May 7 April 9 March 9 February 8 Selecting Correct Oracle Eliminate Postal Service Winners Stephan Colbert Jon Stewart Andrew Sullivan Wil Richard Hamming Centenary Pros Cons students wikiheads Computers Turn Good Evil Less elegant proofs 2n n n integer January 8 2014 111 December 8 November 8 October 10 September 11 August 9 July 9 June 11 May 10 April 10 March 8 February 8 January 9 2013 106 December 9 November 8 October 8 September 11 August 9 July 9 June 8 May 9 April 8 March 9 February 9 January 9 2012 132 December 7 November 9 October 12 September 10 August 10 July 9 June 10 May 12 April 12 March 15 February 14 January 12 2011 134 December 10 November 10 October 12 September 13 August 10 July 10 June 14 May 11 April 12 March 12 February 11 January 9 2010 192 December 8 November 12 October 15 September 14 August 18 July 15 June 17 May 20 April 22 March 20 February 15 January 16 2009 249 December 16 November 19 October 23 September 21 August 21 July 23 June 23 May 22 April 21 March 22 February 20 January 18 2008 253 December 19 November 18 October 27 September 21 August 19 July 22 June 23 May 23 April 22 March 20 February 21 January 18 2007 159 December 10 November 15 October 18 September 10 August 13 July 11 June 8 May 8 April 7 March 16 February 20 January 23 2006 238 December 18 November 22 October 22 September 19 August 24 July 18 June 18 May 18 April 18 March 21 February 20 January 20 2005 237 December 18 November 20 October 24 September 19 August 22 July 17 June 19 May 21 April 19 March 17 February 17 January 24 2004 200 December 18 November 16 October 19 September 15 August 16 July 15 June 18 May 13 April 13 March 17 February 16 January 24 2003 149 December 13 November 12 October 15 September 11 August 7 July 11 June 13 May 10 April 15 March 15 February 11 January 16 2002 76 December 20 November 17 October 15 September 18 August 6 Computational Complexity Weblog Lance Fortnow William Gasarch licensed Creative Commons Attribution-NonCommercial 3 0 Unported License Awesome Inc template Powered Blogger"),
('Snowblowing is NP-complete', "HomeAboutFilesPodcast Punk Rock Operations Research operations research die blog Laura McLay February 9 2015 snowblowing NP-complete Laura McLay recent winter storm left lot snow driveway lot driveway perfectly place huge snowdrifts form tweet shoveling resulted discovery Snowblower Problem Esther M Arkin Michael Bender Joseph B Mitchell Valentin Polishchuk HT fbahr Snow piles next driveway shoveling verify it's imagination snow drifts really pile pic twitter com Rvz1ECKGle Laura McLay lauramclay February 1 2015 Snowblower Problem SBP answers following question one optimally use snowblower clear given polygonal region snowblower problem like Traveling Salesman Problem TSP objective find shortest snow removing tour remove snow domain polygonal region difference TSP SBP snow displaced nearby region SBP snow piled high snowblower cannot clear snow SBP NP-complete three model variants considered paper differ throw snow 1 default model snow thrown direction 2 adjustable throw direction left right center 3 left throw Changing snow throw direction cumbersome fixed direction model variant left throw practical value Theorem SBP NP-complete default model adjustable throw model inputs polygonal domains holes Snowblower Problem Esther M Arkin Michael Bender Joseph B Mitchell Valentin Polishchuk SBP similar spirit various zombie research models silly problem context real applications applications SBP milling lawn-mowing guessed lawn mowing also NP-complete paper goes present various approximation algorithms SBP algorithms used decompose snowy region Voronoi cells clear domain cell-by-cell difficult succinctly summarize results without introducing bunch mathematical notation ll refer directly paper mathematical details conclusion notes approximation ratios likely best possible opportunities follow work snow removing algorithm close optimality Update favorite comment post twitter also shovel snow old fashioned way agree CompSciFact lauramclay Snowblowing may NP-complete shoveling feels NP-hard empirical proof end Winter JF Cloutier jfcloutier February 9 2015 ads Like Like Loading Related entry posted Monday February 9th 2015 8 42 posted Uncategorized follow responses entry RSS 2 0 feed possible record levels immunization record levels vulnerability infectious disease social networks matter satisficer use secretary problem find love 2 responses snowblowing NP-complete Research shows snowblowing NP-complete carlhowe com blog February 9th 2015 5 53 pm Research shows snowblowing NP-complete may true snow shoveling aptly described HP-hard punkrockor wordpress com 2015 02 09 sno thatguyer February 9th 2015 8 43 pm Shoveling linear albeit pretty big constant Leave Reply Cancel reply Enter comment Fill details click icon log Email required Address never made public Name required Website commenting using WordPress com account Log Change commenting using Twitter account Log Change commenting using Facebook account Log Change commenting using Google account Log Change Cancel Connecting Notify new comments via email Notify new posts via email blog Laura McLay Visit Punk Rock Operations Research Facebook Connect Follow Punk Rock via email Enter email address follow blog receive notifications new posts email Join 2 767 followers Search Punk Rock Punk Rock Tweets Stephanie Birkitt written Letterman Late Show history damned shame washingtonpost com blogs style-bl 1 hour ago MIP solvers sped factor 200 billion since release CPLEX 1 2 1991 orms twitter com 4er status 603 23 hours ago New blog post flood risks orms wp pmLTQ-1m4 punkrockor wordpress com 2015 05 27 flo 1 day ago Staying safe tornadoes weather app cried wolf punkrockor wordpress com 2014 04 28 sta 1 day ago FiveThirtyEight tornado warnings lead times false alarms fivethirtyeight com features three http co NBh8FaQkIc 1 day ago RT treycausey Pretty sure drank plenty grad school smbc-comics com index php id 3 SMBCComics http co R9qpelyNDF 1 day ago Inbox Zero vs Inbox 5 000 Chaos Muppet Order Muppet theatlantic com technology arc HT msgbi 1 day ago best educated women opting children part involved fathers economist com news united-st 1 day ago Recent Comments Shri domino optimization art CaptainTeknics conditional probability exploding filling car gas Abram tips filling statistically sound bracket Laura McLay write damn Tagsanalytics art aviation blogs cheese coloring computing conferences cooking coupons criminal justice data decision analysis disasters education elections emergencies environmentalism natural living finance football analytics grand challenges graph theory health healthcare higher education holidays home homeland security humanitarian K12 lightning lottery march madness marketing math programming mip MODA Olympics optimization ORMS blog-off PhD phd student advice pirates podcast video politics pop culture probability public policy publishing queuing recipe risk communication science communication science fair secretary problem sewing slidecasts social justice social networking sports star wars stochastic processes stopping problems teaching teaching technology traffic Transportation TSP twitter vampires weather werewolves women work-life balance zombies Subscribe RSS Create free website blog WordPress com Elegant Grunge Theme Follow Follow Punk Rock Operations Research Get every new post delivered Inbox Join 2 767 followers Build website WordPress com d bloggers like"),
('LAZARUS (Lab for the Analysis of Zombie Activity and Research into Undead Systems)', 'HOME SCHOENBERG PHOTOS GPU CONTACT TEAM SUPPORT EVENTS Tweets lazarus_ttu lazaruslives Lab Analysis Zombie Activity Research Undead Simulations LAZARUS founded Texas Tech University 2014 result synergistic efforts Department Mathematics Statistics Science Technology Engineering Mathematics STEM Center Outreach Research Education STEM-CORE number independent initiatives funded National Science Foundation lab designed serve two purposes 1 support research opportunities undergraduate graduate students 2 support K12 outreach efforts designed increase awareness interest STEM academic career pathways lab hosts number resources designed support objectives supercomputer branded Schoenberg Cluster featured lab centerpiece TTU LAZARUS Supported TTU Department Mathematics Statistics TTU STEM Center Outreach Research Education TTU Center Active Learning Undergraduate Engagement NSF Award Nos 0742402 0930257 103096 TTU LAZARUS Box 41042 Lubbock TX 79409-1042 806 742-2566webmaster stem ttu eduAll images content 2014 Texas Tech University rights reserved'),
('Decomposing the Human Palate with Matrix Factorization', "Jeremy Cohen Posts Decomposing Human Palate Matrix Factorization February 6 2015 still frame visualization tool shows breakdown Naan bread constituent tastes Summary classmates applied matrix factorization technique recommender systems data set 120K user profiles scraped recipe-sharing web site AllRecipes com extracted 40 latent tastes combine make sorts human foods understood sentence feel free skip ahead Part II post Matrix Factorization Food view results play around interactive visualizations Gentle Introduction Matrix Factorization First m sorry know term matrix factorization liable trigger life-threatening reaction persons allergic linear algebra reading title blog post causing go anaphylactic shock please know meant harm truth didn pay attention linear algebra class either far tell orthogonal fancy synonym unrelated use want sound smart eigenvector probably something horrible Wernher von Braun dreamt switched employers 1945 product space kind thing growth hacker gets excited good news understanding matrix factorization require linear algebra beyond definition matrix multiplication get details want motivate algorithm pointing application heavily studied problem computer science get people buy things Recommender Systems Suppose order City Chic First Years Jet Stroller Amazon com Amazon would like sell items items recommend One idea recommend items intrinsically similar City Chic First Years Jet Stroller might items also stroller name items made manufacturer items whose descriptions share words common description stroller called content-based recommendation interesting idea treat items black boxes somehow learn correlations items ratings history users called collaborative filtering example would bet people buy baby strollers also likely buy Essential Mozart CD collection association two items could never detected content-based methods alone Mozart collection zero properties common baby stroller intelligent yet uninformed alien visiting Planet Earth day would never think Ah yes course people previous discernable interest classical music suddenly snatch collected works Wolfgang Amadeus also market baby stroller Fortunately thanks collaborative filtering Amazon pick relationship two distinct items make right recommendation win-win situation Jeff Bezos become richer baby won get left behind One fascinating techniques collaborative filtering matrix factorization easiest understood form dimensionality reduction Dimensionality Reduction recollection one quiz insufferable ninth grader took bunch Facebook quizzes 2008 U presidential election cycle quizzes would ask zillion questions personal political opinions would show Cartesian plane two dimensions social views economic views big dot somewhere supposed represent also dots candidates Barack Obama John McCain dots insightful thinkers like Karl Marx William F Buckley Abraham Lincoln dot Ayn Rand people apparently taken quiz incredibly enough sum total lives could reduced two numbers position social axis position economic axis magic trick called dimensionality reduction feat Political platforms probably hundreds dimensions like taxation immigration energy national security climate change whether candidate believes acceptable drive Canada Irish Setter tied roof car ideology quiz reduced every politician two dimensions social economic Working simplified two-dimensional space made lot easier identify politicians whose views closely matched matrix factorization technique recommender systems involves similar kind dimensionality reduction except algorithm learns dimensions words matrix factorization real deal stuff separates true data scientists charlatans data alchemists data phrenologists data astrologers world plausible item vector item Essential Mozart Factor interpretations left factor weights boxes Suppose Amazon could somehow reduce dimensionality every item inventory say 50 factors items users could represented weight vectors length 50 Ideally factors would interpretable meanings continue Mozart example maybe factor 32 represents neurotic upper-middle-class American parent case 32nd weight user vector would quantify degree user neurotic upper-middle-class American parent Likewise 32nd weight item vector would quantify degree item appeals neurotic upper-middle-class American parents See example item vector right predict user rating item take dot product user vector item vector still explained Amazon use user item ratings data learn 50-dimensional vector representation item user Intuitively learning vectors optimization problem goal maximize agreement user item ratings vectors predict user item ratings observed later explained Amazon specify factor 32 neurotic upper-middle-class American parent factor Actually intuitive meaning factor derived post hoc vector representations items users rather way around item user vector representations generated data scientists look results observe items highest weights factor baby strollers Mozart CDs conclude must neurotic upper-middle-class American parent factor style reasoning called extracting actionable insights cornerstone data-scientific method sets modern data science apart earlier barbaric pseudo-data sciences algorithm learns 50-dimensional representations discover factors doesn name algorithm called matrix factorization turns task learning low-dimensional vector representations item user consistent observed user ratings viewed another angle matrix completion problem Matrix Completion View realistic ratings matrix empty square means user hasn't yet rated item Imagine Amazon big incomplete USERS x ITEMS matrix value USER ITEM square rating say 1 5 USER gave ITEM USER hasn yet rated ITEM USER ITEM square empty Indeed squares empty Amazon needs somehow complete USERS x ITEMS matrix make good recommendations bring revenue know Washington Post isn going buy matrix factorization approach approximate completed USERS x ITEMS matrix product USERS x FACTORS matrix FACTORS x ITEMS matrix number factors fixed advance say 50 values two individual matrices carefully chosen product two matrices completed USERS x ITEMS matrix predicted user item ratings mostly consistent incomplete USERS x ITEMS matrix observed user item ratings row USERS x FACTORS matrix 1 x 50 user vector represents single user preferences 50 factors column FACTORS x ITEMS matrix 50 x 1 item vector represents breakdown single item 50 factors two matrices multiplied together value USER ITEM location completed matrix definition dot product USER user vector ITEM item vector already seen measure USER preference ITEM discussed preceding section factorizing incomplete USERS x ITEMS matrix optimization problem goal minimize metric difference incomplete USERS x ITEMS matrix observed ratings completed USERS x ITEMS matrix predicted ratings also add non-negativity constraint every value multiplicand multiplier matrices greater equal zero constraint makes factors interpretable number algorithms literature non-negative matrix factorization use iterative method described algorithm uses multiplicative update rules minimize metric called KL divergence measures difference two matrices Anyway enough Amazon rest post focus application matrix factorization domain possibly domain central life online purchase consumer products Matrix Factorization Food took introductory machine learning course David Blei Spring 2014 final project classmates decided build recommender system foods recommender system turned pretty mediocre got interesting factors fall matrix factorization scraped data set AllRecipes com popular recipe-sharing web site tens thousands recipes hundred thousand users AllRecipes gold mine food data AllRecipes user recipe box list favorite recipes recipe boxes scraped throwing away recipes occurred fewer 300 recipe boxes left 9 546 recipes 115 308 users users collectively 9 6 million recipes recipe boxes experimented two different approaches problem recipe recommendation content-based method using information ingredients recipe collaborative filtering method using data user-recipe preferences content-based method straightforward represent recipe vector ingredients kitchen value element mass fraction corresponding ingredient takes recipe measure similarity two recipes take cosine similarity vectors approach worked fine ll ignore remainder post collaborative filtering method far interesting didn know anything users liked recipes represented user-recipe preference data 115 308 x 9 546 user-by-recipe matrix 1 every square corresponding user corresponding recipe recipe box 0 everywhere else factorized user-by-recipe matrix using 40 factors 115 308 x 40 user-by-factor matrix 40 x 9 546 factor-by-recipe matrix used MATLAB NMF toolbox perform non-negative matrix factorization NMF algorithm took 8 hours complete 2 000 iterations machine 2 2GHz processor 128 GB RAM Sure enough eight hours compute time factors produced non-negative matrix factorization really seem correspond human tastes clarify row user-by-factor matrix 1 x 40 vector represents single user preference 40 factors column factor-by-recipe matrix 40 x 1 vector represents decomposition single recipe constituent factors explore three different ways play around data generated factorization First ask questions like factor 3 really represent easiest way find look dishes highest weights factor 3 top ones Quinoa Black Beans Baked Kale Chips Quinoa Side Dish example could conclude factor 3 represents vegan food Second ask questions like factors dish Butter Chickpea Curry consist proportions Answering question simple looking row Butter Chickpea Curry factors-by-recipe matrix produced NMF Use Taste Breakdown visualization tool view factor breakdown recipe Apparently Butter Chickpea Curry 62 vegetarian 34 Indian food 4 random noise Third ask questions like food would get smashed together 'vegetarian' factor 'cookies brownies' factor find sort recipes decreasing order cosine similarity made-up recipe vector 0 5 'vegetarian' position 0 5 'cookies brownies' position Mix 'n Match visualization tool allows make queries answer instance apparently Vegan Brownies Tastes 40 tastes came matrix factorization describe taste printing five exemplar recipes highest weights observations tastes correspond food groups like seafood taste 4 bread taste 24 salad taste 12 beverages alcoholic taste 22 non-alcoholic taste 23 tastes correspond dietary preferences like vegan tastes 3 10 barbecue taste 31 Still others correspond national holidays like Thanksgiving taste 32 Superbowl taste 7 sure sign AllRecipes users priorities straight large plurality tastes used differentiate subtly different kinds desserts cake taste 8 cheesecake taste 19 fruit pastries tastes 16 18 25 sugary cookies taste 9 chocolatey cookies taste 35 confections taste 38 scones biscotti taste 40 fancifully nutritious desserts taste 11 Taste 6 entirely devoted slow-cooker foods taste 39 nothing casserole fear AllRecipes com may one place along Social Security budget committee nation grandmothers hold much influence Taste 28 corresponds Indian Thai food faintly surprised ethnic cuisines came factorization although suppose taste 39 might qualify Mexican taste 27 definite German flair Taste 13 comprises dishes macaroni cheese meat loaf lasagna potato salad described comfort food took surprise always assumed concept comfort food distinct class foods mere figment Paula Deen imagination sort like concept bacon biscuits deep fried butter give diabetes remaining tastes correspond chicken various states matter Taste Breakdown interactive tool gives taste breakdown 9 000 recipes AllRecipes com pull taste breakdown food start typing name food search bar click one recipes pop autocomplete box Clicking example recipes appear pull taste breakdowns share link taste breakdown catches interest right click permalink icon select Copy Link Address browser intuitions borne matrix factorization Naan combination Indian food taste 28 bread taste 24 vegetarian food taste 10 Blueberry Waffles Fast Blueberry Sauce mix fruit desserts taste 25 breakfast foods taste 34 granola taste 11 Butter Chickpea Curry cross vegetarian food taste 10 Indian food taste 28 Cedar Planked Salmon part seafood taste 4 part barbecue taste 31 Coq Au Vin popular among people also like alcoholic beverages taste 22 chicken taste 14 Mix n Match interactive tool lets mix match tastes Select two three tastes two-column list see recipes closely match combined taste profile re ideas try mixing alcoholic beverages sugar cookies slow cooker barbecue biscotti breakfast foods Click tastes begin Dishes closely matching selected taste profile Data Code data available Github Hacker News Read discussion Hacker News Thanks Reading post describes project carried David Blei course COS 424 Interacting Data Spring 2014 Princeton University Rob Sami Google Aaron Schild Berkeley Spencer Tank Palantir Thanks Charles Guo Charlie Marsh Lucas Mayer Shubhro Saha Jacob Simon reading drafts post"),
('Silver: A free implementation of Swift for .NET, Java, Android, and Cocoa', "Elements Home Oxygene C Silver Fire Download Pricing Login Silver Swift also NET Java Android Download Silver It's Free Silver free implementation Apple's Swift programming language Silver use Swift write code directly NET Java Android Cocoa APIs also share lot non-UI code platforms Built ten years solid compiler knowledge technology Silver truly native Swift compiler NET CLR Java Android JVM Cocoa runtime Silver supports three platforms decidedly cross-platform focusing letting leverage Swift language natively individual platform rather encouraging mediocre cross-platform apps Silver share language tool expertise share lot back-end business logic code use write apps targeted platform individually that's great apps made Development Environment Silver compiler complete toolchain development environment creating apps developers working Windows Silver integrates deeply Microsoft's state-of-the-art Visual Studio IDE Visual Studio 2013 included free developers Mac Silver comes Fire brand-new development environment designed ground Elements compiler lightweight productive work Mac Read IDEs Visual Studio Fire Frameworks Silver embraces platform's native SDKs Frameworks you're leveraging native Java Dalvik APIs Android working directly NET WinRT frameworks Microsoft's platform creating true native Cocoa apps Mac iOS using Swift language time optional Sugar cross-platform library allows share large amounts back-end code keep cross-platform especially helpful creating app different devices Sugar open source even contribute extend library Read Frameworks NET Java Cocoa Sugar Docs docs site find tutorials creating first apps introductions VisualStudio Fire development environments details different platforms unique features Dive Silver documentation docs elementscompiler com Silver course documentation also integrated directly IDE press F1 Convert existing code Swift easily Silver comes unique feature called Oxidizer lets convert C Java Objective-C code Swift single click convert code fly paste clipboard Fire Visual Studio convert whole files add project Oxidizer magic cannot handle every corner case gets good step way Read Oxidizer try live action website Convert code Elements Silver one three programming languages supported Elements two RemObjects C Oxygene language three languages advantages unique benefits desire mix three languages project three platforms Download Silver waiting Get copy Silver it's free Download Silver It's Free Silver Action Help us Support Silver RemObjects Silver absolutely free use We're small company continue operated self-funded self-financed ten years large backers millions venture capital finance product development still need pay salaries rent test hardware infrastructure many things We've always relied product revenue costs making major new product free big change big gamble us like Silver believe product we'd love consider supporting development small not-so-small financial contribution Contribute 9 99 499 999 4999 level contribution earn eternal gratitude Contributing 499 give private access weekly alpha beta builds allow closely involved product team year Contributing 999 also give premium email support year contributing 4999 give company direct access contact Elements product team via email IM priority consideration bug reports feature requests Forums FAQ Follow Twitter Like Facebook Swift Base Library Elements compiler Fire IDE products RemObjects Software Website copyright RemObjects Software LLC 2002-2015 rights reserved Legal Elements Oxygene Hydrogene RemObjects C Silver Fire product names corresponding logos trademarks registered trademarks RemObjects Software LLC site proudly powered Elements compiler Data Abstract"),
('A quine relay through 100 languages', "Skip content Sign Sign repository Explore Features Enterprise Blog Watch 153 Star 4 015 Fork 221 mame quine-relay Code Issues Pull requests Wiki Pulse Graphs HTTPS clone URL Subversion checkout URL clone HTTPS Subversion Download ZIP uroboros program 100 programming languages 250 commits 2 branches 0 releases 11 contributors Ruby 73 6 Makefile 26 4 Ruby Makefile branch master Switch branches tags Branches Tags 50 master Nothing show Nothing show quine-relay add FAQ latest commit 9cb8774840 mame authored May 17 2015 Permalink Failed load latest commit information src add FAQ May 17 2015 vendor upgraded laptop Ubuntu 15 04 Apr 24 2015 gitignore make test rb work Dec 9 2014 travis yml remove postgresql-common Jan 18 2015 Dockerfile update package names Apr 26 2015 Makefile use filename QR ratfor May 16 2015 QR rb 100th language Lazy K Merry Quine-mas Dec 24 2014 README md add FAQ May 16 2015 SHA1SUMS 100th language Lazy K Merry Quine-mas Dec 23 2014 langs png update package names Apr 25 2015 thumbnail png add thumbnail code Dec 25 2014 README md Quine Relay Ruby program generates Scala program generates Scheme program generates 100 languages total REXX program generates original Ruby code want see old 50-language version see 50 branch Usage Ubuntu 1 Install interpreters compilers using Ubuntu 15 04 Vivid Vervet perform following steps First type following apt-get command install sudo apt-get install afnix algol68g aplus-fsf asymptote ats-lang-anairiats bash bc bf boo bsdgames cduce clisp clojure1 6 cmake coffeescript dc ecere-sdk emacs24 erlang f2c falconpl fp-compiler fsharp g gambas3-script gap gauche gawk gcc gdc genius gforth gfortran ghc ghostscript gnat gnu-smalltalk gnuplot gobjc golang gpt gri groff groovy haxe icont iconx intercal iverilog jasmin-sable julia kaya libgd2-xpm-dev libpng12-dev lisaac llvm lua5 2 make maxima mlton mono-devel mono-mcs mono-vbnc nasm neko nickle ocaml octave open-cobol openjdk-6-jdk pari-gp parrot perl php5-cli pike7 8 python r-base ratfor regina-rexx rhino ruby2 1 scala scilab slsh spl-core swi-prolog tcl ucblogo valac xsltproc yorick zoem build bundled interpreters make -C vendor run Ubuntu 12 04 LTS might want refer travis yml 2 Run program interpreter compiler ruby QR rb QR scala scalac QR scala scala QR QR scm gosh QR scm QR sci scilab -nw -nb -f QR sci QR bash bash QR bash QR sl slsh QR sl QR st gst QR st QR spl splrun QR spl QR sml mlton MLton fixed-heap 200M -- QR sml QR QR sq ruby vendor subleq rb QR sq QR tcl tclsh QR tcl QR ruby vendor thue rb QR QR unl ruby vendor unlambda rb QR unl QR vala valac QR vala QR QR v iverilog -o QR QR v QR -vcd-none QR vb vbnc QR vb mono QR exe QR ws ruby vendor whitespace rb QR ws QR xslt xsltproc QR xslt QR yorick yorick -batch QR yorick QR azm zoem -i QR azm QR QR qr adb gnatmake qr adb qr QR als axi QR als QR a68 a68g QR a68 QR ante ruby vendor ante rb QR ante QR asy asy QR asy QR dats atscc -o QR QR dats QR QR awk awk -f QR awk QR bc BC_LINE_LENGTH 4000000 bc -q QR bc QR bef cfunge QR bef QR Blc ruby vendor blc rb QR Blc QR boo booi QR boo QR bf bf QR bf QR c gcc -o QR QR c QR QR cpp g -o QR QR cpp QR QR cs mcs QR cs mono QR exe QR cd cduce QR cd QR chef PERL5LIB vendor local lib perl5 compilechef QR chef QR chef pl perl QR chef pl QR clj clojure QR clj QR cob cobc -O2 -x QR cob QR QR coffee coffee QR coffee QR lisp clisp QR lisp QR d gdc -o QR QR d QR QR dc dc QR dc QR ec ecp -c QR ec -o QR sym ecc -c QR ec -o QR c ecs -console QR sym QR imp -o QR main ec ecp -c QR main ec -o QR main sym ecc -c QR main ec -o QR main c gcc -o QR QR c QR main c -lecereCOM QR QR el emacs -Q --script QR el QR erl escript QR erl QR fsx fsharpc QR fsx -o QR exe mono QR exe QR fal falcon QR fal QR false ruby vendor false rb QR false QR fs gforth QR fs QR f f2c QR f gcc -o QR QR c -L usr lib -lf2c -lm QR QR f90 gfortran -o QR QR f90 QR QR gbs gbs3 QR gbs QR g gap -q QR g QR gel genius QR gel QR plt gnuplot QR plt QR go go run QR go QR gpt gpt -o QR QR gpt QR QR gri gri QR gri QR groovy groovy QR groovy QR hs ghc QR hs QR QR hx haxe -main QR -neko QR n neko QR n QR icn icont -s QR icn QR QR ick -bfO QR QR QR j jasmin QR j java QR QR java javac QR java java QR QR js rhino QR js QR jl julia QR jl QR k kayac QR k QR QR lazy lazyk QR lazy qr li lisaac qr li qr QR ll llvm-as QR ll lli QR bc QR logo logo QR logo QR lol lci QR lol QR lua lua QR lua QR mk make -f QR mk QR mac maxima -q --init-mac QR mac QR il ilasm QR il mono QR exe QR asm nasm -felf QR asm ld -m elf_i386 -o QR QR o QR QR neko nekoc QR neko neko QR n QR 5c nickle QR 5c QR m gcc -o QR QR m QR QR ml ocaml QR ml QR octave octave -qf QR octave QR ook ruby vendor ook-to-bf rb QR ook QR ook bf bf QR ook bf QR gp gp -f -q QR gp QR pasm parrot QR pasm QR pas fpc QR pas QR QR pl perl QR pl QR php php QR php QR png npiet QR png QR pike pike QR pike QR ps gs -dNODISPLAY -q QR ps QR ppt ppt -d QR ppt QR prolog swipl -q -t qr -f QR prolog QR py python QR py QR R R --slave -f QR R QR ratfor ratfor -o QR ratfor f QR ratfor gfortran -o QR QR ratfor f QR QR rexx rexx QR rexx QR2 rb see QR rb QR2 rb diff QR rb QR2 rb Alternatively type make make Note may require huge memory compile files Arch Linux install quine-relay-git AUR run quine-relay Report problems comments AUR package respective packages one many compilers issues platforms may find instructions platforms wiki using Linux distributions please find way could please let know Good luck Tested interpreter compiler versions used following Ubuntu deb packages test program language ubuntu package version 1 Ruby ruby2 1 2 1 2-2ubuntu3 2 Scala scala 2 9 2 dfsg-2 3 Scheme gauche 0 9 4-5 4 Scilab scilab 5 5 1-7 5 Shell bash bash 4 3-11ubuntu2 6 S-Lang slsh 2 3 0-2ubuntu1 7 Smalltalk gnu-smalltalk 3 2 4-2 1 8 SPL spl-core 1 0 pre6-4ubuntu1 9 Standard ML mlton 20100608-5 1 10 Subleq N - 11 Tcl tcl 8 6 0 6ubuntu3 12 Thue N - 13 Unlambda N - 14 Vala valac 0 26 2-1 15 Verilog iverilog 0 9 7-1 16 Visual Basic mono-vbnc 3 8-1 17 Whitespace N - 18 XSLT xsltproc 1 1 28-2build2 19 Yorick yorick 2 2 03 dfsg-3ubuntu1 20 Zoem zoem 11-166-1ubuntu1 21 aplus-fsf 4 22 1-6 22 Ada gnat 4 9ubuntu1 23 AFNIX afnix 2 2 0-2ubuntu1 24 ALGOL68 algol68g 2 8-2 25 Ante N - 26 Asymptote asymptote 2 31-2 27 ATS ats-lang-anairiats 0 2 11-1 28 Awk gawk 1 4 1 1 dfsg-1 29 bc bc 1 06 95-9build1 30 Befunge N - 31 BLC8 N - 32 Boo boo 0 9 5 git20110729 r1 202a430-2 33 Brainfuck bf 20041219ubuntu5 34 C gcc 4 4 9 2-2ubuntu2 35 C g 4 4 9 2-2ubuntu2 36 C mono-mcs 3 2 8 dfsg-4ubuntu4 37 CDuce cduce 0 6 0-1 38 Chef N - 39 Clojure clojure1 6 1 6 0 dfsg-1 40 Cobol open-cobol 1 1-1build1 41 CoffeeScript coffeescript 1 4 0-1 1 42 Common Lisp clisp 1 2 49-9ubuntu1 43 D gdc 4 9 2-2ubuntu2 44 dc dc 1 06 95-9build1 45 eC ecere-sdk 0 44 11-0ubuntu1 46 Emacs Lisp emacs24 24 4 1-4ubuntu5 47 Erlang erlang 1 17 3-dfsg-3ubuntu1 48 F fsharp 3 1 1 26 dfsg2-2 49 Falcon falconpl 0 9 6 9-git20120606-2 1 50 FALSE N - 51 Forth gforth 0 7 2 dfsg1-1 1 52 FORTRAN77 f2c 20100827-1 53 Fortran90 gfortran 4 4 9 2-2ubuntu2 54 Gambas script gambas3-script 3 5 4-2ubuntu3 55 GAP gap 4r7p5-2 56 GEL Genius genius 1 0 19-1 57 Gnuplot gnuplot 4 6 6-2 58 Go golang 2 1 3 3-1ubuntu4 59 G-Portugol gpt 1 1-2ubuntu1 60 Gri gri 2 12 23-8 61 Groovy groovy 2 0 0 beta2 isreally1 8 6-4ubuntu1 62 Haskell ghc 7 6 3-20 63 Haxe haxe 1 3 0 0 svn6707-4 64 Icon icont 9 4 3-4 2ubuntu1 iconx 9 4 3-4 2ubuntu1 65 INTERCAL intercal 29 0 29-3 66 Jasmin jasmin-sable 2 4 0-5 67 Java openjdk-6-jdk 6b35-1 13 7-1ubuntu1 68 JavaScript rhino 1 7R4-3 69 Julia julia 0 3 2-1ubuntu1 70 Kaya kaya 0 4 4-6 2 71 Lazy K N - 72 Lisaac lisaac 1 0 39 rc1-3 73 LLVM asm llvm 1 3 6-26ubuntu1 74 Logo ucblogo 5 5-2 1 75 LOLCODE N - 76 Lua lua5 2 5 2 3-1 1 77 Makefile make 4 0-8 1 78 Maxima maxima 5 35 1-1 79 MSIL mono-devel 3 2 8 dfsg-4ubuntu4 80 NASM nasm 2 11 06-1really2 11 05-1 81 Neko neko 2 0 0-3 82 Nickle nickle 2 77-1 83 Objective-C gobjc 4 4 9 2-2ubuntu2 84 OCaml ocaml 4 01 0-4ubuntu1 85 Octave octave 3 8 2-4 86 Ook N - 87 PARI GP pari-gp 2 7 2-1 88 Parrot asm parrot 6 6 0-1 89 Pascal fp-compiler 2 6 4 dfsg-4 90 Perl perl 5 20 2-2 91 PHP php5-cli 5 6 4 dfsg-4ubuntu6 92 Piet N - 93 Pike pike7 8 7 8 866-3 94 PostScript ghostscript 9 15 dfsg-0ubuntu2 95 PPT Punched tape bsdgames 2 17-22 96 Prolog swi-prolog 6 6 6-5 97 Python python 2 7 9-1 98 R r-base 3 1 2-2 99 Ratfor ratfor 1 0-15 100 REXX regina-rexx 3 6-2 Note languages available Ubuntu marked N repository includes implementations vendor See also vendor README detail Frequently asked questions Q Take pick Q Good news I'm writing book obfuscated programming include detailed explanation write quine ascii-art quine uroboros quine like quine-relay published year successful Bad news written Japanese hope could translate English help earn royalties Q Language XXX missing See criteria language inclusion detail short please create deb package contribute Ubuntu Q really work Q long take try cross world line Q code fit display go Q code generated sudo apt-get install rake ruby-cairo ruby-rsvg2 ruby-gdk-pixbuf2 optipng advancecomp ruby-chunky-png cd src rake2 0 clobber rake2 0 License MIT License applies resources except files vendor directory files vendor directory third-parties distributed different licenses See vendor README detail MIT License MIT Copyright c 2013 2014 Yusuke Endoh mametter hirekoke Permission hereby granted free charge person obtaining copy software associated documentation files Software deal Software without restriction including without limitation rights use copy modify merge publish distribute sublicense sell copies Software permit persons Software furnished subject following conditions copyright notice permission notice shall included copies substantial portions Software SOFTWARE PROVIDED WITHOUT WARRANTY KIND EXPRESS IMPLIED INCLUDING LIMITED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE NONINFRINGEMENT EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM DAMAGES LIABILITY WHETHER ACTION CONTRACT TORT OTHERWISE ARISING CONNECTION SOFTWARE USE DEALINGS SOFTWARE Status API Training Shop Blog 2015 GitHub Inc Terms Privacy Security Contact Something went wrong request Please try"),
('Zero Knowledge Proofs: An illustrated primer', "Thoughts Cryptographic Engineering random thoughts crypto Notes course teach Pictures dachshunds Thursday November 27 2014 Zero Knowledge Proofs illustrated primer One best things modern cryptography beautiful terminology could start number punk bands Tumblrs named cryptography terms like 'hard-core predicate' 'trapdoor function' ' 'impossible differential cryptanalysis' course haven't even mentioned one term surpasses term 'zero knowledge' fact term 'zero knowledge' appealing leads problems People misuse assuming zero knowledge must synonymous 'really really secure' Hence gets tacked onto kinds stuff -- like encryption systems anonymity networks -- really nothing true zero knowledge protocols serves underscore point zero-knowledge proofs one powerful tools cryptographers ever devised unfortunately they're also relatively poorly understood series posts I'm going try give mostly non-mathematical description ZK proofs makes special post next I'll talk ZK protocols actually use Origins Zero Knowledge notion 'zero knowledge' first proposed 1980s MIT researchers Shafi Goldwasser Silvio Micali Charles Rackoff researchers working problems related interactive proof systems theoretical systems first party called 'Prover' exchanges messages second party 'Verifier' convince Verifier mathematical statement true Prior Goldwasser et al work area focused soundness proof system considered case malicious Prover attempts 'trick' Verifier believing false statement Goldwasser Micali Rackoff turn problem head Instead worrying Prover asked happens don't trust Verifier specific concern raised information leakage Concretely asked much extra information Verifier going learn course proof beyond mere fact statement true It's important note simply theoretical interest real practical applications kind thing matters Here's one imagine real-world client wishes log web server using password standard 'real world' approach problem involves storing hashed version password server login thus viewed sort 'proof' given password hash output hash function password -- point client actually knows password real systems implement 'proof' absolute worst possible way client simply transmits original password server re-computes password hash compares stored value problem obvious conclusion protocol server learned cleartext password Modern password hygiene therefore involves good deal praying servers aren't compromised Goldwasser Micali Rackoff proposed new hope conducting proofs fully realized zero knowledge proofs would allow us prove statements like one provably revealing information beyond single bit information corresponding 'this statement true' 'real world' example far discussion pretty abstract make things bit concrete let's go ahead give 'real' example slightly insane zero knowledge protocol purposes example I'd like imagine I'm telecom magnate process deploying new cellular communications network network structure represented graph vertex graph represents cellular radio tower connecting lines edges indicate locations two cells overlap meaning transmissions likely interfere overlap problematic since means signals adjacent towers likely scramble reception Fortunately network design allows configure tower one three different frequency bands avoid interference Thus challenge deploying network assign frequency bands towers two overlapping cells share frequencies use colors represent frequency bands quickly work one solution problem course many notice I'm describing simply instance famous theory problem called graph three-coloring problem might also know makes problem interesting graphs quite hard find solution even determine solution exists fact graph three-coloring -- specifically decision problem whether given graph supports solution three colors -- known complexity class NP-complete goes without saying toy example easy solve hand wasn't example imagine cellular network large complex much computing power disposal sufficient find solution instance would desirable outsource problem someone else plenty computing power example might hire friends Google solve spec leads problem Suppose Google devotes large percentage computing infrastructure searching valid coloring graph I'm certainly going pay know really coloring time Google isn't going give copy solution I've paid We'll wind impasse real life there's probably common-sense answer dilemma one involves lawyers escrow accounts blog real life it's blog cryptography you've ever read crypto paper you'll understand right way solve problem dream absolutely crazy technical solution crazy technical solution hats engineers Google consult Silvio Micali MIT consultation colleagues Oded Goldreich Avi Wigderson comes following clever protocol -- one elegant doesn't even require computers requires large warehouse lots crayons plenty paper Oh yes whole bunch hats Here's works First enter warehouse cover floor paper draw blank representation cell network graph I'll exit warehouse Google enter enter shuffle collection three crayons pick random assignment three agreed-upon crayon colors red blue purple example color graph solution Note doesn't matter specific crayons use coloring valid leaving warehouse Google covers vertices hat come back I'll see Obviously approach protects Google's secret coloring perfectly doesn't help know Google might filled graph random invalid solution might even colored graph address valid concerns Google gives opportunity 'challenge' solution graph coloring I'm allowed pick -- random -- single 'edge' graph one line two adjacent hats Google remove two corresponding hats revealing small portion solution Notice two outcomes experiment two revealed vertices color aren't colored definitely know Google lying Clearly I'm going pay Google cent two revealed vertices different colors Google might lying Hopefully first proposition obvious second one requires bit consideration problem even experiment Google could still lying -- looked two hats E different edges graph Google could fill invalid solution still get away time Specifically one test could succeed cheating probability E-1 E 1 000 edge graph works 99 9 time Fortunately Google answer We'll run protocol put fresh paper new blank copy graph Google picks new random shuffle three crayons Next fill graph valid solution using new random ordering three colors hats go back come back repeat challenge process picking new random edge logic applies time goes well slightly confident Google telling truth That's order cheat Google would get lucky twice row happen -- happens relatively lower probability chance Google fools twice row E-1 E E-1 E 99 8 probability 1 000 edge example Fortunately don't stop two challenges fact keep trying I'm confident Google probably telling truth don't take word Thanks neat Javascript go try Note I'll never perfectly certain Google honest -- there's always going tiny probability they're cheating large number iterations E 2 happens eventually raise confidence point Google cheat negligible probability -- low enough practical purposes it's worth worrying I'll able safely hand Google money need believe Google also protected Even try learn something solution keeping notes protocol runs shouldn't matter I'm foiled Google's decision randomize color choices iteration limited information obtain good there's way link data learn interactions makes 'zero knowledge' I've claimed protocol leaks information Google's solution don't let get away first rule modern cryptography never trust people claim things without proof Goldwasser Micali Rackoff proposed three following properties every zero-knowledge protocol must satisfy Stated informally Completeness Google telling truth eventually convince least high probability Soundness Google convince they're actually telling truth Zero-knowledgeness Yes it's really called don't learn anything else Google's solution We've already discussed argument completeness protocol eventually convince negligible error probability provided run enough times Soundness also pretty easy show Google ever tries cheat detect treachery overwhelming probability hard part 'zero knowledgeness' property need conduct strange thought experiment thought experiment time machines First let's start crazy hypothetical Imagine Google's engineers aren't quite capable people make work problem weeks weeks never manage come solution twelve hours go showtime Googlers get desperate decide trick thinking coloring graph even though don't idea sneak GoogleX workshop borrow Google's prototype time machine Initially plan travel backwards years use extra working time take another crack solving problem Unfortunately turns like Google prototypes time machine limitations critically it's capable going backwards time four half minutes using time machine manufacture working time still turns even limited technology still used trick don't really know what's going seemed apropos plan diabolically simple Since Google doesn't actually know valid coloring graph they'll simply color paper bunch random colors put hats sheer luck challenge pair vertices happen different colors everyone heave sigh relief we'll continue protocol far good Inevitably though I'm going pull pair hats discover two vertices color normal protocol Google would totally busted time machine comes Whenever Google finds awkward situation simply fix designated Googler pulls switch 'rewinds' time four minutes Google team recolors graph completely new random solution let time roll forward try effect time machine allows Google 'repair' accidents happen bogus protocol execution makes experience look totally legitimate Since bad challenge results occur 1 3 time expected runtime protocol Google's perspective moderately greater time takes run honest protocol perspective don't even know extra time machine trips happening last point important fact perspective unaware time machine picture resulting interaction exactly real thing It's statistically identical yet it's worth pointing time machine version Google absolutely information color graph hell point we've shown example simulation Note world time runs forward nobody trick time machine hat-based protocol correct sound meaning E 2 rounds convinced negligible probability graph really colorable Google putting valid inputs protocol we've shown time doesn't run forward -- specifically Google 'rewind' view time -- fake valid protocol run even information actual graph coloring perspective what's difference two protocol transcripts consider statistical distribution two there's difference convey exactly amount useful information Believe proves something important Specifically assume Verifier strategy 'extracts' useful information Google's coloring observing execution honest protocol strategy work equally well case I'm fooled time machine protocol runs perspective statistically identical physically cannot tell difference Thus amount information extract identical 'real experiment' 'time machine experiment' yet amount information Google puts 'time machine' experiment exactly zero -- implies even real world protocol must leak useful information Thus remains show computer scientists time machines It's well-kept secret Getting rid hats time machines course don't actually want run protocol hats even Google probably doesn't literal time machine tie things together first need bring protocol digital world requires construct digital equivalent 'hat' something hides digital value simultaneously 'binding' 'committing' maker can't change mind fact Fortunately perfect tool application It's called digital commitment scheme commitment scheme allows one party 'commit' given message keeping secret later 'open' resulting commitment reveal what's inside built various ingredients including strong cryptographic hash functions Given commitment scheme ingredients need run zero knowledge protocol electronically Prover first encodes vertex colorings set digital messages example numbers 0 1 2 generates digital commitments one commitments get sent Verifier Verifier challenges edge Prover simply reveals opening values commitments corresponding two vertices we've managed eliminate hats prove protocol zero knowledge Fortunately we're digital world longer need real time machine prove things protocol key trick specify setting protocol going run two people rather two different computer programs formal probabilistic Turing machines prove following theorem could ever come computer program Verifier extracts useful information participating run protocol would possible use 'time machine' program order make extract amount useful information 'fake' run protocol Prover doesn't put information begin since we're talking computer programs obvious rewinding time isn't extraordinary feat fact rewind computer programs time example consider using virtual machine software snapshot capability Example rewinding VM snapshots initial VM played forward rewound initial snapshot execution forked new path Even don't fancy virtual machine software computer program 'rewound' earlier state simply starting program beginning feeding exactly inputs Provided inputs -- including random numbers -- fixed program always follow execution path Thus rewind program running start 'forking' execution reaches desired point Ultimately get following theorem exists Verifier computer program successfully extracts information interactively running protocol Prover simply use rewinding trick program commit random solution 'trick' Verifier rewinding execution whenever can't answer challenge correctly logic holds gave Verifier succeeds extracting information running real protocol able extract amount information simulated rewinding-based protocol since there's information going simulated protocol there's information extract Thus information Verifier extract must always zero Ok mean let's recap know protocol complete sound based analysis soundness argument holds situation know nobody fiddling time -- Verifier running normally nobody rewinding execution time protocol also zero knowledge prove showed Verifier program succeeds extracting information must also able extract information protocol run rewinding used information available first place leads obvious contradiction tells us protocol can't leak information either situation There's important benefit Since it's trivial anyone 'fake' protocol transcript even Google proves solution can't re-play recording protocol transcript prove anything anyone else say judge That's judge would guarantee video recorded honestly didn't simply edit way Google might done using time machine means protocol transcripts contain information protocol meaningful participated sure happened real time Proofs NP you've made far I'm pretty sure you're ready big news 3-coloring cellphone networks isn't interesting problem -- least really interesting thing 3-coloring problem it's class NP-complete put informally wonderful thing problems problem class NP translated instance problem single stroke result -- due Goldreich Micali Wigderson -- proves 'efficient' ZK proofs exists vast class useful statements many way interesting assigning frequencies cellular networks simply find statement NP wish prove hash function example translate instance 3-coloring problem point simply run digital version hat protocol summary next time course actually running protocol interesting statements would insanely silly thing anyone since cost would include total size original statement witness plus reduction cost convert graph plus E 2 protocol rounds you'd conduct order convince someone proof valid Theoretically 'efficient' since total cost proof would polynomial input size practice would anything we've shown far proofs possible remains us actually find proofs practical enough real-world use next post I'll talk -- specifically efficient proofs use various useful statements I'll give examples real applications things used Also reader request I'll also talk dislike SRP much Notes Formally goal interactive proof convince Verifier particular string belongs language Typically Prover powerful unbounded Verifier limited computation example based original solution Goldwasser Micali Rackoff teaching example using hats based explanation Silvio Micali take credit silly mistakes simple example commitment built using hash function commit value x simply generate suitably long string random numbers we'll call 'salt' output commitment C Hash salt x open commitment simply reveal 'x' 'salt' Anyone check original commitment valid recomputing hash secure moderately strong assumptions function Posted Matthew Green 4 44 PM Email ThisBlogThis Share TwitterShare FacebookShare Pinterest 37 comments HybridAUNovember 27 2014 10 04 PMThis great post I've tried times past get head around Zero Knowledge Proofs work could applied practical situations think get struggled bit time machine thought experiment got part VM Snapshots rolling back code kind clicked place ReplyDeleteAnonymousNovember 28 2014 4 33 AMUhm dachshund pictures ReplyDeletePhilNovember 28 2014 5 01 AMUnreferenced footnote error ReplyDeleteizabelaNovember 28 2014 6 41 AMHi chance dealing non-interactive ZK proofs next time ReplyDeleteRepliesAnonymousNovember 28 2014 1 06 PM 1DeleteReplyfrevdNovember 28 2014 6 53 AMIf prover verifier running VM happens choice verifier saved external disc transmission prover VM rewinded point decision prover already knows decision access externally stored value recolors graph part question successfully fools verifier every time without actually valid solution verifier indeed doesn't learn anything process actually proof merely proofs zero-knowledgeness solution process could applied easily time making kind handshake pointless restriction 4 half minutes either prover could submit solution still go back time change whole submission ReplyDeleteRepliesPeter Byerley RindalDecember 8 2014 12 48 AMThis comment removed author DeletePeter Byerley RindalDecember 8 2014 12 52 AMYou aren't completely wrong prover rewind verifier protocol doesn't prove anything real non-simulated world prover can't rewind verifier whole point time machine argument prove zero-knowedgeness Matthew even pointed soundness argument holds situation know nobody fiddling time -- Verifier running normally nobody rewinding execution someone rewind computer bigger problems soundness protocol DeleteReplyAnonymousNovember 28 2014 8 01 AMFor zero knowledge constraint trick least one information extracted time execution modified protocole time machine run longer supposed one challenge google try understand long take reveal two edge first place situation never cheated always cheating case cheated least one time difference time execution two version protocole tricked information extract zero knowledge isn't verified least know google cheat sure ReplyDeleteRepliesAnonymousDecember 16 2014 1 59 PMI believe incorrect since you're assuming difference time real fake inputs assuming time machine case time rewound way execution duration detectible lying prover worth salt generating constant time compared true prover like always verify two hashes checking characters one time rather short circuiting first incorrect character thus allowing statistical extrapolation secret DeleteAnonymousDecember 18 2014 7 56 AMThat's known covert timing channel Google would smart enough close It's one basic things security folks look DeleteJames GarfieldDecember 30 2014 7 07 PMYou use laptop calculate something use time machine travel right answer exact time needed answer dont need google DeleteReplyAnonymousNovember 28 2014 9 00 AMBetter make sure encoding salt x unique C Hash salt x words possibility transfer bytes salt x Best regards SDLReplyDeleteAbishek SankararamanNovember 28 2014 11 11 AMHey provide link proof randomized algorithm zero-knowledge protocol ThanksReplyDeletehblanksNovember 29 2014 2 17 AMThanks always great post Matthew Green FYI - obviouy looks like typo obviously ReplyDeleteraphiNovember 29 2014 2 42 AMI'm math cryptography n00b that's generous greatly enjoyed post think grasped measure understanding anything greatly respect creativity rigour sort work calls upon modicum could make way field medicine nutrition exercise physiology world would slightly cooler place inhabit Thanks ReplyDeleteAnonymousNovember 29 2014 5 01 PMVery nice time travel thought experiment proof reminds Philosophy 101 Thank ReplyDeleteAnton PrussDecember 1 2014 7 10 AMThank Mr Green another important piece ReplyDeletePeter Byerley RindalDecember 8 2014 1 13 AMGreat post Matthew Since saw planning making series post ZK thought would point JKO paper Zero-knowledge using garbled circuits prove non-algebraic statements efficiently neat application GC removes need convert proof NP statement ReplyDeletePieterDecember 10 2014 11 01 AMGreat introduction would like emphasize one point helped past structure protocol describe applies generically zero-knowledge protocols know 1 Prover sets situation based upon knowledge 2 Verifier challenges Prover unpredictable way 3 Prover complete Verifier's challenge convince little knowledge structure accident enables zero-knowledge nature protocol Also introduction zero-knowledge protocols needs reference paper 'Applied Kid Cryptography' Naor Naor Goldreich http www wisdom weizmann ac il naor PAPERS waldo pdf ReplyDeleteBrennen ChuaDecember 16 2014 6 03 AMThanks Looking forward next part Stupid question What's preventing verifier brute forcing commitments nodes prover reveals c salt 2 nodes ReplyDeleteReplieszbootJanuary 5 2015 1 23 PMThe problem NP hard 4 nodes small number Q yes could brute force case you'd able brute force solution Q 2 much faster waiting google come solution Q 2 would point wasting google time number nodes Q assuming google solution you'd waste time energy trying brute force solution simply checking answer reasonable level paying DeleteReplyBrennen ChuaDecember 16 2014 6 05 AMOr wait salt nodes ReplyDeleteAnonymousDecember 16 2014 7 13 PM mention commitment schemas take look look https bitcommit net ReplyDeleterewDecember 17 2014 4 40 AMYour comment system broken write something click publish get back empty form nothing published insert short note non-zero-knowledge version google doesn't change coloring edge probes ReplyDeleteBetty Master Pain December 21 2014 2 10 PMAnti-matter also contradicts soundness since time runs backwards really normal matter going backwards time anti-matter could theory used mess ReplyDeleteBetty Master Pain December 21 2014 2 17 PMAlso conclusion invalid since Google doesn put zero information effectively polling knowledge deem correct come solution trial error supported fact well come completely correct graph even without understanding making slow working algorithm whole set arguments builds falls flat face ReplyDeleteRepliesJames GarfieldDecember 30 2014 7 01 PMIf ask one corner graph send correct answer ask another part graph repeat slowly detect google lying b youll whole correct answer even google randomly generated whole thing unprobable Also guess RSA8192 password first try unprobable happen DeleteReplyBetty Master Pain December 21 2014 4 40 PMThis easy attack point cracker willing break things protocol meaningful participated sure happened real time man-in-the-middle mess message order verifier side messing time ReplyDeleteRepliesJames GarfieldDecember 30 2014 6 49 PMYou systems protocols place ensuring right message order Author doesnt say protocol used provides explanation theory works say verifier thinks talks google contraproductive author wanted us think ZK proofs - DeleteReplyKeel KayneDecember 21 2014 4 43 PM1 impossible know thing somebody trying prove unless know thing 2 know thing knowledge 3 Ergo zero knowledge proof impossible since never tell actually proven prove something undefined definition completely pointless ReplyDeleteRepliesJames GarfieldDecember 30 2014 6 41 PMYoure right real physical logical world work hats work data work hashes dont need know real data example DeletezbootJanuary 5 2015 1 25 PMYou seem misread first sentences Zero knowledge means zero additional knowlege we're exchanging passwords validation already know hashed password know exchanging passwords zero knowledge means process interaction don't gain new additional knowledge password already DeleteReplyAnonymousDecember 26 2014 5 41 AMi'm aware simplification let's consider assume verifier could extract information run extractor random-coloring google time machine extractor would still get information would necessarily come google algorithm could well incorporate time machine thus arrive viable solution granted given time machine neede excessively case google's point view we're playing e 1 1 3 2 iteratons we'd found polynomial time algorithm still wouldn't know it's zero knowledge since extract valid solution random input information could leaked non-cheating google well ReplyDeleteReplieszbootJanuary 5 2015 1 27 PMSo saying extractor could extract information present case proof still holds since extracted zero knowledge google google provided DeleteReplyJames GarfieldDecember 30 2014 6 35 PMsize provers data output size verifiers question atributes data crucial protocol actually work data use size challenge shown blog post totally nonusable Also verifier prover NEED ilustrated challenge response progressively thruout whole data sides whole data otherwise prover lie undefinitely first sucessful challenge ask ONE CORNER GRAPH ReplyDeletemihiJanuary 1 2015 12 39 PMI think important point missing use hashes commitment scheme Prover prove Verifier used node color node different vertices words write 1 - 2 commitments Verifier open one see fine allow open one commitment set zero-knowledgeness proof violated user might open 1 B 2 B 2 C 1 know C color Hats protocol practical disadvantage Verifier untrustworthy could come defeat everybody Prover party lift hats get solution Therefore you'll need lawyers police anyway D ReplyDeleteAdd commentLoad Newer Post Older Post Home Subscribe Post Comments Atom Matthew Green I'm cryptographer research professor Johns Hopkins University I've designed analyzed cryptographic systems used wireless networks payment systems digital content protection platforms research look various ways cryptography used promote user privacy website twitter feed Useful crypto resources RSS Bitcoin tipjar Matasano challenges Journal Cryptographic Engineering related blog View complete profile Popular Posts NSA Let tell story tiny brush biggest crypto story year weeks ago received call reporter What's matter PGP Image source bcrypt Last Thursday Yahoo announced plans support end-to-end encryption using fork Google's end-to- Attack week FREAK 'factoring NSA fun profit' Cryptography used considered 'munitions' story handful cryptographers 'hacked' NSA come encryption apps seems like days can't eat breakfast without reading new encryption app supposedly revolutionize c Truecrypt report weeks back wrote update Truecrypt audit promising we'd concrete results show soon Thanks can't Apple decrypt iPhone Last week wrote Apple's new default encryption policy iOS 8 Since piece intended general audiences mostly Attack week OpenSSL Heartbleed Ouch Logo heartbleed com start every lecture security class asking students give us interesting security Dear Apple Please set iMessage free Normally avoid complaining Apple plenty people carrying flag b honestly like Apple Let's audit Truecrypt source weeks ago learning NSA's efforts undermine encryption software wrote long post urging d Attack week RC4 kind broken TLS Update I've added link page Royal Holloway describing new attack Listen you're using RC4 primary c Blog List Schneier Security MOOC Cybersecurity 5 hours ago Bristol Cryptography Blog 52 Things Number 15 Describe Baby-Step Giant-Step method breaking DLPs 1 day ago ellipticnews Elliptic Curve Cryptography conference September 28-30 Bordeaux France 3 days ago Shtetl-Optimized NSA P poly Power Precomputation 5 days ago Bentham's Gaze Information Security Research University College London Measuring Internet Censorship 2 weeks ago root labs rdist past better 5 months ago Cryptanalysis SSLv3 considered insucure POODLE attack works detail 7 months ago MPC Lounge 5th Bar-Ilan Winter School 2015 Advances Practical Multiparty Computation 7 months ago Chargen Subscribe Posts Atom Posts Comments Atom Comments Followers Blog Archive 2015 8 May 1 April 2 March 1 February 3 January 1 2014 13 December 1 November 1 Zero Knowledge Proofs illustrated primer October 3 September 1 August 1 July 1 April 2 March 1 February 1 January 1 2013 23 December 4 October 1 September 4 August 1 July 1 June 2 May 1 April 2 March 2 February 3 January 2 2012 48 December 1 November 1 October 4 September 3 August 4 July 2 June 3 May 5 April 6 March 4 February 7 January 8 2011 39 December 11 November 13 October 7 September 8 Simple template Powered Blogger"),
('Staying Relevant In A Rapid Innovation Era', "Follow Us Golgi Overview Features Videos Golgi Use Getting Started Sample Code Documentation Pricing Forum FAQ Blog Us Golgi Team News Events Careers Contact Us Login Join Golgi Menu Golgi io Golgi Overview Features Golgi Use Getting Started Sample Code Documentation Pricing FAQ Forum Blog Us Golgi Team News Events Career Contact Us Login Request Demo Staying Relevant Rapid Innovation Era Brian Kelly Twitter Google 09 Feb 2015 Brian Kelly chief technology officer Golgi Developing software today feel like running race cases run obstacles fierce competition charging fast behind Developers faced living breathing system technology constantly changing hard control developers need create system professional retraining Similarly decathletes constantly retraining stay shape next competition hopes named world greatest athlete developers must constantly retrain risk becoming dinosaur era constant disruption scores programming languages uncommon find different development teams working different operating systems within company Developers longer write programs someone install sit computer use Americans average four digital devices constantly switch back forth also expect high-quality consistent experiences across High demand social features integrations throws additional wrinkles process well time development never played critical role driving organization progress Success requires developers teams adapt fast strategies navigating complicated sink-or-swim world development Invest Retraining Many professions like teaching medicine law require practitioners take annual classes keep skills sharp introduce new thinking advancements field professions change rapidly software development makes continual commitment learning critical success Within five years fewer landscape completely changes developer doesn take time retrain new skills soon become obsolete good strategy avoiding technical obsolescence create syllabus personal development stick throughout working career syllabus include big chunks learning Apple's new Swift language well small ones sharpening bash scripting skills Fortunately Internet holds wealth resources makes continued education accessible convenient Lynda com Function Space Udemy Codeacademy Code School good options little bit training practice times week go long way Keep Notes ve heard admonition reinventing wheel waste time something scratch already figured However happens far often developers write things Developers notorious reluctance write documentation audience figure something difficult write results keep notes folder need something similar many months later recorded notes give head start won reinvent wheel number online services use good-old-fashioned pen paper either case remember write project date even color coding want get really fancy keep thoughts organized best developers make notes folder public share colleagues Read StackOverflow StackOverflow game town asking development-related questions contains gold mine information developers site co-founded Joel Spolsky made bundle developer Microsoft days Microsoft making millionaires developers Joel co-founder Jeff Atwood put something really important back industry StackOverflow invaluable resource learning thinking learn connecting members developer community Granted everyone loves StackOverflow developer named Michael Richter wrote blog post last year discussing longer contributes site Richter member four years scored 14 000 points gaming system top 3 percent overall contributors However came feel StackOverflow problems pedagogy scoring system disagree StackOverflow format rewards system may appeal ve found useful times count It's one places gather information niche deeply technical issues get specific case-by-case help Put Hobby Code GitHub Developers grow reading source code others building progress innovation happened since dawn time Receiving constructive feedback work drawing inspiration work others best way get better whether talking writing novel designing building building app comes code GitHub best place learn share improve Truth told GitHub still hasn hit right way build social presence opposed LinkedIn right small increments publish blog posts LinkedIn become lasting part profile predict GitHub end supporting something like meantime it's great free resource collaborating code learning best Create Positive Productive Work Environments Startups often expect employees work lower salary anticipation larger equity rewards line limits available hiring pool Many developers kids may want take financial risk Weeby effort attract best-and-the-brightest away competitors offering epic salaries Software development individual creative endeavor common sculpting say accounting HR Employers slow recognize Weeby experiment successful may see employers appreciating integral developers organization success isn high salaries creating positive productive work environments developers thrive Original article appeared Techcrunch Tweet Back blog Never Miss Post Popular Posts Excuse Sir WebRTC Leaking Build App Opens Doors - Easy Pi Get Started Android Studio HTTP Bad Choice Mobile mobile developers need know POODLE Company Us Leadership News Careers Product Features Golgi Use Pricing Login Get Started FAQ Documentation Get Golgi Community Blog Forum Events Support Contact Sales Contact Support Legal Terms Privacy Openmind Networks 2014 detailed information plese visit site desktop computer"),
('The A-star algorithm explained concisely', 'Skip content Maker Maker Approach Artificial Intelligence Primary Menu Home GitHub RSS Contact A-star algorithm February 8 2015 atrilla A-star informed search method evaluates nodes combining cost reach node step cost cost get goal state heuristic Provided heuristic function satisfies optimality conditions e admissibility tree-search consistency graph-search A-star search complete optimal despite large space complexity implementation based best-first search algorithm using anonymous evaluation function returns sum two cost criteria see Figure 1 Figure 1 A-star search algorithm deftypefn Function File var solution a_star_search var problem var start var finish var treegraph var heuristic A-star search algorithm PRE var problem must cost-weighted adjacency matrix var start must starting node index var finish must finishing node index var treegraph must tree graph version flag 0 tree-version var heuristic must heuristic vector POST var solution solution path State set zero failure end deftypefn Author Alexandre Trilla alex atrilla net function solution a_star_search problem start finish treegraph heuristic eval func anonymous returns path cost heuristic solution best_first_search problem start finish treegraph cost cost 1 cost 2 heuristic endfunction point last mile delivering useful feasible results reduce amount memory consumed A-star topic next post Stay tuned Posted Uncategorized Post navigation Informed search greedy search algorithmBye Octave hello Lua One thought A-star algorithm Pingback recursive best-first search algorithm Maker Leave Reply Cancel reply email address published Required fields marked Name Email Website Comment may use HTML tags attributes href title abbr title acronym title b blockquote cite cite code del datetime em q cite strike strong Search Recent Posts Artificial Neural Networks point Gradient-based methods closer look problem state encoding genetic algorithms electronics genetic algorithms simulated annealing algorithm Follow ai_maker Facebook AI-Maker LinkedIn SubscribeLeave Blank Change email Categories Electronics Optimisation Search Uncategorized Archives May 2015 April 2015 March 2015 February 2015 January 2015 December 2014 Proudly powered WordPress Theme Plainly Chris Rudzki'),
('Data Elixir #21: Data science tools & techniques', "Latest Issue Archives Search Search Search Toggle Menu Data Elixir weekly collection best data science news resources inspirations around web Subscribe free never miss issue Subscribe Email Safari Email Subscribe spam ever email address ever used Data Elixir Subscribe Safari receive push notification new issues published Visit page Safari Mac OS X Mavericks enable push notifications Issue 36 May 22nd 2015 News Health Data Digital Fitness Monitors Revolutionize Lives Wearable devices enabled people track activities health stats ever-increasing levels detail great overview useful interesting upcoming technologies things concerned Highly recommended theguardian com Machine-Learning Algorithm Mines Rap Lyrics Writes Researchers claiming automated rap-generating algorithm pushes boundaries machine creativity Here's good overview works along sample lyrics good Check technologyreview com NPR Reporter Raced Machine Write News Story Won NPR story pits seasoned White House correspondent machine probably guess wins race tell wrote npr org Sponsored Link Check lineup two-day event San Francisco begin day presentations Data Science experts UC Berkeley Professors Mike Franklin Mike Jordan Stanford Professor Rob Tibshirani UW Professor Carlos Guestrin CMU Professor Alex Smola See complete list speakers second day 7 21 15 4th year Dato conference Previously referred GraphLab Conference event focused around machine learning implementation GraphLab Create including data science tutorials case studies Data Elixir readers save 35 using DataElixir discount code registration Offer expires June 1st Register Save dato com Tools Techniques Scientists Tell Us Old Pics Change Time-lapse Photography Fascinating project group researchers Google University Washington mined 86 million photos Internet automatically pieced together create time-lapse sequences popular places video 5 minutes worthwhile wired com Scrape Website Data New R Package rvest Great tutorial Zev Ross extracting data website tables lists using R package rvest well-written code snippets make easy follow Along demonstrating rvest tutorial includes steps geocode map extracted demo data zevross com Top 10 Data Mining Algorithms Plain English great introduction popular data mining algorithms section includes description algorithm related terms common use cases linked references you're already data mining pro article Highly Recommended rayli net Unreasonable Effectiveness Recurrent Neural Networks Here's latest gem Andrej Karpathy clearly presented deep dive recurrent neural networks GitHub repo code go along article There's also worthwhile discussion article Hacker News Highly Recommended github io Resources Crash Course Python Scientists you're getting Python nice place start Rick Muller Sandia National Laboratories created tutorial help colleagues come speed quickly starts basics quickly gets Numpy Scipy Matplotlib code optimization It's presented IPython notebook includes lots code snippets references ipython org Deep Learning - MIT Press Book Preparation MIT Press' Deep Learning textbook currently development worth paying attention Part includes applied math machine learning basics complete Large sections parts II III also available cover practical deep networks deep learning research umontreal ca Inspiration Windyty inspiration many levels 2012 Fernanda Vi gas Martin Wattenberg created well-known Wind Map using data National Digital Forecast Database Wind Map inspired Cameron Beccario create Earth project includes global data variety additional options Cameron open-sourced project Ivo Luka ovi used foundation Windyty Prepare amazed windyty com Data Elixir curated maintained lonriesberg find newsletter worthwhile please help spread word Forward colleagues use links share favorite network Twitter Facebook Google Plus Thanks dataelixir Previous issue May 15th 2015 36 36 Subscribe Email Safari Email Subscribe spam ever email address ever used Data Elixir Subscribe Safari receive push notification new issues published Visit page Safari Mac OS X Mavericks enable push notifications 2014-2015 Data Elixir Terms Use Privacy Policy Data Elixir published Data Elixir LLC curated maintained lonriesberg find newsletter worthwhile please help spread word Forward colleagues click tweet Thanks"),
('Grace Hopper, The Queen Of Code', "better browsing experience please upgrade browser FiveThirtyEight Life Search Search Menu Home DataLab Features Interactives Live blogs Podcasts Nate Silver Contributors Contact Politics Nebraska Vote Means Death Penalty Nationally Time Jesse Body Ventura Elected Governor Minnesota Rick Santorum 2016 Bid Shows Far GOP Field Come Politics Economics John Nash Matters Suburban Big American Cities IUDs Affordable Ever Women Get Economics Science Three Every Four Tornado Warnings False Alarms Oldest Person World Keeps Dying Breaking Music Genes Science Life Long-Distance Relationships Doomed Breaking Music Genes Everybody Calm Breastfeeding Life Sports FIFA Structure Lends Corruption Bill Russell Celtics Great Tim Duncan Spurs Better Rafael Nadal 80 Percent Used Sports Life Previous Kickers Forever Next Washington State Teach Us Gridlock Washington PrintTwitterFacebook Signals 11 00 Jan 28 2015 Queen Code Allison McCann probably know name Grace Hopper rear admiral U Navy Hopper worked first computer Harvard Mark 1 headed team created first compiler led creation COBOL programming language year 2000 accounted 70 percent actively used code Passing away 1992 left behind inimitable legacy brilliant programmer pioneering woman male-dominated fields Hopper story told Queen Code directed Gillian Jacobs Community fame latest film FiveThirtyEight Signals series Allison McCann atmccann Allison McCann visual journalist FiveThirtyEight Filed Gillian Jacobs Grace Hopper Signals Queen Code Comments Add Comment Allison McCann Signals Life Podcast Nadal Decline Every NBA Team Ranked Whether Stars Matter May 27 2015 Podcast Clippers Collapse Rangers Squeakers Baseball Embraces Statcast May 19 2015 Podcast Deflategate Pick NBA Draft-Fix Winner May 13 2015 Podcast Boring Boxing NBA Round 2 World Needs New Baseball Stat May 5 2015 Allison McCann Time Jesse Body Ventura Elected Governor Minnesota May 27 2015 Data Nerds Found 131-Year-Old Sunken Treasure May 13 2015 Meet Personal Stats Analyst Helped Kevin Durant Win MVP Mar 4 2015 Decades Moneyball Dallas Cowboys Used Advanced Stats Win Super Bowls Dec 17 2014 Signals Oldest Person World Keeps Dying May 26 2015 Breaking Music Genes May 20 2015 Everybody Calm Breastfeeding May 20 2015 Many Americans Married Cousins May 15 2015 Life Interactives Complete History NBA Flight Get Fastest Never miss best FiveThirtyEight Subscribe FiveThirtyEight Newsletter Sign newsletters keep favorite articles charts regressions three offer curated digest best FiveThirtyEight past week Week Data weekly look best data journalism around web Significant Digits roundup numbers news Enter email ll touch Weekly Newsletter Week Data Significant Digits clicking subscribe agree FanBridge Privacy Policy Top Stories Dear Mona Long-Distance Relationships Doomed Mona Chalabi Criminal Justice Nebraska Vote Means Death Penalty Nationally Harry Enten 2016 George Pataki Candidacy Virtually Hopeless Two Charts Harry Enten Beautiful Game FIFA Structure Lends Corruption Carl Bialik Contact ESPN FiveThirtyEight Jobs Masthead Politics Economics Science Life Sports Terms Use Privacy Policy Safety Information California Privacy Rights Children's Online Privacy Policy applicable 2015 ESPN Internet Ventures rights reserved Interest-Based Ads Powered WordPress com VIP"),
('Meet Walter Pitts, the Homeless Genius Who Revolutionized Artificial Intelligence (x-post /r/MachineLearning)', "Nautilus Issues Blog Store Thanks Joining Newsletter Prime SELECT NEWSLETTERS SUBMIT CONTACT DETAILS New chapters Thursdays Nautilus publishes new chapter feature stories monthly theme every Thursday Sign list stay date latest greatest Editor's picks SundaysRead Nautilus stories blogs we've thinking past week Issue 024 Error Issue 023 Dominoes Issue 022 Slow Issue 021 Information Issue 020 Creativity Special Issue Nature Issue 019 Illusions Issue 018 Genius Issue 017 Big Bangs Issue 016 Nothingness Issue 015 Turbulence Issue 014 Mutation Issue 013 Symmetry Issue 012 Feedback Issue 011 Light Issue 010 Mergers Acquisitions Issue 009 Time Issue 008 Home Issue 007 Waste Issue 006 Secret Codes Issue 005 Fame Issue 004 Unlikely Issue 003 Transit Issue 002 Uncertainty Issue 001 Makes Special PREVIEW ISSUE Story Nautilus See Issue Library Enter Search Search Resume Reading Man Tried Redeem World Logic Close Purchase Artwork Numbers Artificial Intelligence Man Tried Redeem World Logic Walter Pitts rose streets MIT couldn escape Amanda Gefter Illustration Julia Breckenreid February 5 2015 Add comment Facebook Twitter Email Sharing Reddit Stumbleupon Tumblr Linkedin Walter Pitts used bullied d born tough family Prohibition-era Detroit father boiler-maker trouble raising fists get way neighborhood boys weren much better One afternoon 1935 chased streets ducked local library hide library familiar ground taught Greek Latin logic mathematics better home father insisted drop school go work Outside world messy Inside made sense wanting risk another run-in night Pitts stayed hidden library closed evening Alone wandered stacks books came across Principia Mathematica three-volume tome written Bertrand Russell Alfred Whitehead 1910 1913 attempted reduce mathematics pure logic Pitts sat began read three days remained library read volume cover cover nearly 2 000 pages identified several mistakes Deciding Bertrand Russell needed know boy drafted letter Russell detailing errors Russell write back impressed invited Pitts study graduate student Cambridge University England Pitts couldn oblige though 12 years old three years later heard Russell would visiting University Chicago 15-year-old ran away home headed Illinois never saw family McCulloch confident gray-eyed wild-bearded chain-smoking philosopher-poet lived whiskey ice cream never went bed 4 m 1923 year Walter Pitts born 25-year-old Warren McCulloch also digesting Principia similarities ended McCulloch could come different world Born well-to-do East Coast family lawyers doctors theologians engineers McCulloch attended private boys academy New Jersey studied mathematics Haverford College Pennsylvania philosophy psychology Yale 1923 Columbia studying experimental aesthetics earn medical degree neurophysiology McCulloch philosopher heart wanted know means know Freud published Ego Id psychoanalysis rage McCulloch didn buy felt certain somehow mysterious workings failings mind rooted purely mechanical firings neurons brain Though started opposite ends socioeconomic spectrum McCulloch Pitts destined live work die together Along way would create first mechanistic theory mind first computational approach neuroscience logical design modern computers pillars artificial intelligence story fruitful research collaboration also bonds friendship fragility mind limits logic ability redeem messy imperfect world Walter Pitts 1923-1969 Walter Pitts life passed homeless runaway MIT neuroscience pioneer withdrawn alcoholic Estate Francis Bello Science Source Standing face face unlikely pair McCulloch 42 years old met Pitts confident gray-eyed wild-bearded chain-smoking philosopher-poet lived whiskey ice cream never went bed 4 m Pitts 18 small shy long forehead prematurely aged squat duck-like bespectacled face McCulloch respected scientist Pitts homeless runaway d hanging around University Chicago working menial job sneaking Russell lectures met young medical student named Jerome Lettvin Lettvin introduced two men moment spoke realized shared hero common Gottfried Leibniz 17th-century philosopher attempted create alphabet human thought letter represented concept could combined manipulated according set logical rules compute knowledge vision promised transform imperfect outside world rational sanctuary library McCulloch explained Pitts trying model brain Leibnizian logical calculus inspired Principia Russell Whitehead tried show mathematics could built ground using basic indisputable logic building block proposition simplest possible statement either true false employed fundamental operations logic like conjunction disjunction negation link propositions increasingly complicated networks simple propositions derived full complexity modern mathematics got McCulloch thinking neurons knew brain nerve cells fires minimum threshold reached Enough neighboring nerve cells must send signals across neuron synapses fire electrical spike occurred McCulloch set-up binary either neuron fires doesn neuron signal realized proposition neurons seemed work like logic gates taking multiple inputs producing single output varying neuron firing threshold could made perform functions Late night McCulloch Pitts alone would pour whiskey hunker attempt build computational brain neuron Fresh reading new paper British mathematician named Alan Turing proved possibility machine could compute function long possible finite number steps McCulloch became convinced brain machine one uses logic encoded neural networks compute Neurons thought could linked together rules logic build complex chains thought way Principia linked chains propositions build complex mathematics McCulloch explained project Pitts understood immediately knew exactly mathematical tools could used McCulloch enchanted invited teen live family Hinsdale rural suburb outskirts Chicago Hinsdale household bustling free-spirited bohemia Chicago intellectuals literary types constantly dropped house discuss poetry psychology radical politics Spanish Civil War union songs blared phonograph late night McCulloch wife Rook three children went bed McCulloch Pitts alone would pour whiskey hunker attempt build computational brain neuron McCulloch Pitts Lettvin poets heart practice McCulloch Lettvin regularly published verse Pitts sent poem McCulloch Quantity Information Walter Pitts Random remarks traced little boys wet cement synapses brain Die renewing uplift glyphs mountain valley peneplane mouth rounds noise consonants truisms Thus expands law Cankering anoetic anonymous love magic impious cut turn world straw Making know speaks nomothete Concealed crystals contracting myosin Imprisoning man close-packing kind therefore exalt entropy heat Fist-fight room trade place momentum spin Successful enough life undesigned Pitts arrival McCulloch hit wall nothing stopping chains neurons twisting loops output last neuron chain became input first neural network chasing tail McCulloch idea model mathematically point view logic loop smells lot like paradox consequent becomes antecedent effect becomes cause McCulloch labeling link chain time stamp first neuron fired time next one fired 1 chains circled back 1 suddenly came Pitts knew tackle problem used modulo mathematics deals numbers circle back around like hours clock showed McCulloch paradox time 1 coming time wasn paradox calculations lost meaning Time removed equation altogether one see lightning bolt flash sky eyes would send signal brain shuffling chain neurons Starting given neuron chain could retrace signal steps figure long ago lightning struck Unless chain loop case information encoding lightning bolt spins circles endlessly bears connection time lightning actually occurred becomes McCulloch put idea wrenched time words memory time Pitts finished calculating McCulloch hands mechanistic model mind first application computation brain first argument brain bottom information processor stringing simple binary neurons chains loops shown brain could implement every possible logical operation compute anything could computed one Turing hypothetical machines Thanks ouroboric loops also found way brain abstract piece information hang abstract yet creating rich elaborate hierarchies lingering ideas process call thinking McCulloch Pitts wrote findings now-seminal paper Logical Calculus Ideas Immanent Nervous Activity published Bulletin Mathematical Biophysics model vastly oversimplified biological brain succeeded showing proof principle Thought said need shrouded Freudian mysticism engaged struggles ego id first time history science McCulloch announced group philosophy students know know Pitts found McCulloch everything needed acceptance friendship intellectual half father never Although lived Hinsdale short time runaway would refer McCulloch house home rest life part McCulloch enamored Pitts found kindred spirit bootlegged collaborator mind technical prowess bring McCulloch half-formed notions life put letter reference Pitts Would always 1 Pitts soon make similar impression one towering intellectual figures 20th century mathematician philosopher founder cybernetics Norbert Wiener 1943 Lettvin brought Pitts Wiener office Massachusetts Institute Technology MIT Wiener didn introduce make small talk simply walked Pitts blackboard working mathematical proof Wiener worked Pitts chimed questions suggestions According Lettvin time reached second blackboard clear Wiener found new right-hand man Wiener would later write Pitts without question strongest young scientist ever met extremely astonished prove one two three important scientists generation merely America world large impressed Wiener promised Pitts Ph D mathematics MIT despite fact never graduated high school something strict rules University Chicago prohibited offer Pitts couldn refuse fall 1943 Pitts moved Cambridge apartment enrolled special student MIT studying one influential scientists world quite long way blue-collar Detroit Wiener wanted Pitts make model brain realistic Despite leaps Pitts McCulloch made work made barely ripple among brain scientists part symbolic logic d employed hard decipher also stark oversimplified model didn capture full messiness biological brain Wiener however understood implications d done knew realistic model would game-changing also realized ought possible Pitts neural networks implemented man-made machines ushering dream cybernetic revolution Wiener figured Pitts going make realistic model brain 100 billion interconnected neurons going need statistics side statistics probability theory Wiener area expertise Wiener discovered precise mathematical definition information higher probability higher entropy lower information content scientists room floored yet everyone knew Pitts sure could Pitts began work MIT realized although genetics must encode gross neural features way genes could pre-determine trillions synaptic connections brain amount information would require untenable must case figured start essentially random neural networks highly probable states containing negligible information thesis continues debated present day suspected altering thresholds neurons time randomness could give way order information could emerge set model process using statistical mechanics Wiener excitedly cheered knew model embodied machine machine could learn understand seven-eighths Wiener says told something achievement Pitts wrote letter McCulloch December 1943 three months d arrived work Wiener constitute first adequate discussion statistical mechanics understood general possible sense includes example problem deriving psychological statistical laws behavior microscopic laws neurophysiology Doesn sound fine winter Wiener brought Pitts conference organized Princeton mathematician physicist John von Neumann equally impressed Pitts mind Thus formed beginnings group would become known cyberneticians Wiener Pitts McCulloch Lettvin von Neumann core among rarified group formerly homeless runaway stood None us would think publishing paper without corrections approval McCulloch wrote Pitts uncertain terms genius group said Lettvin absolutely incomparable scholarship chemistry physics everything could talk history botany etc asked question would get back whole textbook world connected complex wonderful fashion 2 following June 1945 von Neumann penned would become historic document entitled First Draft Report EDVAC first published description stored-program binary computing machine modern computer EDVAC predecessor ENIAC took 1 800 square feet space Philadelphia like giant electronic calculator computer possible reprogram thing took several operators several weeks reroute wires switches Von Neumann realized might necessary rewire machine every time wanted perform new function could take configuration switches wires abstract encode symbolically pure information could feed computer way d feed data data would include programs manipulate data Without rewire thing d universal Turing machine accomplish von Neumann suggested modeling computer Pitts McCulloch neural networks place neurons suggested vacuum tubes would serve logic gates stringing together exactly Pitts McCulloch discovered could carry computation store programs data computer would need something new memory Pitts loops came play element stimulates hold stimulus indefinitely von Neumann wrote report echoing Pitts employing modulo mathematics detailed every aspect new computational architecture entire report cited single paper Logical Calculus McCulloch Pitts 1946 Pitts living Beacon Street Boston Oliver Selfridge MIT student would become father machine perception Hyman Minsky future economist Lettvin teaching mathematical logic MIT working Wiener statistical mechanics brain following year Second Cybernetic Conference Pitts announced writing doctoral dissertation probabilistic three-dimensional neural networks scientists room floored Ambitious hardly word describe mathematical skill would take pull feat yet everyone knew Pitts sure could would waiting bated breath letter philosopher Rudolf Carnap McCulloch catalogued Pitts achievements omniverous scientists scholars become excellent dye chemist good mammalogist knows sedges mushrooms birds New England knows neuroanatomy neurophysiology original sources Greek Latin Italian Spanish Portuguese German learns language needs soon needs Things like electrical circuit theory practical soldering power lighting radio circuits long life never seen man erudite really practical Even media took notice June 1954 Fortune magazine ran article featuring 20 talented scientists 40 Pitts featured next Claude Shannon James Watson odds Walter Pitts skyrocketed scientific stardom years earlier letter McCulloch Pitts wrote week become violently homesick talk evening night Despite success Pitts become homesick home meant McCulloch coming believe could work McCulloch would happier productive likely break new ground McCulloch seemed floundering without bootlegged collaborator Suddenly clouds broke 1952 Jerry Wiesner associate director MIT Research Laboratory Electronics invited McCulloch head new project brain science MIT McCulloch jumped opportunity meant would working Pitts traded full professorship large Hinsdale home research associate title crappy apartment Cambridge couldn happier plan project use full arsenal information theory neurophysiology statistical mechanics computing machines understand brain gives rise mind Lettvin along young neuroscientist Patrick Wall joined McCulloch Pitts new headquarters Building 20 Vassar Street posted sign door Experimental Epistemology Pitts McCulloch together Wiener Lettvin mix everything seemed poised progress revolution Neuroscience cybernetics artificial intelligence computer science brink intellectual explosion sky mind limit began drinking heavily pulled away friends set fire dissertation along notes papers one person wasn happy reunion Wiener wife Margaret Wiener accounts controlling conservative prude despised McCulloch influence husband McCulloch hosted wild get-togethers family farm Old Lyme Connecticut ideas roamed free everyone went skinny-dipping one thing McCulloch Chicago coming Cambridge Margaret wouldn invented story sat Wiener informed daughter Barbara stayed McCulloch house Chicago several boys seduced Wiener immediately sent angry telegram Wiesner Please inform Pitts Lettvin connection projects permanently abolished problem Wiener never spoke Pitts never told 3 Pitts marked beginning end Wiener taken fatherly role life abandoned inexplicably Pitts wasn merely loss something far worse defied logic frogs basement Building 20 MIT along garbage full crickets Lettvin kept group time biologists believed eye like photographic plate passively recorded dots light sent dot dot brain heavy lifting interpretation Lettvin decided put idea test opening frog skulls attaching electrodes single fibers optic nerves Pitts Lettvin Pitts Jerome Lettvin one subject experiments visual perception 1959 Wikipedia Together Pitts McCulloch Chilean biologist philosopher Humberto Maturana subjected frogs various visual experiences brightening dimming lights showing color photographs natural habitat magnetically dangling artificial flies recorded eye measured sent information brain everyone surprise didn merely record saw filtered analyzed information visual features like contrast curvature movement eye speaks brain language already highly organized interpreted reported now-seminal paper Frog Eye Tells Frog Brain published 1959 results shook Pitts worldview core Instead brain computing information digital neuron digital neuron using exacting implement mathematical logic messy analog processes eye least part interpretive work apparent done frog eye even logic played part didn play important central part one would expected Lettvin said disappointed would never admit seemed add despair loss Wiener friendship everything reduced information governed logic actual mechanics ceased matter tradeoff universal computation ontology spate bad news aggravated depressive streak Pitts struggling years kind personal woe like advice Pitts written McCulloch one letters noticed last two three years growing tendency kind melancholy apathy depression effect make positive value seem disappear world nothing seems worth effort whatever happens ceases matter greatly words Pitts struggling logic sought life Pitts wrote depression might common people excessively logical education work applied mathematics kind pessimism resulting inability believe people call Principle Induction principle Uniformity Nature Since one cannot prove even render probable priori sun rise tomorrow cannot really believe shall alienated Wiener Pitts despair turned lethal began drinking heavily pulled away friends offered Ph D refused sign paperwork set fire dissertation along notes papers Years work important work everyone community eagerly awaiting burnt priceless information reduced entropy ash Wiesner offered Lettvin increased support lab could recover bits dissertation gone Pitts remained employed MIT little technicality hardly spoke anyone would frequently disappear d go hunting night night Lettvin said Watching destroy dreadful experience way Pitts still 12 years old still beaten still runaway still hiding world musty libraries books took shape bottle McCulloch Pitts laid foundations cybernetics artificial intelligence steered psychiatry away Freudian analysis toward mechanistic understanding thought shown brain computes mentation processing information also shown machine could compute providing key inspiration architecture modern computers Thanks work moment history neuroscience psychiatry computer science mathematical logic artificial intelligence one thing following idea first glimpsed Leibniz man machine number mind use information universal currency appeared surface different ingredients world hunks metal lumps gray matter scratches ink page profoundly interchangeable catch though symbolic abstraction made world transparent brain opaque everything reduced information governed logic actual mechanics ceased matter tradeoff universal computation ontology Von Neumann first see problem expressed concern Wiener letter anticipated coming split artificial intelligence one side neuroscience great positive contribution Turing-cum-Pitts-and-McCulloch assimilated wrote situation rather worse better Indeed authors demonstrated absolute hopeless generality anything everything done appropriate mechanism specifically neural mechanism even one definite mechanism universal Inverting argument Nothing may know learn functioning organism give without microscopic cytological work clues regarding details neural mechanism universality made impossible Pitts provide model brain practical work dismissed less forgotten community scientists working brain experiment frogs shown purely logical purely brain-centered vision thought limits Nature chosen messiness life austerity logic choice Pitts likely could comprehend way knowing ideas biological brain panning setting motion age digital computing neural network approach machine learning so-called connectionist philosophy mind mind defeated Saturday April 21 1969 hand shaking alcoholic delirium tremens Pitts sent letter room Beth Israel Hospital Boston McCulloch room road Cardiac Intensive Care Ward Peter Bent Brigham Hospital understand light coronary attached many sensors connected panels alarms continuously monitored nurse cannot consequence turn bed doubt cybernetical makes abominably sad Pitts hospital three weeks admitted liver problems jaundice May 14 1969 Walter Pitts died alone boarding house Cambridge bleeding esophageal varices condition associated cirrhosis liver Four months later McCulloch passed away existence one without simply illogical reverberating loop wrenched open Amanda Gefter physics writer author Trespassing Einstein Lawn father daughter meaning nothing beginning everything lives Cambridge Massachusetts References 1 letters retrieved McCulloch Papers BM139 Series Correspondence 1931 1968 Folder Pitts Walter 2 Jerome Lettvin quotes taken Anderson J Rosenfield E Talking Nets Oral History Neural Networks MIT Press 2000 3 Conway F Siegelman J Dark Hero Information Age Search Norbert Wiener Father Cybernetics Basic Books New York NY 2006 Access historical letters provided American Philosophical Society Issue 021 Information Explore Issue Chapter one Record Artificial Intelligence Man Tried Redeem World Logic Genetics DNA Nothing Special Climatology Secrets Ice Health Preventing Disease Data New Drugs War ISIS Broke Questionnaire Chapter two Reboot Web Future Web 100 Years Old Music Taught Computer Write Music Computer Science Moore Law Get Weird Computation Third Data Server Sun Chapter three Atom Eve Physics Nostalgia Became Law Nature Theoretical Physics Theory Everything Pure Enough Computer Science Ingenious Scott Aaronson Quantum Physics Quantum Mechanics Fate Chapter four Good Know Health Grief Give Parkinson Economics Yes re Irrational Yes OK Astrophysics Mario Livio 25 Years Hubble History Seeds Sowed Revolution Genetics Thrill Defeat 148 Comments - Join Discussion Next Article Biology DNA Nothing Special Chip Rowe Related Articles Numbers Meet Father Digital Life Robert Hackett Matter Haunted Brother Revolutionized Physics Amanda Gefter Numbers Teaching Softly Alan Brown Nautilus Privacy Policy Prime Subscribe Terms Service Contact Work Us Awards Press RSS Media Kit NAUTILUS SCIENCE CONNECTED Nautilus different kind science magazine deliver big-picture science reporting single monthly topic multiple perspectives Read new chapter story every Thursday 2015 Nautilus rights reserved Matter Biology Numbers Ideas Culture Connected Site Code Theory"),
]